public void test0() throws Throwable { BrentOptimizer brentOptimizer0 = null; try { brentOptimizer0 = new BrentOptimizer((-29.642378866708057), (-29.642378866708057)); fail("Expecting exception: IllegalArgumentException"); } catch(IllegalArgumentException e) { // // -29.642 is smaller than the minimum (0) // verifyException("org.apache.commons.math3.optimization.univariate.BrentOptimizer", e); } }
public void test1() throws Throwable { BrentOptimizer brentOptimizer0 = null; try { brentOptimizer0 = new BrentOptimizer(0.2147523467903689, (-1.0)); fail("Expecting exception: IllegalArgumentException"); } catch(IllegalArgumentException e) { // // -1 is smaller than, or equal to, the minimum (0) // verifyException("org.apache.commons.math3.optimization.univariate.BrentOptimizer", e); } }
public void test2() throws Throwable { BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.01118, 0.01118); Floor floor0 = new Floor(); GoalType goalType0 = GoalType.MINIMIZE; UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(231, (UnivariateFunction) floor0, goalType0, (double) 231, 0.01118); assertEquals(0.9006524172143477, univariatePointValuePair0.getPoint(), 0.01); }
public void test3() throws Throwable { BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.28346960979658514, 0.28346960979658514); Floor floor0 = new Floor(); GoalType goalType0 = GoalType.MINIMIZE; UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(882, (UnivariateFunction) floor0, goalType0, 0.28346960979658514, (double) 882); assertEquals(1.49926708746688, univariatePointValuePair0.getPoint(), 0.01); }
public void test4() throws Throwable { BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.0111817495789, 0.0111817495789); Floor floor0 = new Floor(); GoalType goalType0 = GoalType.MAXIMIZE; UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(54, (UnivariateFunction) floor0, goalType0, 0.0111817495789, (double) 54); assertEquals(52.15369455278684, univariatePointValuePair0.getPoint(), 0.01); }
public void test5() throws Throwable { BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.07538672827256383, 0.07538672827256383); Floor floor0 = new Floor(); GoalType goalType0 = GoalType.MINIMIZE; UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(3136, (UnivariateFunction) floor0, goalType0, 0.07538672827256383, (double) 3136); assertEquals(1.16423893926864, univariatePointValuePair0.getPoint(), 0.01); }
public void test6() throws Throwable { BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.011181749578948895, 0.011181749578948895); Cos cos0 = new Cos(); GoalType goalType0 = GoalType.MAXIMIZE; UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(1184, (UnivariateFunction) cos0, goalType0, 0.011181749578948895, (double) 1184); assertEquals(0.2547143024901817, univariatePointValuePair0.getValue(), 0.01); }
public void test7() throws Throwable { BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.011181749578948895, 0.011181749578948895); GoalType goalType0 = GoalType.MINIMIZE; Atanh atanh0 = new Atanh(); UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(608, (UnivariateFunction) atanh0, goalType0, 0.011181749578948895, (double) 608); assertEquals(297.5346940627999, univariatePointValuePair0.getPoint(), 0.01); }
public void test8() throws Throwable { BrentOptimizer brentOptimizer0 = new BrentOptimizer(0.011181749578948895, 0.011181749578948895); Floor floor0 = new Floor(); GoalType goalType0 = GoalType.MAXIMIZE; UnivariatePointValuePair univariatePointValuePair0 = brentOptimizer0.optimize(1179, (UnivariateFunction) floor0, goalType0, 0.011181749578948895, 0.011181749578948895); assertEquals(0.011181749578948895, univariatePointValuePair0.getPoint(), 0.01); assertEquals(0.0, univariatePointValuePair0.getValue(), 0.01); assertNotNull(univariatePointValuePair0); }
