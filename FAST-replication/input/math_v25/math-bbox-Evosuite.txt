public void test0() throws Throwable { HarmonicFitter harmonicFitter0 = new HarmonicFitter((DifferentiableMultivariateVectorOptimizer) null); double[] doubleArray0 = new double[7]; // Undeclared exception! try { harmonicFitter0.fit(doubleArray0); fail("Expecting exception: NullPointerException"); } catch(NullPointerException e) { // // no message in exception (getMessage() returned null) // verifyException("org.apache.commons.math3.optimization.fitting.CurveFitter", e); } }
public void test1() throws Throwable { HarmonicFitter harmonicFitter0 = new HarmonicFitter((DifferentiableMultivariateVectorOptimizer) null); // Undeclared exception! try { harmonicFitter0.fit(); fail("Expecting exception: IllegalArgumentException"); } catch(IllegalArgumentException e) { // // sample contains 0 observed points, at least 4 are required // verifyException("org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser", e); } }
public void test2() throws Throwable { WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4]; WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(0.0, (-2.070841011504222E-9), 10.521054212839923); weightedObservedPointArray0[0] = weightedObservedPoint0; weightedObservedPointArray0[1] = weightedObservedPoint0; weightedObservedPointArray0[2] = weightedObservedPointArray0[1]; weightedObservedPointArray0[3] = weightedObservedPointArray0[0]; HarmonicFitter.ParameterGuesser harmonicFitter_ParameterGuesser0 = new HarmonicFitter.ParameterGuesser(weightedObservedPointArray0); double[] doubleArray0 = harmonicFitter_ParameterGuesser0.guess(); assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01); }
public void test3() throws Throwable { WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4]; WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(0.0, (-37.73901176216823), (-140.6256737315799)); weightedObservedPointArray0[0] = weightedObservedPoint0; WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(0.0, (-187.7012268844877), (-140.6256737315799)); weightedObservedPointArray0[1] = weightedObservedPoint1; WeightedObservedPoint weightedObservedPoint2 = new WeightedObservedPoint((-140.6256737315799), 0.0, (-37.73901176216823)); weightedObservedPointArray0[2] = weightedObservedPoint2; WeightedObservedPoint weightedObservedPoint3 = new WeightedObservedPoint((-140.6256737315799), (-140.6256737315799), 0.0); weightedObservedPointArray0[3] = weightedObservedPoint3; HarmonicFitter.ParameterGuesser harmonicFitter_ParameterGuesser0 = new HarmonicFitter.ParameterGuesser(weightedObservedPointArray0); double[] doubleArray0 = harmonicFitter_ParameterGuesser0.guess(); assertArrayEquals(new double[] {70.31283686578995, 0.03347439657944426, (-2.3702848761900857)}, doubleArray0, 0.01); }
public void test4() throws Throwable { WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4]; WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(0.0, (-37.73901176216823), (-7.043545052852817E-9)); weightedObservedPointArray0[0] = weightedObservedPoint0; WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(0.0, (-1.0), (-7.043545052852817E-9)); weightedObservedPointArray0[1] = weightedObservedPoint1; WeightedObservedPoint weightedObservedPoint2 = new WeightedObservedPoint((-7.043545052852817E-9), 0.0, (-37.73901176216823)); weightedObservedPointArray0[2] = weightedObservedPoint2; WeightedObservedPoint weightedObservedPoint3 = new WeightedObservedPoint((-7.043545052852817E-9), (-7.043545052852817E-9), 0.0); weightedObservedPointArray0[3] = weightedObservedPoint3; HarmonicFitter.ParameterGuesser harmonicFitter_ParameterGuesser0 = new HarmonicFitter.ParameterGuesser(weightedObservedPointArray0); double[] doubleArray0 = harmonicFitter_ParameterGuesser0.guess(); assertArrayEquals(new double[] {18.869505881084116, 0.16649045679246469, 1.5707963279675796}, doubleArray0, 0.01); }
public void test5() throws Throwable { WeightedObservedPoint[] weightedObservedPointArray0 = new WeightedObservedPoint[4]; WeightedObservedPoint weightedObservedPoint0 = new WeightedObservedPoint(0.0, (-2.070841011504222E-9), 10.521054212839923); weightedObservedPointArray0[0] = weightedObservedPoint0; WeightedObservedPoint weightedObservedPoint1 = new WeightedObservedPoint(0.0, 6.196016947859854E-34, 10.521054212839923); weightedObservedPointArray0[1] = weightedObservedPoint1; WeightedObservedPoint weightedObservedPoint2 = new WeightedObservedPoint(10.521054212839923, 0.0, (-2.070841011504222E-9)); weightedObservedPointArray0[2] = weightedObservedPoint2; WeightedObservedPoint weightedObservedPoint3 = new WeightedObservedPoint(10.521054212839923, 10.521054212839923, 0.0); weightedObservedPointArray0[3] = weightedObservedPoint3; HarmonicFitter.ParameterGuesser harmonicFitter_ParameterGuesser0 = new HarmonicFitter.ParameterGuesser(weightedObservedPointArray0); // Undeclared exception! try { harmonicFitter_ParameterGuesser0.guess(); fail("Expecting exception: IllegalStateException"); } catch(IllegalStateException e) { // // denominator must be different from 0 // verifyException("org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser", e); } }
