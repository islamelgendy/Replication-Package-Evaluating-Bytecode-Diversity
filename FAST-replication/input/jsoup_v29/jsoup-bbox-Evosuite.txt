public void test00() throws Throwable { Document document0 = new Document("H'_}pQi4P.QC");
public void test01() throws Throwable { Document document0 = new Document("body"); Document document1 = document0.clone(); assertNotSame(document1, document0); }
public void test02() throws Throwable { Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings(); document_OutputSettings0.charset(); assertEquals(1, document_OutputSettings0.indentAmount()); assertTrue(document_OutputSettings0.prettyPrint()); }
public void test03() throws Throwable { Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings(); assertTrue(document_OutputSettings0.prettyPrint()); document_OutputSettings0.prettyPrint(false); assertFalse(document_OutputSettings0.prettyPrint()); }
public void test04() throws Throwable { Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings(); Entities.EscapeMode entities_EscapeMode0 = Entities.EscapeMode.base; Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.escapeMode(entities_EscapeMode0); assertTrue(document_OutputSettings1.prettyPrint()); assertEquals(1, document_OutputSettings1.indentAmount()); }
public void test05() throws Throwable { Document document0 = new Document("Hf'_}pQi4P.PQ");
public void test06() throws Throwable { Document document0 = new Document("quiks"); Element element0 = document0.createElement("quiks"); assertEquals("quiks", element0.baseUri()); }
public void test07() throws Throwable { Document document0 = Document.createShell("CommentStartDash"); // Undeclared exception! try { document0.outputSettings((Document.OutputSettings) null); fail("Expecting exception: IllegalArgumentException"); } catch(IllegalArgumentException e) { // // Object must not be null // verifyException("org.jsoup.helper.Validate", e); } }
public void test08() throws Throwable { Document document0 = Document.createShell(""); String string0 = document0.title(); assertEquals("", string0); }
public void test09() throws Throwable { Document document0 = new Document(""); Document document1 = document0.normalise(); document1.title(""); document0.title(); assertEquals("#document", document0.nodeName()); }
public void test10() throws Throwable { Document document0 = Document.createShell("AcBN] 4?0 P"); document0.title("#document"); document0.title("AcBN] 4?0 P"); assertEquals("#document", document0.nodeName()); }
public void test11() throws Throwable { Document document0 = new Document("H'_}pQi4P.QC");
public void test12() throws Throwable { Document document0 = new Document("UTF-8"); document0.prependText(""); Document document1 = document0.normalise(); assertEquals("#document", document1.nodeName()); }
public void test13() throws Throwable { Document document0 = Document.createShell(""); Document document1 = Document.createShell(""); document0.text("time"); document0.prependChild(document1); Document document2 = document0.normalise(); assertEquals("#document", document2.nodeName()); }
public void test14() throws Throwable { Document document0 = new Document("dd"); document0.prependElement("head"); Document document1 = document0.normalise(); assertEquals("#document", document1.nodeName()); }
public void test15() throws Throwable { Document document0 = new Document("u]Eqt"); Document.OutputSettings document_OutputSettings0 = document0.outputSettings(); // Undeclared exception! try { document_OutputSettings0.indentAmount((-1374)); fail("Expecting exception: IllegalArgumentException"); } catch(IllegalArgumentException e) { // // Must be true // verifyException("org.jsoup.helper.Validate", e); } }
public void test16() throws Throwable { Document document0 = new Document("u]Eqt"); Document.OutputSettings document_OutputSettings0 = document0.outputSettings(); document_OutputSettings0.indentAmount(2124); assertEquals(2124, document_OutputSettings0.indentAmount()); }
