public void test001() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test001"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.incrementIterationsCounter(); // The following exception was thrown during execution in test generation try { double[] doubleArray2 = levenbergMarquardtOptimizer0.guessParametersErrors(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)"); } catch (org.apache.commons.math.optimization.OptimizationException e) { // Expected exception. } }
public void test002() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test002"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; // The following exception was thrown during execution in test generation try { double[][] doubleArray77 = levenbergMarquardtOptimizer0.getCovariances(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); }
public void test003() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test003"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); }
public void test004() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test004"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException(doubleArray15); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); }
public void test005() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test005"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); }
public void test006() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test006"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int11 = levenbergMarquardtOptimizer0.cols; org.junit.Assert.assertNull(vectorialConvergenceChecker10); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); }
public void test007() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test007"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); }
public void test008() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test008"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); int int12 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1000 + "'", int12 == 1000); }
public void test009() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test009"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; int int18 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647); }
public void test010() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test010"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); // The following exception was thrown during execution in test generation try { double[] doubleArray23 = levenbergMarquardtOptimizer0.guessParametersErrors(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)"); } catch (org.apache.commons.math.optimization.OptimizationException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); }
public void test011() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test011"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer20.rows = 0; levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d)); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40); double[] doubleArray43 = functionEvaluationException42.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = null; java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53); org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53); double[] doubleArray56 = functionEvaluationException55.getArgument(); double[] doubleArray58 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = null; java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71); double[] doubleArray74 = functionEvaluationException73.getArgument(); double[] doubleArray76 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76); boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77); levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = null; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = null; // The following exception was thrown during execution in test generation try { boolean boolean84 = simpleVectorialValueChecker29.converged((int) (byte) 0, vectorialPointValuePair82, vectorialPointValuePair83); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(objArray53); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); }
public void test012() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test012"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); // The following exception was thrown during execution in test generation try { double[] doubleArray20 = levenbergMarquardtOptimizer0.guessParametersErrors(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)"); } catch (org.apache.commons.math.optimization.OptimizationException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); }
public void test013() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test013"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray20 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20); org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20); levenbergMarquardtOptimizer0.residuals = doubleArray20; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]"); }
public void test014() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test014"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction23 = null; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException25 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable28 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable28); org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable28, localizable30, objArray33); org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException25, 0.0d, "hi!", objArray33); double[] doubleArray36 = functionEvaluationException35.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException(doubleArray36); double[] doubleArray38 = functionEvaluationException37.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException40 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable43 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43); org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48); org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException40, 0.0d, "hi!", objArray48); double[] doubleArray51 = functionEvaluationException50.getArgument(); double[] doubleArray53 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray53); double[] doubleArray55 = null; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair56 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction23, doubleArray38, doubleArray51, doubleArray55); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]"); org.junit.Assert.assertNotNull(objArray48); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0]"); }
public void test015() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test015"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) (-1)); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); }
public void test016() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test016"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; double double8 = levenbergMarquardtOptimizer0.getRMS(); int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int10 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue(Double.isNaN(double8)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647); }
public void test017() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test017"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; int int21 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1000 + "'", int21 == 1000); }
public void test018() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test018"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); }
public void test019() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test019"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#'); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker83 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker86 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker86; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker83); }
public void test020() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test020"); double[] doubleArray0 = null; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer2.setOrthoTolerance((double) (byte) 0); double[] doubleArray7 = new double[] { (-1), 1.0f }; double[][] doubleArray8 = new double[][] { doubleArray7 }; levenbergMarquardtOptimizer2.jacobian = doubleArray8; // The following exception was thrown during execution in test generation try { org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException(doubleArray0, "{0}", (java.lang.Object[]) doubleArray8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray8); }
public void test021() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test021"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; int int18 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1000 + "'", int18 == 1000); }
public void test022() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test022"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals; // The following exception was thrown during execution in test generation try { double[][] doubleArray80 = levenbergMarquardtOptimizer0.getCovariances(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertNull(doubleArray79); }
public void test023() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test023"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction23 = null; double[] doubleArray24 = null; java.lang.Throwable throwable25 = null; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable30 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30); org.apache.commons.math.exception.util.Localizable localizable32 = null; java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35); org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35); double[] doubleArray38 = functionEvaluationException37.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException40 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable43 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43); org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48); org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException40, 0.0d, "hi!", objArray48); double[] doubleArray51 = functionEvaluationException50.getArgument(); double[] doubleArray53 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray53); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair56 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray53, false); org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(throwable25, doubleArray38); org.apache.commons.math.exception.util.Localizable localizable59 = null; org.apache.commons.math.exception.util.Localizable localizable61 = null; java.lang.Object[] objArray67 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable61, objArray67); org.apache.commons.math.MathException mathException69 = new org.apache.commons.math.MathException(localizable59, objArray67); org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException("hi!", objArray67); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer71 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException73 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable76 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable76); org.apache.commons.math.exception.util.Localizable localizable78 = null; java.lang.Object[] objArray81 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable76, localizable78, objArray81); org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException73, 0.0d, "hi!", objArray81); double[] doubleArray84 = functionEvaluationException83.getArgument(); double[] doubleArray86 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray84, doubleArray86); levenbergMarquardtOptimizer71.point = doubleArray86; levenbergMarquardtOptimizer71.cost = 0L; double[] doubleArray96 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L }; levenbergMarquardtOptimizer71.targetValues = doubleArray96; org.apache.commons.math.FunctionEvaluationException functionEvaluationException98 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException70, doubleArray96); // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair99 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction23, doubleArray24, doubleArray38, doubleArray96); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(objArray35); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]"); org.junit.Assert.assertNotNull(objArray48); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0]"); org.junit.Assert.assertNotNull(objArray67); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray81); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray96); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[100.0, 0.0, 10.0, 32.0, 1.0]"); }
public void test024() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test024"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#'); double double83 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d); }
public void test025() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test025"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException5 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable8 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8); org.apache.commons.math.exception.util.Localizable localizable10 = null; java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13); org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException5, 0.0d, "hi!", objArray13); double[] doubleArray16 = functionEvaluationException15.getArgument(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer17 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable20 = null; java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26); org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException("hi!", objArray26); org.apache.commons.math.exception.util.Localizable localizable31 = null; java.lang.Object[] objArray37 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable31, objArray37); org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException28, "hi!", objArray37); double[] doubleArray45 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Object[] objArray50 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable58 = null; java.lang.Object[] objArray61 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61); org.apache.commons.math.exception.util.Localizable localizable64 = null; java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable70 = null; java.lang.Object[] objArray73 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73); java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73); org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73); java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73); java.lang.Throwable throwable81 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81); org.apache.commons.math.exception.util.Localizable localizable83 = null; java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86); java.lang.Object[] objArray88 = mathRuntimeException87.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88); java.lang.Object[] objArray91 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException28, doubleArray45, localizable56, objArray91); levenbergMarquardtOptimizer17.point = doubleArray45; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair94 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray45); levenbergMarquardtOptimizer0.residuals = doubleArray16; org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertNotNull(objArray13); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]"); org.junit.Assert.assertNotNull(objArray26); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray37); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray50); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException51); org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray61); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException62); org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray73); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException74); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76); org.junit.Assert.assertNotNull(nullPointerException77); org.junit.Assert.assertNotNull(nullPointerException79); org.junit.Assert.assertNotNull(objArray86); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89); }
public void test026() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test026"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker16 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException19 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable22 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException(throwable22); org.apache.commons.math.exception.util.Localizable localizable24 = null; java.lang.Object[] objArray27 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException(throwable22, localizable24, objArray27); org.apache.commons.math.FunctionEvaluationException functionEvaluationException29 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException19, 0.0d, "hi!", objArray27); double[] doubleArray30 = functionEvaluationException29.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40); double[] doubleArray43 = functionEvaluationException42.getArgument(); double[] doubleArray45 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair46 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray45); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray30, doubleArray45, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable53 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58); org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58); double[] doubleArray61 = functionEvaluationException60.getArgument(); double[] doubleArray63 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63); boolean boolean65 = simpleVectorialValueChecker16.converged(0, vectorialPointValuePair48, vectorialPointValuePair64); double[] doubleArray66 = vectorialPointValuePair64.getValue(); levenbergMarquardtOptimizer0.point = doubleArray66; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair68 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNotNull(objArray27); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]"); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[97.0]"); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[97.0]"); }
public void test027() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test027"); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable4 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4); org.apache.commons.math.exception.util.Localizable localizable6 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9); org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9); double[] doubleArray12 = functionEvaluationException11.getArgument(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer13 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable16 = null; java.lang.Object[] objArray22 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable16, objArray22); org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException("hi!", objArray22); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable27, objArray33); org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException24, "hi!", objArray33); double[] doubleArray41 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable43 = null; java.lang.Object[] objArray46 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException47 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray46); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException48 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable43, objArray46); java.lang.Throwable throwable50 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable50); org.apache.commons.math.exception.util.Localizable localizable52 = mathRuntimeException51.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable54 = null; java.lang.Object[] objArray57 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException58 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray57); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException59 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable54, objArray57); org.apache.commons.math.exception.util.Localizable localizable60 = null; java.lang.Throwable throwable62 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException63 = new org.apache.commons.math.MathRuntimeException(throwable62); org.apache.commons.math.exception.util.Localizable localizable64 = mathRuntimeException63.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException70 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray69); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException71 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable66, objArray69); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable64, objArray69); java.lang.NullPointerException nullPointerException73 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray69); org.apache.commons.math.MathException mathException74 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException59, localizable60, objArray69); java.lang.NullPointerException nullPointerException75 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable52, objArray69); java.lang.Throwable throwable77 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException78 = new org.apache.commons.math.MathRuntimeException(throwable77); org.apache.commons.math.exception.util.Localizable localizable79 = null; java.lang.Object[] objArray82 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException83 = new org.apache.commons.math.MathRuntimeException(throwable77, localizable79, objArray82); java.lang.Object[] objArray84 = mathRuntimeException83.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException85 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray84); org.apache.commons.math.FunctionEvaluationException functionEvaluationException86 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException48, (double) 0L, localizable52, objArray84); java.lang.Object[] objArray87 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException24, doubleArray41, localizable52, objArray87); levenbergMarquardtOptimizer13.point = doubleArray41; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair90 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray12, doubleArray41); double[] doubleArray91 = vectorialPointValuePair90.getPointRef(); double[] doubleArray92 = vectorialPointValuePair90.getValue(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]"); org.junit.Assert.assertNotNull(objArray22); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray46); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException47); org.junit.Assert.assertTrue("'" + localizable52 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable52.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray57); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException58); org.junit.Assert.assertTrue("'" + localizable64 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable64.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException70); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertNotNull(nullPointerException73); org.junit.Assert.assertNotNull(nullPointerException75); org.junit.Assert.assertNotNull(objArray82); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray84); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException85); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray92); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); }
public void test028() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test028"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; int int8 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1000 + "'", int8 == 1000); }
public void test029() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test029"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (short) 100); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); }
public void test030() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test030"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; int int18 = levenbergMarquardtOptimizer0.getIterations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0); }
public void test031() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test031"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateJacobian(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); }
public void test032() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test032"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; int int8 = levenbergMarquardtOptimizer0.getEvaluations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.point; org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); }
public void test033() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test033"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); int int82 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1000 + "'", int82 == 1000); }
public void test034() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test034"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); // The following exception was thrown during execution in test generation try { double[] doubleArray10 = levenbergMarquardtOptimizer0.guessParametersErrors(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)"); } catch (org.apache.commons.math.optimization.OptimizationException e) { // Expected exception. } }
public void test035() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test035"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer6.rows = 0; levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1); double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); double[] doubleArray25 = functionEvaluationException23.getArgument(); levenbergMarquardtOptimizer6.objective = doubleArray25; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); double[] doubleArray41 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray41); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray39, false); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer45 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer45.rows = 0; levenbergMarquardtOptimizer45.setMaxEvaluations((int) (byte) 1); double[] doubleArray50 = levenbergMarquardtOptimizer45.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException52 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable55 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable55); org.apache.commons.math.exception.util.Localizable localizable57 = null; java.lang.Object[] objArray60 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException61 = new org.apache.commons.math.MathRuntimeException(throwable55, localizable57, objArray60); org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException52, 0.0d, "hi!", objArray60); double[] doubleArray63 = functionEvaluationException62.getArgument(); double[] doubleArray64 = functionEvaluationException62.getArgument(); levenbergMarquardtOptimizer45.objective = doubleArray64; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException67 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable70 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable70); org.apache.commons.math.exception.util.Localizable localizable72 = null; java.lang.Object[] objArray75 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException76 = new org.apache.commons.math.MathRuntimeException(throwable70, localizable72, objArray75); org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException67, 0.0d, "hi!", objArray75); double[] doubleArray78 = functionEvaluationException77.getArgument(); double[] doubleArray80 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray80); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray64, doubleArray78, false); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray78); levenbergMarquardtOptimizer0.residuals = doubleArray78; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray11); org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]"); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]"); org.junit.Assert.assertNull(doubleArray50); org.junit.Assert.assertNotNull(objArray60); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]"); org.junit.Assert.assertNotNull(objArray75); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[97.0]"); }
public void test036() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test036"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction10 = null; double[] doubleArray11 = null; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); double[] doubleArray25 = functionEvaluationException23.getArgument(); double[] doubleArray26 = functionEvaluationException23.getArgument(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer27 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer27.rows = 0; levenbergMarquardtOptimizer27.setMaxEvaluations((int) (byte) 1); double[] doubleArray32 = levenbergMarquardtOptimizer27.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException34 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = null; java.lang.Object[] objArray42 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException43 = new org.apache.commons.math.MathRuntimeException(throwable37, localizable39, objArray42); org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException34, 0.0d, "hi!", objArray42); double[] doubleArray45 = functionEvaluationException44.getArgument(); double[] doubleArray47 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray47); org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException(doubleArray47); levenbergMarquardtOptimizer27.residuals = doubleArray47; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair52 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray26, doubleArray47, true); double[] doubleArray53 = new double[] {}; org.apache.commons.math.FunctionEvaluationException functionEvaluationException54 = new org.apache.commons.math.FunctionEvaluationException(doubleArray53); // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction10, doubleArray11, doubleArray26, doubleArray53); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]"); org.junit.Assert.assertNull(doubleArray32); org.junit.Assert.assertNotNull(objArray42); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[]"); }
public void test037() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test037"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker82 = levenbergMarquardtOptimizer0.getConvergenceChecker(); // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateResidualsAndCost(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker82); }
public void test038() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test038"); java.lang.Throwable throwable0 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0); org.apache.commons.math.exception.util.Localizable localizable2 = mathRuntimeException1.getLocalizablePattern(); java.lang.Throwable throwable6 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException7 = new org.apache.commons.math.MathRuntimeException(throwable6); org.apache.commons.math.exception.util.Localizable localizable8 = null; java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable6, localizable8, objArray11); java.lang.Object[] objArray13 = mathRuntimeException12.getArguments(); java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray13); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray13); org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray13); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer18.setOrthoTolerance((double) (byte) 0); double[] doubleArray23 = new double[] { (-1), 1.0f }; double[][] doubleArray24 = new double[][] { doubleArray23 }; levenbergMarquardtOptimizer18.jacobian = doubleArray24; java.util.ConcurrentModificationException concurrentModificationException26 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray24); java.lang.IllegalStateException illegalStateException27 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable2, (java.lang.Object[]) doubleArray24); java.util.Locale locale28 = null; // The following exception was thrown during execution in test generation try { java.lang.String str29 = localizable2.getLocalizedString(locale28); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertTrue("'" + localizable2 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable2.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray11); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray13); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException14); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(concurrentModificationException26); org.junit.Assert.assertNotNull(illegalStateException27); }
public void test039() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test039"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); int int7 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); }
public void test040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test040"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); levenbergMarquardtOptimizer0.setMaxIterations((int) ' '); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); }
public void test041() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test041"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; int int24 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction25 = null; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer26 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer26.rows = 0; levenbergMarquardtOptimizer26.setMaxEvaluations((int) (byte) 1); double[] doubleArray31 = levenbergMarquardtOptimizer26.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException33 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable36 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36); org.apache.commons.math.exception.util.Localizable localizable38 = null; java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException42 = new org.apache.commons.math.MathRuntimeException(throwable36, localizable38, objArray41); org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException33, 0.0d, "hi!", objArray41); double[] doubleArray44 = functionEvaluationException43.getArgument(); double[] doubleArray45 = functionEvaluationException43.getArgument(); levenbergMarquardtOptimizer26.objective = doubleArray45; org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException(doubleArray45); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException49 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable52 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(throwable52); org.apache.commons.math.exception.util.Localizable localizable54 = null; java.lang.Object[] objArray57 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(throwable52, localizable54, objArray57); org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException49, 0.0d, "hi!", objArray57); double[] doubleArray60 = functionEvaluationException59.getArgument(); double[] doubleArray62 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair63 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray62); org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException(doubleArray62); double[] doubleArray65 = null; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction25, doubleArray45, doubleArray62, doubleArray65); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNull(doubleArray31); org.junit.Assert.assertNotNull(objArray41); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]"); org.junit.Assert.assertNotNull(objArray57); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[97.0]"); }
public void test042() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test042"); java.lang.Throwable throwable0 = null; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer1 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer1.rows = 0; levenbergMarquardtOptimizer1.setMaxEvaluations((int) (byte) 1); double[] doubleArray6 = levenbergMarquardtOptimizer1.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException8 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable11 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable11); org.apache.commons.math.exception.util.Localizable localizable13 = null; java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable11, localizable13, objArray16); org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException8, 0.0d, "hi!", objArray16); double[] doubleArray19 = functionEvaluationException18.getArgument(); double[] doubleArray20 = functionEvaluationException18.getArgument(); levenbergMarquardtOptimizer1.objective = doubleArray20; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException23 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable26 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException(throwable26); org.apache.commons.math.exception.util.Localizable localizable28 = null; java.lang.Object[] objArray31 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable26, localizable28, objArray31); org.apache.commons.math.FunctionEvaluationException functionEvaluationException33 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException23, 0.0d, "hi!", objArray31); double[] doubleArray34 = functionEvaluationException33.getArgument(); double[] doubleArray36 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray36); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair39 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray34, false); double[] doubleArray40 = vectorialPointValuePair39.getPoint(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException(throwable0, doubleArray40); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertNotNull(objArray16); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]"); org.junit.Assert.assertNotNull(objArray31); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); }
public void test043() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test043"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; double double8 = levenbergMarquardtOptimizer0.getRMS(); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 0); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue(Double.isNaN(double8)); }
public void test044() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test044"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer4.rows = 0; levenbergMarquardtOptimizer4.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer4.setInitialStepBoundFactor((-1.0d)); int int11 = levenbergMarquardtOptimizer4.getIterations(); int int12 = levenbergMarquardtOptimizer4.getIterations(); double[] doubleArray13 = levenbergMarquardtOptimizer4.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer14 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer14.rows = 0; levenbergMarquardtOptimizer14.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer14.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer14.cost = (short) 100; int int23 = levenbergMarquardtOptimizer14.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer14.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24); levenbergMarquardtOptimizer4.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker24; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = null; java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38); org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38); double[] doubleArray41 = functionEvaluationException40.getArgument(); double[] doubleArray43 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair45 = null; // The following exception was thrown during execution in test generation try { boolean boolean46 = simpleVectorialValueChecker24.converged((int) (short) 0, vectorialPointValuePair44, vectorialPointValuePair45); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0); org.junit.Assert.assertNull(doubleArray13); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000); org.junit.Assert.assertNotNull(objArray38); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]"); }
public void test045() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test045"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker6 = levenbergMarquardtOptimizer0.checker; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(vectorialConvergenceChecker6); }
public void test046() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test046"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24); levenbergMarquardtOptimizer0.targetValues = doubleArray24; // The following exception was thrown during execution in test generation try { double[][] doubleArray27 = levenbergMarquardtOptimizer0.getCovariances(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); }
public void test047() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test047"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer2.setOrthoTolerance((double) (byte) 0); double[] doubleArray7 = new double[] { (-1), 1.0f }; double[][] doubleArray8 = new double[][] { doubleArray7 }; levenbergMarquardtOptimizer2.jacobian = doubleArray8; java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray8); java.util.ConcurrentModificationException concurrentModificationException11 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("org.apache.commons.math.ConvergenceException: convergence failed", (java.lang.Object[]) doubleArray8); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(concurrentModificationException10); org.junit.Assert.assertNotNull(concurrentModificationException11); }
public void test048() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test048"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); double double14 = levenbergMarquardtOptimizer0.cost; levenbergMarquardtOptimizer0.setOrthoTolerance(0.0d); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d); }
public void test049() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test049"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker(); levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.junit.Assert.assertNull(vectorialConvergenceChecker10); }
public void test050() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test050"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals; levenbergMarquardtOptimizer0.cost = ' '; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertNull(doubleArray79); }
public void test051() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test051"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker(); double[][] doubleArray11 = levenbergMarquardtOptimizer0.jacobian; org.junit.Assert.assertNull(vectorialConvergenceChecker10); org.junit.Assert.assertNull(doubleArray11); }
public void test052() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test052"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); int int9 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); }
public void test053() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test053"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setQRRankingThreshold(10.0d); int int7 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1000 + "'", int7 == 1000); }
public void test054() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test054"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker(); double double82 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker81); org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d); }
public void test055() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test055"); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair4 = null; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer5.rows = 0; levenbergMarquardtOptimizer5.setMaxEvaluations((int) (byte) 1); double[] doubleArray10 = levenbergMarquardtOptimizer5.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException12 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable15 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable15); org.apache.commons.math.exception.util.Localizable localizable17 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable15, localizable17, objArray20); org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException12, 0.0d, "hi!", objArray20); double[] doubleArray23 = functionEvaluationException22.getArgument(); double[] doubleArray24 = functionEvaluationException22.getArgument(); levenbergMarquardtOptimizer5.objective = doubleArray24; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable30 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30); org.apache.commons.math.exception.util.Localizable localizable32 = null; java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35); org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35); double[] doubleArray38 = functionEvaluationException37.getArgument(); double[] doubleArray40 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray40); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair43 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray38, false); double[] doubleArray44 = vectorialPointValuePair43.getPointRef(); // The following exception was thrown during execution in test generation try { boolean boolean45 = simpleVectorialValueChecker2.converged((int) (short) 10, vectorialPointValuePair4, vectorialPointValuePair43); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray10); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(objArray35); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]"); }
public void test056() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test056"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair24 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); }
public void test057() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test057"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer20.rows = 0; levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d)); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40); double[] doubleArray43 = functionEvaluationException42.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = null; java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53); org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53); double[] doubleArray56 = functionEvaluationException55.getArgument(); double[] doubleArray58 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = null; java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71); double[] doubleArray74 = functionEvaluationException73.getArgument(); double[] doubleArray76 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76); boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77); levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); levenbergMarquardtOptimizer0.setMaxIterations((int) ' '); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(objArray53); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); }
public void test058() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test058"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.cols = (-1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 100.0f); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); }
public void test059() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test059"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; levenbergMarquardtOptimizer0.setParRelativeTolerance((double) ' '); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); }
public void test060() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test060"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker82 = levenbergMarquardtOptimizer0.getConvergenceChecker(); double double83 = levenbergMarquardtOptimizer0.getRMS(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker82); org.junit.Assert.assertTrue(Double.isNaN(double83)); }
public void test061() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test061"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.setMaxIterations(10); int int9 = levenbergMarquardtOptimizer0.cols; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); }
public void test062() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test062"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; int int21 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int22 = levenbergMarquardtOptimizer0.getIterations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); }
public void test063() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test063"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.cols = 100; levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f)); levenbergMarquardtOptimizer0.incrementIterationsCounter(); int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 10); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); }
public void test064() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test064"); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable4 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4); org.apache.commons.math.exception.util.Localizable localizable6 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9); org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9); double[] doubleArray12 = functionEvaluationException11.getArgument(); double[] doubleArray13 = functionEvaluationException11.getArgument(); double[] doubleArray14 = functionEvaluationException11.getArgument(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer15.rows = 0; levenbergMarquardtOptimizer15.setMaxEvaluations((int) (byte) 1); double[] doubleArray20 = levenbergMarquardtOptimizer15.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException(doubleArray35); levenbergMarquardtOptimizer15.residuals = doubleArray35; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray14, doubleArray35, true); double[] doubleArray41 = vectorialPointValuePair40.getValueRef(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]"); org.junit.Assert.assertNull(doubleArray20); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]"); }
public void test065() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test065"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#'); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); }
public void test066() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test066"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; int int8 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647); org.junit.Assert.assertNull(doubleArray9); }
public void test067() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test067"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.incrementIterationsCounter(); double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer3.rows = 0; levenbergMarquardtOptimizer3.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer3.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer3.cost = (short) 100; int int12 = levenbergMarquardtOptimizer3.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker13 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer3.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker13); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker13; int int16 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertNull(doubleArray2); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1000 + "'", int12 == 1000); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); }
public void test068() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test068"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray80 = levenbergMarquardtOptimizer0.residualsWeights; double double81 = levenbergMarquardtOptimizer0.getRMS(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertNull(doubleArray79); org.junit.Assert.assertNull(doubleArray80); org.junit.Assert.assertTrue(Double.isNaN(double81)); }
public void test069() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test069"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 0); int int20 = levenbergMarquardtOptimizer0.cols; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); }
public void test070() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test070"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException81 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable84 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException85 = new org.apache.commons.math.MathRuntimeException(throwable84); org.apache.commons.math.exception.util.Localizable localizable86 = null; java.lang.Object[] objArray89 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException90 = new org.apache.commons.math.MathRuntimeException(throwable84, localizable86, objArray89); org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException81, 0.0d, "hi!", objArray89); double[] doubleArray92 = functionEvaluationException91.getArgument(); double[] doubleArray94 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray92, doubleArray94); org.apache.commons.math.FunctionEvaluationException functionEvaluationException96 = new org.apache.commons.math.FunctionEvaluationException(doubleArray94); levenbergMarquardtOptimizer0.objective = doubleArray94; double[] doubleArray98 = levenbergMarquardtOptimizer0.residuals; // The following exception was thrown during execution in test generation try { double[] doubleArray99 = levenbergMarquardtOptimizer0.guessParametersErrors(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)"); } catch (org.apache.commons.math.optimization.OptimizationException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNotNull(objArray89); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray92); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[97.0]"); org.junit.Assert.assertNull(doubleArray98); }
public void test071() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test071"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray20 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20); org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20); levenbergMarquardtOptimizer0.residuals = doubleArray20; // The following exception was thrown during execution in test generation try { double[][] doubleArray24 = levenbergMarquardtOptimizer0.getCovariances(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]"); }
public void test072() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test072"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction5 = null; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException20 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable23 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23); org.apache.commons.math.exception.util.Localizable localizable25 = null; java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable23, localizable25, objArray28); org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException20, 0.0d, "hi!", objArray28); double[] doubleArray31 = functionEvaluationException30.getArgument(); double[] doubleArray33 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray33); org.apache.commons.math.FunctionEvaluationException functionEvaluationException35 = new org.apache.commons.math.FunctionEvaluationException(doubleArray33); double[] doubleArray36 = null; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair37 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction5, doubleArray18, doubleArray33, doubleArray36); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(objArray28); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0]"); }
public void test073() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test073"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); }
public void test074() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test074"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getMaxIterations(); int int6 = levenbergMarquardtOptimizer0.getEvaluations(); levenbergMarquardtOptimizer0.setParRelativeTolerance(Double.POSITIVE_INFINITY); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker9 = levenbergMarquardtOptimizer0.checker; org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); org.junit.Assert.assertNull(vectorialConvergenceChecker9); }
public void test075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test075"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); int int4 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = levenbergMarquardtOptimizer0.getConvergenceChecker(); double double6 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertNull(vectorialConvergenceChecker5); org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d); }
public void test076() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test076"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.rows = 0; levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer10.cost = (short) 100; int int19 = levenbergMarquardtOptimizer10.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.rows = (byte) 100; levenbergMarquardtOptimizer0.setMaxEvaluations(10); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000); }
public void test077() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test077"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false); double[] doubleArray39 = vectorialPointValuePair38.getPointRef(); double[] doubleArray40 = vectorialPointValuePair38.getPoint(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); }
public void test078() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test078"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 1); double[] doubleArray25 = levenbergMarquardtOptimizer0.objective; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]"); }
public void test079() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test079"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException(doubleArray24); levenbergMarquardtOptimizer0.targetValues = doubleArray24; int int27 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateJacobian(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); }
public void test080() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test080"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 100); double[] doubleArray16 = levenbergMarquardtOptimizer0.residuals; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNull(doubleArray16); }
public void test081() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test081"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int83 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0); }
public void test082() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test082"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1); int int9 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); }
public void test083() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test083"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) 10); double[] doubleArray84 = levenbergMarquardtOptimizer0.point; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); }
public void test084() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test084"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (short) 10); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); }
public void test085() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test085"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; int int21 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer22.rows = 0; levenbergMarquardtOptimizer22.setMaxEvaluations((int) (byte) 1); double[] doubleArray27 = levenbergMarquardtOptimizer22.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException29 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable32 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable32); org.apache.commons.math.exception.util.Localizable localizable34 = null; java.lang.Object[] objArray37 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable32, localizable34, objArray37); org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException29, 0.0d, "hi!", objArray37); double[] doubleArray40 = functionEvaluationException39.getArgument(); double[] doubleArray41 = functionEvaluationException39.getArgument(); levenbergMarquardtOptimizer22.objective = doubleArray41; levenbergMarquardtOptimizer22.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker45 = levenbergMarquardtOptimizer22.checker; levenbergMarquardtOptimizer22.incrementIterationsCounter(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException48 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable51 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException57 = new org.apache.commons.math.MathRuntimeException(throwable51, localizable53, objArray56); org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException48, 0.0d, "hi!", objArray56); double[] doubleArray59 = functionEvaluationException58.getArgument(); double[] doubleArray61 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray61); levenbergMarquardtOptimizer22.residuals = doubleArray59; levenbergMarquardtOptimizer0.objective = doubleArray59; org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(doubleArray59); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNull(doubleArray27); org.junit.Assert.assertNotNull(objArray37); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker45); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[97.0]"); }
public void test086() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test086"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.checker; org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertNull(vectorialConvergenceChecker10); }
public void test087() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test087"); org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8); org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8); org.apache.commons.math.exception.util.Localizable localizable13 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19); java.lang.Throwable throwable23 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23); org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30); org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30); org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern(); java.lang.String str36 = localizable35.getSourceString(); java.lang.Throwable throwable37 = null; java.lang.Object[] objArray43 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43); org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43); java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43); org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern(); java.lang.Throwable throwable51 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51); org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58); org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0); double[] doubleArray68 = new double[] { (-1), 1.0f }; double[][] doubleArray69 = new double[][] { doubleArray68 }; levenbergMarquardtOptimizer63.jacobian = doubleArray69; org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69); org.apache.commons.math.exception.util.Localizable localizable74 = convergenceException73.getLocalizablePattern(); java.lang.Object[] objArray75 = null; org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException(localizable74, objArray75); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException31); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33); org.junit.Assert.assertNotNull(localizable35); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!"); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException44); org.junit.Assert.assertNotNull(noSuchElementException46); org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException59); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertNotNull(localizable74); }
public void test088() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test088"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; levenbergMarquardtOptimizer0.incrementIterationsCounter(); double[] doubleArray25 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); org.junit.Assert.assertNull(doubleArray25); }
public void test089() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test089"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; int int21 = levenbergMarquardtOptimizer0.rows; // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateResidualsAndCost(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); }
public void test090() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test090"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; int int77 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int78 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.setQRRankingThreshold((double) 100L); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0); org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0); }
public void test091() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test091"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); }
public void test092() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test092"); java.lang.Object[] objArray4 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4); org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4); java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4); org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern(); java.lang.Throwable throwable12 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12); org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable16 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0); double[] doubleArray29 = new double[] { (-1), 1.0f }; double[][] doubleArray30 = new double[][] { doubleArray29 }; levenbergMarquardtOptimizer24.jacobian = doubleArray30; org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = mathRuntimeException36.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable39 = null; java.lang.Object[] objArray42 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray42); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException44 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable39, objArray42); org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Throwable throwable47 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable47); org.apache.commons.math.exception.util.Localizable localizable49 = mathRuntimeException48.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable51 = null; java.lang.Object[] objArray54 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException55 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray54); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException56 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable51, objArray54); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException57 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable49, objArray54); java.lang.NullPointerException nullPointerException58 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray54); org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException44, localizable45, objArray54); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable37, objArray54); java.lang.Throwable[] throwableArray61 = nullPointerException60.getSuppressed(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1, "", (java.lang.Object[]) throwableArray61); java.util.NoSuchElementException noSuchElementException63 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, (java.lang.Object[]) throwableArray61); org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(10.0d); double[] doubleArray66 = functionEvaluationException65.getArgument(); java.lang.Object[] objArray67 = functionEvaluationException65.getArguments(); java.util.NoSuchElementException noSuchElementException68 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, objArray67); java.lang.String str69 = localizable11.getSourceString(); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException5); org.junit.Assert.assertNotNull(noSuchElementException7); org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException20); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertTrue("'" + localizable37 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable37.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray42); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException43); org.junit.Assert.assertTrue("'" + localizable49 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable49.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray54); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException55); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException57); org.junit.Assert.assertNotNull(nullPointerException58); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(throwableArray61); org.junit.Assert.assertNotNull(noSuchElementException63); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0]"); org.junit.Assert.assertNotNull(objArray67); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[10.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[10.0]"); org.junit.Assert.assertNotNull(noSuchElementException68); org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{0}" + "'", str69, "{0}"); }
public void test093() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test093"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); int int5 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); }
public void test094() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test094"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.rows = 0; levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer10.cost = (short) 100; int int19 = levenbergMarquardtOptimizer10.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setMaxEvaluations(0); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000); }
public void test095() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test095"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; int int21 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable25 = null; java.lang.Object[] objArray31 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable25, objArray31); org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException("hi!", objArray31); org.apache.commons.math.exception.util.Localizable localizable36 = null; java.lang.Object[] objArray42 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable36, objArray42); org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException33, "hi!", objArray42); double[] doubleArray50 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable52 = null; java.lang.Object[] objArray55 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException56 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray55); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException57 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable52, objArray55); java.lang.Throwable throwable59 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable59); org.apache.commons.math.exception.util.Localizable localizable61 = mathRuntimeException60.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable63 = null; java.lang.Object[] objArray66 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException67 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray66); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException68 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable63, objArray66); org.apache.commons.math.exception.util.Localizable localizable69 = null; java.lang.Throwable throwable71 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71); org.apache.commons.math.exception.util.Localizable localizable73 = mathRuntimeException72.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable75 = null; java.lang.Object[] objArray78 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException79 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray78); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException80 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable75, objArray78); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException81 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable73, objArray78); java.lang.NullPointerException nullPointerException82 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray78); org.apache.commons.math.MathException mathException83 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException68, localizable69, objArray78); java.lang.NullPointerException nullPointerException84 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable61, objArray78); java.lang.Throwable throwable86 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable86); org.apache.commons.math.exception.util.Localizable localizable88 = null; java.lang.Object[] objArray91 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException92 = new org.apache.commons.math.MathRuntimeException(throwable86, localizable88, objArray91); java.lang.Object[] objArray93 = mathRuntimeException92.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException94 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray93); org.apache.commons.math.FunctionEvaluationException functionEvaluationException95 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException57, (double) 0L, localizable61, objArray93); java.lang.Object[] objArray96 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException97 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException33, doubleArray50, localizable61, objArray96); levenbergMarquardtOptimizer22.point = doubleArray50; levenbergMarquardtOptimizer0.point = doubleArray50; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNotNull(objArray31); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray42); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray55); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException56); org.junit.Assert.assertTrue("'" + localizable61 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable61.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray66); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException67); org.junit.Assert.assertTrue("'" + localizable73 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable73.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray78); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException79); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException81); org.junit.Assert.assertNotNull(nullPointerException82); org.junit.Assert.assertNotNull(nullPointerException84); org.junit.Assert.assertNotNull(objArray91); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray93); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException94); }
public void test096() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test096"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; levenbergMarquardtOptimizer0.incrementIterationsCounter(); levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) 1); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); }
public void test097() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test097"); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable4 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4); org.apache.commons.math.exception.util.Localizable localizable6 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9); org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9); double[] doubleArray12 = functionEvaluationException11.getArgument(); double[] doubleArray13 = functionEvaluationException11.getArgument(); double[] doubleArray14 = functionEvaluationException11.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException16 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable19 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(throwable19); org.apache.commons.math.exception.util.Localizable localizable21 = null; java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(throwable19, localizable21, objArray24); org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException16, 0.0d, "hi!", objArray24); double[] doubleArray27 = functionEvaluationException26.getArgument(); double[] doubleArray28 = functionEvaluationException26.getArgument(); double[] doubleArray29 = functionEvaluationException26.getArgument(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer30 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer30.rows = 0; levenbergMarquardtOptimizer30.setMaxEvaluations((int) (byte) 1); double[] doubleArray35 = levenbergMarquardtOptimizer30.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException37 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable40 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable40); org.apache.commons.math.exception.util.Localizable localizable42 = null; java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(throwable40, localizable42, objArray45); org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException37, 0.0d, "hi!", objArray45); double[] doubleArray48 = functionEvaluationException47.getArgument(); double[] doubleArray50 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray50); org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException(doubleArray50); levenbergMarquardtOptimizer30.residuals = doubleArray50; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray29, doubleArray50, true); org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException11, doubleArray29); double[] doubleArray57 = functionEvaluationException56.getArgument(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]"); org.junit.Assert.assertNotNull(objArray24); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]"); org.junit.Assert.assertNull(doubleArray35); org.junit.Assert.assertNotNull(objArray45); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]"); }
public void test098() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test098"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getMaxIterations(); int int6 = levenbergMarquardtOptimizer0.getEvaluations(); levenbergMarquardtOptimizer0.setOrthoTolerance(0.0d); org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); }
public void test099() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test099"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); double double14 = levenbergMarquardtOptimizer0.cost; org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker17 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException20 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable23 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23); org.apache.commons.math.exception.util.Localizable localizable25 = null; java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable23, localizable25, objArray28); org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException20, 0.0d, "hi!", objArray28); double[] doubleArray31 = functionEvaluationException30.getArgument(); double[] doubleArray33 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray33); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException36 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable39 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable39); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable39, localizable41, objArray44); org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException36, 0.0d, "hi!", objArray44); double[] doubleArray47 = functionEvaluationException46.getArgument(); double[] doubleArray49 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair50 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray49); boolean boolean51 = simpleVectorialValueChecker17.converged(100, vectorialPointValuePair34, vectorialPointValuePair50); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker17); int int53 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d); org.junit.Assert.assertNotNull(objArray28); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0]"); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); }
public void test100() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test100"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker20 = levenbergMarquardtOptimizer0.checker; int int21 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker22 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker20); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1000 + "'", int21 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker22); }
public void test101() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test101"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.incrementIterationsCounter(); double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer3.rows = 0; levenbergMarquardtOptimizer3.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer3.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer3.cost = (short) 100; int int12 = levenbergMarquardtOptimizer3.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker13 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer3.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker13); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker13; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.junit.Assert.assertNull(doubleArray2); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1000 + "'", int12 == 1000); }
public void test102() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test102"); java.lang.Object[] objArray1 = null; org.apache.commons.math.ConvergenceException convergenceException2 = new org.apache.commons.math.ConvergenceException("org.apache.commons.math.ConvergenceException: convergence failed", objArray1); java.lang.Object[] objArray3 = convergenceException2.getArguments(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException5 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) convergenceException2, (double) 0.0f); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer6.rows = 0; levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1); double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); double[] doubleArray25 = functionEvaluationException23.getArgument(); levenbergMarquardtOptimizer6.objective = doubleArray25; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); double[] doubleArray41 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray41); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray39, false); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer45 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer45.rows = 0; levenbergMarquardtOptimizer45.setMaxEvaluations((int) (byte) 1); double[] doubleArray50 = levenbergMarquardtOptimizer45.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException52 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable55 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable55); org.apache.commons.math.exception.util.Localizable localizable57 = null; java.lang.Object[] objArray60 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException61 = new org.apache.commons.math.MathRuntimeException(throwable55, localizable57, objArray60); org.apache.commons.math.FunctionEvaluationException functionEvaluationException62 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException52, 0.0d, "hi!", objArray60); double[] doubleArray63 = functionEvaluationException62.getArgument(); double[] doubleArray64 = functionEvaluationException62.getArgument(); levenbergMarquardtOptimizer45.objective = doubleArray64; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException67 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable70 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable70); org.apache.commons.math.exception.util.Localizable localizable72 = null; java.lang.Object[] objArray75 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException76 = new org.apache.commons.math.MathRuntimeException(throwable70, localizable72, objArray75); org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException67, 0.0d, "hi!", objArray75); double[] doubleArray78 = functionEvaluationException77.getArgument(); double[] doubleArray80 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray78, doubleArray80); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray64, doubleArray78, false); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray78); org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) convergenceException2, doubleArray78); org.junit.Assert.assertNotNull(objArray3); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]"); org.junit.Assert.assertNull(doubleArray11); org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]"); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]"); org.junit.Assert.assertNull(doubleArray50); org.junit.Assert.assertNotNull(objArray60); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]"); org.junit.Assert.assertNotNull(objArray75); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[97.0]"); }
public void test103() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test103"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); int int39 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double[] doubleArray40 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2147483647 + "'", int39 == 2147483647); org.junit.Assert.assertNull(doubleArray40); }
public void test104() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test104"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); double double14 = levenbergMarquardtOptimizer0.cost; int int15 = levenbergMarquardtOptimizer0.getMaxEvaluations(); levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 0); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100); }
public void test105() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test105"); java.lang.Throwable throwable0 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException1 = new org.apache.commons.math.MathRuntimeException(throwable0); org.apache.commons.math.exception.util.Localizable localizable2 = mathRuntimeException1.getLocalizablePattern(); java.lang.Throwable throwable6 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException7 = new org.apache.commons.math.MathRuntimeException(throwable6); org.apache.commons.math.exception.util.Localizable localizable8 = null; java.lang.Object[] objArray11 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable6, localizable8, objArray11); java.lang.Object[] objArray13 = mathRuntimeException12.getArguments(); java.text.ParseException parseException14 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray13); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException15 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray13); org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(localizable2, objArray13); java.lang.Object[] objArray20 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException21 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray20); org.apache.commons.math.MathException mathException22 = new org.apache.commons.math.MathException("{0}", objArray20); java.lang.Throwable throwable24 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(throwable24); org.apache.commons.math.exception.util.Localizable localizable26 = mathRuntimeException25.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable28 = null; java.lang.Object[] objArray31 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException32 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray31); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException33 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable28, objArray31); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException34 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable26, objArray31); org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException((java.lang.Throwable) mathException22, "{0}", objArray31); java.util.NoSuchElementException noSuchElementException36 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable2, objArray31); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); java.lang.Throwable throwable43 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43); org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48); java.lang.Object[] objArray50 = mathRuntimeException49.getArguments(); java.text.ParseException parseException51 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray50); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException52 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray50); org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(localizable39, objArray50); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer55 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer55.setOrthoTolerance((double) (byte) 0); double[] doubleArray60 = new double[] { (-1), 1.0f }; double[][] doubleArray61 = new double[][] { doubleArray60 }; levenbergMarquardtOptimizer55.jacobian = doubleArray61; java.util.ConcurrentModificationException concurrentModificationException63 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray61); java.lang.IllegalStateException illegalStateException64 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable39, (java.lang.Object[]) doubleArray61); org.apache.commons.math.MathException mathException65 = new org.apache.commons.math.MathException(localizable2, (java.lang.Object[]) doubleArray61); org.junit.Assert.assertTrue("'" + localizable2 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable2.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray11); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray13); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException14); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException15); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException21); org.junit.Assert.assertTrue("'" + localizable26 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable26.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray31); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException32); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException34); org.junit.Assert.assertNotNull(noSuchElementException36); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray48); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray50); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException51); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException52); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertNotNull(concurrentModificationException63); org.junit.Assert.assertNotNull(illegalStateException64); }
public void test106() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test106"); org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8); org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8); org.apache.commons.math.exception.util.Localizable localizable13 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19); java.lang.Throwable throwable23 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23); org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30); org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30); org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern(); java.lang.String str36 = localizable35.getSourceString(); java.lang.Throwable throwable37 = null; java.lang.Object[] objArray43 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43); org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43); java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43); org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern(); java.lang.Throwable throwable51 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51); org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58); org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0); double[] doubleArray68 = new double[] { (-1), 1.0f }; double[][] doubleArray69 = new double[][] { doubleArray68 }; levenbergMarquardtOptimizer63.jacobian = doubleArray69; org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69); java.lang.Throwable throwable74 = null; // The following exception was thrown during execution in test generation try { convergenceException73.addSuppressed(throwable74); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception."); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException31); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33); org.junit.Assert.assertNotNull(localizable35); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!"); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException44); org.junit.Assert.assertNotNull(noSuchElementException46); org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException59); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray69); }
public void test107() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test107"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); double double14 = levenbergMarquardtOptimizer0.cost; levenbergMarquardtOptimizer0.setQRRankingThreshold(10.0d); double[] doubleArray17 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d); org.junit.Assert.assertNull(doubleArray17); }
public void test108() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test108"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; double[][] doubleArray21 = levenbergMarquardtOptimizer0.jacobian; double[] doubleArray22 = levenbergMarquardtOptimizer0.targetValues; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException24 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable27 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException(throwable27); org.apache.commons.math.exception.util.Localizable localizable29 = null; java.lang.Object[] objArray32 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable27, localizable29, objArray32); org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException24, 0.0d, "hi!", objArray32); double[] doubleArray35 = functionEvaluationException34.getArgument(); double[] doubleArray37 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray35, doubleArray37); levenbergMarquardtOptimizer0.residualsWeights = doubleArray37; levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) (short) 0); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(doubleArray21); org.junit.Assert.assertNull(doubleArray22); org.junit.Assert.assertNotNull(objArray32); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[97.0]"); }
public void test109() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test109"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); org.apache.commons.math.exception.util.Localizable localizable9 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15); org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15); org.apache.commons.math.exception.util.Localizable localizable20 = null; java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26); org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = null; java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38); org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38); double[] doubleArray41 = functionEvaluationException40.getArgument(); double[] doubleArray43 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Object[] objArray50 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable58 = null; java.lang.Object[] objArray61 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61); org.apache.commons.math.exception.util.Localizable localizable64 = null; java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable70 = null; java.lang.Object[] objArray73 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73); java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73); org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73); java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73); java.lang.Throwable throwable81 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81); org.apache.commons.math.exception.util.Localizable localizable83 = null; java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86); java.lang.Object[] objArray88 = mathRuntimeException87.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88); levenbergMarquardtOptimizer0.residualsWeights = doubleArray41; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker93 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int94 = levenbergMarquardtOptimizer0.getMaxEvaluations(); levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray26); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray38); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]"); org.junit.Assert.assertNotNull(objArray50); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException51); org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray61); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException62); org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray73); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException74); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76); org.junit.Assert.assertNotNull(nullPointerException77); org.junit.Assert.assertNotNull(nullPointerException79); org.junit.Assert.assertNotNull(objArray86); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89); org.junit.Assert.assertNull(vectorialConvergenceChecker93); org.junit.Assert.assertTrue("'" + int94 + "' != '" + 97 + "'", int94 == 97); }
public void test110() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test110"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); double double10 = levenbergMarquardtOptimizer0.getRMS(); int int11 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker12 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker12; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double10 + "' != '" + Double.POSITIVE_INFINITY + "'", double10 == Double.POSITIVE_INFINITY); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); }
public void test111() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test111"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray20 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20); org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20); levenbergMarquardtOptimizer0.residuals = doubleArray20; org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction24 = null; double[] doubleArray25 = null; java.lang.Throwable throwable26 = null; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException41 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable44 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable44); org.apache.commons.math.exception.util.Localizable localizable46 = null; java.lang.Object[] objArray49 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable44, localizable46, objArray49); org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException41, 0.0d, "hi!", objArray49); double[] doubleArray52 = functionEvaluationException51.getArgument(); double[] doubleArray54 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray52, doubleArray54); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray54, false); org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException(throwable26, doubleArray39); org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException(doubleArray39); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer60 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer60.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer60.setMaxEvaluations((int) (byte) 100); double[] doubleArray65 = levenbergMarquardtOptimizer60.residuals; double[] doubleArray66 = levenbergMarquardtOptimizer60.residuals; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException68 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable71 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71); org.apache.commons.math.exception.util.Localizable localizable73 = null; java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable71, localizable73, objArray76); org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException68, 0.0d, "hi!", objArray76); double[] doubleArray79 = functionEvaluationException78.getArgument(); double[] doubleArray80 = functionEvaluationException78.getArgument(); levenbergMarquardtOptimizer60.residualsWeights = doubleArray80; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction24, doubleArray25, doubleArray39, doubleArray80); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]"); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(objArray49); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0]"); org.junit.Assert.assertNull(doubleArray65); org.junit.Assert.assertNull(doubleArray66); org.junit.Assert.assertNotNull(objArray76); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0]"); }
public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations(1); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker(); levenbergMarquardtOptimizer0.setCostRelativeTolerance(0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker3); }
public void test113() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test113"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker7 = levenbergMarquardtOptimizer0.checker; levenbergMarquardtOptimizer0.cost = 1L; org.junit.Assert.assertNull(vectorialConvergenceChecker7); }
public void test114() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test114"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#'); double double83 = levenbergMarquardtOptimizer0.cost; int int84 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d); org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1000 + "'", int84 == 1000); }
public void test115() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test115"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer39.rows = 0; levenbergMarquardtOptimizer39.setMaxEvaluations((int) (byte) 1); double[] doubleArray44 = levenbergMarquardtOptimizer39.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException46 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = null; java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable49, localizable51, objArray54); org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException46, 0.0d, "hi!", objArray54); double[] doubleArray57 = functionEvaluationException56.getArgument(); double[] doubleArray58 = functionEvaluationException56.getArgument(); levenbergMarquardtOptimizer39.objective = doubleArray58; org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException(doubleArray58); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray58, false); java.lang.Throwable throwable67 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException68 = new org.apache.commons.math.MathRuntimeException(throwable67); org.apache.commons.math.exception.util.Localizable localizable69 = null; java.lang.Object[] objArray72 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException73 = new org.apache.commons.math.MathRuntimeException(throwable67, localizable69, objArray72); java.lang.Object[] objArray74 = mathRuntimeException73.getArguments(); java.text.ParseException parseException75 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray74); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray74); org.apache.commons.math.FunctionEvaluationException functionEvaluationException77 = new org.apache.commons.math.FunctionEvaluationException(doubleArray19, "org.apache.commons.math.MathException: ", objArray74); double[] doubleArray78 = functionEvaluationException77.getArgument(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertNull(doubleArray44); org.junit.Assert.assertNotNull(objArray54); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]"); org.junit.Assert.assertNotNull(objArray72); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray74); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException75); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]"); }
public void test116() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test116"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.rows = 0; levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer10.cost = (short) 100; int int19 = levenbergMarquardtOptimizer10.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.rows = (byte) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000); }
public void test117() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test117"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException8 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable11 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable11); org.apache.commons.math.exception.util.Localizable localizable13 = null; java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable11, localizable13, objArray16); org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException8, 0.0d, "hi!", objArray16); double[] doubleArray19 = functionEvaluationException18.getArgument(); double[] doubleArray21 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair22 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray21); levenbergMarquardtOptimizer6.point = doubleArray21; levenbergMarquardtOptimizer0.residualsWeights = doubleArray21; // The following exception was thrown during execution in test generation try { double[][] doubleArray25 = levenbergMarquardtOptimizer0.getCovariances(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray16); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]"); }
public void test118() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test118"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; int int77 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); double[] doubleArray78 = null; levenbergMarquardtOptimizer0.objective = doubleArray78; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer80 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer80.incrementIterationsCounter(); double[] doubleArray82 = levenbergMarquardtOptimizer80.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer83 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer83.rows = 0; levenbergMarquardtOptimizer83.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer83.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer83.cost = (short) 100; int int92 = levenbergMarquardtOptimizer83.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker93 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer83.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker93); levenbergMarquardtOptimizer80.checker = simpleVectorialValueChecker93; levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker93; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0); org.junit.Assert.assertNull(doubleArray82); org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1000 + "'", int92 == 1000); }
public void test119() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test119"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); }
public void test120() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test120"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.cols = 100; levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f)); levenbergMarquardtOptimizer0.incrementIterationsCounter(); int int11 = levenbergMarquardtOptimizer0.cols; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100); }
public void test121() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test121"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) 1); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); }
public void test122() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test122"); org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8); org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8); org.apache.commons.math.exception.util.Localizable localizable13 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19); java.lang.Throwable throwable23 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23); org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30); org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30); org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern(); java.lang.String str36 = localizable35.getSourceString(); java.lang.Throwable throwable37 = null; java.lang.Object[] objArray43 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43); org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43); java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43); org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern(); java.lang.Throwable throwable51 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51); org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58); org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0); double[] doubleArray68 = new double[] { (-1), 1.0f }; double[][] doubleArray69 = new double[][] { doubleArray68 }; levenbergMarquardtOptimizer63.jacobian = doubleArray69; org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69); java.lang.Throwable throwable75 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException76 = new org.apache.commons.math.MathRuntimeException(throwable75); org.apache.commons.math.exception.util.Localizable localizable77 = null; java.lang.Object[] objArray80 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException81 = new org.apache.commons.math.MathRuntimeException(throwable75, localizable77, objArray80); org.apache.commons.math.exception.util.Localizable localizable83 = null; org.apache.commons.math.exception.util.Localizable localizable85 = null; java.lang.Object[] objArray91 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable85, objArray91); org.apache.commons.math.FunctionEvaluationException functionEvaluationException93 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException81, (double) (byte) 1, localizable83, objArray91); java.lang.IllegalArgumentException illegalArgumentException94 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException81); java.lang.Object[] objArray95 = mathRuntimeException81.getArguments(); java.lang.NullPointerException nullPointerException96 = org.apache.commons.math.MathRuntimeException.createNullPointerException("org.apache.commons.math.ConvergenceException: convergence failed", objArray95); java.lang.NullPointerException nullPointerException97 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable35, objArray95); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException31); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33); org.junit.Assert.assertNotNull(localizable35); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!"); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException44); org.junit.Assert.assertNotNull(noSuchElementException46); org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException59); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertNotNull(objArray80); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray91); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(illegalArgumentException94); org.junit.Assert.assertNotNull(objArray95); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[hi!, 1]"); org.junit.Assert.assertNotNull(nullPointerException96); org.junit.Assert.assertNotNull(nullPointerException97); }
public void test123() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test123"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); double[] doubleArray80 = levenbergMarquardtOptimizer0.residuals; levenbergMarquardtOptimizer0.setInitialStepBoundFactor(10000.0d); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(doubleArray80); }
public void test124() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test124"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; int int20 = levenbergMarquardtOptimizer0.getMaxIterations(); int int21 = levenbergMarquardtOptimizer0.getIterations(); int int22 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000); }
public void test125() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test125"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.cols = '#'; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); }
public void test126() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test126"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); double[] doubleArray23 = null; levenbergMarquardtOptimizer0.point = doubleArray23; // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateJacobian(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); }
public void test127() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test127"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getMaxIterations(); int int6 = levenbergMarquardtOptimizer0.getEvaluations(); double[] doubleArray7 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); org.junit.Assert.assertNull(doubleArray7); }
public void test128() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test128"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); java.lang.Class<?> wildcardClass5 = levenbergMarquardtOptimizer0.getClass(); org.junit.Assert.assertNotNull(wildcardClass5); }
public void test129() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test129"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); int int20 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); }
public void test130() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test130"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); int int79 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); }
public void test131() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test131"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '4'); org.junit.Assert.assertNull(doubleArray5); }
public void test132() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test132"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); int int7 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97); }
public void test133() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test133"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray6 = levenbergMarquardtOptimizer0.point; org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0); org.junit.Assert.assertNull(doubleArray6); }
public void test134() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test134"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer6.rows = 0; levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1); double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); double[] doubleArray25 = functionEvaluationException23.getArgument(); levenbergMarquardtOptimizer6.objective = doubleArray25; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); double[] doubleArray41 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray39, doubleArray41); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray39, false); double[] doubleArray45 = vectorialPointValuePair44.getPointRef(); levenbergMarquardtOptimizer0.objective = doubleArray45; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray11); org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]"); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]"); }
public void test135() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test135"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d); int int9 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 0); int int13 = levenbergMarquardtOptimizer10.getMaxIterations(); int int14 = levenbergMarquardtOptimizer10.getIterations(); int int15 = levenbergMarquardtOptimizer10.getIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker18 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 1); levenbergMarquardtOptimizer10.checker = simpleVectorialValueChecker18; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer21.rows = 0; levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1); double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); double[] doubleArray40 = functionEvaluationException38.getArgument(); levenbergMarquardtOptimizer21.objective = doubleArray40; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable46 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46); org.apache.commons.math.exception.util.Localizable localizable48 = null; java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51); org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51); double[] doubleArray54 = functionEvaluationException53.getArgument(); double[] doubleArray56 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException61 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException61, 0.0d, "hi!", objArray69); double[] doubleArray72 = functionEvaluationException71.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException(doubleArray72); double[] doubleArray74 = functionEvaluationException73.getArgument(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray74, true); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException78 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable81 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81); org.apache.commons.math.exception.util.Localizable localizable83 = null; java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86); org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException78, 0.0d, "hi!", objArray86); double[] doubleArray89 = functionEvaluationException88.getArgument(); double[] doubleArray91 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair92 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray89, doubleArray91); double[] doubleArray93 = vectorialPointValuePair92.getPointRef(); boolean boolean94 = simpleVectorialValueChecker18.converged(0, vectorialPointValuePair76, vectorialPointValuePair92); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker18; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1000 + "'", int13 == 1000); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNull(doubleArray26); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); org.junit.Assert.assertNotNull(objArray51); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]"); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]"); org.junit.Assert.assertNotNull(objArray86); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0]"); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false); }
public void test136() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test136"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; int int21 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int22 = levenbergMarquardtOptimizer0.getEvaluations(); double[] doubleArray23 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertNull(doubleArray23); }
public void test137() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test137"); java.lang.Object[] objArray4 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4); org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4); java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4); org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern(); java.lang.Throwable throwable12 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12); org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable16 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0); double[] doubleArray29 = new double[] { (-1), 1.0f }; double[][] doubleArray30 = new double[][] { doubleArray29 }; levenbergMarquardtOptimizer24.jacobian = doubleArray30; org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30); java.lang.Class<?> wildcardClass33 = noSuchElementException7.getClass(); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException5); org.junit.Assert.assertNotNull(noSuchElementException7); org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException20); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(wildcardClass33); }
public void test138() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test138"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); levenbergMarquardtOptimizer0.cost = (short) 10; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer5 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer5.rows = 0; levenbergMarquardtOptimizer5.setMaxEvaluations((int) (byte) 1); double[] doubleArray10 = levenbergMarquardtOptimizer5.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException12 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable15 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable15); org.apache.commons.math.exception.util.Localizable localizable17 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable15, localizable17, objArray20); org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException12, 0.0d, "hi!", objArray20); double[] doubleArray23 = functionEvaluationException22.getArgument(); double[] doubleArray24 = functionEvaluationException22.getArgument(); levenbergMarquardtOptimizer5.objective = doubleArray24; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable30 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30); org.apache.commons.math.exception.util.Localizable localizable32 = null; java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35); org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35); double[] doubleArray38 = functionEvaluationException37.getArgument(); double[] doubleArray40 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair41 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray40); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair43 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray38, false); levenbergMarquardtOptimizer0.residualsWeights = doubleArray38; org.junit.Assert.assertNull(doubleArray10); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(objArray35); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0]"); }
public void test139() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test139"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); double double1 = levenbergMarquardtOptimizer0.cost; double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer3.setMaxEvaluations((int) (byte) 0); int int6 = levenbergMarquardtOptimizer3.getMaxIterations(); int int7 = levenbergMarquardtOptimizer3.getIterations(); int int8 = levenbergMarquardtOptimizer3.getIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker11 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 1); levenbergMarquardtOptimizer3.checker = simpleVectorialValueChecker11; levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker11); org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d); org.junit.Assert.assertNull(doubleArray2); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1000 + "'", int6 == 1000); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); }
public void test140() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test140"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.cost = 10.0d; levenbergMarquardtOptimizer0.cost = (-1L); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); }
public void test141() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test141"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; double double8 = levenbergMarquardtOptimizer0.getRMS(); int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int10 = levenbergMarquardtOptimizer0.getIterations(); levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 0.0f); double double13 = levenbergMarquardtOptimizer0.cost; org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue(Double.isNaN(double8)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0); org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d); }
public void test142() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test142"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getIterations(); double double6 = levenbergMarquardtOptimizer0.cost; org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0); org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d); }
public void test143() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test143"); java.lang.Object[] objArray4 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4); org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4); java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4); org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern(); java.lang.Throwable throwable12 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12); org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable16 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0); double[] doubleArray29 = new double[] { (-1), 1.0f }; double[][] doubleArray30 = new double[][] { doubleArray29 }; levenbergMarquardtOptimizer24.jacobian = doubleArray30; org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = mathRuntimeException36.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable39 = null; java.lang.Object[] objArray42 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray42); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException44 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable39, objArray42); org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Throwable throwable47 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable47); org.apache.commons.math.exception.util.Localizable localizable49 = mathRuntimeException48.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable51 = null; java.lang.Object[] objArray54 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException55 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray54); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException56 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable51, objArray54); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException57 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable49, objArray54); java.lang.NullPointerException nullPointerException58 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray54); org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException44, localizable45, objArray54); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable37, objArray54); java.lang.Throwable[] throwableArray61 = nullPointerException60.getSuppressed(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1, "", (java.lang.Object[]) throwableArray61); java.util.NoSuchElementException noSuchElementException63 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, (java.lang.Object[]) throwableArray61); java.lang.Throwable throwable65 = null; org.apache.commons.math.exception.util.Localizable localizable69 = null; org.apache.commons.math.exception.util.Localizable localizable71 = null; java.lang.Object[] objArray77 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable71, objArray77); org.apache.commons.math.MathException mathException79 = new org.apache.commons.math.MathException(localizable69, objArray77); org.apache.commons.math.MathRuntimeException mathRuntimeException80 = new org.apache.commons.math.MathRuntimeException("hi!", objArray77); org.apache.commons.math.FunctionEvaluationException functionEvaluationException81 = new org.apache.commons.math.FunctionEvaluationException(throwable65, (double) '#', "", objArray77); java.io.EOFException eOFException82 = org.apache.commons.math.MathRuntimeException.createEOFException("org.apache.commons.math.ConvergenceException: convergence failed", objArray77); org.apache.commons.math.optimization.OptimizationException optimizationException83 = new org.apache.commons.math.optimization.OptimizationException(localizable11, objArray77); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException5); org.junit.Assert.assertNotNull(noSuchElementException7); org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException20); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertTrue("'" + localizable37 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable37.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray42); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException43); org.junit.Assert.assertTrue("'" + localizable49 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable49.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray54); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException55); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException57); org.junit.Assert.assertNotNull(nullPointerException58); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(throwableArray61); org.junit.Assert.assertNotNull(noSuchElementException63); org.junit.Assert.assertNotNull(objArray77); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(eOFException82); }
public void test144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test144"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); double double39 = levenbergMarquardtOptimizer0.cost; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker40 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d); org.junit.Assert.assertNotNull(vectorialConvergenceChecker40); }
public void test145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test145"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); int int1 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0); }
public void test146() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test146"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer20.rows = 0; levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d)); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40); double[] doubleArray43 = functionEvaluationException42.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = null; java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53); org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53); double[] doubleArray56 = functionEvaluationException55.getArgument(); double[] doubleArray58 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = null; java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71); double[] doubleArray74 = functionEvaluationException73.getArgument(); double[] doubleArray76 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76); boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77); levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(objArray53); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); }
public void test147() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test147"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.cost = '4'; int int84 = levenbergMarquardtOptimizer0.getIterations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0); }
public void test148() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test148"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L); int int8 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); }
public void test149() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test149"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); double[] doubleArray82 = levenbergMarquardtOptimizer0.residualsWeights; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertNull(doubleArray82); }
public void test150() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test150"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker4 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', 1.0d); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker4; int int6 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); }
public void test151() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test151"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); double[] doubleArray80 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker83 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker83; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(doubleArray80); }
public void test152() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test152"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.cols = 100; levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f)); levenbergMarquardtOptimizer0.incrementIterationsCounter(); int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations(); int int12 = levenbergMarquardtOptimizer0.getMaxEvaluations(); levenbergMarquardtOptimizer0.cost = 0.0d; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException17 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable20 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable20); org.apache.commons.math.exception.util.Localizable localizable22 = null; java.lang.Object[] objArray25 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable20, localizable22, objArray25); org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException17, 0.0d, "hi!", objArray25); double[] doubleArray28 = functionEvaluationException27.getArgument(); double[] doubleArray30 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair31 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray28, doubleArray30); levenbergMarquardtOptimizer15.point = doubleArray30; levenbergMarquardtOptimizer15.cost = 0L; double[] doubleArray40 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L }; levenbergMarquardtOptimizer15.targetValues = doubleArray40; levenbergMarquardtOptimizer0.residualsWeights = doubleArray40; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertNotNull(objArray25); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 0.0, 10.0, 32.0, 1.0]"); }
public void test153() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test153"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); levenbergMarquardtOptimizer0.cost = (short) 0; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); }
public void test154() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test154"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; int int20 = levenbergMarquardtOptimizer0.getIterations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); }
public void test155() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test155"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); int int4 = levenbergMarquardtOptimizer0.getIterations(); int int5 = levenbergMarquardtOptimizer0.getIterations(); levenbergMarquardtOptimizer0.setOrthoTolerance((-1.0d)); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0); }
public void test156() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test156"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxIterations((int) ' '); levenbergMarquardtOptimizer0.rows = ' '; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair81 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); }
public void test157() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test157"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.rows = 0; levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer10.cost = (short) 100; int int19 = levenbergMarquardtOptimizer10.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 2147483647); int int25 = levenbergMarquardtOptimizer0.rows; int int26 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1000 + "'", int26 == 1000); }
public void test158() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test158"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#'); levenbergMarquardtOptimizer0.cost = 1L; levenbergMarquardtOptimizer0.setMaxEvaluations(10); levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker88 = levenbergMarquardtOptimizer0.checker; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker88); }
public void test159() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test159"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; int int20 = levenbergMarquardtOptimizer0.getMaxIterations(); double double21 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000); org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d); }
public void test160() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test160"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); org.apache.commons.math.exception.util.Localizable localizable9 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15); org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15); org.apache.commons.math.exception.util.Localizable localizable20 = null; java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26); org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = null; java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38); org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38); double[] doubleArray41 = functionEvaluationException40.getArgument(); double[] doubleArray43 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Object[] objArray50 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable58 = null; java.lang.Object[] objArray61 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61); org.apache.commons.math.exception.util.Localizable localizable64 = null; java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable70 = null; java.lang.Object[] objArray73 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73); java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73); org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73); java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73); java.lang.Throwable throwable81 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81); org.apache.commons.math.exception.util.Localizable localizable83 = null; java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86); java.lang.Object[] objArray88 = mathRuntimeException87.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88); levenbergMarquardtOptimizer0.residualsWeights = doubleArray41; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker93 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int94 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double[][] doubleArray95 = levenbergMarquardtOptimizer0.jacobian; org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray26); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray38); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]"); org.junit.Assert.assertNotNull(objArray50); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException51); org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray61); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException62); org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray73); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException74); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76); org.junit.Assert.assertNotNull(nullPointerException77); org.junit.Assert.assertNotNull(nullPointerException79); org.junit.Assert.assertNotNull(objArray86); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89); org.junit.Assert.assertNull(vectorialConvergenceChecker93); org.junit.Assert.assertTrue("'" + int94 + "' != '" + 97 + "'", int94 == 97); org.junit.Assert.assertNull(doubleArray95); }
public void test161() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test161"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); }
public void test162() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test162"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.cost = 10.0d; int int14 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0); }
public void test163() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test163"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.rows = 0; levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer10.cost = (short) 100; int int19 = levenbergMarquardtOptimizer10.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 0.0f); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker25); levenbergMarquardtOptimizer0.cost = (-1.0d); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000); }
public void test164() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test164"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations(0); int int6 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); }
public void test165() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test165"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#'); levenbergMarquardtOptimizer0.cost = 1L; levenbergMarquardtOptimizer0.setMaxEvaluations(10); int int87 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10); }
public void test166() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test166"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double[] doubleArray7 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1); org.junit.Assert.assertNull(doubleArray7); }
public void test167() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test167"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); int int5 = levenbergMarquardtOptimizer0.rows; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer6.rows = 0; levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1); double[] doubleArray11 = levenbergMarquardtOptimizer6.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); double[] doubleArray25 = functionEvaluationException23.getArgument(); levenbergMarquardtOptimizer6.objective = doubleArray25; levenbergMarquardtOptimizer6.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker29 = levenbergMarquardtOptimizer6.checker; levenbergMarquardtOptimizer6.incrementIterationsCounter(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40); double[] doubleArray43 = functionEvaluationException42.getArgument(); double[] doubleArray45 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair46 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray45); levenbergMarquardtOptimizer6.residuals = doubleArray43; levenbergMarquardtOptimizer0.objective = doubleArray43; org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0); org.junit.Assert.assertNull(doubleArray11); org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker29); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[97.0]"); }
public void test168() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test168"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L); double[] doubleArray8 = levenbergMarquardtOptimizer0.residualsWeights; int int9 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray8); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); }
public void test169() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test169"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getMaxIterations(); double[] doubleArray6 = new double[] {}; org.apache.commons.math.FunctionEvaluationException functionEvaluationException7 = new org.apache.commons.math.FunctionEvaluationException(doubleArray6); levenbergMarquardtOptimizer0.targetValues = doubleArray6; org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]"); }
public void test170() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test170"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; int int21 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer22.rows = 0; levenbergMarquardtOptimizer22.setMaxEvaluations((int) (byte) 1); double[] doubleArray27 = levenbergMarquardtOptimizer22.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException29 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable32 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable32); org.apache.commons.math.exception.util.Localizable localizable34 = null; java.lang.Object[] objArray37 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable32, localizable34, objArray37); org.apache.commons.math.FunctionEvaluationException functionEvaluationException39 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException29, 0.0d, "hi!", objArray37); double[] doubleArray40 = functionEvaluationException39.getArgument(); double[] doubleArray41 = functionEvaluationException39.getArgument(); levenbergMarquardtOptimizer22.objective = doubleArray41; levenbergMarquardtOptimizer22.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker45 = levenbergMarquardtOptimizer22.checker; levenbergMarquardtOptimizer22.incrementIterationsCounter(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException48 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable51 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException57 = new org.apache.commons.math.MathRuntimeException(throwable51, localizable53, objArray56); org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException48, 0.0d, "hi!", objArray56); double[] doubleArray59 = functionEvaluationException58.getArgument(); double[] doubleArray61 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray61); levenbergMarquardtOptimizer22.residuals = doubleArray59; levenbergMarquardtOptimizer0.objective = doubleArray59; // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateJacobian(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNull(doubleArray27); org.junit.Assert.assertNotNull(objArray37); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker45); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[97.0]"); }
public void test171() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test171"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); int int39 = levenbergMarquardtOptimizer0.cols; levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) -1); org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0); }
public void test172() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test172"); java.lang.Object[] objArray4 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4); org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4); java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4); org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern(); java.lang.Throwable throwable12 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12); org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable16 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0); double[] doubleArray29 = new double[] { (-1), 1.0f }; double[][] doubleArray30 = new double[][] { doubleArray29 }; levenbergMarquardtOptimizer24.jacobian = doubleArray30; org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = mathRuntimeException36.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable39 = null; java.lang.Object[] objArray42 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException43 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray42); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException44 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable39, objArray42); org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Throwable throwable47 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable47); org.apache.commons.math.exception.util.Localizable localizable49 = mathRuntimeException48.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable51 = null; java.lang.Object[] objArray54 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException55 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray54); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException56 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable51, objArray54); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException57 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable49, objArray54); java.lang.NullPointerException nullPointerException58 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray54); org.apache.commons.math.MathException mathException59 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException44, localizable45, objArray54); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable37, objArray54); java.lang.Throwable[] throwableArray61 = nullPointerException60.getSuppressed(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1, "", (java.lang.Object[]) throwableArray61); java.util.NoSuchElementException noSuchElementException63 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, (java.lang.Object[]) throwableArray61); org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException(10.0d); double[] doubleArray66 = functionEvaluationException65.getArgument(); java.lang.Object[] objArray67 = functionEvaluationException65.getArguments(); java.util.NoSuchElementException noSuchElementException68 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException(localizable11, objArray67); java.lang.Throwable throwable69 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable69); org.apache.commons.math.exception.util.Localizable localizable71 = null; java.lang.Object[] objArray74 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException75 = new org.apache.commons.math.MathRuntimeException(throwable69, localizable71, objArray74); java.lang.Object[] objArray76 = mathRuntimeException75.getArguments(); org.apache.commons.math.MathException mathException77 = new org.apache.commons.math.MathException(localizable11, objArray76); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException5); org.junit.Assert.assertNotNull(noSuchElementException7); org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException20); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertTrue("'" + localizable37 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable37.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray42); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException43); org.junit.Assert.assertTrue("'" + localizable49 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable49.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray54); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException55); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException57); org.junit.Assert.assertNotNull(nullPointerException58); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(throwableArray61); org.junit.Assert.assertNotNull(noSuchElementException63); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0]"); org.junit.Assert.assertNotNull(objArray67); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[10.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[10.0]"); org.junit.Assert.assertNotNull(noSuchElementException68); org.junit.Assert.assertNotNull(objArray74); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray76); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]"); }
public void test173() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test173"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); double double39 = levenbergMarquardtOptimizer0.cost; int int40 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); }
public void test174() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test174"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) '#'); int int83 = levenbergMarquardtOptimizer0.rows; levenbergMarquardtOptimizer0.setMaxIterations((int) (byte) 0); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0); }
public void test175() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test175"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; java.lang.Class<?> wildcardClass10 = levenbergMarquardtOptimizer0.getClass(); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertNotNull(wildcardClass10); }
public void test176() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test176"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.setMaxIterations(10); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker9 = levenbergMarquardtOptimizer0.checker; org.junit.Assert.assertNull(vectorialConvergenceChecker9); }
public void test177() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test177"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); double[] doubleArray23 = null; levenbergMarquardtOptimizer0.point = doubleArray23; // The following exception was thrown during execution in test generation try { double[][] doubleArray25 = levenbergMarquardtOptimizer0.getCovariances(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); }
public void test178() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test178"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker20 = levenbergMarquardtOptimizer0.checker; levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 0L); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker20); }
public void test179() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test179"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer20.rows = 0; levenbergMarquardtOptimizer20.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer20.setInitialStepBoundFactor((-1.0d)); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker29 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40); double[] doubleArray43 = functionEvaluationException42.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException45 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = null; java.lang.Object[] objArray53 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable48, localizable50, objArray53); org.apache.commons.math.FunctionEvaluationException functionEvaluationException55 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException45, 0.0d, "hi!", objArray53); double[] doubleArray56 = functionEvaluationException55.getArgument(); double[] doubleArray58 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray56, doubleArray58); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray58, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = null; java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71); double[] doubleArray74 = functionEvaluationException73.getArgument(); double[] doubleArray76 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76); boolean boolean78 = simpleVectorialValueChecker29.converged(0, vectorialPointValuePair61, vectorialPointValuePair77); levenbergMarquardtOptimizer20.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker29); int int81 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double[] doubleArray82 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(objArray53); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100); org.junit.Assert.assertNull(doubleArray82); }
public void test180() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test180"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer18 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException20 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable23 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23); org.apache.commons.math.exception.util.Localizable localizable25 = null; java.lang.Object[] objArray28 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException29 = new org.apache.commons.math.MathRuntimeException(throwable23, localizable25, objArray28); org.apache.commons.math.FunctionEvaluationException functionEvaluationException30 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException20, 0.0d, "hi!", objArray28); double[] doubleArray31 = functionEvaluationException30.getArgument(); double[] doubleArray33 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair34 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray31, doubleArray33); levenbergMarquardtOptimizer18.point = doubleArray33; levenbergMarquardtOptimizer18.cost = 0L; double[] doubleArray43 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L }; levenbergMarquardtOptimizer18.targetValues = doubleArray43; int int45 = levenbergMarquardtOptimizer18.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer46 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer46.rows = 0; levenbergMarquardtOptimizer46.setMaxEvaluations((int) (byte) 1); double[] doubleArray51 = levenbergMarquardtOptimizer46.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException53 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable56 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException57 = new org.apache.commons.math.MathRuntimeException(throwable56); org.apache.commons.math.exception.util.Localizable localizable58 = null; java.lang.Object[] objArray61 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException(throwable56, localizable58, objArray61); org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException53, 0.0d, "hi!", objArray61); double[] doubleArray64 = functionEvaluationException63.getArgument(); double[] doubleArray65 = functionEvaluationException63.getArgument(); levenbergMarquardtOptimizer46.objective = doubleArray65; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException68 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable71 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71); org.apache.commons.math.exception.util.Localizable localizable73 = null; java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable71, localizable73, objArray76); org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException68, 0.0d, "hi!", objArray76); double[] doubleArray79 = functionEvaluationException78.getArgument(); double[] doubleArray81 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray79, doubleArray81); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair84 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray65, doubleArray79, false); levenbergMarquardtOptimizer18.residualsWeights = doubleArray65; levenbergMarquardtOptimizer0.residuals = doubleArray65; double double87 = levenbergMarquardtOptimizer0.getRMS(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(objArray28); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 0.0, 10.0, 32.0, 1.0]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertNull(doubleArray51); org.junit.Assert.assertNotNull(objArray61); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0]"); org.junit.Assert.assertNotNull(objArray76); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0]"); org.junit.Assert.assertTrue(Double.isNaN(double87)); }
public void test181() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test181"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian; levenbergMarquardtOptimizer0.setInitialStepBoundFactor(10.0d); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertNull(doubleArray7); }
public void test182() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test182"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getIterations(); int int6 = levenbergMarquardtOptimizer0.rows; org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); }
public void test183() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test183"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.setCostRelativeTolerance((double) 10); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker84 = levenbergMarquardtOptimizer0.getConvergenceChecker(); double[] doubleArray85 = levenbergMarquardtOptimizer0.objective; levenbergMarquardtOptimizer0.setMaxIterations(0); java.lang.Class<?> wildcardClass88 = levenbergMarquardtOptimizer0.getClass(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertNull(vectorialConvergenceChecker84); org.junit.Assert.assertNull(doubleArray85); org.junit.Assert.assertNotNull(wildcardClass88); }
public void test184() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test184"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker21 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertNull(vectorialConvergenceChecker21); }
public void test185() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test185"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; double double8 = levenbergMarquardtOptimizer0.getRMS(); int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int10 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer12 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer12.setOrthoTolerance((double) (byte) 0); double[] doubleArray17 = new double[] { (-1), 1.0f }; double[][] doubleArray18 = new double[][] { doubleArray17 }; levenbergMarquardtOptimizer12.jacobian = doubleArray18; java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray18); levenbergMarquardtOptimizer0.jacobian = doubleArray18; org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue(Double.isNaN(double8)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertNotNull(concurrentModificationException20); }
public void test186() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test186"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.incrementIterationsCounter(); double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer3 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException5 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable8 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8); org.apache.commons.math.exception.util.Localizable localizable10 = null; java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13); org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException5, 0.0d, "hi!", objArray13); double[] doubleArray16 = functionEvaluationException15.getArgument(); double[] doubleArray18 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray18); levenbergMarquardtOptimizer3.point = doubleArray18; double[] doubleArray21 = levenbergMarquardtOptimizer3.residualsWeights; int int22 = levenbergMarquardtOptimizer3.getEvaluations(); int int23 = levenbergMarquardtOptimizer3.cols; int int24 = levenbergMarquardtOptimizer3.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer25.rows = 0; levenbergMarquardtOptimizer25.setMaxEvaluations((int) (byte) 1); double[] doubleArray30 = levenbergMarquardtOptimizer25.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException32 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable35 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable35); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable35, localizable37, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException42 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException32, 0.0d, "hi!", objArray40); double[] doubleArray43 = functionEvaluationException42.getArgument(); double[] doubleArray44 = functionEvaluationException42.getArgument(); levenbergMarquardtOptimizer25.objective = doubleArray44; levenbergMarquardtOptimizer25.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker48 = levenbergMarquardtOptimizer25.checker; levenbergMarquardtOptimizer25.incrementIterationsCounter(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException51 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = null; java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59); org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException51, 0.0d, "hi!", objArray59); double[] doubleArray62 = functionEvaluationException61.getArgument(); double[] doubleArray64 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray64); levenbergMarquardtOptimizer25.residuals = doubleArray62; levenbergMarquardtOptimizer3.objective = doubleArray62; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer68 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer68.setMaxEvaluations((int) (byte) 0); int int71 = levenbergMarquardtOptimizer68.getMaxIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer72 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer72.rows = 0; levenbergMarquardtOptimizer72.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer72.setInitialStepBoundFactor((-1.0d)); int int79 = levenbergMarquardtOptimizer72.getIterations(); int int80 = levenbergMarquardtOptimizer72.getIterations(); double[] doubleArray81 = levenbergMarquardtOptimizer72.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer82 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer82.rows = 0; levenbergMarquardtOptimizer82.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer82.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer82.cost = (short) 100; int int91 = levenbergMarquardtOptimizer82.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker92 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer82.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker92); levenbergMarquardtOptimizer72.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker92); levenbergMarquardtOptimizer68.checker = simpleVectorialValueChecker92; levenbergMarquardtOptimizer3.checker = simpleVectorialValueChecker92; levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker92; org.junit.Assert.assertNull(doubleArray2); org.junit.Assert.assertNotNull(objArray13); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]"); org.junit.Assert.assertNull(doubleArray21); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNull(doubleArray30); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker48); org.junit.Assert.assertNotNull(objArray59); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[97.0]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1000 + "'", int71 == 1000); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNull(doubleArray81); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1000 + "'", int91 == 1000); }
public void test187() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test187"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.point; double[] doubleArray19 = levenbergMarquardtOptimizer0.residuals; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]"); org.junit.Assert.assertNull(doubleArray19); }
public void test188() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test188"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.checker; org.junit.Assert.assertNull(vectorialConvergenceChecker3); }
public void test189() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test189"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); }
public void test190() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test190"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException26 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable29 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException(throwable29); org.apache.commons.math.exception.util.Localizable localizable31 = null; java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable29, localizable31, objArray34); org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException26, 0.0d, "hi!", objArray34); double[] doubleArray37 = functionEvaluationException36.getArgument(); double[] doubleArray39 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray39); levenbergMarquardtOptimizer0.residuals = doubleArray37; int int42 = levenbergMarquardtOptimizer0.rows; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); org.junit.Assert.assertNotNull(objArray34); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); }
public void test191() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test191"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker10 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int11 = levenbergMarquardtOptimizer0.rows; double[][] doubleArray12 = levenbergMarquardtOptimizer0.jacobian; org.junit.Assert.assertNull(vectorialConvergenceChecker10); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNull(doubleArray12); }
public void test192() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test192"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; double[] doubleArray25 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L }; levenbergMarquardtOptimizer0.targetValues = doubleArray25; int int27 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer28.rows = 0; levenbergMarquardtOptimizer28.setMaxEvaluations((int) (byte) 1); double[] doubleArray33 = levenbergMarquardtOptimizer28.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException35 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable38 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable38); org.apache.commons.math.exception.util.Localizable localizable40 = null; java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable38, localizable40, objArray43); org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException35, 0.0d, "hi!", objArray43); double[] doubleArray46 = functionEvaluationException45.getArgument(); double[] doubleArray47 = functionEvaluationException45.getArgument(); levenbergMarquardtOptimizer28.objective = doubleArray47; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable53 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58); org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58); double[] doubleArray61 = functionEvaluationException60.getArgument(); double[] doubleArray63 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray61, false); levenbergMarquardtOptimizer0.residualsWeights = doubleArray47; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker68 = levenbergMarquardtOptimizer0.getConvergenceChecker(); double[] doubleArray69 = null; levenbergMarquardtOptimizer0.residuals = doubleArray69; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 0.0, 10.0, 32.0, 1.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); org.junit.Assert.assertNull(doubleArray33); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]"); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker68); }
public void test193() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test193"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; double[] doubleArray25 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L }; levenbergMarquardtOptimizer0.targetValues = doubleArray25; int int27 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer28.rows = 0; levenbergMarquardtOptimizer28.setMaxEvaluations((int) (byte) 1); double[] doubleArray33 = levenbergMarquardtOptimizer28.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException35 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable38 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable38); org.apache.commons.math.exception.util.Localizable localizable40 = null; java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable38, localizable40, objArray43); org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException35, 0.0d, "hi!", objArray43); double[] doubleArray46 = functionEvaluationException45.getArgument(); double[] doubleArray47 = functionEvaluationException45.getArgument(); levenbergMarquardtOptimizer28.objective = doubleArray47; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable53 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58); org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58); double[] doubleArray61 = functionEvaluationException60.getArgument(); double[] doubleArray63 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray61, false); levenbergMarquardtOptimizer0.residualsWeights = doubleArray47; double[] doubleArray68 = levenbergMarquardtOptimizer0.targetValues; int int69 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 0.0, 10.0, 32.0, 1.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); org.junit.Assert.assertNull(doubleArray33); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]"); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 0.0, 10.0, 32.0, 1.0]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2147483647 + "'", int69 == 2147483647); }
public void test194() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test194"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1); int int11 = levenbergMarquardtOptimizer0.getMaxIterations(); double[] doubleArray12 = levenbergMarquardtOptimizer0.point; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker13 = null; levenbergMarquardtOptimizer0.checker = vectorialConvergenceChecker13; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer15.rows = 0; levenbergMarquardtOptimizer15.setMaxEvaluations((int) (byte) 1); double[] doubleArray20 = levenbergMarquardtOptimizer15.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray34 = functionEvaluationException32.getArgument(); levenbergMarquardtOptimizer15.objective = doubleArray34; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer36 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer36.rows = 0; levenbergMarquardtOptimizer36.setMaxEvaluations((int) (byte) 1); double[] doubleArray41 = levenbergMarquardtOptimizer36.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable46 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46); org.apache.commons.math.exception.util.Localizable localizable48 = null; java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51); org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51); double[] doubleArray54 = functionEvaluationException53.getArgument(); double[] doubleArray55 = functionEvaluationException53.getArgument(); levenbergMarquardtOptimizer36.objective = doubleArray55; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException58 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable61 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException(throwable61); org.apache.commons.math.exception.util.Localizable localizable63 = null; java.lang.Object[] objArray66 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable61, localizable63, objArray66); org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException58, 0.0d, "hi!", objArray66); double[] doubleArray69 = functionEvaluationException68.getArgument(); double[] doubleArray71 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray71); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair74 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray55, doubleArray69, false); double[] doubleArray75 = vectorialPointValuePair74.getPoint(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray34, doubleArray75); levenbergMarquardtOptimizer0.targetValues = doubleArray75; org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1000 + "'", int11 == 1000); org.junit.Assert.assertNull(doubleArray12); org.junit.Assert.assertNull(doubleArray20); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0]"); org.junit.Assert.assertNull(doubleArray41); org.junit.Assert.assertNotNull(objArray51); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0]"); org.junit.Assert.assertNotNull(objArray66); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0]"); }
public void test195() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test195"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; int int77 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); double[] doubleArray78 = levenbergMarquardtOptimizer0.point; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); }
public void test196() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test196"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); double[] doubleArray80 = levenbergMarquardtOptimizer0.residuals; int int81 = levenbergMarquardtOptimizer0.getEvaluations(); levenbergMarquardtOptimizer0.setCostRelativeTolerance((-1.0d)); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(doubleArray80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); }
public void test197() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test197"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); double double1 = levenbergMarquardtOptimizer0.cost; double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals; double double3 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d); org.junit.Assert.assertNull(doubleArray2); org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d); }
public void test198() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test198"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getMaxIterations(); int int6 = levenbergMarquardtOptimizer0.getEvaluations(); int int7 = levenbergMarquardtOptimizer0.getIterations(); org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); }
public void test199() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test199"); org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Object[] objArray8 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException9 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable2, objArray8); org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException("hi!", objArray8); org.apache.commons.math.exception.util.Localizable localizable13 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException20 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable13, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException10, "hi!", objArray19); java.lang.Throwable throwable23 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable23); org.apache.commons.math.exception.util.Localizable localizable25 = mathRuntimeException24.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException31 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray30); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException32 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable27, objArray30); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable25, objArray30); org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException21, "org.apache.commons.math.ConvergenceException: convergence failed", objArray30); org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException21.getLocalizablePattern(); java.lang.String str36 = localizable35.getSourceString(); java.lang.Throwable throwable37 = null; java.lang.Object[] objArray43 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException44 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray43); org.apache.commons.math.MathException mathException45 = new org.apache.commons.math.MathException("{0}", objArray43); java.util.NoSuchElementException noSuchElementException46 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray43); org.apache.commons.math.ConvergenceException convergenceException47 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable48 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable48); org.apache.commons.math.exception.util.Localizable localizable50 = mathRuntimeException49.getLocalizablePattern(); java.lang.Throwable throwable51 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable51); org.apache.commons.math.exception.util.Localizable localizable53 = mathRuntimeException52.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray58); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException60 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable55, objArray58); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException61 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable53, objArray58); org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException47, localizable50, objArray58); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer63 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer63.setOrthoTolerance((double) (byte) 0); double[] doubleArray68 = new double[] { (-1), 1.0f }; double[][] doubleArray69 = new double[][] { doubleArray68 }; levenbergMarquardtOptimizer63.jacobian = doubleArray69; org.apache.commons.math.MathException mathException71 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException46, localizable50, (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException72 = new org.apache.commons.math.ConvergenceException(throwable37, "org.apache.commons.math.MathException: ", (java.lang.Object[]) doubleArray69); org.apache.commons.math.ConvergenceException convergenceException73 = new org.apache.commons.math.ConvergenceException(localizable35, (java.lang.Object[]) doubleArray69); java.lang.Throwable throwable74 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException75 = new org.apache.commons.math.MathRuntimeException(throwable74); org.apache.commons.math.exception.util.Localizable localizable76 = mathRuntimeException75.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable78 = null; java.lang.Object[] objArray81 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException82 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray81); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException83 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable78, objArray81); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException84 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable76, objArray81); org.apache.commons.math.linear.InvalidMatrixException invalidMatrixException85 = new org.apache.commons.math.linear.InvalidMatrixException(localizable35, objArray81); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertTrue("'" + localizable25 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable25.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException31); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33); org.junit.Assert.assertNotNull(localizable35); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!"); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException44); org.junit.Assert.assertNotNull(noSuchElementException46); org.junit.Assert.assertTrue("'" + localizable50 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable50.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable53 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable53.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException59); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException61); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertTrue("'" + localizable76 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable76.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray81); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException82); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException84); }
public void test200() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test200"); java.lang.Throwable throwable4 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4); org.apache.commons.math.exception.util.Localizable localizable6 = mathRuntimeException5.getLocalizablePattern(); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); java.lang.Object[] objArray17 = mathRuntimeException16.getArguments(); java.text.ParseException parseException18 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray17); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException19 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray17); org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(localizable6, objArray17); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer22.setOrthoTolerance((double) (byte) 0); double[] doubleArray27 = new double[] { (-1), 1.0f }; double[][] doubleArray28 = new double[][] { doubleArray27 }; levenbergMarquardtOptimizer22.jacobian = doubleArray28; java.util.ConcurrentModificationException concurrentModificationException30 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray28); java.lang.IllegalStateException illegalStateException31 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable6, (java.lang.Object[]) doubleArray28); java.lang.ArithmeticException arithmeticException32 = org.apache.commons.math.MathRuntimeException.createArithmeticException("org.apache.commons.math.ConvergenceException: convergence failed", (java.lang.Object[]) doubleArray28); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException33 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("hi!", (java.lang.Object[]) doubleArray28); java.text.ParseException parseException34 = org.apache.commons.math.MathRuntimeException.createParseException((int) '#', "org.apache.commons.math.MaxIterationsExceededException: maximal number of iterations (-1) exceeded", (java.lang.Object[]) doubleArray28); org.junit.Assert.assertTrue("'" + localizable6 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable6.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray17); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException18); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException19); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(concurrentModificationException30); org.junit.Assert.assertNotNull(illegalStateException31); org.junit.Assert.assertNotNull(arithmeticException32); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException33); org.junit.Assert.assertNotNull(parseException34); }
public void test201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test201"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker(); double[] doubleArray82 = levenbergMarquardtOptimizer0.targetValues; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker81); org.junit.Assert.assertNull(doubleArray82); }
public void test202() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test202"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); levenbergMarquardtOptimizer0.setQRRankingThreshold((double) (byte) 100); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray24 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable18, objArray24); org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException("hi!", objArray24); org.apache.commons.math.exception.util.Localizable localizable29 = null; java.lang.Object[] objArray35 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable29, objArray35); org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException26, "hi!", objArray35); double[] doubleArray43 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Object[] objArray48 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException49 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray48); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException50 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable45, objArray48); java.lang.Throwable throwable52 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(throwable52); org.apache.commons.math.exception.util.Localizable localizable54 = mathRuntimeException53.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable56 = null; java.lang.Object[] objArray59 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException60 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray59); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException61 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable56, objArray59); org.apache.commons.math.exception.util.Localizable localizable62 = null; java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = mathRuntimeException65.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable68 = null; java.lang.Object[] objArray71 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException72 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray71); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException73 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable68, objArray71); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException74 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable66, objArray71); java.lang.NullPointerException nullPointerException75 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray71); org.apache.commons.math.MathException mathException76 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException61, localizable62, objArray71); java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable54, objArray71); java.lang.Throwable throwable79 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException80 = new org.apache.commons.math.MathRuntimeException(throwable79); org.apache.commons.math.exception.util.Localizable localizable81 = null; java.lang.Object[] objArray84 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException85 = new org.apache.commons.math.MathRuntimeException(throwable79, localizable81, objArray84); java.lang.Object[] objArray86 = mathRuntimeException85.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException87 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray86); org.apache.commons.math.FunctionEvaluationException functionEvaluationException88 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException50, (double) 0L, localizable54, objArray86); java.lang.Object[] objArray89 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException26, doubleArray43, localizable54, objArray89); levenbergMarquardtOptimizer0.targetValues = doubleArray43; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNotNull(objArray24); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray35); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray48); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException49); org.junit.Assert.assertTrue("'" + localizable54 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable54.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray59); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException60); org.junit.Assert.assertTrue("'" + localizable66 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable66.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException72); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException74); org.junit.Assert.assertNotNull(nullPointerException75); org.junit.Assert.assertNotNull(nullPointerException77); org.junit.Assert.assertNotNull(objArray84); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray86); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException87); }
public void test203() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test203"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); double double39 = levenbergMarquardtOptimizer0.cost; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer40 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer40.rows = 0; levenbergMarquardtOptimizer40.setMaxEvaluations((int) (byte) 1); double[] doubleArray45 = levenbergMarquardtOptimizer40.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException47 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable50 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable50); org.apache.commons.math.exception.util.Localizable localizable52 = null; java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable50, localizable52, objArray55); org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException47, 0.0d, "hi!", objArray55); double[] doubleArray58 = functionEvaluationException57.getArgument(); double[] doubleArray59 = functionEvaluationException57.getArgument(); levenbergMarquardtOptimizer40.objective = doubleArray59; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable65 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException66 = new org.apache.commons.math.MathRuntimeException(throwable65); org.apache.commons.math.exception.util.Localizable localizable67 = null; java.lang.Object[] objArray70 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable65, localizable67, objArray70); org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException62, 0.0d, "hi!", objArray70); double[] doubleArray73 = functionEvaluationException72.getArgument(); double[] doubleArray75 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray75); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray73, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException80 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable83 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException84 = new org.apache.commons.math.MathRuntimeException(throwable83); org.apache.commons.math.exception.util.Localizable localizable85 = null; java.lang.Object[] objArray88 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException89 = new org.apache.commons.math.MathRuntimeException(throwable83, localizable85, objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException80, 0.0d, "hi!", objArray88); double[] doubleArray91 = functionEvaluationException90.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException(doubleArray91); double[] doubleArray93 = functionEvaluationException92.getArgument(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray93, true); double[] doubleArray96 = vectorialPointValuePair95.getPointRef(); levenbergMarquardtOptimizer0.targetValues = doubleArray96; levenbergMarquardtOptimizer0.cols = (byte) 10; org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d); org.junit.Assert.assertNull(doubleArray45); org.junit.Assert.assertNotNull(objArray55); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]"); org.junit.Assert.assertNotNull(objArray70); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray96); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.0]"); }
public void test204() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test204"); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker2 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (byte) -1, (double) (short) -1); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException5 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable8 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8); org.apache.commons.math.exception.util.Localizable localizable10 = null; java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13); org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException5, 0.0d, "hi!", objArray13); double[] doubleArray16 = functionEvaluationException15.getArgument(); double[] doubleArray18 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair19 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray16, doubleArray18); double[] doubleArray20 = vectorialPointValuePair19.getPointRef(); double[] doubleArray21 = vectorialPointValuePair19.getValueRef(); double[] doubleArray22 = vectorialPointValuePair19.getValue(); double[] doubleArray23 = vectorialPointValuePair19.getValueRef(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer24.rows = 0; levenbergMarquardtOptimizer24.setMaxEvaluations((int) (byte) 1); double[] doubleArray29 = levenbergMarquardtOptimizer24.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException31 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable34 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable34); org.apache.commons.math.exception.util.Localizable localizable36 = null; java.lang.Object[] objArray39 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable34, localizable36, objArray39); org.apache.commons.math.FunctionEvaluationException functionEvaluationException41 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException31, 0.0d, "hi!", objArray39); double[] doubleArray42 = functionEvaluationException41.getArgument(); double[] doubleArray43 = functionEvaluationException41.getArgument(); levenbergMarquardtOptimizer24.objective = doubleArray43; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException46 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = null; java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable49, localizable51, objArray54); org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException46, 0.0d, "hi!", objArray54); double[] doubleArray57 = functionEvaluationException56.getArgument(); double[] doubleArray59 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair60 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray57, doubleArray59); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair62 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray43, doubleArray57, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException64 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable67 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException68 = new org.apache.commons.math.MathRuntimeException(throwable67); org.apache.commons.math.exception.util.Localizable localizable69 = null; java.lang.Object[] objArray72 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException73 = new org.apache.commons.math.MathRuntimeException(throwable67, localizable69, objArray72); org.apache.commons.math.FunctionEvaluationException functionEvaluationException74 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException64, 0.0d, "hi!", objArray72); double[] doubleArray75 = functionEvaluationException74.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException76 = new org.apache.commons.math.FunctionEvaluationException(doubleArray75); double[] doubleArray77 = functionEvaluationException76.getArgument(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray57, doubleArray77, true); boolean boolean80 = simpleVectorialValueChecker2.converged(1, vectorialPointValuePair19, vectorialPointValuePair79); double[] doubleArray81 = vectorialPointValuePair79.getPoint(); org.junit.Assert.assertNotNull(objArray13); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0]"); org.junit.Assert.assertNull(doubleArray29); org.junit.Assert.assertNotNull(objArray39); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0]"); org.junit.Assert.assertNotNull(objArray54); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0]"); org.junit.Assert.assertNotNull(objArray72); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0]"); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0]"); }
public void test205() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test205"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; levenbergMarquardtOptimizer0.incrementIterationsCounter(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker25 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int26 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); org.junit.Assert.assertNull(vectorialConvergenceChecker25); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); }
public void test206() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test206"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false); double[] doubleArray39 = vectorialPointValuePair38.getPointRef(); double[] doubleArray40 = vectorialPointValuePair38.getPointRef(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); }
public void test207() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test207"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.cols = 1; levenbergMarquardtOptimizer0.setOrthoTolerance(10000.0d); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); }
public void test208() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test208"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); org.apache.commons.math.exception.util.Localizable localizable9 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15); org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15); org.apache.commons.math.exception.util.Localizable localizable20 = null; java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26); org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = null; java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38); org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38); double[] doubleArray41 = functionEvaluationException40.getArgument(); double[] doubleArray43 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Object[] objArray50 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable58 = null; java.lang.Object[] objArray61 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61); org.apache.commons.math.exception.util.Localizable localizable64 = null; java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable70 = null; java.lang.Object[] objArray73 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73); java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73); org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73); java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73); java.lang.Throwable throwable81 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81); org.apache.commons.math.exception.util.Localizable localizable83 = null; java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86); java.lang.Object[] objArray88 = mathRuntimeException87.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88); levenbergMarquardtOptimizer0.residualsWeights = doubleArray41; int int93 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray26); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray38); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]"); org.junit.Assert.assertNotNull(objArray50); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException51); org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray61); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException62); org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray73); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException74); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76); org.junit.Assert.assertNotNull(nullPointerException77); org.junit.Assert.assertNotNull(nullPointerException79); org.junit.Assert.assertNotNull(objArray86); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89); org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0); }
public void test209() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test209"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; int int20 = levenbergMarquardtOptimizer0.getMaxIterations(); int int21 = levenbergMarquardtOptimizer0.getIterations(); int int22 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000); }
public void test210() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test210"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer23 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); double double24 = levenbergMarquardtOptimizer23.cost; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer25 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer25.setMaxEvaluations((int) (byte) 0); int int28 = levenbergMarquardtOptimizer25.getMaxIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer29 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer29.rows = 0; levenbergMarquardtOptimizer29.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer29.setInitialStepBoundFactor((-1.0d)); int int36 = levenbergMarquardtOptimizer29.getIterations(); int int37 = levenbergMarquardtOptimizer29.getIterations(); double[] doubleArray38 = levenbergMarquardtOptimizer29.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer39.rows = 0; levenbergMarquardtOptimizer39.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer39.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer39.cost = (short) 100; int int48 = levenbergMarquardtOptimizer39.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker49 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer39.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker49); levenbergMarquardtOptimizer29.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker49); levenbergMarquardtOptimizer25.checker = simpleVectorialValueChecker49; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker53 = levenbergMarquardtOptimizer25.getConvergenceChecker(); levenbergMarquardtOptimizer23.setConvergenceChecker(vectorialConvergenceChecker53); levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker53); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1000 + "'", int28 == 1000); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNull(doubleArray38); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1000 + "'", int48 == 1000); org.junit.Assert.assertNotNull(vectorialConvergenceChecker53); }
public void test211() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test211"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setMaxEvaluations(0); levenbergMarquardtOptimizer0.setCostRelativeTolerance(100.0d); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException9 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable12 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray17 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(throwable12, localizable14, objArray17); org.apache.commons.math.FunctionEvaluationException functionEvaluationException19 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException9, 0.0d, "hi!", objArray17); double[] doubleArray20 = functionEvaluationException19.getArgument(); double[] doubleArray22 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair23 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray20, doubleArray22); levenbergMarquardtOptimizer0.objective = doubleArray22; org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertNotNull(objArray17); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0]"); }
public void test212() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test212"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; double double8 = levenbergMarquardtOptimizer0.getRMS(); int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.cost = 100.0d; org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue(Double.isNaN(double8)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); }
public void test213() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test213"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); org.apache.commons.math.exception.util.Localizable localizable9 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable9, objArray15); org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException("hi!", objArray15); org.apache.commons.math.exception.util.Localizable localizable20 = null; java.lang.Object[] objArray26 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException27 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable20, objArray26); org.apache.commons.math.MathRuntimeException mathRuntimeException28 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException17, "hi!", objArray26); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException30 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = null; java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38); org.apache.commons.math.FunctionEvaluationException functionEvaluationException40 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException30, 0.0d, "hi!", objArray38); double[] doubleArray41 = functionEvaluationException40.getArgument(); double[] doubleArray43 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair44 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray41, doubleArray43); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Object[] objArray50 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException51 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray50); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException52 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable47, objArray50); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = mathRuntimeException55.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable58 = null; java.lang.Object[] objArray61 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException62 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray61); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException63 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable58, objArray61); org.apache.commons.math.exception.util.Localizable localizable64 = null; java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable70 = null; java.lang.Object[] objArray73 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73); java.lang.NullPointerException nullPointerException77 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray73); org.apache.commons.math.MathException mathException78 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException63, localizable64, objArray73); java.lang.NullPointerException nullPointerException79 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable56, objArray73); java.lang.Throwable throwable81 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable81); org.apache.commons.math.exception.util.Localizable localizable83 = null; java.lang.Object[] objArray86 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException87 = new org.apache.commons.math.MathRuntimeException(throwable81, localizable83, objArray86); java.lang.Object[] objArray88 = mathRuntimeException87.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException89 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException52, (double) 0L, localizable56, objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException17, doubleArray41, "{0}", objArray88); levenbergMarquardtOptimizer0.residualsWeights = doubleArray41; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker93 = levenbergMarquardtOptimizer0.getConvergenceChecker(); levenbergMarquardtOptimizer0.cost = (byte) 0; org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray26); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray38); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]"); org.junit.Assert.assertNotNull(objArray50); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException51); org.junit.Assert.assertTrue("'" + localizable56 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable56.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray61); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException62); org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray73); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException74); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76); org.junit.Assert.assertNotNull(nullPointerException77); org.junit.Assert.assertNotNull(nullPointerException79); org.junit.Assert.assertNotNull(objArray86); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException89); org.junit.Assert.assertNull(vectorialConvergenceChecker93); }
public void test214() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test214"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer2.setOrthoTolerance((double) (byte) 0); double[] doubleArray7 = new double[] { (-1), 1.0f }; double[][] doubleArray8 = new double[][] { doubleArray7 }; levenbergMarquardtOptimizer2.jacobian = doubleArray8; java.util.ConcurrentModificationException concurrentModificationException10 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray8); java.lang.ArithmeticException arithmeticException11 = org.apache.commons.math.MathRuntimeException.createArithmeticException("org.apache.commons.math.FunctionEvaluationException: 1", (java.lang.Object[]) doubleArray8); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(concurrentModificationException10); org.junit.Assert.assertNotNull(arithmeticException11); }
public void test215() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test215"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); double double12 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10000.0d + "'", double12 == 10000.0d); }
public void test216() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test216"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray10 = levenbergMarquardtOptimizer0.residualsWeights; org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertNull(doubleArray10); }
public void test217() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test217"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker(); // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateResidualsAndCost(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker81); }
public void test218() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test218"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); int int80 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker81 = levenbergMarquardtOptimizer0.getConvergenceChecker(); levenbergMarquardtOptimizer0.setCostRelativeTolerance(0.0d); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1000 + "'", int80 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker81); }
public void test219() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test219"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer4.rows = 0; levenbergMarquardtOptimizer4.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer4.setInitialStepBoundFactor((-1.0d)); int int11 = levenbergMarquardtOptimizer4.getIterations(); int int12 = levenbergMarquardtOptimizer4.getIterations(); double[] doubleArray13 = levenbergMarquardtOptimizer4.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer14 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer14.rows = 0; levenbergMarquardtOptimizer14.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer14.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer14.cost = (short) 100; int int23 = levenbergMarquardtOptimizer14.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer14.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24); levenbergMarquardtOptimizer4.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker24; int int28 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker29 = levenbergMarquardtOptimizer0.getConvergenceChecker(); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 10); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0); org.junit.Assert.assertNull(doubleArray13); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0); org.junit.Assert.assertNotNull(vectorialConvergenceChecker29); }
public void test220() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test220"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.cols = 100; levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f)); levenbergMarquardtOptimizer0.incrementIterationsCounter(); int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations(); int int12 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException14 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable17 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(throwable17); org.apache.commons.math.exception.util.Localizable localizable19 = null; java.lang.Object[] objArray22 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException(throwable17, localizable19, objArray22); org.apache.commons.math.FunctionEvaluationException functionEvaluationException24 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException14, 0.0d, "hi!", objArray22); double[] doubleArray25 = functionEvaluationException24.getArgument(); double[] doubleArray27 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair28 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray25, doubleArray27); levenbergMarquardtOptimizer0.residuals = doubleArray27; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertNotNull(objArray22); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0]"); }
public void test221() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test221"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer8 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer8.rows = 0; levenbergMarquardtOptimizer8.setMaxEvaluations((int) (byte) 1); double[] doubleArray13 = levenbergMarquardtOptimizer8.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException15 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable18 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException19 = new org.apache.commons.math.MathRuntimeException(throwable18); org.apache.commons.math.exception.util.Localizable localizable20 = null; java.lang.Object[] objArray23 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException24 = new org.apache.commons.math.MathRuntimeException(throwable18, localizable20, objArray23); org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException15, 0.0d, "hi!", objArray23); double[] doubleArray26 = functionEvaluationException25.getArgument(); double[] doubleArray27 = functionEvaluationException25.getArgument(); levenbergMarquardtOptimizer8.objective = doubleArray27; levenbergMarquardtOptimizer8.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker31 = levenbergMarquardtOptimizer8.checker; levenbergMarquardtOptimizer8.incrementIterationsCounter(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException34 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = null; java.lang.Object[] objArray42 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException43 = new org.apache.commons.math.MathRuntimeException(throwable37, localizable39, objArray42); org.apache.commons.math.FunctionEvaluationException functionEvaluationException44 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException34, 0.0d, "hi!", objArray42); double[] doubleArray45 = functionEvaluationException44.getArgument(); double[] doubleArray47 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair48 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray47); levenbergMarquardtOptimizer8.residuals = doubleArray45; double[] doubleArray50 = levenbergMarquardtOptimizer8.point; double[] doubleArray52 = new double[] { (-1L) }; levenbergMarquardtOptimizer8.residuals = doubleArray52; levenbergMarquardtOptimizer0.residuals = doubleArray52; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertNull(doubleArray7); org.junit.Assert.assertNull(doubleArray13); org.junit.Assert.assertNotNull(objArray23); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker31); org.junit.Assert.assertNotNull(objArray42); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[97.0]"); org.junit.Assert.assertNull(doubleArray50); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0]"); }
public void test222() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test222"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; levenbergMarquardtOptimizer0.incrementIterationsCounter(); levenbergMarquardtOptimizer0.setCostRelativeTolerance(0.0d); double[] doubleArray27 = levenbergMarquardtOptimizer0.point; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); org.junit.Assert.assertNull(doubleArray27); }
public void test223() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test223"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double[] doubleArray7 = null; levenbergMarquardtOptimizer0.residualsWeights = doubleArray7; double double9 = levenbergMarquardtOptimizer0.getRMS(); int int10 = levenbergMarquardtOptimizer0.getIterations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1); org.junit.Assert.assertTrue(Double.isNaN(double9)); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0); }
public void test224() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test224"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); double double10 = levenbergMarquardtOptimizer0.getChiSquare(); int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10000.0d + "'", double10 == 10000.0d); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); }
public void test225() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test225"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; int int21 = levenbergMarquardtOptimizer0.rows; int int22 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer23 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer23.rows = 0; levenbergMarquardtOptimizer23.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer23.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer23.cost = (short) 100; int int32 = levenbergMarquardtOptimizer23.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker33 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer23.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker33); levenbergMarquardtOptimizer23.setMaxEvaluations(100); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker39 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException42 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable45 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(throwable45); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Object[] objArray50 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable45, localizable47, objArray50); org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException42, 0.0d, "hi!", objArray50); double[] doubleArray53 = functionEvaluationException52.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException55 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable58 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable58); org.apache.commons.math.exception.util.Localizable localizable60 = null; java.lang.Object[] objArray63 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException64 = new org.apache.commons.math.MathRuntimeException(throwable58, localizable60, objArray63); org.apache.commons.math.FunctionEvaluationException functionEvaluationException65 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException55, 0.0d, "hi!", objArray63); double[] doubleArray66 = functionEvaluationException65.getArgument(); double[] doubleArray68 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray66, doubleArray68); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair71 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray53, doubleArray68, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException73 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable76 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable76); org.apache.commons.math.exception.util.Localizable localizable78 = null; java.lang.Object[] objArray81 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException82 = new org.apache.commons.math.MathRuntimeException(throwable76, localizable78, objArray81); org.apache.commons.math.FunctionEvaluationException functionEvaluationException83 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException73, 0.0d, "hi!", objArray81); double[] doubleArray84 = functionEvaluationException83.getArgument(); double[] doubleArray86 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray84, doubleArray86); boolean boolean88 = simpleVectorialValueChecker39.converged(0, vectorialPointValuePair71, vectorialPointValuePair87); double[] doubleArray89 = vectorialPointValuePair87.getValue(); levenbergMarquardtOptimizer23.point = doubleArray89; levenbergMarquardtOptimizer0.objective = doubleArray89; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1000 + "'", int32 == 1000); org.junit.Assert.assertNotNull(objArray50); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0]"); org.junit.Assert.assertNotNull(objArray63); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[97.0]"); org.junit.Assert.assertNotNull(objArray81); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[97.0]"); }
public void test226() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test226"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double[] doubleArray7 = null; levenbergMarquardtOptimizer0.residualsWeights = doubleArray7; int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); java.lang.Object[] objArray12 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException13 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathRuntimeException$2: true", objArray12); org.apache.commons.math.FunctionEvaluationException functionEvaluationException15 = new org.apache.commons.math.FunctionEvaluationException((double) (short) -1); double[] doubleArray16 = functionEvaluationException15.getArgument(); java.lang.Throwable throwable20 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException21 = new org.apache.commons.math.MathRuntimeException(throwable20); org.apache.commons.math.exception.util.Localizable localizable22 = mathRuntimeException21.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable24 = null; java.lang.Object[] objArray27 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray27); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException29 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable24, objArray27); org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Throwable throwable32 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException33 = new org.apache.commons.math.MathRuntimeException(throwable32); org.apache.commons.math.exception.util.Localizable localizable34 = mathRuntimeException33.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable36 = null; java.lang.Object[] objArray39 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException40 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray39); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException41 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable36, objArray39); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException42 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable34, objArray39); java.lang.NullPointerException nullPointerException43 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray39); org.apache.commons.math.MathException mathException44 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException29, localizable30, objArray39); java.lang.NullPointerException nullPointerException45 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable22, objArray39); org.apache.commons.math.exception.util.Localizable localizable48 = null; java.lang.Object[] objArray51 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException52 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray51); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException53 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable48, objArray51); org.apache.commons.math.ConvergenceException convergenceException54 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) nullPointerException45, "org.apache.commons.math.MathException: ", objArray51); org.apache.commons.math.ConvergenceException convergenceException55 = new org.apache.commons.math.ConvergenceException("", objArray51); java.lang.IllegalStateException illegalStateException56 = org.apache.commons.math.MathRuntimeException.createIllegalStateException("org.apache.commons.math.MaxIterationsExceededException: maximal number of iterations (-1) exceeded", objArray51); java.lang.Throwable[] throwableArray57 = illegalStateException56.getSuppressed(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException58 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException13, doubleArray16, "org.apache.commons.math.MathException: ", (java.lang.Object[]) throwableArray57); levenbergMarquardtOptimizer0.point = doubleArray16; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0]"); org.junit.Assert.assertTrue("'" + localizable22 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable22.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray27); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException28); org.junit.Assert.assertTrue("'" + localizable34 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable34.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray39); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException40); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException42); org.junit.Assert.assertNotNull(nullPointerException43); org.junit.Assert.assertNotNull(nullPointerException45); org.junit.Assert.assertNotNull(objArray51); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException52); org.junit.Assert.assertNotNull(illegalStateException56); org.junit.Assert.assertNotNull(throwableArray57); }
public void test227() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test227"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException81 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable84 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException85 = new org.apache.commons.math.MathRuntimeException(throwable84); org.apache.commons.math.exception.util.Localizable localizable86 = null; java.lang.Object[] objArray89 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException90 = new org.apache.commons.math.MathRuntimeException(throwable84, localizable86, objArray89); org.apache.commons.math.FunctionEvaluationException functionEvaluationException91 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException81, 0.0d, "hi!", objArray89); double[] doubleArray92 = functionEvaluationException91.getArgument(); double[] doubleArray94 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray92, doubleArray94); levenbergMarquardtOptimizer0.residuals = doubleArray92; // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair97 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertNull(doubleArray79); org.junit.Assert.assertNotNull(objArray89); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray92); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[97.0]"); }
public void test228() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test228"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) 100L); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker12 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker12); }
public void test229() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test229"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); double double1 = levenbergMarquardtOptimizer0.cost; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer2.setMaxEvaluations((int) (byte) 0); int int5 = levenbergMarquardtOptimizer2.getMaxIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer6.rows = 0; levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer6.setInitialStepBoundFactor((-1.0d)); int int13 = levenbergMarquardtOptimizer6.getIterations(); int int14 = levenbergMarquardtOptimizer6.getIterations(); double[] doubleArray15 = levenbergMarquardtOptimizer6.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer16 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer16.rows = 0; levenbergMarquardtOptimizer16.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer16.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer16.cost = (short) 100; int int25 = levenbergMarquardtOptimizer16.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker26 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer16.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26); levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26); levenbergMarquardtOptimizer2.checker = simpleVectorialValueChecker26; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker30 = levenbergMarquardtOptimizer2.getConvergenceChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker30); levenbergMarquardtOptimizer0.cols = (byte) 10; org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d); org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0); org.junit.Assert.assertNull(doubleArray15); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1000 + "'", int25 == 1000); org.junit.Assert.assertNotNull(vectorialConvergenceChecker30); }
public void test230() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test230"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); int int82 = levenbergMarquardtOptimizer0.getEvaluations(); double double83 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0); org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d); }
public void test231() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test231"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.cols = 100; levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f)); levenbergMarquardtOptimizer0.setMaxIterations(1000); org.junit.Assert.assertNull(doubleArray5); }
public void test232() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test232"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); int int4 = levenbergMarquardtOptimizer0.getIterations(); int int5 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker8 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(0.0d, (double) 1); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker8; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer11 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer11.rows = 0; levenbergMarquardtOptimizer11.setMaxEvaluations((int) (byte) 1); double[] doubleArray16 = levenbergMarquardtOptimizer11.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException18 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable21 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable21); org.apache.commons.math.exception.util.Localizable localizable23 = null; java.lang.Object[] objArray26 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException27 = new org.apache.commons.math.MathRuntimeException(throwable21, localizable23, objArray26); org.apache.commons.math.FunctionEvaluationException functionEvaluationException28 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException18, 0.0d, "hi!", objArray26); double[] doubleArray29 = functionEvaluationException28.getArgument(); double[] doubleArray30 = functionEvaluationException28.getArgument(); levenbergMarquardtOptimizer11.objective = doubleArray30; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException33 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable36 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36); org.apache.commons.math.exception.util.Localizable localizable38 = null; java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException42 = new org.apache.commons.math.MathRuntimeException(throwable36, localizable38, objArray41); org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException33, 0.0d, "hi!", objArray41); double[] doubleArray44 = functionEvaluationException43.getArgument(); double[] doubleArray46 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair47 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray46); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair49 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray30, doubleArray44, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException51 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = null; java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59); org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException51, 0.0d, "hi!", objArray59); double[] doubleArray62 = functionEvaluationException61.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException63 = new org.apache.commons.math.FunctionEvaluationException(doubleArray62); double[] doubleArray64 = functionEvaluationException63.getArgument(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray44, doubleArray64, true); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException68 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable71 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable71); org.apache.commons.math.exception.util.Localizable localizable73 = null; java.lang.Object[] objArray76 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException77 = new org.apache.commons.math.MathRuntimeException(throwable71, localizable73, objArray76); org.apache.commons.math.FunctionEvaluationException functionEvaluationException78 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException68, 0.0d, "hi!", objArray76); double[] doubleArray79 = functionEvaluationException78.getArgument(); double[] doubleArray81 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair82 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray79, doubleArray81); double[] doubleArray83 = vectorialPointValuePair82.getPointRef(); boolean boolean84 = simpleVectorialValueChecker8.converged(0, vectorialPointValuePair66, vectorialPointValuePair82); double[] doubleArray85 = vectorialPointValuePair66.getValue(); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0); org.junit.Assert.assertNull(doubleArray16); org.junit.Assert.assertNotNull(objArray26); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0]"); org.junit.Assert.assertNotNull(objArray41); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[97.0]"); org.junit.Assert.assertNotNull(objArray59); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0]"); org.junit.Assert.assertNotNull(objArray76); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0]"); org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false); org.junit.Assert.assertNotNull(doubleArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0]"); }
public void test233() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test233"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; double double8 = levenbergMarquardtOptimizer0.getRMS(); int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int10 = levenbergMarquardtOptimizer0.getMaxEvaluations(); int int11 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue(Double.isNaN(double8)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1000 + "'", int11 == 1000); }
public void test234() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test234"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); int int39 = levenbergMarquardtOptimizer0.cols; levenbergMarquardtOptimizer0.rows = (short) 0; org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0); }
public void test235() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test235"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; int int20 = levenbergMarquardtOptimizer0.getMaxIterations(); int int21 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException27 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable30 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30); org.apache.commons.math.exception.util.Localizable localizable32 = null; java.lang.Object[] objArray35 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException(throwable30, localizable32, objArray35); org.apache.commons.math.FunctionEvaluationException functionEvaluationException37 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException27, 0.0d, "hi!", objArray35); double[] doubleArray38 = functionEvaluationException37.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException40 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable43 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable43); org.apache.commons.math.exception.util.Localizable localizable45 = null; java.lang.Object[] objArray48 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(throwable43, localizable45, objArray48); org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException40, 0.0d, "hi!", objArray48); double[] doubleArray51 = functionEvaluationException50.getArgument(); double[] doubleArray53 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair54 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray51, doubleArray53); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair56 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray38, doubleArray53, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException58 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable61 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException62 = new org.apache.commons.math.MathRuntimeException(throwable61); org.apache.commons.math.exception.util.Localizable localizable63 = null; java.lang.Object[] objArray66 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable61, localizable63, objArray66); org.apache.commons.math.FunctionEvaluationException functionEvaluationException68 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException58, 0.0d, "hi!", objArray66); double[] doubleArray69 = functionEvaluationException68.getArgument(); double[] doubleArray71 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair72 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray69, doubleArray71); boolean boolean73 = simpleVectorialValueChecker24.converged(0, vectorialPointValuePair56, vectorialPointValuePair72); double[] doubleArray74 = vectorialPointValuePair56.getValueRef(); levenbergMarquardtOptimizer0.targetValues = doubleArray74; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNotNull(objArray35); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0]"); org.junit.Assert.assertNotNull(objArray48); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0]"); org.junit.Assert.assertNotNull(objArray66); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[97.0]"); }
public void test236() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test236"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.targetValues; levenbergMarquardtOptimizer0.setMaxIterations((int) '4'); double double12 = levenbergMarquardtOptimizer0.getRMS(); double[][] doubleArray13 = levenbergMarquardtOptimizer0.jacobian; org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue(Double.isNaN(double12)); org.junit.Assert.assertNull(doubleArray13); }
public void test237() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test237"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; int int21 = levenbergMarquardtOptimizer0.rows; int int22 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.setParRelativeTolerance((double) (short) 100); // The following exception was thrown during execution in test generation try { levenbergMarquardtOptimizer0.updateResidualsAndCost(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); }
public void test238() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test238"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker5 = levenbergMarquardtOptimizer0.checker; org.junit.Assert.assertNull(vectorialConvergenceChecker5); }
public void test239() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test239"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d); int int84 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0); }
public void test240() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test240"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); double[][] doubleArray8 = levenbergMarquardtOptimizer0.jacobian; org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNull(doubleArray8); }
public void test241() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test241"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) 100); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker20 = levenbergMarquardtOptimizer0.checker; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker21 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker20); org.junit.Assert.assertNull(vectorialConvergenceChecker21); }
public void test242() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test242"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.rows = 0; levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer10.cost = (short) 100; int int19 = levenbergMarquardtOptimizer10.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setParRelativeTolerance(Double.POSITIVE_INFINITY); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000); }
public void test243() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test243"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; int int20 = levenbergMarquardtOptimizer0.getMaxIterations(); int int21 = levenbergMarquardtOptimizer0.getIterations(); int int22 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker25 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) '#', 1.0d); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker25); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000); }
public void test244() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test244"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; int int6 = levenbergMarquardtOptimizer0.getMaxEvaluations(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1); }
public void test245() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test245"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; org.apache.commons.math.exception.util.Localizable localizable25 = null; org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException34 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable27, objArray33); org.apache.commons.math.MathException mathException35 = new org.apache.commons.math.MathException(localizable25, objArray33); org.apache.commons.math.MathRuntimeException mathRuntimeException36 = new org.apache.commons.math.MathRuntimeException("hi!", objArray33); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer37 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException39 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable42 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException43 = new org.apache.commons.math.MathRuntimeException(throwable42); org.apache.commons.math.exception.util.Localizable localizable44 = null; java.lang.Object[] objArray47 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException48 = new org.apache.commons.math.MathRuntimeException(throwable42, localizable44, objArray47); org.apache.commons.math.FunctionEvaluationException functionEvaluationException49 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException39, 0.0d, "hi!", objArray47); double[] doubleArray50 = functionEvaluationException49.getArgument(); double[] doubleArray52 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair53 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray50, doubleArray52); levenbergMarquardtOptimizer37.point = doubleArray52; levenbergMarquardtOptimizer37.cost = 0L; double[] doubleArray62 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L }; levenbergMarquardtOptimizer37.targetValues = doubleArray62; org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException36, doubleArray62); java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = mathRuntimeException67.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable70 = null; java.lang.Object[] objArray73 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException74 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray73); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException75 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable70, objArray73); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException76 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable68, objArray73); java.lang.Object[] objArray79 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException80 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray79); org.apache.commons.math.optimization.OptimizationException optimizationException81 = new org.apache.commons.math.optimization.OptimizationException(localizable68, objArray79); org.apache.commons.math.FunctionEvaluationException functionEvaluationException82 = new org.apache.commons.math.FunctionEvaluationException(doubleArray62, "{0}", objArray79); levenbergMarquardtOptimizer0.point = doubleArray62; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray47); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 0.0, 10.0, 32.0, 1.0]"); org.junit.Assert.assertTrue("'" + localizable68 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable68.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray73); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException74); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException76); org.junit.Assert.assertNotNull(objArray79); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException80); }
public void test246() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test246"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); double[] doubleArray82 = levenbergMarquardtOptimizer0.point; java.lang.Object[] objArray84 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException85 = new org.apache.commons.math.FunctionEvaluationException(doubleArray82, "org.apache.commons.math.ConvergenceException: convergence failed", objArray84); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); }
public void test247() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test247"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxIterations((int) ' '); levenbergMarquardtOptimizer0.rows = ' '; levenbergMarquardtOptimizer0.setMaxEvaluations(97); int int83 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 97 + "'", int83 == 97); }
public void test248() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test248"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); levenbergMarquardtOptimizer0.setMaxIterations((int) '4'); int int41 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52); }
public void test249() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test249"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (short) -1); double double5 = levenbergMarquardtOptimizer0.cost; org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d); }
public void test250() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test250"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 0); int int3 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer4 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer4.rows = 0; levenbergMarquardtOptimizer4.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer4.setInitialStepBoundFactor((-1.0d)); int int11 = levenbergMarquardtOptimizer4.getIterations(); int int12 = levenbergMarquardtOptimizer4.getIterations(); double[] doubleArray13 = levenbergMarquardtOptimizer4.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer14 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer14.rows = 0; levenbergMarquardtOptimizer14.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer14.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer14.cost = (short) 100; int int23 = levenbergMarquardtOptimizer14.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker24 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer14.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24); levenbergMarquardtOptimizer4.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker24); levenbergMarquardtOptimizer0.checker = simpleVectorialValueChecker24; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer29 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer29.rows = 0; levenbergMarquardtOptimizer29.setMaxEvaluations((int) (byte) 1); double[] doubleArray34 = levenbergMarquardtOptimizer29.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException36 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable39 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable39); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable39, localizable41, objArray44); org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException36, 0.0d, "hi!", objArray44); double[] doubleArray47 = functionEvaluationException46.getArgument(); double[] doubleArray48 = functionEvaluationException46.getArgument(); levenbergMarquardtOptimizer29.objective = doubleArray48; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException51 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = null; java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59); org.apache.commons.math.FunctionEvaluationException functionEvaluationException61 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException51, 0.0d, "hi!", objArray59); double[] doubleArray62 = functionEvaluationException61.getArgument(); double[] doubleArray64 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair65 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray62, doubleArray64); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair67 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray62, false); double[] doubleArray68 = vectorialPointValuePair67.getPointRef(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair69 = null; // The following exception was thrown during execution in test generation try { boolean boolean70 = simpleVectorialValueChecker24.converged((int) 'a', vectorialPointValuePair67, vectorialPointValuePair69); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1000 + "'", int3 == 1000); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0); org.junit.Assert.assertNull(doubleArray13); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000); org.junit.Assert.assertNull(doubleArray34); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0]"); org.junit.Assert.assertNotNull(objArray59); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0]"); }
public void test251() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test251"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; int int77 = levenbergMarquardtOptimizer0.getMaxEvaluations(); int int78 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); // The following exception was thrown during execution in test generation try { double[][] doubleArray79 = levenbergMarquardtOptimizer0.getCovariances(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2147483647 + "'", int77 == 2147483647); org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0); }
public void test252() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test252"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair79 = levenbergMarquardtOptimizer0.doOptimize(); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); }
public void test253() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test253"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); double double1 = levenbergMarquardtOptimizer0.cost; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer2 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer2.setMaxEvaluations((int) (byte) 0); int int5 = levenbergMarquardtOptimizer2.getMaxIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer6 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer6.rows = 0; levenbergMarquardtOptimizer6.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer6.setInitialStepBoundFactor((-1.0d)); int int13 = levenbergMarquardtOptimizer6.getIterations(); int int14 = levenbergMarquardtOptimizer6.getIterations(); double[] doubleArray15 = levenbergMarquardtOptimizer6.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer16 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer16.rows = 0; levenbergMarquardtOptimizer16.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer16.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer16.cost = (short) 100; int int25 = levenbergMarquardtOptimizer16.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker26 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer16.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26); levenbergMarquardtOptimizer6.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker26); levenbergMarquardtOptimizer2.checker = simpleVectorialValueChecker26; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker30 = levenbergMarquardtOptimizer2.getConvergenceChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker30); double double32 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d); org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1000 + "'", int5 == 1000); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0); org.junit.Assert.assertNull(doubleArray15); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1000 + "'", int25 == 1000); org.junit.Assert.assertNotNull(vectorialConvergenceChecker30); org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d); }
public void test254() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test254"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.cols = (-1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor(0.0d); levenbergMarquardtOptimizer0.cost = 100.0d; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); }
public void test255() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test255"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); double double14 = levenbergMarquardtOptimizer0.cost; levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setOrthoTolerance(Double.NaN); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d); }
public void test256() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test256"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; double[] doubleArray18 = levenbergMarquardtOptimizer0.residualsWeights; int int19 = levenbergMarquardtOptimizer0.getEvaluations(); int int20 = levenbergMarquardtOptimizer0.cols; int int21 = levenbergMarquardtOptimizer0.rows; int int22 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int23 = levenbergMarquardtOptimizer0.getMaxIterations(); int int24 = levenbergMarquardtOptimizer0.getMaxEvaluations(); int int25 = levenbergMarquardtOptimizer0.rows; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNull(doubleArray18); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); }
public void test257() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test257"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker14 = levenbergMarquardtOptimizer0.checker; int int15 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); levenbergMarquardtOptimizer0.cols = 'a'; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNotNull(vectorialConvergenceChecker14); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); }
public void test258() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test258"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; levenbergMarquardtOptimizer0.setMaxEvaluations((int) 'a'); int int9 = levenbergMarquardtOptimizer0.getMaxEvaluations(); org.apache.commons.math.analysis.DifferentiableMultivariateVectorialFunction differentiableMultivariateVectorialFunction10 = null; double[] doubleArray11 = null; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException13 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable16 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable16); org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray21 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException(throwable16, localizable18, objArray21); org.apache.commons.math.FunctionEvaluationException functionEvaluationException23 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException13, 0.0d, "hi!", objArray21); double[] doubleArray24 = functionEvaluationException23.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException26 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable29 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException(throwable29); org.apache.commons.math.exception.util.Localizable localizable31 = null; java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable29, localizable31, objArray34); org.apache.commons.math.FunctionEvaluationException functionEvaluationException36 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException26, 0.0d, "hi!", objArray34); double[] doubleArray37 = functionEvaluationException36.getArgument(); double[] doubleArray39 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair40 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray37, doubleArray39); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair42 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray24, doubleArray39, false); double[] doubleArray43 = vectorialPointValuePair42.getValueRef(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker46 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException49 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable52 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException53 = new org.apache.commons.math.MathRuntimeException(throwable52); org.apache.commons.math.exception.util.Localizable localizable54 = null; java.lang.Object[] objArray57 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(throwable52, localizable54, objArray57); org.apache.commons.math.FunctionEvaluationException functionEvaluationException59 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException49, 0.0d, "hi!", objArray57); double[] doubleArray60 = functionEvaluationException59.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable65 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException66 = new org.apache.commons.math.MathRuntimeException(throwable65); org.apache.commons.math.exception.util.Localizable localizable67 = null; java.lang.Object[] objArray70 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable65, localizable67, objArray70); org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException62, 0.0d, "hi!", objArray70); double[] doubleArray73 = functionEvaluationException72.getArgument(); double[] doubleArray75 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray75); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray75, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException80 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable83 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException84 = new org.apache.commons.math.MathRuntimeException(throwable83); org.apache.commons.math.exception.util.Localizable localizable85 = null; java.lang.Object[] objArray88 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException89 = new org.apache.commons.math.MathRuntimeException(throwable83, localizable85, objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException80, 0.0d, "hi!", objArray88); double[] doubleArray91 = functionEvaluationException90.getArgument(); double[] doubleArray93 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair94 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray91, doubleArray93); boolean boolean95 = simpleVectorialValueChecker46.converged(0, vectorialPointValuePair78, vectorialPointValuePair94); double[] doubleArray96 = vectorialPointValuePair94.getValue(); double[] doubleArray97 = vectorialPointValuePair94.getValueRef(); // The following exception was thrown during execution in test generation try { org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair98 = levenbergMarquardtOptimizer0.optimize(differentiableMultivariateVectorialFunction10, doubleArray11, doubleArray43, doubleArray97); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97); org.junit.Assert.assertNotNull(objArray21); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0]"); org.junit.Assert.assertNotNull(objArray34); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[97.0]"); org.junit.Assert.assertNotNull(objArray57); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]"); org.junit.Assert.assertNotNull(objArray70); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true); org.junit.Assert.assertNotNull(doubleArray96); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray97); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[97.0]"); }
public void test259() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test259"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.cols = 100; levenbergMarquardtOptimizer0.setInitialStepBoundFactor((double) (-1.0f)); levenbergMarquardtOptimizer0.incrementIterationsCounter(); int int11 = levenbergMarquardtOptimizer0.getMaxEvaluations(); double double12 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d); }
public void test260() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test260"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; int int7 = levenbergMarquardtOptimizer0.getMaxIterations(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1000 + "'", int7 == 1000); }
public void test261() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test261"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.setMaxIterations(10); levenbergMarquardtOptimizer0.setMaxEvaluations(1); }
public void test262() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test262"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker3 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker((double) (short) 0, (double) 100L); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException6 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = null; java.lang.Object[] objArray14 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException15 = new org.apache.commons.math.MathRuntimeException(throwable9, localizable11, objArray14); org.apache.commons.math.FunctionEvaluationException functionEvaluationException16 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException6, 0.0d, "hi!", objArray14); double[] doubleArray17 = functionEvaluationException16.getArgument(); double[] doubleArray19 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair20 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray17, doubleArray19); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); boolean boolean37 = simpleVectorialValueChecker3.converged(100, vectorialPointValuePair20, vectorialPointValuePair36); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker3); double double39 = levenbergMarquardtOptimizer0.cost; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer40 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer40.rows = 0; levenbergMarquardtOptimizer40.setMaxEvaluations((int) (byte) 1); double[] doubleArray45 = levenbergMarquardtOptimizer40.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException47 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable50 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException51 = new org.apache.commons.math.MathRuntimeException(throwable50); org.apache.commons.math.exception.util.Localizable localizable52 = null; java.lang.Object[] objArray55 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException56 = new org.apache.commons.math.MathRuntimeException(throwable50, localizable52, objArray55); org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException47, 0.0d, "hi!", objArray55); double[] doubleArray58 = functionEvaluationException57.getArgument(); double[] doubleArray59 = functionEvaluationException57.getArgument(); levenbergMarquardtOptimizer40.objective = doubleArray59; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException62 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable65 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException66 = new org.apache.commons.math.MathRuntimeException(throwable65); org.apache.commons.math.exception.util.Localizable localizable67 = null; java.lang.Object[] objArray70 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException71 = new org.apache.commons.math.MathRuntimeException(throwable65, localizable67, objArray70); org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException62, 0.0d, "hi!", objArray70); double[] doubleArray73 = functionEvaluationException72.getArgument(); double[] doubleArray75 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair76 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray75); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray59, doubleArray73, false); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException80 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable83 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException84 = new org.apache.commons.math.MathRuntimeException(throwable83); org.apache.commons.math.exception.util.Localizable localizable85 = null; java.lang.Object[] objArray88 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException89 = new org.apache.commons.math.MathRuntimeException(throwable83, localizable85, objArray88); org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException80, 0.0d, "hi!", objArray88); double[] doubleArray91 = functionEvaluationException90.getArgument(); org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException(doubleArray91); double[] doubleArray93 = functionEvaluationException92.getArgument(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair95 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray73, doubleArray93, true); double[] doubleArray96 = vectorialPointValuePair95.getPointRef(); levenbergMarquardtOptimizer0.targetValues = doubleArray96; levenbergMarquardtOptimizer0.setMaxIterations(100); org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d); org.junit.Assert.assertNull(doubleArray45); org.junit.Assert.assertNotNull(objArray55); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0]"); org.junit.Assert.assertNotNull(objArray70); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0]"); org.junit.Assert.assertNotNull(objArray88); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray96); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[0.0]"); }
public void test263() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test263"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; double[][] doubleArray7 = levenbergMarquardtOptimizer0.jacobian; java.lang.Throwable throwable8 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8); org.apache.commons.math.exception.util.Localizable localizable10 = null; java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13); org.apache.commons.math.exception.util.Localizable localizable16 = null; org.apache.commons.math.exception.util.Localizable localizable18 = null; java.lang.Object[] objArray24 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException25 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable18, objArray24); org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException14, (double) (byte) 1, localizable16, objArray24); java.lang.Throwable throwable29 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException30 = new org.apache.commons.math.MathRuntimeException(throwable29); org.apache.commons.math.exception.util.Localizable localizable31 = null; java.lang.Object[] objArray34 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException35 = new org.apache.commons.math.MathRuntimeException(throwable29, localizable31, objArray34); org.apache.commons.math.exception.util.Localizable localizable37 = null; org.apache.commons.math.exception.util.Localizable localizable39 = null; java.lang.Object[] objArray45 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException46 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable39, objArray45); org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException35, (double) (byte) 1, localizable37, objArray45); java.lang.IllegalArgumentException illegalArgumentException48 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException35); java.lang.Object[] objArray49 = mathRuntimeException35.getArguments(); java.lang.NullPointerException nullPointerException50 = org.apache.commons.math.MathRuntimeException.createNullPointerException("org.apache.commons.math.ConvergenceException: convergence failed", objArray49); org.apache.commons.math.ConvergenceException convergenceException51 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException26, "org.apache.commons.math.ConvergenceException: convergence failed", objArray49); org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException26, (double) 1000); double[] doubleArray54 = functionEvaluationException53.getArgument(); levenbergMarquardtOptimizer0.residuals = doubleArray54; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertNull(doubleArray7); org.junit.Assert.assertNotNull(objArray13); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray24); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray34); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray45); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(illegalArgumentException48); org.junit.Assert.assertNotNull(objArray49); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[hi!, 1]"); org.junit.Assert.assertNotNull(nullPointerException50); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1000.0]"); }
public void test264() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test264"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 100); double[] doubleArray5 = levenbergMarquardtOptimizer0.residuals; double[] doubleArray6 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException8 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable11 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException12 = new org.apache.commons.math.MathRuntimeException(throwable11); org.apache.commons.math.exception.util.Localizable localizable13 = null; java.lang.Object[] objArray16 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(throwable11, localizable13, objArray16); org.apache.commons.math.FunctionEvaluationException functionEvaluationException18 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException8, 0.0d, "hi!", objArray16); double[] doubleArray19 = functionEvaluationException18.getArgument(); double[] doubleArray20 = functionEvaluationException18.getArgument(); levenbergMarquardtOptimizer0.residualsWeights = doubleArray20; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer22 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer22.setOrthoTolerance((double) (byte) 0); double[] doubleArray27 = new double[] { (-1), 1.0f }; double[][] doubleArray28 = new double[][] { doubleArray27 }; levenbergMarquardtOptimizer22.jacobian = doubleArray28; levenbergMarquardtOptimizer0.jacobian = doubleArray28; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray6); org.junit.Assert.assertNotNull(objArray16); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); }
public void test265() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test265"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); int int5 = levenbergMarquardtOptimizer0.getEvaluations(); int int6 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); }
public void test266() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test266"); java.lang.Throwable throwable2 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException3 = new org.apache.commons.math.MathRuntimeException(throwable2); org.apache.commons.math.exception.util.Localizable localizable4 = mathRuntimeException3.getLocalizablePattern(); java.lang.Throwable throwable8 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException9 = new org.apache.commons.math.MathRuntimeException(throwable8); org.apache.commons.math.exception.util.Localizable localizable10 = null; java.lang.Object[] objArray13 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException14 = new org.apache.commons.math.MathRuntimeException(throwable8, localizable10, objArray13); java.lang.Object[] objArray15 = mathRuntimeException14.getArguments(); java.text.ParseException parseException16 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray15); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException17 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray15); org.apache.commons.math.MathRuntimeException mathRuntimeException18 = new org.apache.commons.math.MathRuntimeException(localizable4, objArray15); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer20 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer20.setOrthoTolerance((double) (byte) 0); double[] doubleArray25 = new double[] { (-1), 1.0f }; double[][] doubleArray26 = new double[][] { doubleArray25 }; levenbergMarquardtOptimizer20.jacobian = doubleArray26; java.util.ConcurrentModificationException concurrentModificationException28 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray26); java.lang.IllegalStateException illegalStateException29 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable4, (java.lang.Object[]) doubleArray26); java.lang.Throwable throwable30 = null; java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = null; java.lang.Object[] objArray38 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable33, localizable35, objArray38); org.apache.commons.math.exception.util.Localizable localizable41 = null; org.apache.commons.math.exception.util.Localizable localizable43 = null; java.lang.Object[] objArray49 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException50 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable43, objArray49); org.apache.commons.math.FunctionEvaluationException functionEvaluationException51 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException39, (double) (byte) 1, localizable41, objArray49); java.lang.Throwable throwable54 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable54); org.apache.commons.math.exception.util.Localizable localizable56 = null; java.lang.Object[] objArray59 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException60 = new org.apache.commons.math.MathRuntimeException(throwable54, localizable56, objArray59); org.apache.commons.math.exception.util.Localizable localizable62 = null; org.apache.commons.math.exception.util.Localizable localizable64 = null; java.lang.Object[] objArray70 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable64, objArray70); org.apache.commons.math.FunctionEvaluationException functionEvaluationException72 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException60, (double) (byte) 1, localizable62, objArray70); java.lang.IllegalArgumentException illegalArgumentException73 = org.apache.commons.math.MathRuntimeException.createIllegalArgumentException((java.lang.Throwable) mathRuntimeException60); java.lang.Object[] objArray74 = mathRuntimeException60.getArguments(); java.lang.NullPointerException nullPointerException75 = org.apache.commons.math.MathRuntimeException.createNullPointerException("org.apache.commons.math.ConvergenceException: convergence failed", objArray74); org.apache.commons.math.ConvergenceException convergenceException76 = new org.apache.commons.math.ConvergenceException((java.lang.Throwable) functionEvaluationException51, "org.apache.commons.math.ConvergenceException: convergence failed", objArray74); java.util.NoSuchElementException noSuchElementException77 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray74); org.apache.commons.math.ConvergenceException convergenceException78 = new org.apache.commons.math.ConvergenceException(throwable30, "org.apache.commons.math.MathRuntimeException$2: true", objArray74); org.apache.commons.math.optimization.OptimizationException optimizationException79 = new org.apache.commons.math.optimization.OptimizationException(localizable4, objArray74); java.lang.NullPointerException nullPointerException80 = org.apache.commons.math.MathRuntimeException.createNullPointerException("hi!", objArray74); java.lang.IllegalStateException illegalStateException81 = org.apache.commons.math.MathRuntimeException.createIllegalStateException("org.apache.commons.math.MathException: ", objArray74); org.junit.Assert.assertTrue("'" + localizable4 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable4.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray13); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException16); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException17); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertNotNull(concurrentModificationException28); org.junit.Assert.assertNotNull(illegalStateException29); org.junit.Assert.assertNotNull(objArray38); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray49); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray59); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray70); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(illegalArgumentException73); org.junit.Assert.assertNotNull(objArray74); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[hi!, 1]"); org.junit.Assert.assertNotNull(nullPointerException75); org.junit.Assert.assertNotNull(noSuchElementException77); org.junit.Assert.assertNotNull(nullPointerException80); org.junit.Assert.assertNotNull(illegalStateException81); }
public void test267() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test267"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray9 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer10 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer10.rows = 0; levenbergMarquardtOptimizer10.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer10.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer10.cost = (short) 100; int int19 = levenbergMarquardtOptimizer10.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker20 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer10.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker20); levenbergMarquardtOptimizer0.rows = (byte) 100; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker25 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer26 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer26.rows = 0; levenbergMarquardtOptimizer26.setMaxEvaluations((int) (byte) 1); double[] doubleArray31 = levenbergMarquardtOptimizer26.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException33 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable36 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable36); org.apache.commons.math.exception.util.Localizable localizable38 = null; java.lang.Object[] objArray41 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException42 = new org.apache.commons.math.MathRuntimeException(throwable36, localizable38, objArray41); org.apache.commons.math.FunctionEvaluationException functionEvaluationException43 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException33, 0.0d, "hi!", objArray41); double[] doubleArray44 = functionEvaluationException43.getArgument(); double[] doubleArray45 = functionEvaluationException43.getArgument(); levenbergMarquardtOptimizer26.objective = doubleArray45; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer47 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer47.rows = 0; levenbergMarquardtOptimizer47.setMaxEvaluations((int) (byte) 1); double[] doubleArray52 = levenbergMarquardtOptimizer47.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException54 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable57 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException58 = new org.apache.commons.math.MathRuntimeException(throwable57); org.apache.commons.math.exception.util.Localizable localizable59 = null; java.lang.Object[] objArray62 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException63 = new org.apache.commons.math.MathRuntimeException(throwable57, localizable59, objArray62); org.apache.commons.math.FunctionEvaluationException functionEvaluationException64 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException54, 0.0d, "hi!", objArray62); double[] doubleArray65 = functionEvaluationException64.getArgument(); double[] doubleArray66 = functionEvaluationException64.getArgument(); levenbergMarquardtOptimizer47.objective = doubleArray66; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException69 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable72 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException73 = new org.apache.commons.math.MathRuntimeException(throwable72); org.apache.commons.math.exception.util.Localizable localizable74 = null; java.lang.Object[] objArray77 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException78 = new org.apache.commons.math.MathRuntimeException(throwable72, localizable74, objArray77); org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException69, 0.0d, "hi!", objArray77); double[] doubleArray80 = functionEvaluationException79.getArgument(); double[] doubleArray82 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair83 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray80, doubleArray82); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair85 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray66, doubleArray80, false); double[] doubleArray86 = vectorialPointValuePair85.getPoint(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair87 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray45, doubleArray86); levenbergMarquardtOptimizer0.objective = doubleArray86; org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNull(doubleArray9); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000); org.junit.Assert.assertNotNull(vectorialConvergenceChecker25); org.junit.Assert.assertNull(doubleArray31); org.junit.Assert.assertNotNull(objArray41); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0]"); org.junit.Assert.assertNull(doubleArray52); org.junit.Assert.assertNotNull(objArray62); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0]"); org.junit.Assert.assertNotNull(objArray77); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0]"); }
public void test268() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test268"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray20 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair21 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray18, doubleArray20); org.apache.commons.math.FunctionEvaluationException functionEvaluationException22 = new org.apache.commons.math.FunctionEvaluationException(doubleArray20); levenbergMarquardtOptimizer0.residuals = doubleArray20; int int24 = levenbergMarquardtOptimizer0.rows; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); }
public void test269() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test269"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; int int6 = levenbergMarquardtOptimizer0.rows; org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0); }
public void test270() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test270"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.cost = 10.0d; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer15 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer15.setOrthoTolerance((double) (byte) 0); double[] doubleArray20 = new double[] { (-1), 1.0f }; double[][] doubleArray21 = new double[][] { doubleArray20 }; levenbergMarquardtOptimizer15.jacobian = doubleArray21; java.io.EOFException eOFException23 = org.apache.commons.math.MathRuntimeException.createEOFException("org.apache.commons.math.MathRuntimeException$2: true", (java.lang.Object[]) doubleArray21); levenbergMarquardtOptimizer0.jacobian = doubleArray21; levenbergMarquardtOptimizer0.setMaxIterations((int) (short) 1); levenbergMarquardtOptimizer0.cost = (short) 10; org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(eOFException23); }
public void test271() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test271"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); double double82 = levenbergMarquardtOptimizer0.getChiSquare(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d); }
public void test272() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test272"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.setOrthoTolerance((double) (byte) 0); double[] doubleArray5 = new double[] { (-1), 1.0f }; double[][] doubleArray6 = new double[][] { doubleArray5 }; levenbergMarquardtOptimizer0.jacobian = doubleArray6; double double8 = levenbergMarquardtOptimizer0.getRMS(); int int9 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int10 = levenbergMarquardtOptimizer0.getIterations(); levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 0.0f); double[] doubleArray13 = levenbergMarquardtOptimizer0.residualsWeights; org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertTrue(Double.isNaN(double8)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0); org.junit.Assert.assertNull(doubleArray13); }
public void test273() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test273"); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException1 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable4 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException5 = new org.apache.commons.math.MathRuntimeException(throwable4); org.apache.commons.math.exception.util.Localizable localizable6 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable4, localizable6, objArray9); org.apache.commons.math.FunctionEvaluationException functionEvaluationException11 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException1, 0.0d, "hi!", objArray9); double[] doubleArray12 = functionEvaluationException11.getArgument(); double[] doubleArray13 = functionEvaluationException11.getArgument(); double[] doubleArray14 = functionEvaluationException11.getArgument(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException16 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable19 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException20 = new org.apache.commons.math.MathRuntimeException(throwable19); org.apache.commons.math.exception.util.Localizable localizable21 = null; java.lang.Object[] objArray24 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException25 = new org.apache.commons.math.MathRuntimeException(throwable19, localizable21, objArray24); org.apache.commons.math.FunctionEvaluationException functionEvaluationException26 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException16, 0.0d, "hi!", objArray24); double[] doubleArray27 = functionEvaluationException26.getArgument(); double[] doubleArray28 = functionEvaluationException26.getArgument(); double[] doubleArray29 = functionEvaluationException26.getArgument(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer30 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer30.rows = 0; levenbergMarquardtOptimizer30.setMaxEvaluations((int) (byte) 1); double[] doubleArray35 = levenbergMarquardtOptimizer30.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException37 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable40 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException41 = new org.apache.commons.math.MathRuntimeException(throwable40); org.apache.commons.math.exception.util.Localizable localizable42 = null; java.lang.Object[] objArray45 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException46 = new org.apache.commons.math.MathRuntimeException(throwable40, localizable42, objArray45); org.apache.commons.math.FunctionEvaluationException functionEvaluationException47 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException37, 0.0d, "hi!", objArray45); double[] doubleArray48 = functionEvaluationException47.getArgument(); double[] doubleArray50 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair51 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray48, doubleArray50); org.apache.commons.math.FunctionEvaluationException functionEvaluationException52 = new org.apache.commons.math.FunctionEvaluationException(doubleArray50); levenbergMarquardtOptimizer30.residuals = doubleArray50; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair55 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray29, doubleArray50, true); org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) functionEvaluationException11, doubleArray29); org.apache.commons.math.FunctionEvaluationException functionEvaluationException57 = new org.apache.commons.math.FunctionEvaluationException(doubleArray29); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0]"); org.junit.Assert.assertNotNull(objArray24); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]"); org.junit.Assert.assertNull(doubleArray35); org.junit.Assert.assertNotNull(objArray45); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[97.0]"); }
public void test274() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test274"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); double double12 = levenbergMarquardtOptimizer0.cost; levenbergMarquardtOptimizer0.setParRelativeTolerance((double) 'a'); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d); }
public void test275() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test275"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer21.rows = 0; levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1); double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); double[] doubleArray40 = functionEvaluationException38.getArgument(); levenbergMarquardtOptimizer21.objective = doubleArray40; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable46 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46); org.apache.commons.math.exception.util.Localizable localizable48 = null; java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51); org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51); double[] doubleArray54 = functionEvaluationException53.getArgument(); double[] doubleArray56 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false); double[] doubleArray60 = vectorialPointValuePair59.getPoint(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray60); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = null; java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71); double[] doubleArray74 = functionEvaluationException73.getArgument(); double[] doubleArray76 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76); double[] doubleArray78 = vectorialPointValuePair77.getPointRef(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray78, false); double[] doubleArray81 = vectorialPointValuePair80.getValueRef(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(doubleArray26); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); org.junit.Assert.assertNotNull(objArray51); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0]"); }
public void test276() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test276"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException22 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable25 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException26 = new org.apache.commons.math.MathRuntimeException(throwable25); org.apache.commons.math.exception.util.Localizable localizable27 = null; java.lang.Object[] objArray30 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable25, localizable27, objArray30); org.apache.commons.math.FunctionEvaluationException functionEvaluationException32 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException22, 0.0d, "hi!", objArray30); double[] doubleArray33 = functionEvaluationException32.getArgument(); double[] doubleArray35 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair36 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray33, doubleArray35); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair38 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray33, false); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer39 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer39.rows = 0; levenbergMarquardtOptimizer39.setMaxEvaluations((int) (byte) 1); double[] doubleArray44 = levenbergMarquardtOptimizer39.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException46 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = null; java.lang.Object[] objArray54 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException55 = new org.apache.commons.math.MathRuntimeException(throwable49, localizable51, objArray54); org.apache.commons.math.FunctionEvaluationException functionEvaluationException56 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException46, 0.0d, "hi!", objArray54); double[] doubleArray57 = functionEvaluationException56.getArgument(); double[] doubleArray58 = functionEvaluationException56.getArgument(); levenbergMarquardtOptimizer39.objective = doubleArray58; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException61 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); org.apache.commons.math.FunctionEvaluationException functionEvaluationException71 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException61, 0.0d, "hi!", objArray69); double[] doubleArray72 = functionEvaluationException71.getArgument(); double[] doubleArray74 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair75 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray72, doubleArray74); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray58, doubleArray72, false); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair78 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray72); double[] doubleArray79 = vectorialPointValuePair78.getPointRef(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(objArray30); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0]"); org.junit.Assert.assertNull(doubleArray44); org.junit.Assert.assertNotNull(objArray54); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0]"); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[0.0]"); }
public void test277() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test277"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer9 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer9.setOrthoTolerance((double) (byte) 0); double[] doubleArray14 = new double[] { (-1), 1.0f }; double[][] doubleArray15 = new double[][] { doubleArray14 }; levenbergMarquardtOptimizer9.jacobian = doubleArray15; java.util.ConcurrentModificationException concurrentModificationException17 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray15); levenbergMarquardtOptimizer0.jacobian = doubleArray15; org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertNotNull(concurrentModificationException17); }
public void test278() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test278"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); double double1 = levenbergMarquardtOptimizer0.cost; double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals; levenbergMarquardtOptimizer0.setMaxEvaluations(10); org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d); org.junit.Assert.assertNull(doubleArray2); }
public void test279() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test279"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; levenbergMarquardtOptimizer0.setMaxEvaluations(1000); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker23 = levenbergMarquardtOptimizer0.checker; // The following exception was thrown during execution in test generation try { double[] doubleArray24 = levenbergMarquardtOptimizer0.guessParametersErrors(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)"); } catch (org.apache.commons.math.optimization.OptimizationException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(vectorialConvergenceChecker23); }
public void test280() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test280"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer21.rows = 0; levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1); double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); double[] doubleArray40 = functionEvaluationException38.getArgument(); levenbergMarquardtOptimizer21.objective = doubleArray40; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable46 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46); org.apache.commons.math.exception.util.Localizable localizable48 = null; java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51); org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51); double[] doubleArray54 = functionEvaluationException53.getArgument(); double[] doubleArray56 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false); double[] doubleArray60 = vectorialPointValuePair59.getPoint(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray60); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException63 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable66 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException67 = new org.apache.commons.math.MathRuntimeException(throwable66); org.apache.commons.math.exception.util.Localizable localizable68 = null; java.lang.Object[] objArray71 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException72 = new org.apache.commons.math.MathRuntimeException(throwable66, localizable68, objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException63, 0.0d, "hi!", objArray71); double[] doubleArray74 = functionEvaluationException73.getArgument(); double[] doubleArray76 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair77 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray74, doubleArray76); double[] doubleArray78 = vectorialPointValuePair77.getPointRef(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair80 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray60, doubleArray78, false); double[] doubleArray81 = vectorialPointValuePair80.getPoint(); double[] doubleArray82 = vectorialPointValuePair80.getPoint(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(doubleArray26); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); org.junit.Assert.assertNotNull(objArray51); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0]"); }
public void test281() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test281"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; double[] doubleArray25 = new double[] { 100.0d, 0, (byte) 10, ' ', 1L }; levenbergMarquardtOptimizer0.targetValues = doubleArray25; int int27 = levenbergMarquardtOptimizer0.getEvaluations(); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer28 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer28.rows = 0; levenbergMarquardtOptimizer28.setMaxEvaluations((int) (byte) 1); double[] doubleArray33 = levenbergMarquardtOptimizer28.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException35 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable38 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException39 = new org.apache.commons.math.MathRuntimeException(throwable38); org.apache.commons.math.exception.util.Localizable localizable40 = null; java.lang.Object[] objArray43 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException(throwable38, localizable40, objArray43); org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException35, 0.0d, "hi!", objArray43); double[] doubleArray46 = functionEvaluationException45.getArgument(); double[] doubleArray47 = functionEvaluationException45.getArgument(); levenbergMarquardtOptimizer28.objective = doubleArray47; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException50 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable53 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException54 = new org.apache.commons.math.MathRuntimeException(throwable53); org.apache.commons.math.exception.util.Localizable localizable55 = null; java.lang.Object[] objArray58 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException59 = new org.apache.commons.math.MathRuntimeException(throwable53, localizable55, objArray58); org.apache.commons.math.FunctionEvaluationException functionEvaluationException60 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException50, 0.0d, "hi!", objArray58); double[] doubleArray61 = functionEvaluationException60.getArgument(); double[] doubleArray63 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair64 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray61, doubleArray63); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair66 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray47, doubleArray61, false); levenbergMarquardtOptimizer0.residualsWeights = doubleArray47; double[] doubleArray68 = levenbergMarquardtOptimizer0.targetValues; org.apache.commons.math.exception.util.Localizable localizable72 = null; java.lang.Object[] objArray78 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException79 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable72, objArray78); org.apache.commons.math.MathRuntimeException mathRuntimeException80 = new org.apache.commons.math.MathRuntimeException("hi!", objArray78); org.apache.commons.math.exception.util.Localizable localizable83 = null; java.lang.Object[] objArray89 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException90 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable83, objArray89); org.apache.commons.math.MathRuntimeException mathRuntimeException91 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException80, "hi!", objArray89); org.apache.commons.math.FunctionEvaluationException functionEvaluationException92 = new org.apache.commons.math.FunctionEvaluationException(doubleArray68, "", objArray89); double[] doubleArray93 = functionEvaluationException92.getArgument(); org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 0.0, 10.0, 32.0, 1.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); org.junit.Assert.assertNull(doubleArray33); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0]"); org.junit.Assert.assertNotNull(objArray58); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 0.0, 10.0, 32.0, 1.0]"); org.junit.Assert.assertNotNull(objArray78); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray89); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[100.0, 0.0, 10.0, 32.0, 1.0]"); }
public void test282() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test282"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double[] doubleArray79 = levenbergMarquardtOptimizer0.residuals; int int80 = levenbergMarquardtOptimizer0.getIterations(); double[] doubleArray81 = levenbergMarquardtOptimizer0.point; int int82 = levenbergMarquardtOptimizer0.rows; org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertNull(doubleArray79); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0); }
public void test283() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test283"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException7 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable10 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable10); org.apache.commons.math.exception.util.Localizable localizable12 = null; java.lang.Object[] objArray15 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException16 = new org.apache.commons.math.MathRuntimeException(throwable10, localizable12, objArray15); org.apache.commons.math.FunctionEvaluationException functionEvaluationException17 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException7, 0.0d, "hi!", objArray15); double[] doubleArray18 = functionEvaluationException17.getArgument(); double[] doubleArray19 = functionEvaluationException17.getArgument(); levenbergMarquardtOptimizer0.objective = doubleArray19; org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer21 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer21.rows = 0; levenbergMarquardtOptimizer21.setMaxEvaluations((int) (byte) 1); double[] doubleArray26 = levenbergMarquardtOptimizer21.residualsWeights; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException28 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable31 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException32 = new org.apache.commons.math.MathRuntimeException(throwable31); org.apache.commons.math.exception.util.Localizable localizable33 = null; java.lang.Object[] objArray36 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException37 = new org.apache.commons.math.MathRuntimeException(throwable31, localizable33, objArray36); org.apache.commons.math.FunctionEvaluationException functionEvaluationException38 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException28, 0.0d, "hi!", objArray36); double[] doubleArray39 = functionEvaluationException38.getArgument(); double[] doubleArray40 = functionEvaluationException38.getArgument(); levenbergMarquardtOptimizer21.objective = doubleArray40; org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException43 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable46 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException47 = new org.apache.commons.math.MathRuntimeException(throwable46); org.apache.commons.math.exception.util.Localizable localizable48 = null; java.lang.Object[] objArray51 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException52 = new org.apache.commons.math.MathRuntimeException(throwable46, localizable48, objArray51); org.apache.commons.math.FunctionEvaluationException functionEvaluationException53 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException43, 0.0d, "hi!", objArray51); double[] doubleArray54 = functionEvaluationException53.getArgument(); double[] doubleArray56 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair57 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray54, doubleArray56); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair59 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray40, doubleArray54, false); double[] doubleArray60 = vectorialPointValuePair59.getPoint(); org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair61 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray19, doubleArray60); double[] doubleArray62 = vectorialPointValuePair61.getValue(); double[] doubleArray63 = vectorialPointValuePair61.getValue(); org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNotNull(objArray15); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNull(doubleArray26); org.junit.Assert.assertNotNull(objArray36); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0]"); org.junit.Assert.assertNotNull(objArray51); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); }
public void test284() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test284"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) -1); java.lang.Object[] objArray11 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 0, "org.apache.commons.math.MathRuntimeException$2: true", objArray11); org.apache.commons.math.FunctionEvaluationException functionEvaluationException14 = new org.apache.commons.math.FunctionEvaluationException((double) 2147483647); functionEvaluationException12.addSuppressed((java.lang.Throwable) functionEvaluationException14); java.lang.RuntimeException runtimeException16 = org.apache.commons.math.MathRuntimeException.createInternalError((java.lang.Throwable) functionEvaluationException14); double[] doubleArray17 = functionEvaluationException14.getArgument(); levenbergMarquardtOptimizer0.residualsWeights = doubleArray17; org.junit.Assert.assertNotNull(runtimeException16); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[2.147483647E9]"); }
public void test285() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test285"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.MaxIterationsExceededException maxIterationsExceededException2 = new org.apache.commons.math.MaxIterationsExceededException((int) (short) -1); java.lang.Throwable throwable5 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException6 = new org.apache.commons.math.MathRuntimeException(throwable5); org.apache.commons.math.exception.util.Localizable localizable7 = null; java.lang.Object[] objArray10 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException(throwable5, localizable7, objArray10); org.apache.commons.math.FunctionEvaluationException functionEvaluationException12 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxIterationsExceededException2, 0.0d, "hi!", objArray10); double[] doubleArray13 = functionEvaluationException12.getArgument(); double[] doubleArray15 = new double[] { 'a' }; org.apache.commons.math.optimization.VectorialPointValuePair vectorialPointValuePair16 = new org.apache.commons.math.optimization.VectorialPointValuePair(doubleArray13, doubleArray15); levenbergMarquardtOptimizer0.point = doubleArray15; levenbergMarquardtOptimizer0.cost = 0L; int int20 = levenbergMarquardtOptimizer0.getMaxIterations(); int int21 = levenbergMarquardtOptimizer0.getIterations(); int int22 = levenbergMarquardtOptimizer0.getMaxIterations(); double[][] doubleArray23 = levenbergMarquardtOptimizer0.jacobian; org.junit.Assert.assertNotNull(objArray10); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[hi!, 1]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000); org.junit.Assert.assertNull(doubleArray23); }
public void test286() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test286"); java.lang.Throwable throwable1 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException2 = new org.apache.commons.math.MathRuntimeException(throwable1); org.apache.commons.math.exception.util.Localizable localizable3 = mathRuntimeException2.getLocalizablePattern(); java.lang.Throwable throwable7 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException8 = new org.apache.commons.math.MathRuntimeException(throwable7); org.apache.commons.math.exception.util.Localizable localizable9 = null; java.lang.Object[] objArray12 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable7, localizable9, objArray12); java.lang.Object[] objArray14 = mathRuntimeException13.getArguments(); java.text.ParseException parseException15 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray14); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException16 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray14); org.apache.commons.math.MathRuntimeException mathRuntimeException17 = new org.apache.commons.math.MathRuntimeException(localizable3, objArray14); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer19 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer19.setOrthoTolerance((double) (byte) 0); double[] doubleArray24 = new double[] { (-1), 1.0f }; double[][] doubleArray25 = new double[][] { doubleArray24 }; levenbergMarquardtOptimizer19.jacobian = doubleArray25; java.util.ConcurrentModificationException concurrentModificationException27 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray25); java.lang.IllegalStateException illegalStateException28 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable3, (java.lang.Object[]) doubleArray25); org.apache.commons.math.ConvergenceException convergenceException29 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable30 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException31 = new org.apache.commons.math.MathRuntimeException(throwable30); org.apache.commons.math.exception.util.Localizable localizable32 = mathRuntimeException31.getLocalizablePattern(); java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException34.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable37 = null; java.lang.Object[] objArray40 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException41 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray40); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException42 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable37, objArray40); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException43 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable35, objArray40); org.apache.commons.math.MathRuntimeException mathRuntimeException44 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException29, localizable32, objArray40); org.apache.commons.math.FunctionEvaluationException functionEvaluationException45 = new org.apache.commons.math.FunctionEvaluationException((double) (short) 100, localizable3, objArray40); java.util.Locale locale46 = null; // The following exception was thrown during execution in test generation try { java.lang.String str47 = localizable3.getLocalizedString(locale46); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertTrue("'" + localizable3 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable3.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray12); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray14); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException15); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException16); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(concurrentModificationException27); org.junit.Assert.assertNotNull(illegalStateException28); org.junit.Assert.assertTrue("'" + localizable32 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable32.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable35 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable35.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException41); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException43); }
public void test287() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test287"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); int int10 = levenbergMarquardtOptimizer0.getIterations(); int int11 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); int int12 = levenbergMarquardtOptimizer0.getIterations(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0); }
public void test288() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test288"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); double[] doubleArray82 = levenbergMarquardtOptimizer0.point; levenbergMarquardtOptimizer0.setMaxIterations(0); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); }
public void test289() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test289"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); double double1 = levenbergMarquardtOptimizer0.cost; double[] doubleArray2 = levenbergMarquardtOptimizer0.residuals; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker3 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d); org.junit.Assert.assertNull(doubleArray2); org.junit.Assert.assertNull(vectorialConvergenceChecker3); }
public void test290() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test290"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); int int7 = levenbergMarquardtOptimizer0.getIterations(); int int8 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker9 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1000 + "'", int8 == 1000); org.junit.Assert.assertNull(vectorialConvergenceChecker9); }
public void test291() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test291"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); levenbergMarquardtOptimizer0.setMaxEvaluations(100); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker14 = levenbergMarquardtOptimizer0.checker; int int15 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker16 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertNotNull(vectorialConvergenceChecker14); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(vectorialConvergenceChecker16); }
public void test292() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test292"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); org.apache.commons.math.exception.util.Localizable localizable3 = null; java.lang.Object[] objArray9 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException10 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable3, objArray9); org.apache.commons.math.MathRuntimeException mathRuntimeException11 = new org.apache.commons.math.MathRuntimeException("hi!", objArray9); org.apache.commons.math.exception.util.Localizable localizable14 = null; java.lang.Object[] objArray20 = new java.lang.Object[] { (byte) 0, (short) 0, '4', 100L, 1.0d }; org.apache.commons.math.FunctionEvaluationException functionEvaluationException21 = new org.apache.commons.math.FunctionEvaluationException((double) '#', localizable14, objArray20); org.apache.commons.math.MathRuntimeException mathRuntimeException22 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) mathRuntimeException11, "hi!", objArray20); double[] doubleArray28 = new double[] { (short) -1, 10.0d, (short) -1, (-1L), 1.0d }; org.apache.commons.math.exception.util.Localizable localizable30 = null; java.lang.Object[] objArray33 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException34 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray33); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException35 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable30, objArray33); java.lang.Throwable throwable37 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException38 = new org.apache.commons.math.MathRuntimeException(throwable37); org.apache.commons.math.exception.util.Localizable localizable39 = mathRuntimeException38.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException45 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray44); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException46 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable41, objArray44); org.apache.commons.math.exception.util.Localizable localizable47 = null; java.lang.Throwable throwable49 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException50 = new org.apache.commons.math.MathRuntimeException(throwable49); org.apache.commons.math.exception.util.Localizable localizable51 = mathRuntimeException50.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable53 = null; java.lang.Object[] objArray56 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException57 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray56); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException58 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable53, objArray56); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException59 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable51, objArray56); java.lang.NullPointerException nullPointerException60 = org.apache.commons.math.MathRuntimeException.createNullPointerException("", objArray56); org.apache.commons.math.MathException mathException61 = new org.apache.commons.math.MathException((java.lang.Throwable) maxEvaluationsExceededException46, localizable47, objArray56); java.lang.NullPointerException nullPointerException62 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable39, objArray56); java.lang.Throwable throwable64 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException65 = new org.apache.commons.math.MathRuntimeException(throwable64); org.apache.commons.math.exception.util.Localizable localizable66 = null; java.lang.Object[] objArray69 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException70 = new org.apache.commons.math.MathRuntimeException(throwable64, localizable66, objArray69); java.lang.Object[] objArray71 = mathRuntimeException70.getArguments(); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException72 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("", objArray71); org.apache.commons.math.FunctionEvaluationException functionEvaluationException73 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) maxEvaluationsExceededException35, (double) 0L, localizable39, objArray71); java.lang.Object[] objArray74 = null; org.apache.commons.math.FunctionEvaluationException functionEvaluationException75 = new org.apache.commons.math.FunctionEvaluationException((java.lang.Throwable) mathRuntimeException11, doubleArray28, localizable39, objArray74); levenbergMarquardtOptimizer0.point = doubleArray28; levenbergMarquardtOptimizer0.setMaxEvaluations(1); double double79 = levenbergMarquardtOptimizer0.getChiSquare(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker80 = levenbergMarquardtOptimizer0.getConvergenceChecker(); int int81 = levenbergMarquardtOptimizer0.getMaxIterations(); levenbergMarquardtOptimizer0.cost = '4'; double[][] doubleArray84 = levenbergMarquardtOptimizer0.jacobian; org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker85 = null; levenbergMarquardtOptimizer0.setConvergenceChecker(vectorialConvergenceChecker85); int int87 = levenbergMarquardtOptimizer0.getEvaluations(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(objArray20); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[0, 0, 4, 100, 1.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 10.0, -1.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(objArray33); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException34); org.junit.Assert.assertTrue("'" + localizable39 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable39.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException45); org.junit.Assert.assertTrue("'" + localizable51 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable51.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray56); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException57); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException59); org.junit.Assert.assertNotNull(nullPointerException60); org.junit.Assert.assertNotNull(nullPointerException62); org.junit.Assert.assertNotNull(objArray69); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray71); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[hi!, 1]"); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException72); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d); org.junit.Assert.assertNull(vectorialConvergenceChecker80); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1000 + "'", int81 == 1000); org.junit.Assert.assertNull(doubleArray84); org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0); }
public void test293() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test293"); java.lang.Object[] objArray4 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException5 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray4); org.apache.commons.math.MathException mathException6 = new org.apache.commons.math.MathException("{0}", objArray4); java.util.NoSuchElementException noSuchElementException7 = org.apache.commons.math.MathRuntimeException.createNoSuchElementException("", objArray4); org.apache.commons.math.ConvergenceException convergenceException8 = new org.apache.commons.math.ConvergenceException(); java.lang.Throwable throwable9 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException10 = new org.apache.commons.math.MathRuntimeException(throwable9); org.apache.commons.math.exception.util.Localizable localizable11 = mathRuntimeException10.getLocalizablePattern(); java.lang.Throwable throwable12 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException13 = new org.apache.commons.math.MathRuntimeException(throwable12); org.apache.commons.math.exception.util.Localizable localizable14 = mathRuntimeException13.getLocalizablePattern(); org.apache.commons.math.exception.util.Localizable localizable16 = null; java.lang.Object[] objArray19 = new java.lang.Object[] { true }; java.util.ConcurrentModificationException concurrentModificationException20 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", objArray19); org.apache.commons.math.MaxEvaluationsExceededException maxEvaluationsExceededException21 = new org.apache.commons.math.MaxEvaluationsExceededException((int) (short) 100, localizable16, objArray19); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException22 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(localizable14, objArray19); org.apache.commons.math.MathRuntimeException mathRuntimeException23 = new org.apache.commons.math.MathRuntimeException((java.lang.Throwable) convergenceException8, localizable11, objArray19); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer24 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer24.setOrthoTolerance((double) (byte) 0); double[] doubleArray29 = new double[] { (-1), 1.0f }; double[][] doubleArray30 = new double[][] { doubleArray29 }; levenbergMarquardtOptimizer24.jacobian = doubleArray30; org.apache.commons.math.MathException mathException32 = new org.apache.commons.math.MathException((java.lang.Throwable) noSuchElementException7, localizable11, (java.lang.Object[]) doubleArray30); java.lang.Throwable throwable33 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException34 = new org.apache.commons.math.MathRuntimeException(throwable33); org.apache.commons.math.exception.util.Localizable localizable35 = mathRuntimeException34.getLocalizablePattern(); java.lang.Throwable throwable39 = null; org.apache.commons.math.MathRuntimeException mathRuntimeException40 = new org.apache.commons.math.MathRuntimeException(throwable39); org.apache.commons.math.exception.util.Localizable localizable41 = null; java.lang.Object[] objArray44 = new java.lang.Object[] { "hi!", (short) 1 }; org.apache.commons.math.MathRuntimeException mathRuntimeException45 = new org.apache.commons.math.MathRuntimeException(throwable39, localizable41, objArray44); java.lang.Object[] objArray46 = mathRuntimeException45.getArguments(); java.text.ParseException parseException47 = org.apache.commons.math.MathRuntimeException.createParseException((int) '4', "hi!", objArray46); java.lang.ArrayIndexOutOfBoundsException arrayIndexOutOfBoundsException48 = org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException("{0}", objArray46); org.apache.commons.math.MathRuntimeException mathRuntimeException49 = new org.apache.commons.math.MathRuntimeException(localizable35, objArray46); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer51 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer51.setOrthoTolerance((double) (byte) 0); double[] doubleArray56 = new double[] { (-1), 1.0f }; double[][] doubleArray57 = new double[][] { doubleArray56 }; levenbergMarquardtOptimizer51.jacobian = doubleArray57; java.util.ConcurrentModificationException concurrentModificationException59 = org.apache.commons.math.MathRuntimeException.createConcurrentModificationException("hi!", (java.lang.Object[]) doubleArray57); java.lang.IllegalStateException illegalStateException60 = org.apache.commons.math.MathRuntimeException.createIllegalStateException(localizable35, (java.lang.Object[]) doubleArray57); java.lang.NullPointerException nullPointerException61 = org.apache.commons.math.MathRuntimeException.createNullPointerException(localizable11, (java.lang.Object[]) doubleArray57); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException5); org.junit.Assert.assertNotNull(noSuchElementException7); org.junit.Assert.assertTrue("'" + localizable11 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable11.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertTrue("'" + localizable14 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable14.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[true]"); org.junit.Assert.assertNotNull(concurrentModificationException20); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException22); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertTrue("'" + localizable35 + "' != '" + org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE + "'", localizable35.equals(org.apache.commons.math.exception.util.LocalizedFormats.SIMPLE_MESSAGE)); org.junit.Assert.assertNotNull(objArray44); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[hi!, 1]"); org.junit.Assert.assertNotNull(objArray46); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[hi!, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[hi!, 1]"); org.junit.Assert.assertNotNull(parseException47); org.junit.Assert.assertNotNull(arrayIndexOutOfBoundsException48); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertNotNull(concurrentModificationException59); org.junit.Assert.assertNotNull(illegalStateException60); org.junit.Assert.assertNotNull(nullPointerException61); }
public void test294() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test294"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; levenbergMarquardtOptimizer0.incrementIterationsCounter(); double double10 = levenbergMarquardtOptimizer0.getChiSquare(); int int11 = levenbergMarquardtOptimizer0.getJacobianEvaluations(); org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10000.0d + "'", double10 == 10000.0d); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); }
public void test295() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test295"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); levenbergMarquardtOptimizer0.setInitialStepBoundFactor((-1.0d)); levenbergMarquardtOptimizer0.cost = (short) 100; int int9 = levenbergMarquardtOptimizer0.getMaxIterations(); org.apache.commons.math.optimization.SimpleVectorialValueChecker simpleVectorialValueChecker10 = new org.apache.commons.math.optimization.SimpleVectorialValueChecker(); levenbergMarquardtOptimizer0.setConvergenceChecker((org.apache.commons.math.optimization.VectorialConvergenceChecker) simpleVectorialValueChecker10); int int12 = levenbergMarquardtOptimizer0.getEvaluations(); int int13 = levenbergMarquardtOptimizer0.getIterations(); org.apache.commons.math.optimization.VectorialConvergenceChecker vectorialConvergenceChecker14 = levenbergMarquardtOptimizer0.getConvergenceChecker(); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1000 + "'", int9 == 1000); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0); org.junit.Assert.assertNotNull(vectorialConvergenceChecker14); }
public void test296() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test296"); org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer(); levenbergMarquardtOptimizer0.rows = 0; levenbergMarquardtOptimizer0.setMaxEvaluations((int) (byte) 1); double[] doubleArray5 = levenbergMarquardtOptimizer0.residualsWeights; levenbergMarquardtOptimizer0.setOrthoTolerance((double) 0L); double[] doubleArray8 = levenbergMarquardtOptimizer0.residualsWeights; // The following exception was thrown during execution in test generation try { double[] doubleArray9 = levenbergMarquardtOptimizer0.guessParametersErrors(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.optimization.OptimizationException; message: no degrees of freedom (0 measurements, 0 parameters)"); } catch (org.apache.commons.math.optimization.OptimizationException e) { // Expected exception. } org.junit.Assert.assertNull(doubleArray5); org.junit.Assert.assertNull(doubleArray8); }
public void testMinpackLinearFullRank() { minpackTest(new LinearFullRankFunction(10, 5, 1.0, 5.0, 2.23606797749979), false); minpackTest(new LinearFullRankFunction(50, 5, 1.0, 8.06225774829855, 6.70820393249937), false); }
public void testMinpackLinearRank1() { minpackTest(new LinearRank1Function(10, 5, 1.0, 291.521868819476, 1.4638501094228), false); minpackTest(new LinearRank1Function(50, 5, 1.0, 3101.60039334535, 3.48263016573496), false); }
public void testMinpackLinearRank1ZeroColsAndRows() { minpackTest(new LinearRank1ZeroColsAndRowsFunction(10, 5, 1.0), false); minpackTest(new LinearRank1ZeroColsAndRowsFunction(50, 5, 1.0), false); }
public void testMinpackRosenbrok() { minpackTest(new RosenbrockFunction(new double[] { -1.2, 1.0 }, Math.sqrt(24.2)), false); minpackTest(new RosenbrockFunction(new double[] { -12.0, 10.0 }, Math.sqrt(1795769.0)), false); minpackTest(new RosenbrockFunction(new double[] { -120.0, 100.0 }, 11.0 * Math.sqrt(169000121.0)), false); }
public void testMinpackHelicalValley() { minpackTest(new HelicalValleyFunction(new double[] { -1.0, 0.0, 0.0 }, 50.0), false); minpackTest(new HelicalValleyFunction(new double[] { -10.0, 0.0, 0.0 }, 102.95630140987), false); minpackTest(new HelicalValleyFunction(new double[] { -100.0, 0.0, 0.0}, 991.261822123701), false); }
public void testMinpackPowellSingular() { minpackTest(new PowellSingularFunction(new double[] { 3.0, -1.0, 0.0, 1.0 }, 14.6628782986152), false); minpackTest(new PowellSingularFunction(new double[] { 30.0, -10.0, 0.0, 10.0 }, 1270.9838708654), false); minpackTest(new PowellSingularFunction(new double[] { 300.0, -100.0, 0.0, 100.0 }, 126887.903284750), false); }
public void testMinpackFreudensteinRoth() { minpackTest(new FreudensteinRothFunction(new double[] { 0.5, -2.0 }, 20.0124960961895, 6.99887517584575, new double[] { 11.4124844654993, -0.896827913731509 }), false); minpackTest(new FreudensteinRothFunction(new double[] { 5.0, -20.0 }, 12432.833948863, 6.9988751744895, new double[] { 11.41300466147456, -0.896796038685959 }), false); minpackTest(new FreudensteinRothFunction(new double[] { 50.0, -200.0 }, 11426454.595762, 6.99887517242903, new double[] { 11.412781785788564, -0.8968051074920405 }), false); }
public void testMinpackBard() { minpackTest(new BardFunction(1.0, 6.45613629515967, 0.0906359603390466, new double[] { 0.0824105765758334, 1.1330366534715, 2.34369463894115 }), false); minpackTest(new BardFunction(10.0, 36.1418531596785, 4.17476870138539, new double[] { 0.840666673818329, -158848033.259565, -164378671.653535 }), false); minpackTest(new BardFunction(100.0, 384.114678637399, 4.17476870135969, new double[] { 0.840666673867645, -158946167.205518, -164464906.857771 }), false); }
public void testMinpackKowalikOsborne() { minpackTest(new KowalikOsborneFunction(new double[] { 0.25, 0.39, 0.415, 0.39 }, 0.0728915102882945, 0.017535837721129, new double[] { 0.192807810476249, 0.191262653354071, 0.123052801046931, 0.136053221150517 }), false); minpackTest(new KowalikOsborneFunction(new double[] { 2.5, 3.9, 4.15, 3.9 }, 2.97937007555202, 0.032052192917937, new double[] { 728675.473768287, -14.0758803129393, -32977797.7841797, -20571594.1977912 }), false); minpackTest(new KowalikOsborneFunction(new double[] { 25.0, 39.0, 41.5, 39.0 }, 29.9590617016037, 0.0175364017658228, new double[] { 0.192948328597594, 0.188053165007911, 0.122430604321144, 0.134575665392506 }), false); }
public void testMinpackMeyer() { minpackTest(new MeyerFunction(new double[] { 0.02, 4000.0, 250.0 }, 41153.4665543031, 9.37794514651874, new double[] { 0.00560963647102661, 6181.34634628659, 345.223634624144 }), false); minpackTest(new MeyerFunction(new double[] { 0.2, 40000.0, 2500.0 }, 4168216.89130846, 792.917871779501, new double[] { 1.42367074157994e-11, 33695.7133432541, 901.268527953801 }), true); }
public void testMinpackWatson() { minpackTest(new WatsonFunction(6, 0.0, 5.47722557505166, 0.0478295939097601, new double[] { -0.0157249615083782, 1.01243488232965, -0.232991722387673, 1.26043101102818, -1.51373031394421,  0.99299727291842 }), false); minpackTest(new WatsonFunction(6, 10.0, 6433.12578950026, 0.0478295939096951, new double[] { -0.0157251901386677, 1.01243485860105, -0.232991545843829, 1.26042932089163, -1.51372776706575,  0.99299573426328 }), false); minpackTest(new WatsonFunction(6, 100.0, 674256.040605213, 0.047829593911544, new double[] { -0.0157247019712586, 1.01243490925658, -0.232991922761641, 1.26043292929555, -1.51373320452707,  0.99299901922322 }), false); minpackTest(new WatsonFunction(9, 0.0, 5.47722557505166, 0.00118311459212420, new double[] { -0.153070644166722e-4, 0.999789703934597, 0.0147639634910978,  0.146342330145992, 1.00082109454817,  -2.61773112070507, 4.10440313943354,  -3.14361226236241, 1.05262640378759 }), false); minpackTest(new WatsonFunction(9, 10.0, 12088.127069307, 0.00118311459212513, new double[] { -0.153071334849279e-4, 0.999789703941234, 0.0147639629786217,  0.146342334818836, 1.00082107321386,  -2.61773107084722, 4.10440307655564,  -3.14361222178686, 1.05262639322589 }), false); minpackTest(new WatsonFunction(9, 100.0, 1269109.29043834, 0.00118311459212384, new double[] { -0.153069523352176e-4, 0.999789703958371, 0.0147639625185392,  0.146342341096326, 1.00082104729164,  -2.61773101573645, 4.10440301427286,  -3.14361218602503, 1.05262638516774 }), false); minpackTest(new WatsonFunction(12, 0.0, 5.47722557505166, 0.217310402535861e-4, new double[] { -0.660266001396382e-8, 1.00000164411833, -0.000563932146980154, 0.347820540050756, -0.156731500244233,  1.05281515825593, -3.24727109519451,   7.2884347837505, -10.271848098614,    9.07411353715783, -4.54137541918194,   1.01201187975044 }), false); minpackTest(new WatsonFunction(12, 10.0, 19220.7589790951, 0.217310402518509e-4, new double[] { -0.663710223017410e-8, 1.00000164411787, -0.000563932208347327, 0.347820540486998, -0.156731503955652,  1.05281517654573, -3.2472711515214,   7.28843489430665, -10.2718482369638,   9.07411364383733, -4.54137546533666,   1.01201188830857 }), false); minpackTest(new WatsonFunction(12, 100.0, 2018918.04462367, 0.217310402539845e-4, new double[] { -0.663806046485249e-8, 1.00000164411786, -0.000563932210324959, 0.347820540503588, -0.156731504091375,  1.05281517718031, -3.24727115337025,   7.28843489775302, -10.2718482410813,   9.07411364688464, -4.54137546660822,   1.0120118885369 }), false); }
public void testMinpackBox3Dimensional() { minpackTest(new Box3DimensionalFunction(10, new double[] { 0.0, 10.0, 20.0 }, 32.1115837449572), false); }
public void testMinpackJennrichSampson() { minpackTest(new JennrichSampsonFunction(10, new double[] { 0.3, 0.4 }, 64.5856498144943, 11.1517793413499, new double[] { //                      0.2578330049, 0.257829976764542 0.2578199266368004, 0.25782997676455244 }), false); }
public void testMinpackBrownDennis() { minpackTest(new BrownDennisFunction(20, new double[] { 25.0, 5.0, -5.0, -1.0 }, 2815.43839161816, 292.954288244866, new double[] { -11.59125141003, 13.2024883984741, -0.403574643314272, 0.236736269844604 }), false); minpackTest(new BrownDennisFunction(20, new double[] { 250.0, 50.0, -50.0, -10.0 }, 555073.354173069, 292.954270581415, new double[] { -11.5959274272203, 13.2041866926242, -0.403417362841545, 0.236771143410386 }), false); minpackTest(new BrownDennisFunction(20, new double[] { 2500.0, 500.0, -500.0, -100.0 }, 61211252.2338581, 292.954306151134, new double[] { -11.5902596937374, 13.2020628854665, -0.403688070279258, 0.236665033746463 }), false); }
public void testMinpackChebyquad() { minpackTest(new ChebyquadFunction(1, 8, 1.0, 1.88623796907732, 1.88623796907732, new double[] { 0.5 }), false); minpackTest(new ChebyquadFunction(1, 8, 10.0, 5383344372.34005, 1.88424820499951, new double[] { 0.9817314924684 }), false); minpackTest(new ChebyquadFunction(1, 8, 100.0, 0.118088726698392e19, 1.88424820499347, new double[] { 0.9817314852934 }), false); minpackTest(new ChebyquadFunction(8, 8, 1.0, 0.196513862833975, 0.0593032355046727, new double[] { 0.0431536648587336, 0.193091637843267, 0.266328593812698, 0.499999334628884, 0.500000665371116, 0.733671406187302, 0.806908362156733, 0.956846335141266 }), false); minpackTest(new ChebyquadFunction(9, 9, 1.0, 0.16994993465202, 0.0, new double[] { 0.0442053461357828, 0.199490672309881, 0.23561910847106,  0.416046907892598, 0.5,        0.583953092107402, 0.764380891528940, 0.800509327690119, 0.955794653864217 }), false); minpackTest(new ChebyquadFunction(10, 10, 1.0, 0.183747831178711, 0.0806471004038253, new double[] { 0.0596202671753563, 0.166708783805937, 0.239171018813509, 0.398885290346268, 0.398883667870681, 0.601116332129320, 0.60111470965373,  0.760828981186491, 0.833291216194063, 0.940379732824644 }), false); }
public void testMinpackBrownAlmostLinear() { minpackTest(new BrownAlmostLinearFunction(10, 0.5, 16.5302162063499, 0.0, new double[] { 0.979430303349862, 0.979430303349862, 0.979430303349862, 0.979430303349862, 0.979430303349862, 0.979430303349862, 0.979430303349862, 0.979430303349862, 0.979430303349862, 1.20569696650138 }), false); minpackTest(new BrownAlmostLinearFunction(10, 5.0, 9765624.00089211, 0.0, new double[] { 0.979430303349865, 0.979430303349865, 0.979430303349865, 0.979430303349865, 0.979430303349865, 0.979430303349865, 0.979430303349865, 0.979430303349865, 0.979430303349865, 1.20569696650135 }), false); minpackTest(new BrownAlmostLinearFunction(10, 50.0, 0.9765625e17, 0.0, new double[] { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 }), false); minpackTest(new BrownAlmostLinearFunction(30, 0.5, 83.476044467848, 0.0, new double[] { 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 0.997754216442807, 1.06737350671578 }), false); minpackTest(new BrownAlmostLinearFunction(40, 0.5, 128.026364472323, 0.0, new double[] { 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 1.00000000000002, 0.999999999999121 }), false); }
public void testMinpackOsborne1() { minpackTest(new Osborne1Function(new double[] { 0.5, 1.5, -1.0, 0.01, 0.02, }, 0.937564021037838, 0.00739249260904843, new double[] { 0.375410049244025, 1.93584654543108, -1.46468676748716, 0.0128675339110439, 0.0221227011813076 }), false); }
public void testMinpackOsborne2() { minpackTest(new Osborne2Function(new double[] { 1.3, 0.65, 0.65, 0.7, 0.6, 3.0, 5.0, 7.0, 2.0, 4.5, 5.5 }, 1.44686540984712, 0.20034404483314, new double[] { 1.30997663810096, 0.43155248076, 0.633661261602859, 0.599428560991695, 0.754179768272449, 0.904300082378518, 1.36579949521007, 4.82373199748107, 2.39868475104871, 4.56887554791452, 5.67534206273052 }), false); }
public void test0() throws Throwable { LevenbergMarquardtOptimizer levenbergMarquardtOptimizer0 = new LevenbergMarquardtOptimizer(); assertEquals(1000, levenbergMarquardtOptimizer0.getMaxIterations()); }
public void testTrivial() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 2 } }, new double[] { 3 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1 }, new double[] { 0 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); try { optimizer.guessParametersErrors(); fail("an exception should have been thrown"); } catch (OptimizationException ee) { // expected behavior } catch (Exception e) { fail("wrong exception caught"); } assertEquals(1.5, optimum.getPoint()[0], 1.0e-10); assertEquals(3.0, optimum.getValue()[0], 1.0e-10); }
public void testQRColumnsPermutation() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 1.0, -1.0 }, { 0.0, 2.0 }, { 1.0, -2.0 } }, new double[] { 4.0, 6.0, 1.0 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals(7.0, optimum.getPoint()[0], 1.0e-10); assertEquals(3.0, optimum.getPoint()[1], 1.0e-10); assertEquals(4.0, optimum.getValue()[0], 1.0e-10); assertEquals(6.0, optimum.getValue()[1], 1.0e-10); assertEquals(1.0, optimum.getValue()[2], 1.0e-10); }
public void testNoDependency() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 2, 0, 0, 0, 0, 0 }, { 0, 2, 0, 0, 0, 0 }, { 0, 0, 2, 0, 0, 0 }, { 0, 0, 0, 2, 0, 0 }, { 0, 0, 0, 0, 2, 0 }, { 0, 0, 0, 0, 0, 2 } }, new double[] { 0.0, 1.1, 2.2, 3.3, 4.4, 5.5 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 }, new double[] { 0, 0, 0, 0, 0, 0 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); for (int i = 0; i < problem.target.length; ++i) { assertEquals(0.55 * i, optimum.getPoint()[i], 1.0e-10); } }
public void testOneSet() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 1, 0, 0 }, { -1, 1, 0 }, { 0, -1, 1 } }, new double[] { 1, 1, 1}); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals(1.0, optimum.getPoint()[0], 1.0e-10); assertEquals(2.0, optimum.getPoint()[1], 1.0e-10); assertEquals(3.0, optimum.getPoint()[2], 1.0e-10); }
public void testTwoSets() throws FunctionEvaluationException, OptimizationException { double epsilon = 1.0e-7; LinearProblem problem = new LinearProblem(new double[][] { { 2, 1,  0, 4,    0, 0 }, { -4, -2,  3, -7,    0, 0 }, { 4, 1, -2, 8,    0, 0 }, { 0, -3, -12, -1,    0, 0 }, { 0, 0,  0, 0, epsilon, 1 }, { 0, 0,  0, 0,    1, 1 } }, new double[] { 2, -9, 2, 2, 1 + epsilon * epsilon, 2}); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1, 1 }, new double[] { 0, 0, 0, 0, 0, 0 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals( 3.0, optimum.getPoint()[0], 1.0e-10); assertEquals( 4.0, optimum.getPoint()[1], 1.0e-10); assertEquals(-1.0, optimum.getPoint()[2], 1.0e-10); assertEquals(-2.0, optimum.getPoint()[3], 1.0e-10); assertEquals( 1.0 + epsilon, optimum.getPoint()[4], 1.0e-10); assertEquals( 1.0 - epsilon, optimum.getPoint()[5], 1.0e-10); }
public void testNonInversible() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 1, 2, -3 }, { 2, 1, 3 }, { -3, 0, -9 } }, new double[] { 1, 1, 1 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 0, 0, 0 }); assertTrue(Math.sqrt(problem.target.length) * optimizer.getRMS() > 0.6); try { optimizer.getCovariances(); fail("an exception should have been thrown"); } catch (OptimizationException ee) { // expected behavior } catch (Exception e) { fail("wrong exception caught"); } }
public void testIllConditioned() throws FunctionEvaluationException, OptimizationException { LinearProblem problem1 = new LinearProblem(new double[][] { { 10.0, 7.0, 8.0, 7.0 }, { 7.0, 5.0, 6.0, 5.0 }, { 8.0, 6.0, 10.0, 9.0 }, { 7.0, 5.0, 9.0, 10.0 } }, new double[] { 32, 23, 33, 31 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum1 = optimizer.optimize(problem1, problem1.target, new double[] { 1, 1, 1, 1 }, new double[] { 0, 1, 2, 3 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals(1.0, optimum1.getPoint()[0], 1.0e-10); assertEquals(1.0, optimum1.getPoint()[1], 1.0e-10); assertEquals(1.0, optimum1.getPoint()[2], 1.0e-10); assertEquals(1.0, optimum1.getPoint()[3], 1.0e-10); LinearProblem problem2 = new LinearProblem(new double[][] { { 10.00, 7.00, 8.10, 7.20 }, { 7.08, 5.04, 6.00, 5.00 }, { 8.00, 5.98, 9.89, 9.00 }, { 6.99, 4.99, 9.00, 9.98 } }, new double[] { 32, 23, 33, 31 }); VectorialPointValuePair optimum2 = optimizer.optimize(problem2, problem2.target, new double[] { 1, 1, 1, 1 }, new double[] { 0, 1, 2, 3 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals(-81.0, optimum2.getPoint()[0], 1.0e-8); assertEquals(137.0, optimum2.getPoint()[1], 1.0e-8); assertEquals(-34.0, optimum2.getPoint()[2], 1.0e-8); assertEquals( 22.0, optimum2.getPoint()[3], 1.0e-8); }
public void testMoreEstimatedParametersSimple() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 3.0, 2.0, 0.0, 0.0 }, { 0.0, 1.0, -1.0, 1.0 }, { 2.0, 0.0, 1.0, 0.0 } }, new double[] { 7.0, 3.0, 5.0 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 7, 6, 5, 4 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); }
public void testMoreEstimatedParametersUnsorted() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 1.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, { 0.0, 0.0, 1.0, 1.0, 1.0, 0.0 }, { 0.0, 0.0, 0.0, 0.0, 1.0, -1.0 }, { 0.0, 0.0, -1.0, 1.0, 0.0, 1.0 }, { 0.0, 0.0, 0.0, -1.0, 1.0, 0.0 } }, new double[] { 3.0, 12.0, -1.0, 7.0, 1.0 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1, 1, 1 }, new double[] { 2, 2, 2, 2, 2, 2 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals(3.0, optimum.getPointRef()[2], 1.0e-10); assertEquals(4.0, optimum.getPointRef()[3], 1.0e-10); assertEquals(5.0, optimum.getPointRef()[4], 1.0e-10); assertEquals(6.0, optimum.getPointRef()[5], 1.0e-10); }
public void testRedundantEquations() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 1.0, 1.0 }, { 1.0, -1.0 }, { 1.0, 3.0 } }, new double[] { 3.0, 1.0, 5.0 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals(2.0, optimum.getPointRef()[0], 1.0e-10); assertEquals(1.0, optimum.getPointRef()[1], 1.0e-10); }
public void testInconsistentEquations() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 1.0, 1.0 }, { 1.0, -1.0 }, { 1.0, 3.0 } }, new double[] { 3.0, 1.0, 4.0 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); optimizer.optimize(problem, problem.target, new double[] { 1, 1, 1 }, new double[] { 1, 1 }); assertTrue(optimizer.getRMS() > 0.1); }
public void testInconsistentSizes() throws FunctionEvaluationException, OptimizationException { LinearProblem problem = new LinearProblem(new double[][] { { 1, 0 }, { 0, 1 } }, new double[] { -1, 1 }); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(problem, problem.target, new double[] { 1, 1 }, new double[] { 0, 0 }); assertEquals(0, optimizer.getRMS(), 1.0e-10); assertEquals(-1, optimum.getPoint()[0], 1.0e-10); assertEquals(+1, optimum.getPoint()[1], 1.0e-10); try { optimizer.optimize(problem, problem.target, new double[] { 1 }, new double[] { 0, 0 }); fail("an exception should have been thrown"); } catch (OptimizationException oe) { // expected behavior } catch (Exception e) { fail("wrong exception caught"); } try { optimizer.optimize(problem, new double[] { 1 }, new double[] { 1 }, new double[] { 0, 0 }); fail("an exception should have been thrown"); } catch (FunctionEvaluationException oe) { // expected behavior } catch (Exception e) { fail("wrong exception caught"); } }
public void testControlParameters() { Circle circle = new Circle(); circle.addPoint( 30.0, 68.0); circle.addPoint( 50.0, -6.0); circle.addPoint(110.0, -20.0); circle.addPoint( 35.0, 15.0); circle.addPoint( 45.0, 97.0); checkEstimate(circle, 0.1, 10, 1.0e-14, 1.0e-16, 1.0e-10, false); checkEstimate(circle, 0.1, 10, 1.0e-15, 1.0e-17, 1.0e-10, true); checkEstimate(circle, 0.1, 5, 1.0e-15, 1.0e-16, 1.0e-10, true); circle.addPoint(300, -300); checkEstimate(circle, 0.1, 20, 1.0e-18, 1.0e-16, 1.0e-10, true); }
public void testCircleFitting() throws FunctionEvaluationException, OptimizationException { Circle circle = new Circle(); circle.addPoint( 30.0, 68.0); circle.addPoint( 50.0, -6.0); circle.addPoint(110.0, -20.0); circle.addPoint( 35.0, 15.0); circle.addPoint( 45.0, 97.0); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); VectorialPointValuePair optimum = optimizer.optimize(circle, new double[] { 0, 0, 0, 0, 0 }, new double[] { 1, 1, 1, 1, 1 }, new double[] { 98.680, 47.345 }); assertTrue(optimizer.getEvaluations() < 10); assertTrue(optimizer.getJacobianEvaluations() < 10); double rms = optimizer.getRMS(); assertEquals(1.768262623567235, Math.sqrt(circle.getN()) * rms, 1.0e-10); Point2D.Double center = new Point2D.Double(optimum.getPointRef()[0], optimum.getPointRef()[1]); assertEquals(69.96016176931406, circle.getRadius(center), 1.0e-10); assertEquals(96.07590211815305, center.x,   1.0e-10); assertEquals(48.13516790438953, center.y,   1.0e-10); double[][] cov = optimizer.getCovariances(); assertEquals(1.839, cov[0][0], 0.001); assertEquals(0.731, cov[0][1], 0.001); assertEquals(cov[0][1], cov[1][0], 1.0e-14); assertEquals(0.786, cov[1][1], 0.001); double[] errors = optimizer.guessParametersErrors(); assertEquals(1.384, errors[0], 0.001); assertEquals(0.905, errors[1], 0.001); // add perfect measurements and check errors are reduced double r = circle.getRadius(center); for (double d= 0; d < 2 * Math.PI; d += 0.01) { circle.addPoint(center.x + r * Math.cos(d), center.y + r * Math.sin(d)); } double[] target = new double[circle.getN()]; Arrays.fill(target, 0.0); double[] weights = new double[circle.getN()]; Arrays.fill(weights, 2.0); optimizer.optimize(circle, target, weights, new double[] { 98.680, 47.345 }); cov = optimizer.getCovariances(); assertEquals(0.0016, cov[0][0], 0.001); assertEquals(3.2e-7, cov[0][1], 1.0e-9); assertEquals(cov[0][1], cov[1][0], 1.0e-14); assertEquals(0.0016, cov[1][1], 0.001); errors = optimizer.guessParametersErrors(); assertEquals(0.004, errors[0], 0.001); assertEquals(0.004, errors[1], 0.001); }
public void testCircleFittingBadInit() throws FunctionEvaluationException, OptimizationException { Circle circle = new Circle(); double[][] points = new double[][] { {-0.312967, 0.072366}, {-0.339248, 0.132965}, {-0.379780, 0.202724}, {-0.390426, 0.260487}, {-0.361212, 0.328325}, {-0.346039, 0.392619}, {-0.280579, 0.444306}, {-0.216035, 0.470009}, {-0.149127, 0.493832}, {-0.075133, 0.483271}, {-0.007759, 0.452680}, { 0.060071, 0.410235}, { 0.103037, 0.341076}, { 0.118438, 0.273884}, { 0.131293, 0.192201}, { 0.115869, 0.129797}, { 0.072223, 0.058396}, { 0.022884, 0.000718}, {-0.053355, -0.020405}, {-0.123584, -0.032451}, {-0.216248, -0.032862}, {-0.278592, -0.005008}, {-0.337655, 0.056658}, {-0.385899, 0.112526}, {-0.405517, 0.186957}, {-0.415374, 0.262071}, {-0.387482, 0.343398}, {-0.347322, 0.397943}, {-0.287623, 0.458425}, {-0.223502, 0.475513}, {-0.135352, 0.478186}, {-0.061221, 0.483371}, { 0.003711, 0.422737}, { 0.065054, 0.375830}, { 0.108108, 0.297099}, { 0.123882, 0.222850}, { 0.117729, 0.134382}, { 0.085195, 0.056820}, { 0.029800, -0.019138}, {-0.027520, -0.072374}, {-0.102268, -0.091555}, {-0.200299, -0.106578}, {-0.292731, -0.091473}, {-0.356288, -0.051108}, {-0.420561, 0.014926}, {-0.471036, 0.074716}, {-0.488638, 0.182508}, {-0.485990, 0.254068}, {-0.463943, 0.338438}, {-0.406453, 0.404704}, {-0.334287, 0.466119}, {-0.254244, 0.503188}, {-0.161548, 0.495769}, {-0.075733, 0.495560}, { 0.001375, 0.434937}, { 0.082787, 0.385806}, { 0.115490, 0.323807}, { 0.141089, 0.223450}, { 0.138693, 0.131703}, { 0.126415, 0.049174}, { 0.066518, -0.010217}, {-0.005184, -0.070647}, {-0.080985, -0.103635}, {-0.177377, -0.116887}, {-0.260628, -0.100258}, {-0.335756, -0.056251}, {-0.405195, -0.000895}, {-0.444937, 0.085456}, {-0.484357, 0.175597}, {-0.472453, 0.248681}, {-0.438580, 0.347463}, {-0.402304, 0.422428}, {-0.326777, 0.479438}, {-0.247797, 0.505581}, {-0.152676, 0.519380}, {-0.071754, 0.516264}, { 0.015942, 0.472802}, { 0.076608, 0.419077}, { 0.127673, 0.330264}, { 0.159951, 0.262150}, { 0.153530, 0.172681}, { 0.140653, 0.089229}, { 0.078666, 0.024981}, { 0.023807, -0.037022}, {-0.048837, -0.077056}, {-0.127729, -0.075338}, {-0.221271, -0.067526} }; double[] target = new double[points.length]; Arrays.fill(target, 0.0); double[] weights = new double[points.length]; Arrays.fill(weights, 2.0); for (int i = 0; i < points.length; ++i) { circle.addPoint(points[i][0], points[i][1]); } LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); optimizer.setConvergenceChecker(new SimpleVectorialValueChecker(1.0e-8, 1.0e-8)); VectorialPointValuePair optimum = optimizer.optimize(circle, target, weights, new double[] { -12, -12 }); Point2D.Double center = new Point2D.Double(optimum.getPointRef()[0], optimum.getPointRef()[1]); assertTrue(optimizer.getEvaluations() < 25); assertTrue(optimizer.getJacobianEvaluations() < 20); assertEquals( 0.043, optimizer.getRMS(), 1.0e-3); assertEquals( 0.292235, circle.getRadius(center), 1.0e-6); assertEquals(-0.151738, center.x,   1.0e-6); assertEquals( 0.2075001, center.y,   1.0e-6); }
public void testMath199() throws FunctionEvaluationException { try { QuadraticProblem problem = new QuadraticProblem(); problem.addPoint (0, -3.182591015485607); problem.addPoint (1, -2.5581184967730577); problem.addPoint (2, -2.1488478161387325); problem.addPoint (3, -1.9122489313410047); problem.addPoint (4, 1.7785661310051026); LevenbergMarquardtOptimizer optimizer = new LevenbergMarquardtOptimizer(); optimizer.setQRRankingThreshold(0); optimizer.optimize(problem, new double[] { 0, 0, 0, 0, 0 }, new double[] { 0.0, 4.4e-323, 1.0, 4.4e-323, 0.0 }, new double[] { 0, 0, 0 }); fail("an exception should have been thrown"); } catch (OptimizationException ee) { // expected behavior } }
