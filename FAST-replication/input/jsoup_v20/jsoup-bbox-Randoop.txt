public void test001() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test001"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { java.nio.ByteBuffer byteBuffer1 = org.jsoup.helper.DataUtil.readToByteBuffer(inputStream0); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test002() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test002"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("#doctype"); org.junit.Assert.assertNull(str1); }
public void test003() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test003"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.load(inputStream0, "*", "UTF-8", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test004() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test004"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "#doctype", "#document"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test005() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test005"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":eq(10)"); org.junit.Assert.assertNull(str1); }
public void test006() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test006"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "hi!"); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "#document", "", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: #document"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); }
public void test007() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test007"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "\n<!--[]-->", ":lt(0)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test008() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test008"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "#document", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test009() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test009"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "#root", "#document"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test010() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test010"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "#data", "#root", parser8); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: #data"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); }
public void test011() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test011"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "hi!"); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "#doctype", "<#root class=\"\"></#root>", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: #doctype"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); }
public void test012() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test012"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "UTF-8", "[#doctype]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test013() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test013"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("#comment"); org.junit.Assert.assertNull(str1); }
public void test014() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test014"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) (byte) 0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.load(inputStream0, "[#doctype$=[]]", "#root", parser8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); }
public void test015() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test015"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[[]$=*]", "[^hi!]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test016() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test016"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[#doctype]", "#root"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test017() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test017"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("<#root class=\"\"></#root>"); org.junit.Assert.assertNull(str1); }
public void test018() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test018"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ":lt(0)", ":contains([#doctype]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test019() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test019"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "<#root class=\"\"></#root>", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test020() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test020"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[#doctype$=[]]", ":matches(null", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [#doctype$=[]]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); }
public void test021() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test021"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[[#doctype$=[]]!=[[]$=*]]", "[, , ]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test022() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test022"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("=[]]"); org.junit.Assert.assertNull(str1); }
public void test023() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test023"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "\n<!--[]-->", "hi!"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test024() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test024"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "", "<*></*>", parser3); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); }
public void test025() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test025"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) (byte) 0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.load(inputStream0, "", "=[]]", parser8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); }
public void test026() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test026"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ":contains([#doctype]", "[^hi!]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test027() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test027"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":containsOwn("); org.junit.Assert.assertNull(str1); }
public void test028() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test028"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, " :contains([#doctype]=\"\n&lt;!--[]--&gt;\"", ":contains([#doctype]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test029() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test029"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "#doctype", ":gt(1)", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: #doctype"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); }
public void test030() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test030"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "hi!", "hi!"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test031() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test031"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[^hi!]", "[hi!*=hi!]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test032() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test032"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document11 = parser3.parseInput("=[]]", ""); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.load(inputStream0, "     ", "#document", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(document11); }
public void test033() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test033"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "[^[]]", "*"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test034() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test034"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, " <!--[]-->", "[#doctype]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test035() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test035"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("*"); org.junit.Assert.assertNull(str1); }
public void test036() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test036"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.load(inputStream0, ":lt(0)", "[#*=<#root class=\"\"></#root>]", parser10); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); }
public void test037() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test037"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("<html>\n <head></head>\n <body>\n :eq(10)\n </body>\n</html>"); org.junit.Assert.assertNull(str1); }
public void test038() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test038"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); boolean boolean11 = parser8.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.load(inputStream0, "[[]$=*]", "#hi!", parser8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); }
public void test039() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test039"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "UTF-8", "[^[, , ]]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test040"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[[#root=#hi!]^=[#root=#hi!]]", " <!--[]-->", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [[#root=#hi!]^=[#root=#hi!]]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } }
public void test041() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test041"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "<#root class=\"\"></#root>\n<html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>", " ", parser8); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: <#root class=\"\"></#root>?<html>? <head></head>? <body>? UTF-8? </body>?</html>"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); }
public void test042() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test042"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser3.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document10 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[hi!*=hi!]", "hi!", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [hi!*=hi!]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); }
public void test043() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test043"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser8.getErrors(); boolean boolean10 = parser8.isTrackErrors(); org.jsoup.parser.Parser parser12 = parser8.setTrackErrors((int) '4'); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document13 = org.jsoup.helper.DataUtil.load(inputStream0, "#hi!", "hi!", parser8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(parser12); }
public void test044() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test044"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); java.util.List<org.jsoup.parser.ParseError> parseErrorList11 = parser8.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "                                                 ", "", parser8); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message:                                                 "); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertNull(parseErrorList11); }
public void test045() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test045"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[[^hi!]!=[^[]]]", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test046() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test046"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document7 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, " :contains([#doctype]=\"\n&lt;!--[]--&gt;\"", "<html>\n <head></head>\n <body>\n :eq(10)\n </body>\n</html>", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: :contains([#doctype]=\"?&lt;!--[]--&gt;\""); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); }
public void test047() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test047"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser8.getErrors(); boolean boolean10 = parser8.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.load(inputStream0, "<<*></*>></<*></*>>\n<*></*>", "[[]]", parser8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); }
public void test048() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test048"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[[]$=*]", "[^hi!]", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [[]$=*]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } }
public void test049() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test049"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, " <!--[]-->", "[[#root=#hi!]^=[#root=#hi!]]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test050() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test050"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "<<*></*>></<*></*>>\n<*></*>", "<#root>\n UTF-8\n</#root>\n<#root>\n <#root class=\"\"></#root>\n</#root>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test051() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test051"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser8.getErrors(); boolean boolean10 = parser8.isTrackErrors(); org.jsoup.parser.Parser parser12 = parser8.setTrackErrors((int) '4'); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document13 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "", "[#doctype$=[]]", parser12); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(parser12); }
public void test052() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test052"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ":contains([]", "[#*=<#root class=\"\"></#root>]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test053() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test053"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser3.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document10 = org.jsoup.helper.DataUtil.load(inputStream0, "[=[]]=<#root [#doctype$=[]]=\"[hi!*=hi!]\" class=\"\"></#root>hi!]", " <!--[]-->", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); }
public void test054() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test054"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(""); org.junit.Assert.assertNull(str1); }
public void test055() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test055"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "[=[]]=<#root [#doctype$=[]]=\"[hi!*=hi!]\" class=\"\"></#root>hi!]", "[#root=#hi!]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test056() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test056"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("<!DOCTYPE hi! \"hi!\">"); org.junit.Assert.assertNull(str1); }
public void test057() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test057"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(1); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "UTF-8", "<#root>\n UTF-8\n</#root>\n<#root>\n <#root class=\"\"></#root>\n</#root>", parser8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); }
public void test058() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test058"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("\n<!--[]-->"); org.junit.Assert.assertNull(str1); }
public void test059() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test059"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser7 = parser5.setTrackErrors((int) '#'); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document8 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "<#root [#doctype$=[]]=\"[hi!*=hi!]\" class=\"\"></#root>hi!", "#", parser5); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: <#root [#doctype$=[]]=\"[hi!*=hi!]\" class=\"\"></#root>hi!"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(parser7); }
public void test060() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test060"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) (byte) 0); org.jsoup.nodes.Document document13 = parser10.parseInput("<#root class=\"\"></#root>", " :contains([#doctype]=\" &lt;!--[]--&gt;\""); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document14 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "*", "[]", parser10); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: *"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertNotNull(document13); }
public void test061() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test061"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser3.getErrors(); org.jsoup.parser.Parser parser11 = parser3.setTrackErrors((int) (byte) 1); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.load(inputStream0, ":contains([#doctype]", "[[#doctype$=[]]$=utf-8]", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); org.junit.Assert.assertNotNull(parser11); }
public void test062() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test062"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ".", ":eq(32)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test063() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test063"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "*", "<#root>\n UTF-8\n</#root>\n<#root>\n <#root class=\"\"></#root>\n</#root>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test064() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test064"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) (byte) 0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.load(inputStream0, ":matchesOwn(null\n<#root>\n UTF-8\n</#root>", " [[]$=*]=\":contains([#doctype]\"", parser10); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertNotNull(parser10); }
public void test065() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test065"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "     ", "[, , , , <html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>\n<html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>\n<head></head>\n<body>\n UTF-8\n</body>, , ]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test066() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test066"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":contains("); org.junit.Assert.assertNull(str1); }
public void test067() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test067"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("[^[]]"); org.junit.Assert.assertNull(str1); }
public void test068() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test068"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "hi!"); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[^]", "[#root=#hi!]", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [^]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); }
public void test069() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test069"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("<#root class=\"\"></#root>\n<html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>"); org.junit.Assert.assertNull(str1); }
public void test070() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test070"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) (byte) 0); org.jsoup.nodes.Document document13 = parser10.parseInput("#document", "<*></*>"); org.jsoup.parser.Parser parser15 = parser10.setTrackErrors((int) (byte) -1); boolean boolean16 = parser15.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document17 = org.jsoup.helper.DataUtil.load(inputStream0, "[#$=#document]", "[[[]$=*]^=[^[]]]", parser15); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertNotNull(document13); org.junit.Assert.assertNotNull(parser15); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); }
public void test071() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test071"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) (byte) 0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((int) (byte) 100); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.load(inputStream0, "[[#root=#hi!]^=[#root=#hi!]]", "[#data^=[[]]]", parser8); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); }
public void test072() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test072"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ":gt(1)", "<html>\n <head></head>\n <body></body>\n</html>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test073() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test073"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[^#data]", ":contains(#comment"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test074() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test074"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.htmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document6 = org.jsoup.helper.DataUtil.load(inputStream0, "#<#root class=\"\"></#root>", "[:eq(10)*=.]", parser5); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); }
public void test075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test075"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.load(inputStream0, "#text", "[", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test076() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test076"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":matchesOwn(null\n<#root>\n UTF-8\n</#root>"); org.junit.Assert.assertNull(str1); }
public void test077() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test077"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ":gt(1)", "[*=[^[]]]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test078() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test078"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "<#root class=\"\"></#root>\n<html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test079() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test079"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser3.getErrors(); org.jsoup.parser.Parser parser11 = parser3.setTrackErrors((-1)); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, " [[]$=*]=\":contains([#doctype]\"", "[*=[^[]]]", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [[]$=*]=\":contains([#doctype]\""); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); org.junit.Assert.assertNotNull(parser11); }
public void test080() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test080"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "=[]]", ":eq(100)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test081() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test081"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "#", ":contains([^hi!]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test082() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test082"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(1); boolean boolean9 = parser3.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document10 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[#$=#document]", ":containsOwn(#comment", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [#$=#document]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); }
public void test083() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test083"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":containsOwn(#document"); org.junit.Assert.assertNull(str1); }
public void test084() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test084"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser3.getErrors(); org.jsoup.parser.Parser parser11 = parser3.setTrackErrors((int) (byte) 1); java.util.List<org.jsoup.parser.ParseError> parseErrorList12 = parser11.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document13 = org.jsoup.helper.DataUtil.load(inputStream0, "*", "[=[]]=<#root [#doctype$=[]]=\"[hi!*=hi!]\" class=\"\"></#root>hi!]", parser11); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); org.junit.Assert.assertNotNull(parser11); org.junit.Assert.assertNull(parseErrorList12); }
public void test085() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test085"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); boolean boolean9 = parser3.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document10 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "<#root>\n UTF-8\n</#root>\n<#root>\n <#root class=\"\"></#root>\n</#root>", "", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: <#root>? UTF-8?</#root>?<#root>? <#root class=\"\"></#root>?</#root>"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); }
public void test086() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test086"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ":contains([#doctype]", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test087() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test087"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser3.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document10 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "<html>\n <head></head>\n <body></body>\n</html>", "", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: <html>? <head></head>? <body></body>?</html>"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); }
public void test088() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test088"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ":gt(10)", "<html>\n <head></head>\n <body></body>\n</html>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test089() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test089"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "#doctype", ":containsOwn("); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test090() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test090"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ".[^hi!]", "<#root class=\"\"></#root>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test091() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test091"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "<#root>\n UTF-8\n</#root>", ":containsOwn(#document"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test092() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test092"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[#doctype]", ":lt(10)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test093() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test093"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) (byte) 0); org.jsoup.nodes.Document document13 = parser10.parseInput("#document", "<*></*>"); org.jsoup.parser.Parser parser15 = parser10.setTrackErrors((int) (byte) -1); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document16 = org.jsoup.helper.DataUtil.load(inputStream0, "", "                  ", parser10); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertNotNull(document13); org.junit.Assert.assertNotNull(parser15); }
public void test094() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test094"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((int) 'a'); org.jsoup.parser.Parser parser12 = parser8.setTrackErrors((int) (byte) 1); org.jsoup.parser.Parser parser14 = parser12.setTrackErrors((int) (short) 0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document15 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, ":matchesOwn(null", "[^[, , ]]", parser12); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: :matchesOwn(null"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertNotNull(parser12); org.junit.Assert.assertNotNull(parser14); }
public void test095() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test095"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) (byte) 0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "#<#root class=\"\"></#root>", "#hi!", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: #<#root class=\"\"></#root>"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertNotNull(parser10); }
public void test096() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test096"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) '#'); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.load(inputStream0, "<#root>\n <#root>\n UTF-8\n </#root>\n</#root>", "#hi!", parser10); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); }
public void test097() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test097"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ".<#root class=\"\"></#root>", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test098() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test098"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "<<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*><html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>\n<html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>\n<head></head>\n<body>\n UTF-8\n</body><<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*>", ":contains(", parser8); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: <<*></*>></<*></*>>?<*></*><<*></*>></<*></*>>?<*></*><<*></*>></<*></*>>?<*></*><<*></*>></<*></*>>?<*></*><html>? <head></head>? <body>? UTF-8? </body>?</html>?<html>? <head></head>? <body>? UTF-8? </body>?</html>?<head></head>?<body>? UTF-8?</body><<*></*>></<*></*>>?<*></*><<*></*>></<*></*>>?<*></*>"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); }
public void test099() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test099"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":eq(100)"); org.junit.Assert.assertNull(str1); }
public void test100() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test100"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.load(inputStream0, ":containsOwn(#document", "", parser10); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); }
public void test101() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test101"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":gt(10)"); org.junit.Assert.assertNull(str1); }
public void test102() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test102"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); boolean boolean7 = parser3.isTrackErrors(); boolean boolean8 = parser3.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.load(inputStream0, "UTF-8", "[#doctype$=[]]", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); }
public void test103() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test103"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) ' '); java.util.List<org.jsoup.parser.ParseError> parseErrorList11 = parser3.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "=[]]", "#document", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: =[]]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertNull(parseErrorList11); }
public void test104() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test104"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) (byte) 0); boolean boolean11 = parser10.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, ":contains([^hi!]", ":eq(10)", parser10); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: :contains([^hi!]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); }
public void test105() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test105"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "", ":lt(0)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test106() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test106"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "", "<<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*><html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>\n<html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>\n<head></head>\n<body>\n UTF-8\n</body><<*></*>></<*></*>>\n<*></*><<*></*>></<*></*>>\n<*></*>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test107() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test107"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser7 = parser5.setTrackErrors((int) (short) 1); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document8 = org.jsoup.helper.DataUtil.load(inputStream0, "<#root class=\"\"></#root>\n<html>\n <head></head>\n <body></body>\n</html>", "", parser7); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(parser7); }
public void test108() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test108"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "[hi!*=hi!]", "&amp;lt;!--[]--&amp;gt;&amp;lt;!--[]--&amp;gt;"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test109() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test109"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("[#data^=[[]]]"); org.junit.Assert.assertNull(str1); }
public void test110() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test110"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":contains(:eq(32)"); org.junit.Assert.assertNull(str1); }
public void test111() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test111"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); boolean boolean11 = parser8.isTrackErrors(); java.util.List<org.jsoup.parser.ParseError> parseErrorList12 = parser8.getErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document13 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, ":contains([]", "[^[, , ]]", parser8); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: :contains([]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNull(parseErrorList12); }
public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "<html>\n <head></head>\n <body>\n :contains(#comment\n </body>\n</html>", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test113() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test113"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "<html>\n <head></head>\n <body>\n UTF-8\n </body>\n</html>", "#root"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test114() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test114"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, " <!--[]-->", "[[[#doctype$=[]]!=[[]$=*]]*=<!doctype hi! \"hi!\">]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test115() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test115"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "", "<#root class=\"\"></#root>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test116() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test116"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "<#root>\n UTF-8\n</#root>\n<#root>\n <#root class=\"\"></#root>\n</#root>", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test117() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test117"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document9 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[hi!*=hi!]", ":contains([#doctype]", parser8); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [hi!*=hi!]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); }
public void test118() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test118"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ".[^hi!]", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test119() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test119"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "#doctype", ":contains([#doctype]=&quot; &amp;lt;!--[]--&amp;gt;&quot;"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test120() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test120"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ":gt(1)", ":gt(2)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test121() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test121"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "[#*=<#root class=\"\"></#root>]", ":lt(0)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test122() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test122"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType(":containsOwn([^[]]"); org.junit.Assert.assertNull(str1); }
public void test123() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test123"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); boolean boolean7 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser9 = parser3.setTrackErrors(1); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document10 = org.jsoup.helper.DataUtil.load(inputStream0, " <!--[]-->", ":containsOwn(", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(parser9); }
public void test124() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test124"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[^]", " text=\"*\""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test125() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test125"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(1); boolean boolean9 = parser3.isTrackErrors(); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document10 = org.jsoup.helper.DataUtil.load(inputStream0, ":containsOwn(:matchesown(null\n<#root>\n utf-8\n</#root>", "[[[]$=*]^=[^[]]]", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); }
public void test126() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test126"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ":contains([#doctype]", ":lt(0)"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test127() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test127"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ":contains( :contains([#doctype]=\"\n&lt;!--[]--&gt;\"", "<#document></#document>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test128() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test128"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors((int) 'a'); java.util.List<org.jsoup.parser.ParseError> parseErrorList9 = parser3.getErrors(); org.jsoup.parser.Parser parser11 = parser3.setTrackErrors((-1)); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.load(inputStream0, ":gt(10)", ":containsOwn([#root=#hi!]", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNull(parseErrorList9); org.junit.Assert.assertNotNull(parser11); }
public void test129() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test129"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "*", "<#root class=\"\"></#root>\n<html>\n <head></head>\n <body></body>\n</html>"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test130() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test130"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "\n<!--[]-->", "[*=[^[]]]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test131() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test131"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); boolean boolean6 = parser3.isTrackErrors(); boolean boolean7 = parser3.isTrackErrors(); boolean boolean8 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser10 = parser3.setTrackErrors((int) (byte) 1); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.load(inputStream0, " <!--[]-->", ":matchesOwn(null", parser10); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(parser10); }
public void test132() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test132"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "[:gt(0)^=<#root></#root>]", "[[[#doctype$=[]]!=[[]$=*]]*=<!doctype hi! \"hi!\">]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test133() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test133"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); org.jsoup.nodes.Document document8 = parser3.parseInput("", "UTF-8"); boolean boolean9 = parser3.isTrackErrors(); org.jsoup.parser.Parser parser11 = parser3.setTrackErrors((int) (byte) 0); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document12 = org.jsoup.helper.DataUtil.load(inputStream0, "", "#[^[]]", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNotNull(document8); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(parser11); }
public void test134() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test134"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); java.util.List<org.jsoup.parser.ParseError> parseErrorList11 = parser8.getErrors(); java.util.List<org.jsoup.parser.ParseError> parseErrorList12 = parser8.getErrors(); org.jsoup.parser.Parser parser14 = parser8.setTrackErrors(3); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document15 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[:contains(#comment$=[#doctype$=[]]]", ":containsOwn(<html>\n <head></head>\n <body>\n hi!\n </body>\n</html>", parser8); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [:contains(#comment$=[#doctype$=[]]]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); org.junit.Assert.assertNull(parseErrorList11); org.junit.Assert.assertNull(parseErrorList12); org.junit.Assert.assertNotNull(parser14); }
public void test135() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test135"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = org.jsoup.parser.Parser.xmlParser(); org.jsoup.parser.Parser parser5 = parser3.setTrackErrors(0); java.util.List<org.jsoup.parser.ParseError> parseErrorList6 = parser3.getErrors(); org.jsoup.parser.Parser parser8 = parser3.setTrackErrors(0); org.jsoup.parser.Parser parser10 = parser8.setTrackErrors((-1)); // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document11 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "", ":contains(", parser8); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(parser3); org.junit.Assert.assertNotNull(parser5); org.junit.Assert.assertNull(parseErrorList6); org.junit.Assert.assertNotNull(parser8); org.junit.Assert.assertNotNull(parser10); }
public void test136() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test136"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, ":gt(0)", "#hi!"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test137() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test137"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "<*></*>", ":contains( :contains([#doctype]=\"\n&lt;!--[]--&gt;\""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test138() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test138"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, ":gt(1)", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test139() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test139"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "[#document*=*]", "#doctype"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test140() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test140"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.load(inputStream0, "\n<!-- :contains([#doctype]=\" &lt;!--[]--&gt;\"-->", " [[]$=*]=\":contains([#doctype]\"", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test141() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test141"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, " text=\"[#doctype$=[]]\"", ":contains([]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test142() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test142"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "", "hi!"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test143() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test143"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "hi!", ""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test144"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("hi!"); org.junit.Assert.assertNull(str1); }
public void test145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test145"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.load(inputStream0, "[hi!$=hi!]", "hi!", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test146() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test146"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.load(inputStream0, "", "", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test147() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test147"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "hi!", " text=\"hi!\""); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test148() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test148"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.load(inputStream0, "", "[hi!$=hi!]", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test149() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test149"); java.io.InputStream inputStream0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.load(inputStream0, "hi!", ". text=\"hi!\"", parser3); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test150() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test150"); java.io.File file0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(file0, "hi!", " <!--[<html> <head></head> <body> hi! </body> </html>]hi!hi![]hi![<html> <head></head> <body> hi! </body> </html>]hi!-->"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test151() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test151"); java.io.InputStream inputStream0 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document3 = org.jsoup.helper.DataUtil.load(inputStream0, "[<html>\n <head></head>\n <body>\n hi!\n </body>\n</html>]hi!hi![]hi![<html>\n <head></head>\n <body>\n hi!\n </body>\n</html>]hi!", ":containsOwn([[[], ]=. text=\"hi!\"]"); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test152() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test152"); java.lang.String str1 = org.jsoup.helper.DataUtil.getCharsetFromContentType("[[hi!$=hi!]$=[[], ]]"); org.junit.Assert.assertNull(str1); }
public void test153() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test153"); java.nio.ByteBuffer byteBuffer0 = null; org.jsoup.parser.Parser parser3 = null; // The following exception was thrown during execution in test generation try { org.jsoup.nodes.Document document4 = org.jsoup.helper.DataUtil.parseByteData(byteBuffer0, "[^. text=&quot;hi!&quot;]", ". text=\"hi!\"", parser3); org.junit.Assert.fail("Expected exception of type java.nio.charset.IllegalCharsetNameException; message: [^. text=&quot;hi!&quot;]"); } catch (java.nio.charset.IllegalCharsetNameException e) { // Expected exception. } }
