public void test0() throws Throwable { BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null); try { DataUtil.load((InputStream) bufferedInputStream0, "jv$f[Q%V%UWX~", "jv$f[Q%V%UWX~"); fail("Expecting exception: IOException"); } catch(IOException e) { // // Stream closed // verifyException("java.io.BufferedInputStream", e); } }
public void test1() throws Throwable { Parser parser0 = Parser.xmlParser(); // Undeclared exception! try { DataUtil.load((InputStream) null, "UO4[b", "UO4[b", parser0); fail("Expecting exception: NullPointerException"); } catch(NullPointerException e) { // // no message in exception (getMessage() returned null) // verifyException("org.jsoup.helper.DataUtil", e); } }
public void test2() throws Throwable { File file0 = MockFile.createTempFile("RqHpI8*", "RqHpI8*"); Document document0 = DataUtil.load(file0, (String) null, "RqHpI8*"); assertEquals("RqHpI8*", document0.baseUri()); }
public void test3() throws Throwable { MockFile mockFile0 = new MockFile("v+-;BRiZ@7DTk", "v+-;BRiZ@7DTk"); try { DataUtil.load((File) mockFile0, "v+-;BRiZ@7DTk", "v+-;BRiZ@7DTk"); fail("Expecting exception: FileNotFoundException"); } catch(FileNotFoundException e) { // // no message in exception (getMessage() returned null) // verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e); } }
public void test4() throws Throwable { File file0 = MockFile.createTempFile("UTF-8", "UTF-8"); // Undeclared exception! try { DataUtil.load(file0, "UTF-8", "UTF-8"); fail("Expecting exception: StringIndexOutOfBoundsException"); } catch(StringIndexOutOfBoundsException e) { } }
public void test5() throws Throwable { ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(318); Parser parser0 = Parser.xmlParser(); Document document0 = DataUtil.parseByteData(byteBuffer0, "UTF-8", "UTF-8", parser0); assertEquals("#document", document0.nodeName()); }
public void test6() throws Throwable { byte[] byteArray0 = new byte[3]; ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0); ByteBuffer byteBuffer0 = DataUtil.readToByteBuffer(byteArrayInputStream0); assertEquals("java.nio.HeapByteBuffer[pos=0 lim=3 cap=3]", byteBuffer0.toString()); }
public void test7() throws Throwable { String string0 = DataUtil.getCharsetFromContentType("RqHpI8*"); assertNull(string0); }
public void test8() throws Throwable { String string0 = DataUtil.getCharsetFromContentType((String) null); assertNull(string0); }
