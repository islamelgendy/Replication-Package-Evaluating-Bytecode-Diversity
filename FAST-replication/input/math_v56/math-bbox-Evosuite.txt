public void test00() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); MultidimensionalCounter.Iterator multidimensionalCounter_Iterator0 = multidimensionalCounter0.iterator(); multidimensionalCounter_Iterator0.getCount(); }
public void test01() throws Throwable { int[] intArray0 = new int[2]; intArray0[0] = 2077; intArray0[1] = 4; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); MultidimensionalCounter.Iterator multidimensionalCounter_Iterator0 = multidimensionalCounter0.iterator(); // Undeclared exception! try { multidimensionalCounter_Iterator0.remove(); fail("Expecting exception: UnsupportedOperationException"); } catch(UnsupportedOperationException e) { // // no message in exception (getMessage() returned null) // verifyException("org.apache.commons.math.util.MultidimensionalCounter$Iterator", e); } }
public void test02() throws Throwable { int[] intArray0 = new int[2]; intArray0[0] = 1979; intArray0[1] = 1965; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); MultidimensionalCounter.Iterator multidimensionalCounter_Iterator0 = multidimensionalCounter0.iterator(); // Undeclared exception! try { multidimensionalCounter_Iterator0.getCount((-1160)); fail("Expecting exception: ArrayIndexOutOfBoundsException"); } catch(ArrayIndexOutOfBoundsException e) { // // -1160 // verifyException("org.apache.commons.math.util.MultidimensionalCounter$Iterator", e); } }
public void test03() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); int int0 = multidimensionalCounter0.getDimension(); assertEquals(1, int0); assertEquals(255, multidimensionalCounter0.getSize()); }
public void test04() throws Throwable { int[] intArray0 = new int[2]; intArray0[0] = 2077; intArray0[1] = 4; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); multidimensionalCounter0.getSizes(); assertEquals(8308, multidimensionalCounter0.getSize()); }
public void test05() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); int int0 = multidimensionalCounter0.getSize(); assertEquals(255, int0); }
public void test06() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); MultidimensionalCounter.Iterator multidimensionalCounter_Iterator0 = multidimensionalCounter0.new Iterator(); Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer()); multidimensionalCounter_Iterator0.forEachRemaining(consumer0); multidimensionalCounter_Iterator0.next(); assertEquals(255, multidimensionalCounter_Iterator0.getCount()); }
public void test07() throws Throwable { int[] intArray0 = new int[1]; MultidimensionalCounter multidimensionalCounter0 = null; try { multidimensionalCounter0 = new MultidimensionalCounter(intArray0); fail("Expecting exception: RuntimeException"); } catch(RuntimeException e) { // // 0 is smaller than, or equal to, the minimum (0) // verifyException("org.apache.commons.math.util.MultidimensionalCounter", e); } }
public void test08() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); // Undeclared exception! try { multidimensionalCounter0.getCounts((-1013)); fail("Expecting exception: RuntimeException"); } catch(RuntimeException e) { // // -1,013 out of [0, 255] range // verifyException("org.apache.commons.math.util.MultidimensionalCounter", e); } }
public void test09() throws Throwable { int[] intArray0 = new int[2]; intArray0[0] = 2077; intArray0[1] = 4; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); assertEquals(8308, multidimensionalCounter0.getSize()); int[] intArray1 = multidimensionalCounter0.getCounts(2455); assertArrayEquals(new int[] {613, 3}, intArray1); }
public void test10() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); // Undeclared exception! try { multidimensionalCounter0.getCounts(255); fail("Expecting exception: RuntimeException"); } catch(RuntimeException e) { // // 255 out of [0, 255] range // verifyException("org.apache.commons.math.util.MultidimensionalCounter", e); } }
public void test11() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); try { multidimensionalCounter0.getCount(intArray0); fail("Expecting exception: RuntimeException"); } catch(RuntimeException e) { // // 255 out of [0, 254] range // verifyException("org.apache.commons.math.util.MultidimensionalCounter", e); } }
public void test12() throws Throwable { int[] intArray0 = new int[2]; intArray0[0] = 2077; intArray0[1] = 4; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); // Undeclared exception! try { multidimensionalCounter0.toString(); fail("Expecting exception: RuntimeException"); } catch(RuntimeException e) { // // 1 != 2 // verifyException("org.apache.commons.math.util.MultidimensionalCounter", e); } }
public void test13() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); String string0 = multidimensionalCounter0.toString(); assertEquals("[0]", string0); assertEquals(255, multidimensionalCounter0.getSize()); }
public void test14() throws Throwable { int[] intArray0 = new int[1]; intArray0[0] = 255; MultidimensionalCounter multidimensionalCounter0 = new MultidimensionalCounter(intArray0); MultidimensionalCounter.Iterator multidimensionalCounter_Iterator0 = multidimensionalCounter0.iterator(); int[] intArray1 = multidimensionalCounter_Iterator0.getCounts(); try { multidimensionalCounter0.getCount(intArray1); fail("Expecting exception: RuntimeException"); } catch(RuntimeException e) { // // -1 out of [0, 254] range // verifyException("org.apache.commons.math.util.MultidimensionalCounter", e); } }
