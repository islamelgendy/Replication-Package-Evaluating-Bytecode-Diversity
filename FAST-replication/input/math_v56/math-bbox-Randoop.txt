public void test001() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test001"); int[] intArray5 = new int[] { '4', 10, '4', 0, (byte) 10 }; // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter6 = new org.apache.commons.math.util.MultidimensionalCounter(intArray5); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)"); } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[52, 10, 52, 0, 10]"); }
public void test002() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test002"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter8 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); }
public void test003() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test003"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter17 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); }
public void test004() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test004"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); // The following exception was thrown during execution in test generation try { java.lang.String str45 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); }
public void test005() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test005"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray45 = new int[] {}; int[] intArray51 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray51); int[] intArray53 = new int[] {}; int[] intArray59 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int60 = org.apache.commons.math.util.MathUtils.distance1(intArray53, intArray59); int[] intArray61 = new int[] {}; int[] intArray67 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int68 = org.apache.commons.math.util.MathUtils.distance1(intArray61, intArray67); int int69 = org.apache.commons.math.util.MathUtils.distance1(intArray53, intArray67); int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray51, intArray67); // The following exception was thrown during execution in test generation try { int int71 = multidimensionalCounter44.getCount(intArray51); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]"); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0); org.junit.Assert.assertNotNull(intArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]"); org.junit.Assert.assertNotNull(intArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); }
public void test006() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test006"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray45 = new int[] {}; int[] intArray51 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray51); // The following exception was thrown during execution in test generation try { int int53 = multidimensionalCounter44.getCount(intArray45); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 0 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); }
public void test007() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test007"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray45 = new int[] {}; int[] intArray51 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray51); int[] intArray53 = new int[] {}; int[] intArray59 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int60 = org.apache.commons.math.util.MathUtils.distance1(intArray53, intArray59); int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray59); int[] intArray62 = new int[] {}; double double63 = org.apache.commons.math.util.MathUtils.distance(intArray45, intArray62); int[] intArray64 = org.apache.commons.math.util.MathUtils.copyOf(intArray45); // The following exception was thrown during execution in test generation try { int int65 = multidimensionalCounter44.getCount(intArray45); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 0 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]"); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]"); org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]"); }
public void test008() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test008"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); // The following exception was thrown during execution in test generation try { java.lang.String str46 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); }
public void test009() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test009"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { iterator45.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); }
public void test010() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test010"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int[] intArray54 = new int[] {}; int[] intArray60 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray60); int[] intArray62 = new int[] {}; int[] intArray68 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int69 = org.apache.commons.math.util.MathUtils.distance1(intArray62, intArray68); int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray68); int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray68); int[] intArray72 = org.apache.commons.math.util.MathUtils.copyOf(intArray68); // The following exception was thrown during execution in test generation try { int int73 = multidimensionalCounter44.getCount(intArray72); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]"); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 32, 1023, 10, 1]"); }
public void test011() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test011"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); java.util.Spliterator<java.lang.Integer> intSpliterator45 = multidimensionalCounter44.spliterator(); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int[] intArray54 = new int[] {}; int[] intArray60 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray60); int[] intArray62 = new int[] {}; int[] intArray68 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int69 = org.apache.commons.math.util.MathUtils.distance1(intArray62, intArray68); int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray68); int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray68); int[] intArray72 = org.apache.commons.math.util.MathUtils.copyOf(intArray68); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter73 = new org.apache.commons.math.util.MultidimensionalCounter(intArray68); // The following exception was thrown during execution in test generation try { int int74 = multidimensionalCounter44.getCount(intArray68); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intSpliterator45); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]"); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 32, 1023, 10, 1]"); }
public void test012() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test012"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int[] intArray54 = new int[] {}; int[] intArray60 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray60); int int62 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray60); // The following exception was thrown during execution in test generation try { int int63 = multidimensionalCounter44.getCount(intArray46); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 0 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); }
public void test013() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test013"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); // The following exception was thrown during execution in test generation try { java.lang.String str28 = multidimensionalCounter27.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); }
public void test014() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test014"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray42); // The following exception was thrown during execution in test generation try { int int45 = multidimensionalCounter27.getCount(intArray42); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); }
public void test015() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test015"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); java.util.Spliterator<java.lang.Integer> intSpliterator45 = multidimensionalCounter44.spliterator(); int int46 = multidimensionalCounter44.getSize(); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); // The following exception was thrown during execution in test generation try { int int55 = multidimensionalCounter44.getCount(intArray53); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intSpliterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3273600 + "'", int46 == 3273600); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); }
public void test016() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test016"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int[] intArray54 = new int[] {}; int[] intArray60 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray60); int[] intArray62 = new int[] {}; int[] intArray68 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int69 = org.apache.commons.math.util.MathUtils.distance1(intArray62, intArray68); int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray68); int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray68); // The following exception was thrown during execution in test generation try { int int72 = multidimensionalCounter44.getCount(intArray68); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]"); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); }
public void test017() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test017"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); java.util.Spliterator<java.lang.Integer> intSpliterator45 = multidimensionalCounter44.spliterator(); int int46 = multidimensionalCounter44.getSize(); // The following exception was thrown during execution in test generation try { int[] intArray48 = multidimensionalCounter44.getCounts((-127)); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -127 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intSpliterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3273600 + "'", int46 == 3273600); }
public void test018() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test018"); int[] intArray0 = null; // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter1 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } }
public void test019() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test019"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int[] intArray51 = multidimensionalCounter44.getCounts(4); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter52 = new org.apache.commons.math.util.MultidimensionalCounter(intArray51); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)"); } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 4, 0]"); }
public void test020() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test020"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); // The following exception was thrown during execution in test generation try { java.lang.String str49 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); }
public void test021() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test021"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int[] intArray55 = new int[] {}; int[] intArray61 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int62 = org.apache.commons.math.util.MathUtils.distance1(intArray55, intArray61); int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray61); int[] intArray64 = org.apache.commons.math.util.MathUtils.copyOf(intArray61); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = org.apache.commons.math.util.MathUtils.copyOf(intArray71); int int74 = org.apache.commons.math.util.MathUtils.distanceInf(intArray61, intArray73); // The following exception was thrown during execution in test generation try { int int75 = multidimensionalCounter44.getCount(intArray73); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]"); org.junit.Assert.assertNotNull(intArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0); }
public void test022() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test022"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; double double18 = org.apache.commons.math.util.MathUtils.distance(intArray0, intArray17); int[] intArray19 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); int[] intArray21 = org.apache.commons.math.util.MathUtils.copyOf(intArray19, (int) (byte) 100); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter22 = new org.apache.commons.math.util.MultidimensionalCounter(intArray19); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]"); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); }
public void test023() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test023"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); // The following exception was thrown during execution in test generation try { iterator48.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); }
public void test024() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test024"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); int[] intArray49 = new int[] {}; int[] intArray55 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray55); int[] intArray57 = new int[] {}; int[] intArray63 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray57, intArray63); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int int73 = org.apache.commons.math.util.MathUtils.distance1(intArray57, intArray71); int int74 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray71); int[] intArray76 = org.apache.commons.math.util.MathUtils.copyOf(intArray49, (int) (byte) 0); int[] intArray78 = org.apache.commons.math.util.MathUtils.copyOf(intArray49, 0); int[] intArray79 = new int[] {}; int[] intArray85 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int86 = org.apache.commons.math.util.MathUtils.distance1(intArray79, intArray85); int int87 = org.apache.commons.math.util.MathUtils.distanceInf(intArray49, intArray85); // The following exception was thrown during execution in test generation try { double double88 = org.apache.commons.math.util.MathUtils.distance(intArray47, intArray49); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]"); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0); org.junit.Assert.assertNotNull(intArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]"); org.junit.Assert.assertNotNull(intArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]"); org.junit.Assert.assertNotNull(intArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0); org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0); }
public void test025() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test025"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int int50 = multidimensionalCounter44.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); }
public void test026() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test026"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); // The following exception was thrown during execution in test generation try { iterator48.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); }
public void test027() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test027"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); // The following exception was thrown during execution in test generation try { java.lang.String str48 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); }
public void test028() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test028"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = new int[] {}; int[] intArray79 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray79); int[] intArray81 = new int[] {}; int[] intArray87 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray81, intArray87); int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray87); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray87); int int91 = org.apache.commons.math.util.MathUtils.distanceInf(intArray48, intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter92 = new org.apache.commons.math.util.MultidimensionalCounter(intArray71); // The following exception was thrown during execution in test generation try { int int93 = multidimensionalCounter44.getCount(intArray71); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]"); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); }
public void test029() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test029"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); // The following exception was thrown during execution in test generation try { java.lang.String str49 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); }
public void test030() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test030"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int int29 = multidimensionalCounter27.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5); }
public void test031() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test031"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); int[] intArray52 = null; // The following exception was thrown during execution in test generation try { int int53 = multidimensionalCounter44.getCount(intArray52); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); }
public void test032() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test032"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator47 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { int int49 = iterator47.getCount(32834796); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32834796"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator47); }
public void test033() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test033"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); // The following exception was thrown during execution in test generation try { int[] intArray48 = multidimensionalCounter44.getCounts(1304135809); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 1,304,135,809 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); }
public void test034() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test034"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); int[] intArray53 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator54 = multidimensionalCounter44.iterator(); int[] intArray55 = iterator54.getCounts(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator54); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0, 0, 0, -1]"); }
public void test035() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test035"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); int int50 = iterator48.getCount(); int[] intArray51 = iterator48.getCounts(); int int52 = iterator48.getCount(); int int53 = iterator48.getCount(); // The following exception was thrown during execution in test generation try { iterator48.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); }
public void test036() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test036"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator31 = multidimensionalCounter27.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator32 = multidimensionalCounter27.new Iterator(); // The following exception was thrown during execution in test generation try { int int34 = iterator32.getCount(3273600); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3273600"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); }
public void test037() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test037"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); int[] intArray48 = multidimensionalCounter44.getSizes(); int int49 = multidimensionalCounter44.getDimension(); int[] intArray50 = new int[] {}; int[] intArray56 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int57 = org.apache.commons.math.util.MathUtils.distance1(intArray50, intArray56); int[] intArray58 = new int[] {}; int[] intArray64 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int65 = org.apache.commons.math.util.MathUtils.distance1(intArray58, intArray64); int[] intArray66 = new int[] {}; int[] intArray72 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int73 = org.apache.commons.math.util.MathUtils.distance1(intArray66, intArray72); int int74 = org.apache.commons.math.util.MathUtils.distance1(intArray58, intArray72); int int75 = org.apache.commons.math.util.MathUtils.distance1(intArray50, intArray72); // The following exception was thrown during execution in test generation try { int int76 = multidimensionalCounter44.getCount(intArray50); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 0 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]"); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]"); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]"); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0); org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0); }
public void test038() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test038"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); int[] intArray53 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator54 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { int int56 = iterator54.getCount(300); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 300"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator54); }
public void test039() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test039"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); int[] intArray31 = multidimensionalCounter27.getSizes(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); }
public void test040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test040"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator28 = multidimensionalCounter27.iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(iterator28); }
public void test041() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test041"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray11 = multidimensionalCounter9.getCounts((int) (byte) 1); int[] intArray12 = new int[] {}; int[] intArray18 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int19 = org.apache.commons.math.util.MathUtils.distance1(intArray12, intArray18); int[] intArray20 = new int[] {}; int[] intArray26 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int27 = org.apache.commons.math.util.MathUtils.distance1(intArray20, intArray26); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int int36 = org.apache.commons.math.util.MathUtils.distance1(intArray20, intArray34); int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray34); int[] intArray38 = org.apache.commons.math.util.MathUtils.copyOf(intArray34); // The following exception was thrown during execution in test generation try { int int39 = multidimensionalCounter9.getCount(intArray34); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 1, 0]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]"); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 32, 1023, 10, 1]"); }
public void test042() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test042"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray10 = multidimensionalCounter9.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator11 = multidimensionalCounter9.new Iterator(); int int12 = iterator11.getCount(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); }
public void test043() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test043"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = org.apache.commons.math.util.MathUtils.copyOf(intArray14); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray40); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray40); int[] intArray44 = org.apache.commons.math.util.MathUtils.copyOf(intArray40); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray40); double double46 = org.apache.commons.math.util.MathUtils.distance(intArray17, intArray40); int[] intArray47 = null; // The following exception was thrown during execution in test generation try { int int48 = org.apache.commons.math.util.MathUtils.distanceInf(intArray40, intArray47); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d); }
public void test044() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test044"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); int[] intArray29 = multidimensionalCounter27.getCounts(10); int[] intArray30 = null; // The following exception was thrown during execution in test generation try { int int31 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray30); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0, 1, 0, 0]"); }
public void test045() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test045"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(iterator50); }
public void test046() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test046"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray28 = null; // The following exception was thrown during execution in test generation try { int int29 = org.apache.commons.math.util.MathUtils.distanceInf(intArray26, intArray28); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); }
public void test047() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test047"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator46 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { int int48 = iterator46.getCount(128); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 128"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(iterator46); }
public void test048() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test048"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); }
public void test049() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test049"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator28 = multidimensionalCounter27.iterator(); // The following exception was thrown during execution in test generation try { iterator28.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(iterator28); }
public void test050() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test050"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter48.iterator(); boolean boolean51 = iterator50.hasNext(); boolean boolean52 = iterator50.hasNext(); boolean boolean53 = iterator50.hasNext(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(iterator50); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); }
public void test051() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test051"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); int[] intArray49 = new int[] {}; int[] intArray55 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray55); int[] intArray57 = org.apache.commons.math.util.MathUtils.copyOf(intArray55); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter58 = new org.apache.commons.math.util.MultidimensionalCounter(intArray57); int[] intArray60 = multidimensionalCounter58.getCounts((int) (byte) 1); double double61 = org.apache.commons.math.util.MathUtils.distance(intArray47, intArray60); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 0, 0, 1, 0]"); org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1023.5892730973688d + "'", double61 == 1023.5892730973688d); }
public void test052() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test052"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); // The following exception was thrown during execution in test generation try { java.lang.String str28 = multidimensionalCounter27.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); }
public void test053() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test053"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertNotNull(iterator49); }
public void test054() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test054"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); int[] intArray47 = multidimensionalCounter44.getSizes(); java.util.Spliterator<java.lang.Integer> intSpliterator48 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator48); }
public void test055() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test055"); org.apache.commons.math.exception.util.Localizable localizable0 = null; java.lang.Object[] objArray1 = null; org.apache.commons.math.exception.NullArgumentException nullArgumentException2 = new org.apache.commons.math.exception.NullArgumentException(localizable0, objArray1); java.lang.Throwable[] throwableArray3 = nullArgumentException2.getSuppressed(); int[] intArray5 = new int[] {}; int[] intArray11 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int12 = org.apache.commons.math.util.MathUtils.distance1(intArray5, intArray11); int[] intArray13 = new int[] {}; int[] intArray19 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int20 = org.apache.commons.math.util.MathUtils.distance1(intArray13, intArray19); int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray5, intArray19); int[] intArray22 = new int[] {}; int[] intArray28 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int29 = org.apache.commons.math.util.MathUtils.distance1(intArray22, intArray28); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int[] intArray38 = new int[] {}; int[] intArray44 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray44); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray44); int int47 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray44); int int48 = org.apache.commons.math.util.MathUtils.distanceInf(intArray5, intArray28); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray28); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter49); int int52 = multidimensionalCounter49.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator53 = multidimensionalCounter49.new Iterator(); int int54 = multidimensionalCounter49.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator55 = multidimensionalCounter49.new Iterator(); int[] intArray56 = iterator55.getCounts(); nullArgumentException2.setContext("org.apache.commons.math.exception.NotPositiveException: null is smaller than the minimum (0)", (java.lang.Object) intArray56); org.junit.Assert.assertNotNull(throwableArray3); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]"); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); org.junit.Assert.assertNotNull(iterator50); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3273600 + "'", int52 == 3273600); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 0, 0, 0, -1]"); }
public void test056() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test056"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); int[] intArray48 = multidimensionalCounter44.getSizes(); // The following exception was thrown during execution in test generation try { int[] intArray50 = org.apache.commons.math.util.MathUtils.copyOf(intArray48, (-1020481994)); org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null"); } catch (java.lang.NegativeArraySizeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); }
public void test057() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test057"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); int int50 = multidimensionalCounter48.getSize(); // The following exception was thrown during execution in test generation try { java.lang.String str51 = multidimensionalCounter48.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); }
public void test058() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test058"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); int[] intArray46 = iterator45.getCounts(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, -1]"); }
public void test059() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test059"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.lang.Class<?> wildcardClass49 = multidimensionalCounter48.getClass(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(wildcardClass49); }
public void test060() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test060"); int[] intArray0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int int17 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray15); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray40); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray40); int int44 = org.apache.commons.math.util.MathUtils.distanceInf(intArray1, intArray24); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray24); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int[] intArray54 = new int[] {}; int[] intArray60 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray60); int[] intArray62 = new int[] {}; int[] intArray68 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int69 = org.apache.commons.math.util.MathUtils.distance1(intArray62, intArray68); int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray68); int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray68); int[] intArray72 = org.apache.commons.math.util.MathUtils.copyOf(intArray68); int int73 = org.apache.commons.math.util.MathUtils.distanceInf(intArray24, intArray72); // The following exception was thrown during execution in test generation try { int int74 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray72); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]"); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); }
public void test061() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test061"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) intArray22); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); }
public void test062() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test062"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); int int46 = multidimensionalCounter44.getDimension(); int[] intArray47 = multidimensionalCounter44.getSizes(); // The following exception was thrown during execution in test generation try { int[] intArray49 = multidimensionalCounter44.getCounts((-3)); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -3 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); }
public void test063() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test063"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter48.iterator(); int int52 = iterator50.getCount(4); // The following exception was thrown during execution in test generation try { iterator50.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(iterator50); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); }
public void test064() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test064"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator53 = multidimensionalCounter44.spliterator(); int int54 = multidimensionalCounter44.getDimension(); // The following exception was thrown during execution in test generation try { java.lang.String str55 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertNotNull(intSpliterator53); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5); }
public void test065() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test065"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); int[] intArray48 = multidimensionalCounter44.getCounts(9); int int49 = multidimensionalCounter44.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0, 0, 9, 0]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); }
public void test066() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test066"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); int int50 = iterator48.getCount(); int[] intArray51 = iterator48.getCounts(); // The following exception was thrown during execution in test generation try { int int53 = iterator48.getCount(39); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 39"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); }
public void test067() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test067"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); }
public void test068() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test068"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray31); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray15, intArray31); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray31); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter36 = new org.apache.commons.math.util.MultidimensionalCounter(intArray31); int int37 = org.apache.commons.math.util.MathUtils.distanceInf(intArray8, intArray31); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); }
public void test069() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test069"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter48.iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter48.new Iterator(); // The following exception was thrown during execution in test generation try { java.lang.String str52 = multidimensionalCounter48.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(iterator50); }
public void test070() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test070"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int int47 = iterator45.getCount(); int[] intArray48 = iterator45.getCounts(); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray48); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); }
public void test071() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test071"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter48.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); }
public void test072() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test072"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int int50 = multidimensionalCounter44.getDimension(); int int51 = multidimensionalCounter44.getDimension(); // The following exception was thrown during execution in test generation try { int[] intArray53 = multidimensionalCounter44.getCounts((-1023)); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -1,023 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5); }
public void test073() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test073"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); int int46 = multidimensionalCounter44.getDimension(); int[] intArray47 = multidimensionalCounter44.getSizes(); // The following exception was thrown during execution in test generation try { java.lang.String str48 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); }
public void test074() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test074"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); int[] intArray47 = org.apache.commons.math.util.MathUtils.copyOf(intArray46); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); }
public void test075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test075"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); // The following exception was thrown during execution in test generation try { int[] intArray29 = multidimensionalCounter27.getCounts((-4)); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -4 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); }
public void test076() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test076"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); int int31 = multidimensionalCounter27.getSize(); int[] intArray32 = multidimensionalCounter27.getSizes(); int int33 = multidimensionalCounter27.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator34 = multidimensionalCounter27.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator35 = multidimensionalCounter27.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3273600 + "'", int31 == 3273600); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3273600 + "'", int33 == 3273600); }
public void test077() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test077"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int int50 = multidimensionalCounter44.getDimension(); // The following exception was thrown during execution in test generation try { java.lang.String str51 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5); }
public void test078() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test078"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray10 = multidimensionalCounter9.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator11 = multidimensionalCounter9.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator12 = multidimensionalCounter9.new Iterator(); java.lang.Class<?> wildcardClass13 = multidimensionalCounter9.getClass(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(wildcardClass13); }
public void test079() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test079"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int[] intArray51 = multidimensionalCounter44.getCounts(4); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); int int53 = iterator52.getCount(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 4, 0]"); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); }
public void test080() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test080"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); int int50 = iterator48.getCount(); int int51 = iterator48.getCount(); // The following exception was thrown during execution in test generation try { iterator48.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); }
public void test081() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test081"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray10 = multidimensionalCounter9.getSizes(); int int11 = multidimensionalCounter9.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5); }
public void test082() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test082"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); }
public void test083() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test083"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); int[] intArray44 = new int[] {}; int[] intArray50 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int51 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray50); int[] intArray52 = new int[] {}; int[] intArray58 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int59 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray58); int int60 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray58); int[] intArray61 = new int[] {}; int[] intArray67 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int68 = org.apache.commons.math.util.MathUtils.distance1(intArray61, intArray67); int[] intArray69 = new int[] {}; int[] intArray75 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int76 = org.apache.commons.math.util.MathUtils.distance1(intArray69, intArray75); int[] intArray77 = new int[] {}; int[] intArray83 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int84 = org.apache.commons.math.util.MathUtils.distance1(intArray77, intArray83); int int85 = org.apache.commons.math.util.MathUtils.distance1(intArray69, intArray83); int int86 = org.apache.commons.math.util.MathUtils.distance1(intArray67, intArray83); int int87 = org.apache.commons.math.util.MathUtils.distanceInf(intArray44, intArray67); int[] intArray88 = org.apache.commons.math.util.MathUtils.copyOf(intArray44); double double89 = org.apache.commons.math.util.MathUtils.distance(intArray0, intArray44); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter90 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]"); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0); org.junit.Assert.assertNotNull(intArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]"); org.junit.Assert.assertNotNull(intArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0); org.junit.Assert.assertNotNull(intArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]"); org.junit.Assert.assertNotNull(intArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0); org.junit.Assert.assertNotNull(intArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]"); org.junit.Assert.assertNotNull(intArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0); org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0); org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0); org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0); org.junit.Assert.assertNotNull(intArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[]"); org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d); }
public void test084() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test084"); org.apache.commons.math.exception.DimensionMismatchException dimensionMismatchException2 = new org.apache.commons.math.exception.DimensionMismatchException((-3273600), 32); int[] intArray4 = new int[] {}; int[] intArray10 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int11 = org.apache.commons.math.util.MathUtils.distance1(intArray4, intArray10); int[] intArray12 = new int[] {}; int[] intArray18 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int19 = org.apache.commons.math.util.MathUtils.distance1(intArray12, intArray18); int int20 = org.apache.commons.math.util.MathUtils.distance1(intArray4, intArray18); int[] intArray21 = new int[] {}; int[] intArray27 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int28 = org.apache.commons.math.util.MathUtils.distance1(intArray21, intArray27); int[] intArray29 = new int[] {}; int[] intArray35 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int36 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray35); int[] intArray37 = new int[] {}; int[] intArray43 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray43); int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray43); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray43); int int47 = org.apache.commons.math.util.MathUtils.distanceInf(intArray4, intArray27); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray27); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter48.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter48); int int51 = multidimensionalCounter48.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter48.new Iterator(); int int53 = multidimensionalCounter48.getSize(); int[] intArray55 = multidimensionalCounter48.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator56 = multidimensionalCounter48.iterator(); dimensionMismatchException2.setContext("org.apache.commons.math.exception.NotFiniteNumberException: 0 is not a finite number", (java.lang.Object) multidimensionalCounter48); org.apache.commons.math.exception.util.Localizable localizable58 = null; org.apache.commons.math.exception.MathArithmeticException mathArithmeticException60 = new org.apache.commons.math.exception.MathArithmeticException(); org.apache.commons.math.exception.util.Localizable localizable61 = null; java.lang.Object[] objArray68 = new java.lang.Object[] { (-1.0f), (byte) 0, 0.0f, (byte) 1, 100L, 0.0d }; mathArithmeticException60.addMessage(localizable61, objArray68); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException70 = new org.apache.commons.math.exception.NotFiniteNumberException((java.lang.Number) 1.1752011936438014d, objArray68); java.lang.Throwable[] throwableArray71 = notFiniteNumberException70.getSuppressed(); dimensionMismatchException2.addMessage(localizable58, (java.lang.Object[]) throwableArray71); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertNotNull(iterator49); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3273600 + "'", int51 == 3273600); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator56); org.junit.Assert.assertNotNull(objArray68); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[-1.0, 0, 0.0, 1, 100, 0.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[-1.0, 0, 0.0, 1, 100, 0.0]"); org.junit.Assert.assertNotNull(throwableArray71); }
public void test085() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test085"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); }
public void test086() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test086"); org.apache.commons.math.exception.util.Localizable localizable0 = null; org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Number number3 = null; org.apache.commons.math.exception.util.Localizable localizable4 = null; org.apache.commons.math.exception.MathArithmeticException mathArithmeticException6 = new org.apache.commons.math.exception.MathArithmeticException(); java.lang.Object[] objArray9 = new java.lang.Object[] { 1.0f, mathArithmeticException6, (-1.0d), (short) 0 }; org.apache.commons.math.exception.NullArgumentException nullArgumentException10 = new org.apache.commons.math.exception.NullArgumentException(localizable4, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException11 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable2, number3, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException12 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable0, (java.lang.Number) (-4.60718242E18f), objArray9); int[] intArray14 = new int[] {}; int[] intArray20 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray20); int[] intArray22 = new int[] {}; int[] intArray28 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int29 = org.apache.commons.math.util.MathUtils.distance1(intArray22, intArray28); int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray28); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray53); int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray53); int int57 = org.apache.commons.math.util.MathUtils.distanceInf(intArray14, intArray37); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter58 = new org.apache.commons.math.util.MultidimensionalCounter(intArray37); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator59 = multidimensionalCounter58.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter58); int int61 = multidimensionalCounter58.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator62 = multidimensionalCounter58.new Iterator(); notFiniteNumberException12.setContext("", (java.lang.Object) iterator62); // The following exception was thrown during execution in test generation try { iterator62.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0); org.junit.Assert.assertNotNull(iterator59); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5); }
public void test087() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test087"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray29 = multidimensionalCounter27.getCounts(0); int int30 = multidimensionalCounter27.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5); }
public void test088() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test088"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter48.iterator(); // The following exception was thrown during execution in test generation try { iterator50.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(iterator50); }
public void test089() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test089"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int[] intArray47 = iterator45.getCounts(); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = new int[] {}; int[] intArray79 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray79); int[] intArray81 = new int[] {}; int[] intArray87 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray81, intArray87); int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray87); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray87); int int91 = org.apache.commons.math.util.MathUtils.distanceInf(intArray48, intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter92 = new org.apache.commons.math.util.MultidimensionalCounter(intArray71); int[] intArray94 = multidimensionalCounter92.getCounts((int) (byte) 0); int[] intArray95 = multidimensionalCounter92.getSizes(); int int96 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray95); int[] intArray97 = org.apache.commons.math.util.MathUtils.copyOf(intArray95); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]"); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertNotNull(intArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray95); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1077 + "'", int96 == 1077); org.junit.Assert.assertNotNull(intArray97); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[10, 32, 1023, 10, 1]"); }
public void test090() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test090"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); int int31 = multidimensionalCounter27.getSize(); int[] intArray32 = multidimensionalCounter27.getSizes(); // The following exception was thrown during execution in test generation try { java.lang.String str33 = multidimensionalCounter27.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3273600 + "'", int31 == 3273600); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); }
public void test091() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test091"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); // The following exception was thrown during execution in test generation try { java.lang.String str47 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); }
public void test092() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test092"); org.apache.commons.math.exception.util.Localizable localizable0 = null; org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Number number3 = null; org.apache.commons.math.exception.util.Localizable localizable4 = null; org.apache.commons.math.exception.MathArithmeticException mathArithmeticException6 = new org.apache.commons.math.exception.MathArithmeticException(); java.lang.Object[] objArray9 = new java.lang.Object[] { 1.0f, mathArithmeticException6, (-1.0d), (short) 0 }; org.apache.commons.math.exception.NullArgumentException nullArgumentException10 = new org.apache.commons.math.exception.NullArgumentException(localizable4, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException11 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable2, number3, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException12 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable0, (java.lang.Number) (-4.60718242E18f), objArray9); int[] intArray14 = new int[] {}; int[] intArray20 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray20); int[] intArray22 = new int[] {}; int[] intArray28 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int29 = org.apache.commons.math.util.MathUtils.distance1(intArray22, intArray28); int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray28); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray53); int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray53); int int57 = org.apache.commons.math.util.MathUtils.distanceInf(intArray14, intArray37); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter58 = new org.apache.commons.math.util.MultidimensionalCounter(intArray37); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator59 = multidimensionalCounter58.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter58); int int61 = multidimensionalCounter58.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator62 = multidimensionalCounter58.new Iterator(); notFiniteNumberException12.setContext("", (java.lang.Object) iterator62); // The following exception was thrown during execution in test generation try { int int65 = iterator62.getCount((-127)); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -127"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0); org.junit.Assert.assertNotNull(iterator59); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5); }
public void test093() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test093"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray48 = multidimensionalCounter44.getCounts(1023); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0, 102, 3, 0]"); }
public void test094() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test094"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray10 = multidimensionalCounter9.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator11 = multidimensionalCounter9.new Iterator(); // The following exception was thrown during execution in test generation try { int int13 = iterator11.getCount(1919774314); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1919774314"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); }
public void test095() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test095"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = org.apache.commons.math.util.MathUtils.copyOf(intArray14); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter18 = new org.apache.commons.math.util.MultidimensionalCounter(intArray14); int int19 = multidimensionalCounter18.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3273600 + "'", int19 == 3273600); }
public void test096() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test096"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator47 = multidimensionalCounter44.iterator(); int int48 = iterator47.getCount(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator47); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); }
public void test097() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test097"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); int[] intArray53 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator54 = multidimensionalCounter44.iterator(); int int55 = multidimensionalCounter44.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator54); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5); }
public void test098() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test098"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); int[] intArray29 = multidimensionalCounter27.getCounts(10); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int[] intArray38 = new int[] {}; int[] intArray44 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray44); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray44); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int[] intArray55 = new int[] {}; int[] intArray61 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int62 = org.apache.commons.math.util.MathUtils.distance1(intArray55, intArray61); int[] intArray63 = new int[] {}; int[] intArray69 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray63, intArray69); int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray55, intArray69); int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray53, intArray69); int int73 = org.apache.commons.math.util.MathUtils.distanceInf(intArray30, intArray53); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter74 = new org.apache.commons.math.util.MultidimensionalCounter(intArray53); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator75 = multidimensionalCounter74.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter74); int[] intArray77 = multidimensionalCounter74.getSizes(); int int78 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray77); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]"); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]"); org.junit.Assert.assertNotNull(intArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]"); org.junit.Assert.assertNotNull(intArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); org.junit.Assert.assertNotNull(iterator75); org.junit.Assert.assertNotNull(intArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1075 + "'", int78 == 1075); }
public void test099() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test099"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray42); int[] intArray45 = new int[] {}; double double46 = org.apache.commons.math.util.MathUtils.distance(intArray28, intArray45); int[] intArray47 = org.apache.commons.math.util.MathUtils.copyOf(intArray28); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray47, (int) (byte) 100); int int50 = org.apache.commons.math.util.MathUtils.distanceInf(intArray26, intArray49); int[] intArray51 = new int[] {}; int[] intArray57 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int58 = org.apache.commons.math.util.MathUtils.distance1(intArray51, intArray57); int[] intArray59 = new int[] {}; int[] intArray65 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int66 = org.apache.commons.math.util.MathUtils.distance1(intArray59, intArray65); int int67 = org.apache.commons.math.util.MathUtils.distance1(intArray51, intArray65); int[] intArray68 = new int[] {}; int[] intArray74 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int75 = org.apache.commons.math.util.MathUtils.distance1(intArray68, intArray74); int[] intArray76 = new int[] {}; int[] intArray82 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int83 = org.apache.commons.math.util.MathUtils.distance1(intArray76, intArray82); int[] intArray84 = new int[] {}; int[] intArray90 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int91 = org.apache.commons.math.util.MathUtils.distance1(intArray84, intArray90); int int92 = org.apache.commons.math.util.MathUtils.distance1(intArray76, intArray90); int int93 = org.apache.commons.math.util.MathUtils.distance1(intArray74, intArray90); int int94 = org.apache.commons.math.util.MathUtils.distanceInf(intArray51, intArray74); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter95 = new org.apache.commons.math.util.MultidimensionalCounter(intArray74); int[] intArray97 = multidimensionalCounter95.getCounts((int) (byte) 0); int[] intArray98 = multidimensionalCounter95.getSizes(); int int99 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray98); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1023 + "'", int50 == 1023); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]"); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]"); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0); org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]"); org.junit.Assert.assertNotNull(intArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0); org.junit.Assert.assertNotNull(intArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]"); org.junit.Assert.assertNotNull(intArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0); org.junit.Assert.assertNotNull(intArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[]"); org.junit.Assert.assertNotNull(intArray90); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0); org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0); org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0); org.junit.Assert.assertNotNull(intArray97); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray98); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0); }
public void test100() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test100"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); int[] intArray47 = multidimensionalCounter44.getSizes(); // The following exception was thrown during execution in test generation try { java.lang.String str48 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); }
public void test101() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test101"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, (int) (byte) 0); int[] intArray29 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, 0); int[] intArray31 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, 0); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter32 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); }
public void test102() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test102"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int int47 = iterator45.getCount(); int[] intArray48 = iterator45.getCounts(); int int49 = iterator45.getCount(); boolean boolean50 = iterator45.hasNext(); int[] intArray51 = iterator45.getCounts(); // The following exception was thrown during execution in test generation try { iterator45.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1)); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); }
public void test103() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test103"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int[] intArray47 = iterator45.getCounts(); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = new int[] {}; int[] intArray79 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray79); int[] intArray81 = new int[] {}; int[] intArray87 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray81, intArray87); int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray87); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray87); int int91 = org.apache.commons.math.util.MathUtils.distanceInf(intArray48, intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter92 = new org.apache.commons.math.util.MultidimensionalCounter(intArray71); int[] intArray94 = multidimensionalCounter92.getCounts((int) (byte) 0); int[] intArray95 = multidimensionalCounter92.getSizes(); int int96 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray95); int[] intArray98 = org.apache.commons.math.util.MathUtils.copyOf(intArray95, 24); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]"); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertNotNull(intArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray95); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1077 + "'", int96 == 1077); org.junit.Assert.assertNotNull(intArray98); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[10, 32, 1023, 10, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); }
public void test104() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test104"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); int[] intArray53 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator54 = multidimensionalCounter44.iterator(); boolean boolean55 = iterator54.hasNext(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator54); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); }
public void test105() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test105"); int[] intArray0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int int17 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray15); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray40); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray40); int int44 = org.apache.commons.math.util.MathUtils.distanceInf(intArray1, intArray24); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray24); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator46 = multidimensionalCounter45.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter45); int[] intArray48 = multidimensionalCounter45.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray48); java.util.Spliterator<java.lang.Integer> intSpliterator50 = multidimensionalCounter49.spliterator(); int int51 = multidimensionalCounter49.getSize(); int[] intArray52 = multidimensionalCounter49.getSizes(); // The following exception was thrown during execution in test generation try { double double53 = org.apache.commons.math.util.MathUtils.distance(intArray0, intArray52); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(iterator46); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator50); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3273600 + "'", int51 == 3273600); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); }
public void test106() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test106"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray31); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray15, intArray31); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray31); int int36 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray31); int[] intArray37 = new int[] {}; int[] intArray43 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray43); int[] intArray45 = org.apache.commons.math.util.MathUtils.copyOf(intArray43); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter46 = new org.apache.commons.math.util.MultidimensionalCounter(intArray45); int[] intArray47 = multidimensionalCounter46.getSizes(); int int48 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray47); int[] intArray49 = new int[] {}; int[] intArray55 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray55); int[] intArray57 = new int[] {}; int[] intArray63 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray57, intArray63); int int65 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray63); int[] intArray66 = new int[] {}; int[] intArray72 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int73 = org.apache.commons.math.util.MathUtils.distance1(intArray66, intArray72); int[] intArray74 = new int[] {}; int[] intArray80 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int81 = org.apache.commons.math.util.MathUtils.distance1(intArray74, intArray80); int[] intArray82 = new int[] {}; int[] intArray88 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray82, intArray88); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray74, intArray88); int int91 = org.apache.commons.math.util.MathUtils.distance1(intArray72, intArray88); int int92 = org.apache.commons.math.util.MathUtils.distanceInf(intArray49, intArray72); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter93 = new org.apache.commons.math.util.MultidimensionalCounter(intArray72); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator94 = multidimensionalCounter93.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter93); int int96 = multidimensionalCounter93.getDimension(); int[] intArray97 = multidimensionalCounter93.getSizes(); int int98 = org.apache.commons.math.util.MathUtils.distanceInf(intArray47, intArray97); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]"); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]"); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); org.junit.Assert.assertNotNull(intArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]"); org.junit.Assert.assertNotNull(intArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertNotNull(intArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]"); org.junit.Assert.assertNotNull(intArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0); org.junit.Assert.assertNotNull(iterator94); org.junit.Assert.assertTrue("'" + int96 + "' != '" + 5 + "'", int96 == 5); org.junit.Assert.assertNotNull(intArray97); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0); }
public void test107() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test107"); org.apache.commons.math.exception.DimensionMismatchException dimensionMismatchException2 = new org.apache.commons.math.exception.DimensionMismatchException((-3273600), 32); int[] intArray4 = new int[] {}; int[] intArray10 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int11 = org.apache.commons.math.util.MathUtils.distance1(intArray4, intArray10); int[] intArray12 = new int[] {}; int[] intArray18 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int19 = org.apache.commons.math.util.MathUtils.distance1(intArray12, intArray18); int int20 = org.apache.commons.math.util.MathUtils.distance1(intArray4, intArray18); int[] intArray21 = new int[] {}; int[] intArray27 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int28 = org.apache.commons.math.util.MathUtils.distance1(intArray21, intArray27); int[] intArray29 = new int[] {}; int[] intArray35 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int36 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray35); int[] intArray37 = new int[] {}; int[] intArray43 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray43); int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray43); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray43); int int47 = org.apache.commons.math.util.MathUtils.distanceInf(intArray4, intArray27); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray27); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter48.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter48); int int51 = multidimensionalCounter48.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter48.new Iterator(); int int53 = multidimensionalCounter48.getSize(); int[] intArray55 = multidimensionalCounter48.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator56 = multidimensionalCounter48.iterator(); dimensionMismatchException2.setContext("org.apache.commons.math.exception.NotFiniteNumberException: 0 is not a finite number", (java.lang.Object) multidimensionalCounter48); int[] intArray58 = multidimensionalCounter48.getSizes(); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertNotNull(iterator49); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3273600 + "'", int51 == 3273600); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator56); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 32, 1023, 10, 1]"); }
public void test108() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test108"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = org.apache.commons.math.util.MathUtils.copyOf(intArray14); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray32); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray32); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int[] intArray44 = org.apache.commons.math.util.MathUtils.copyOf(intArray42); int int45 = org.apache.commons.math.util.MathUtils.distanceInf(intArray32, intArray44); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray44); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter47 = new org.apache.commons.math.util.MultidimensionalCounter(intArray17); int[] intArray49 = multidimensionalCounter47.getCounts(0); java.util.Spliterator<java.lang.Integer> intSpliterator50 = multidimensionalCounter47.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intSpliterator50); }
public void test109() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test109"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator47 = multidimensionalCounter44.iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator48 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.iterator(); int[] intArray51 = multidimensionalCounter44.getCounts(9600); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator47); org.junit.Assert.assertNotNull(intSpliterator48); org.junit.Assert.assertNotNull(iterator49); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 960, 0, 0]"); }
public void test110() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test110"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); int int31 = multidimensionalCounter27.getSize(); int[] intArray32 = multidimensionalCounter27.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator33 = multidimensionalCounter27.new Iterator(); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int[] intArray42 = new int[] {}; int[] intArray48 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int49 = org.apache.commons.math.util.MathUtils.distance1(intArray42, intArray48); int int50 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray48); int[] intArray51 = new int[] {}; int[] intArray57 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int58 = org.apache.commons.math.util.MathUtils.distance1(intArray51, intArray57); int[] intArray59 = new int[] {}; int[] intArray65 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int66 = org.apache.commons.math.util.MathUtils.distance1(intArray59, intArray65); int[] intArray67 = new int[] {}; int[] intArray73 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int74 = org.apache.commons.math.util.MathUtils.distance1(intArray67, intArray73); int int75 = org.apache.commons.math.util.MathUtils.distance1(intArray59, intArray73); int int76 = org.apache.commons.math.util.MathUtils.distance1(intArray57, intArray73); int int77 = org.apache.commons.math.util.MathUtils.distanceInf(intArray34, intArray57); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter78 = new org.apache.commons.math.util.MultidimensionalCounter(intArray57); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator79 = multidimensionalCounter78.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter78); int int81 = multidimensionalCounter78.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator82 = multidimensionalCounter78.new Iterator(); int int83 = multidimensionalCounter78.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator84 = multidimensionalCounter78.new Iterator(); int[] intArray85 = iterator84.getCounts(); // The following exception was thrown during execution in test generation try { int int86 = multidimensionalCounter27.getCount(intArray85); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -1 out of [0, 0] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3273600 + "'", int31 == 3273600); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]"); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]"); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0); org.junit.Assert.assertNotNull(intArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]"); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0); org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0); org.junit.Assert.assertNotNull(iterator79); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3273600 + "'", int81 == 3273600); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 5 + "'", int83 == 5); org.junit.Assert.assertNotNull(intArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 0, 0, 0, -1]"); }
public void test111() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test111"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator31 = multidimensionalCounter27.new Iterator(); java.lang.Class<?> wildcardClass32 = iterator31.getClass(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertNotNull(wildcardClass32); }
public void test112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test112"); org.apache.commons.math.util.MathUtils.OrderDirection orderDirection3 = org.apache.commons.math.util.MathUtils.OrderDirection.DECREASING; org.apache.commons.math.exception.NonMonotonousSequenceException nonMonotonousSequenceException5 = new org.apache.commons.math.exception.NonMonotonousSequenceException((java.lang.Number) 1023, (java.lang.Number) 2.6313083693369503E35d, (int) 'a', orderDirection3, true); org.apache.commons.math.exception.util.Localizable localizable6 = null; org.apache.commons.math.exception.NumberIsTooLargeException numberIsTooLargeException10 = new org.apache.commons.math.exception.NumberIsTooLargeException(localizable6, (java.lang.Number) 156, (java.lang.Number) (-0.5872139151569291d), false); org.apache.commons.math.exception.util.Localizable localizable12 = null; org.apache.commons.math.exception.NumberIsTooLargeException numberIsTooLargeException16 = new org.apache.commons.math.exception.NumberIsTooLargeException(localizable12, (java.lang.Number) 100.0d, (java.lang.Number) 0.5403023058681398d, true); numberIsTooLargeException10.setContext("org.apache.commons.math.exception.NotPositiveException: null is smaller than the minimum (0)", (java.lang.Object) true); boolean boolean18 = numberIsTooLargeException10.getBoundIsAllowed(); java.lang.Number number19 = numberIsTooLargeException10.getMax(); boolean boolean20 = numberIsTooLargeException10.getBoundIsAllowed(); nonMonotonousSequenceException5.addSuppressed((java.lang.Throwable) numberIsTooLargeException10); int[] intArray23 = new int[] {}; int[] intArray29 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray29); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int int47 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray45); int int48 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray45); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray45); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter50 = new org.apache.commons.math.util.MultidimensionalCounter(intArray45); numberIsTooLargeException10.setContext("", (java.lang.Object) multidimensionalCounter50); org.junit.Assert.assertTrue("'" + orderDirection3 + "' != '" + org.apache.commons.math.util.MathUtils.OrderDirection.DECREASING + "'", orderDirection3.equals(org.apache.commons.math.util.MathUtils.OrderDirection.DECREASING)); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertEquals("'" + number19 + "' != '" + (-0.5872139151569291d) + "'", number19, (-0.5872139151569291d)); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); }
public void test113() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test113"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getDimension(); int[] intArray49 = multidimensionalCounter44.getSizes(); int int50 = multidimensionalCounter44.getSize(); // The following exception was thrown during execution in test generation try { java.lang.String str51 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); }
public void test114() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test114"); org.apache.commons.math.exception.util.Localizable localizable0 = null; org.apache.commons.math.exception.NumberIsTooSmallException numberIsTooSmallException4 = new org.apache.commons.math.exception.NumberIsTooSmallException(localizable0, (java.lang.Number) 35805L, (java.lang.Number) 4.605170185988093d, false); int[] intArray6 = new int[] {}; int[] intArray12 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int13 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray12); int[] intArray14 = new int[] {}; int[] intArray20 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray20); int int22 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray20); int[] intArray23 = new int[] {}; int[] intArray29 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray29); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int int47 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray45); int int48 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray45); int int49 = org.apache.commons.math.util.MathUtils.distanceInf(intArray6, intArray29); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter50 = new org.apache.commons.math.util.MultidimensionalCounter(intArray29); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter50.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter50); int int53 = multidimensionalCounter50.getSize(); numberIsTooSmallException4.setContext("hi!", (java.lang.Object) multidimensionalCounter50); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertNotNull(iterator51); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); }
public void test115() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test115"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter44.new Iterator(); int[] intArray51 = iterator50.getCounts(); boolean boolean52 = iterator50.hasNext(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true); }
public void test116() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test116"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { java.lang.String str50 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3273600 + "'", int48 == 3273600); org.junit.Assert.assertNotNull(iterator49); }
public void test117() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test117"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter49.iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(iterator51); }
public void test118() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test118"); org.apache.commons.math.exception.DimensionMismatchException dimensionMismatchException2 = new org.apache.commons.math.exception.DimensionMismatchException((int) (short) 1, (int) (short) 0); int int3 = dimensionMismatchException2.getDimension(); int int4 = dimensionMismatchException2.getDimension(); int[] intArray6 = new int[] {}; int[] intArray12 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int13 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray12); int[] intArray14 = new int[] {}; int[] intArray20 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray20); int int22 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray20); int[] intArray23 = new int[] {}; int[] intArray29 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray29); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int int47 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray45); int int48 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray45); int int49 = org.apache.commons.math.util.MathUtils.distanceInf(intArray6, intArray29); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter50 = new org.apache.commons.math.util.MultidimensionalCounter(intArray29); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter50.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter50); int int53 = multidimensionalCounter50.getSize(); int int54 = multidimensionalCounter50.getDimension(); dimensionMismatchException2.setContext("org.apache.commons.math.exception.NotPositiveException: null is smaller than the minimum (0)", (java.lang.Object) multidimensionalCounter50); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertNotNull(iterator51); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5); }
public void test119() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test119"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getDimension(); int[] intArray49 = multidimensionalCounter44.getSizes(); int int50 = multidimensionalCounter44.getSize(); int[] intArray52 = multidimensionalCounter44.getCounts(0); int[] intArray53 = org.apache.commons.math.util.MathUtils.copyOf(intArray52); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, 0]"); }
public void test120() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test120"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int[] intArray47 = iterator45.getCounts(); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = new int[] {}; int[] intArray79 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray79); int[] intArray81 = new int[] {}; int[] intArray87 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray81, intArray87); int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray87); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray87); int int91 = org.apache.commons.math.util.MathUtils.distanceInf(intArray48, intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter92 = new org.apache.commons.math.util.MultidimensionalCounter(intArray71); int[] intArray94 = multidimensionalCounter92.getCounts((int) (byte) 0); int[] intArray95 = multidimensionalCounter92.getSizes(); int int96 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray95); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter97 = new org.apache.commons.math.util.MultidimensionalCounter(intArray95); int[] intArray98 = org.apache.commons.math.util.MathUtils.copyOf(intArray95); int[] intArray99 = org.apache.commons.math.util.MathUtils.copyOf(intArray95); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]"); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertNotNull(intArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray95); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1077 + "'", int96 == 1077); org.junit.Assert.assertNotNull(intArray98); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray98), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray99); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[10, 32, 1023, 10, 1]"); }
public void test121() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test121"); int[] intArray0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int int17 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray15); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray40); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray40); int int44 = org.apache.commons.math.util.MathUtils.distanceInf(intArray1, intArray24); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray24); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator46 = multidimensionalCounter45.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter45); int int48 = multidimensionalCounter45.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter45.new Iterator(); int[] intArray50 = iterator49.getCounts(); int int51 = iterator49.getCount(); int[] intArray52 = iterator49.getCounts(); int[] intArray54 = org.apache.commons.math.util.MathUtils.copyOf(intArray52, 10); // The following exception was thrown during execution in test generation try { int int55 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray54); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(iterator46); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3273600 + "'", int48 == 3273600); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0, 0, 0, -1, 0, 0, 0, 0, 0]"); }
public void test122() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test122"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); int[] intArray44 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); int[] intArray45 = new int[] {}; int[] intArray51 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray51); int[] intArray53 = new int[] {}; int[] intArray59 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int60 = org.apache.commons.math.util.MathUtils.distance1(intArray53, intArray59); int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray59); int[] intArray62 = new int[] {}; int[] intArray68 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int69 = org.apache.commons.math.util.MathUtils.distance1(intArray62, intArray68); int[] intArray70 = new int[] {}; int[] intArray76 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int77 = org.apache.commons.math.util.MathUtils.distance1(intArray70, intArray76); int[] intArray78 = new int[] {}; int[] intArray84 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int85 = org.apache.commons.math.util.MathUtils.distance1(intArray78, intArray84); int int86 = org.apache.commons.math.util.MathUtils.distance1(intArray70, intArray84); int int87 = org.apache.commons.math.util.MathUtils.distance1(intArray68, intArray84); int int88 = org.apache.commons.math.util.MathUtils.distanceInf(intArray45, intArray68); int int89 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray45); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter90 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]"); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]"); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); org.junit.Assert.assertNotNull(intArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]"); org.junit.Assert.assertNotNull(intArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0); org.junit.Assert.assertNotNull(intArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[]"); org.junit.Assert.assertNotNull(intArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0); org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0); org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); }
public void test123() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test123"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); int[] intArray48 = multidimensionalCounter44.getCounts(9); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray48); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)"); } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0, 0, 9, 0]"); }
public void test124() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test124"); int[] intArray0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = org.apache.commons.math.util.MathUtils.copyOf(intArray1); int[] intArray10 = new int[] {}; int[] intArray16 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int17 = org.apache.commons.math.util.MathUtils.distance1(intArray10, intArray16); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray32); int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray32); int[] intArray36 = org.apache.commons.math.util.MathUtils.copyOf(intArray32); int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray32); int[] intArray38 = new int[] {}; int[] intArray44 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray44); int[] intArray46 = org.apache.commons.math.util.MathUtils.copyOf(intArray44); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter47 = new org.apache.commons.math.util.MultidimensionalCounter(intArray46); int[] intArray48 = multidimensionalCounter47.getSizes(); int int49 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray48); int[] intArray50 = new int[] {}; int[] intArray56 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int57 = org.apache.commons.math.util.MathUtils.distance1(intArray50, intArray56); int[] intArray58 = org.apache.commons.math.util.MathUtils.copyOf(intArray56); double double59 = org.apache.commons.math.util.MathUtils.distance(intArray48, intArray56); // The following exception was thrown during execution in test generation try { int int60 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray48); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]"); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]"); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]"); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d); }
public void test125() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test125"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator53 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator54 = multidimensionalCounter44.new Iterator(); int[] intArray55 = iterator54.getCounts(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertNotNull(intSpliterator53); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0, 0, 0, -1]"); }
public void test126() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test126"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); int[] intArray45 = org.apache.commons.math.util.MathUtils.copyOf(intArray23, 0); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter46 = new org.apache.commons.math.util.MultidimensionalCounter(intArray45); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); }
public void test127() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test127"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); int[] intArray53 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator54 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { iterator54.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator54); }
public void test128() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test128"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int[] intArray24 = new int[] {}; int[] intArray30 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int31 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray30); int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray30); int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray30); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray8, (int) (byte) 0); int[] intArray37 = org.apache.commons.math.util.MathUtils.copyOf(intArray8, 0); int[] intArray38 = new int[] {}; int[] intArray44 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray44); int int46 = org.apache.commons.math.util.MathUtils.distanceInf(intArray8, intArray44); int[] intArray47 = org.apache.commons.math.util.MathUtils.copyOf(intArray8); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); int[] intArray49 = new int[] {}; int[] intArray55 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray55); int[] intArray57 = new int[] {}; int[] intArray63 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray57, intArray63); int int65 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray63); int[] intArray66 = new int[] {}; int[] intArray72 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int73 = org.apache.commons.math.util.MathUtils.distance1(intArray66, intArray72); int[] intArray74 = new int[] {}; int[] intArray80 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int81 = org.apache.commons.math.util.MathUtils.distance1(intArray74, intArray80); int[] intArray82 = new int[] {}; int[] intArray88 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray82, intArray88); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray74, intArray88); int int91 = org.apache.commons.math.util.MathUtils.distance1(intArray72, intArray88); int int92 = org.apache.commons.math.util.MathUtils.distanceInf(intArray49, intArray72); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter93 = new org.apache.commons.math.util.MultidimensionalCounter(intArray72); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator94 = multidimensionalCounter93.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter93); int[] intArray96 = multidimensionalCounter93.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter97 = new org.apache.commons.math.util.MultidimensionalCounter(intArray96); double double98 = org.apache.commons.math.util.MathUtils.distance(intArray48, intArray96); int int99 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray96); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]"); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]"); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[]"); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); org.junit.Assert.assertNotNull(intArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[]"); org.junit.Assert.assertNotNull(intArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertNotNull(intArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]"); org.junit.Assert.assertNotNull(intArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0); org.junit.Assert.assertNotNull(iterator94); org.junit.Assert.assertNotNull(intArray96); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d); org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0); }
public void test129() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test129"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); int int31 = multidimensionalCounter27.getSize(); int[] intArray32 = multidimensionalCounter27.getSizes(); int int33 = multidimensionalCounter27.getSize(); // The following exception was thrown during execution in test generation try { java.lang.String str34 = multidimensionalCounter27.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3273600 + "'", int31 == 3273600); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3273600 + "'", int33 == 3273600); }
public void test130() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test130"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); int int50 = iterator48.getCount(); int[] intArray51 = iterator48.getCounts(); int int52 = iterator48.getCount(); int[] intArray53 = iterator48.getCounts(); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter54 = new org.apache.commons.math.util.MultidimensionalCounter(intArray53); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)"); } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, -1]"); }
public void test131() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test131"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = org.apache.commons.math.util.MathUtils.copyOf(intArray14); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray40); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray40); int[] intArray44 = org.apache.commons.math.util.MathUtils.copyOf(intArray40); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray40); double double46 = org.apache.commons.math.util.MathUtils.distance(intArray17, intArray40); // The following exception was thrown during execution in test generation try { int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray40, (-231359352)); org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null"); } catch (java.lang.NegativeArraySizeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d); }
public void test132() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test132"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); // The following exception was thrown during execution in test generation try { int int50 = iterator48.getCount(1758918198); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1758918198"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); }
public void test133() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test133"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int[] intArray47 = iterator45.getCounts(); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = new int[] {}; int[] intArray79 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray79); int[] intArray81 = new int[] {}; int[] intArray87 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray81, intArray87); int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray87); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray87); int int91 = org.apache.commons.math.util.MathUtils.distanceInf(intArray48, intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter92 = new org.apache.commons.math.util.MultidimensionalCounter(intArray71); int[] intArray94 = multidimensionalCounter92.getCounts((int) (byte) 0); int[] intArray95 = multidimensionalCounter92.getSizes(); int int96 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray95); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter97 = new org.apache.commons.math.util.MultidimensionalCounter(intArray95); int int98 = multidimensionalCounter97.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator99 = multidimensionalCounter97.iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]"); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertNotNull(intArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray95); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1077 + "'", int96 == 1077); org.junit.Assert.assertTrue("'" + int98 + "' != '" + 3273600 + "'", int98 == 3273600); org.junit.Assert.assertNotNull(iterator99); }
public void test134() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test134"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray42); int[] intArray45 = new int[] {}; double double46 = org.apache.commons.math.util.MathUtils.distance(intArray28, intArray45); int[] intArray47 = org.apache.commons.math.util.MathUtils.copyOf(intArray28); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray47, (int) (byte) 100); int int50 = org.apache.commons.math.util.MathUtils.distanceInf(intArray26, intArray49); int[] intArray51 = new int[] {}; int[] intArray57 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int58 = org.apache.commons.math.util.MathUtils.distance1(intArray51, intArray57); int[] intArray59 = org.apache.commons.math.util.MathUtils.copyOf(intArray57); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter60 = new org.apache.commons.math.util.MultidimensionalCounter(intArray59); int[] intArray62 = multidimensionalCounter60.getCounts((int) (byte) 1); int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray62); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1023 + "'", int50 == 1023); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]"); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[0, 0, 0, 1, 0]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1075 + "'", int63 == 1075); }
public void test135() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test135"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = org.apache.commons.math.util.MathUtils.copyOf(intArray14); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray32); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray32); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int[] intArray44 = new int[] {}; int[] intArray50 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int51 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray50); int[] intArray52 = new int[] {}; int[] intArray58 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int59 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray58); int int60 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray58); int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray42, intArray58); int[] intArray62 = org.apache.commons.math.util.MathUtils.copyOf(intArray58); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter63 = new org.apache.commons.math.util.MultidimensionalCounter(intArray58); double double64 = org.apache.commons.math.util.MathUtils.distance(intArray35, intArray58); int int65 = org.apache.commons.math.util.MathUtils.distanceInf(intArray17, intArray35); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]"); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0); }
public void test136() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test136"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); int[] intArray46 = multidimensionalCounter44.getSizes(); int[] intArray47 = null; // The following exception was thrown during execution in test generation try { int int48 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray47); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); }
public void test137() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test137"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getDimension(); int[] intArray49 = multidimensionalCounter44.getSizes(); int int50 = multidimensionalCounter44.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertNotNull(intSpliterator51); }
public void test138() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test138"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int[] intArray50 = null; // The following exception was thrown during execution in test generation try { int int51 = multidimensionalCounter44.getCount(intArray50); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); }
public void test139() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test139"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, (int) (byte) 0); int[] intArray29 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, 0); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int int38 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray36); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray53); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int[] intArray64 = new int[] {}; int[] intArray70 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray64, intArray70); int[] intArray72 = new int[] {}; int[] intArray78 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int79 = org.apache.commons.math.util.MathUtils.distance1(intArray72, intArray78); int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray64, intArray78); int int81 = org.apache.commons.math.util.MathUtils.distance1(intArray62, intArray78); int int82 = org.apache.commons.math.util.MathUtils.distanceInf(intArray39, intArray62); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter83 = new org.apache.commons.math.util.MultidimensionalCounter(intArray62); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator84 = multidimensionalCounter83.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter83); int int86 = multidimensionalCounter83.getDimension(); int[] intArray87 = multidimensionalCounter83.getSizes(); int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray87); int[] intArray89 = null; // The following exception was thrown during execution in test generation try { int int90 = org.apache.commons.math.util.MathUtils.distanceInf(intArray87, intArray89); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]"); org.junit.Assert.assertNotNull(intArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]"); org.junit.Assert.assertNotNull(intArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0); org.junit.Assert.assertNotNull(iterator84); org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); }
public void test140() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test140"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = org.apache.commons.math.util.MathUtils.copyOf(intArray14); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray32); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray32); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int[] intArray44 = org.apache.commons.math.util.MathUtils.copyOf(intArray42); int int45 = org.apache.commons.math.util.MathUtils.distanceInf(intArray32, intArray44); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray44); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter47 = new org.apache.commons.math.util.MultidimensionalCounter(intArray17); int[] intArray49 = multidimensionalCounter47.getCounts(0); int[] intArray50 = multidimensionalCounter47.getSizes(); int int51 = multidimensionalCounter47.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3273600 + "'", int51 == 3273600); }
public void test141() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test141"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); int int50 = iterator48.getCount(); int[] intArray51 = iterator48.getCounts(); int[] intArray53 = org.apache.commons.math.util.MathUtils.copyOf(intArray51, 10); // The following exception was thrown during execution in test generation try { int[] intArray55 = org.apache.commons.math.util.MathUtils.copyOf(intArray51, (-608301055)); org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null"); } catch (java.lang.NegativeArraySizeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, -1, 0, 0, 0, 0, 0]"); }
public void test142() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test142"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, (int) (byte) 0); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter28 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); }
public void test143() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test143"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); java.util.Spliterator<java.lang.Integer> intSpliterator45 = multidimensionalCounter44.spliterator(); int int46 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator47 = multidimensionalCounter44.iterator(); boolean boolean48 = iterator47.hasNext(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intSpliterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3273600 + "'", int46 == 3273600); org.junit.Assert.assertNotNull(iterator47); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true); }
public void test144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test144"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter28 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 32, 1023, 10, 1]"); }
public void test145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test145"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator47 = multidimensionalCounter44.iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator48 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.iterator(); boolean boolean50 = iterator49.hasNext(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(iterator47); org.junit.Assert.assertNotNull(intSpliterator48); org.junit.Assert.assertNotNull(iterator49); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true); }
public void test146() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test146"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int[] intArray44 = new int[] {}; int[] intArray50 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int51 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray50); int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray50); int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray50); int[] intArray54 = org.apache.commons.math.util.MathUtils.copyOf(intArray28); // The following exception was thrown during execution in test generation try { int int55 = org.apache.commons.math.util.MathUtils.distanceInf(intArray26, intArray28); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]"); }
public void test147() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test147"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.new Iterator(); int[] intArray51 = iterator50.getCounts(); // The following exception was thrown during execution in test generation try { iterator50.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); }
public void test148() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test148"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator50 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { iterator51.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intSpliterator50); org.junit.Assert.assertNotNull(iterator51); }
public void test149() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test149"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int int50 = multidimensionalCounter44.getDimension(); int int51 = multidimensionalCounter44.getSize(); int int52 = multidimensionalCounter44.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3273600 + "'", int51 == 3273600); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3273600 + "'", int52 == 3273600); }
public void test150() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test150"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int[] intArray47 = iterator45.getCounts(); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = new int[] {}; int[] intArray79 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray79); int[] intArray81 = new int[] {}; int[] intArray87 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray81, intArray87); int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray87); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray87); int int91 = org.apache.commons.math.util.MathUtils.distanceInf(intArray48, intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter92 = new org.apache.commons.math.util.MultidimensionalCounter(intArray71); int[] intArray94 = multidimensionalCounter92.getCounts((int) (byte) 0); int[] intArray95 = multidimensionalCounter92.getSizes(); int int96 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray95); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter97 = new org.apache.commons.math.util.MultidimensionalCounter(intArray95); int int98 = multidimensionalCounter97.getSize(); int[] intArray99 = multidimensionalCounter97.getSizes(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]"); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertNotNull(intArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray95); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1077 + "'", int96 == 1077); org.junit.Assert.assertTrue("'" + int98 + "' != '" + 3273600 + "'", int98 == 3273600); org.junit.Assert.assertNotNull(intArray99); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[10, 32, 1023, 10, 1]"); }
public void test151() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test151"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int[] intArray51 = multidimensionalCounter44.getCounts(4); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); int[] intArray53 = iterator52.getCounts(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 4, 0]"); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, -1]"); }
public void test152() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test152"); int[] intArray0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = org.apache.commons.math.util.MathUtils.copyOf(intArray7); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter10 = new org.apache.commons.math.util.MultidimensionalCounter(intArray9); int[] intArray12 = multidimensionalCounter10.getCounts((int) (byte) 1); int[] intArray13 = new int[] {}; int[] intArray19 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int20 = org.apache.commons.math.util.MathUtils.distance1(intArray13, intArray19); int[] intArray21 = new int[] {}; int[] intArray27 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int28 = org.apache.commons.math.util.MathUtils.distance1(intArray21, intArray27); int int29 = org.apache.commons.math.util.MathUtils.distance1(intArray13, intArray27); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int[] intArray38 = new int[] {}; int[] intArray44 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray44); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray52); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray52); int int56 = org.apache.commons.math.util.MathUtils.distanceInf(intArray13, intArray36); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter57 = new org.apache.commons.math.util.MultidimensionalCounter(intArray36); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator58 = multidimensionalCounter57.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter57); int[] intArray60 = multidimensionalCounter57.getSizes(); int int61 = org.apache.commons.math.util.MathUtils.distanceInf(intArray12, intArray60); // The following exception was thrown during execution in test generation try { int int62 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray60); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0, 0, 1, 0]"); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]"); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertNotNull(iterator58); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1023 + "'", int61 == 1023); }
public void test153() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test153"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray31); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray15, intArray31); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray31); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int[] intArray44 = org.apache.commons.math.util.MathUtils.copyOf(intArray42); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray44); int int46 = org.apache.commons.math.util.MathUtils.distanceInf(intArray35, intArray44); int int47 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray44); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); }
public void test154() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test154"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = org.apache.commons.math.util.MathUtils.copyOf(intArray26); double double35 = org.apache.commons.math.util.MathUtils.distance(intArray0, intArray34); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter36 = new org.apache.commons.math.util.MultidimensionalCounter(intArray0); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d); }
public void test155() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test155"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int[] intArray44 = new int[] {}; int[] intArray50 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int51 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray50); int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray50); int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray50); int[] intArray54 = org.apache.commons.math.util.MathUtils.copyOf(intArray50); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter55 = new org.apache.commons.math.util.MultidimensionalCounter(intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int[] intArray64 = new int[] {}; int[] intArray70 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray64, intArray70); int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray70); int[] intArray73 = new int[] {}; double double74 = org.apache.commons.math.util.MathUtils.distance(intArray56, intArray73); int[] intArray75 = org.apache.commons.math.util.MathUtils.copyOf(intArray56); int[] intArray77 = org.apache.commons.math.util.MathUtils.copyOf(intArray75, (int) (byte) 100); int int78 = org.apache.commons.math.util.MathUtils.distanceInf(intArray54, intArray77); double double79 = org.apache.commons.math.util.MathUtils.distance(intArray22, intArray77); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) double79); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]"); org.junit.Assert.assertNotNull(intArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d); org.junit.Assert.assertNotNull(intArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]"); org.junit.Assert.assertNotNull(intArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1023 + "'", int78 == 1023); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1023.598554121683d + "'", double79 == 1023.598554121683d); }
public void test156() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test156"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); java.util.Spliterator<java.lang.Integer> intSpliterator52 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intSpliterator52); }
public void test157() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test157"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter48.iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter48.new Iterator(); boolean boolean52 = iterator51.hasNext(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(iterator50); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true); }
public void test158() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test158"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); int[] intArray46 = multidimensionalCounter44.getSizes(); // The following exception was thrown during execution in test generation try { int[] intArray48 = multidimensionalCounter44.getCounts((-1580073728)); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -1,580,073,728 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); }
public void test159() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test159"); int[] intArray0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int int17 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray15); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray40); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray40); int int44 = org.apache.commons.math.util.MathUtils.distanceInf(intArray1, intArray24); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray24); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator46 = multidimensionalCounter45.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter45); int[] intArray48 = multidimensionalCounter45.getSizes(); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray48); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter50 = new org.apache.commons.math.util.MultidimensionalCounter(intArray48); // The following exception was thrown during execution in test generation try { int int51 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray48); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(iterator46); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); }
public void test160() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test160"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); int int50 = iterator48.getCount(); int[] intArray51 = iterator48.getCounts(); int int52 = iterator48.getCount(); int[] intArray53 = iterator48.getCounts(); // The following exception was thrown during execution in test generation try { int[] intArray55 = org.apache.commons.math.util.MathUtils.copyOf(intArray53, (-32736000)); org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null"); } catch (java.lang.NegativeArraySizeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, -1]"); }
public void test161() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test161"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator53 = multidimensionalCounter44.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator52); }
public void test162() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test162"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int[] intArray49 = iterator48.getCounts(); int int50 = iterator48.getCount(); int[] intArray51 = iterator48.getCounts(); int int52 = iterator48.getCount(); int[] intArray53 = iterator48.getCounts(); int[] intArray54 = org.apache.commons.math.util.MathUtils.copyOf(intArray53); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 0, 0, 0, -1]"); }
public void test163() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test163"); int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray23); int int26 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray23); int[] intArray27 = new int[] {}; int[] intArray33 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray33); int[] intArray35 = new int[] {}; int[] intArray41 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray35, intArray41); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray41); int[] intArray44 = new int[] {}; int[] intArray50 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int51 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray50); int[] intArray52 = new int[] {}; int[] intArray58 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int59 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray58); int[] intArray60 = new int[] {}; int[] intArray66 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int67 = org.apache.commons.math.util.MathUtils.distance1(intArray60, intArray66); int int68 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray66); int int69 = org.apache.commons.math.util.MathUtils.distance1(intArray50, intArray66); int int70 = org.apache.commons.math.util.MathUtils.distanceInf(intArray27, intArray50); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter71 = new org.apache.commons.math.util.MultidimensionalCounter(intArray50); int int72 = multidimensionalCounter71.getSize(); int[] intArray73 = multidimensionalCounter71.getSizes(); int int74 = org.apache.commons.math.util.MathUtils.distanceInf(intArray1, intArray73); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter75 = new org.apache.commons.math.util.MultidimensionalCounter(intArray73); java.util.Spliterator<java.lang.Integer> intSpliterator76 = multidimensionalCounter75.spliterator(); org.apache.commons.math.exception.util.Localizable localizable77 = null; org.apache.commons.math.exception.util.Localizable localizable78 = null; org.apache.commons.math.exception.util.Localizable localizable79 = null; java.lang.Object[] objArray81 = new java.lang.Object[] { 52.000004f }; org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException82 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable79, objArray81); org.apache.commons.math.exception.MathArithmeticException mathArithmeticException83 = new org.apache.commons.math.exception.MathArithmeticException(localizable78, objArray81); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter75, localizable77, objArray81); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException85 = new org.apache.commons.math.exception.NotFiniteNumberException((java.lang.Number) 3628801L, objArray81); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]"); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]"); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]"); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0); org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3273600 + "'", int72 == 3273600); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0); org.junit.Assert.assertNotNull(intSpliterator76); org.junit.Assert.assertNotNull(objArray81); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[52.000004]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[52.000004]"); }
public void test164() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test164"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int[] intArray47 = iterator45.getCounts(); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = new int[] {}; int[] intArray79 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray79); int[] intArray81 = new int[] {}; int[] intArray87 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray81, intArray87); int int89 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray87); int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray87); int int91 = org.apache.commons.math.util.MathUtils.distanceInf(intArray48, intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter92 = new org.apache.commons.math.util.MultidimensionalCounter(intArray71); int[] intArray94 = multidimensionalCounter92.getCounts((int) (byte) 0); int[] intArray95 = multidimensionalCounter92.getSizes(); int int96 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray95); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter97 = new org.apache.commons.math.util.MultidimensionalCounter(intArray95); java.util.Spliterator<java.lang.Integer> intSpliterator98 = multidimensionalCounter97.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[]"); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertNotNull(intArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray95); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1077 + "'", int96 == 1077); org.junit.Assert.assertNotNull(intSpliterator98); }
public void test165() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test165"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray29 = multidimensionalCounter27.getCounts(0); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int[] intArray38 = new int[] {}; int[] intArray44 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray44); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray52); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray52); int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray52); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]"); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1076 + "'", int56 == 1076); }
public void test166() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test166"); org.apache.commons.math.exception.util.Localizable localizable0 = null; org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Number number3 = null; org.apache.commons.math.exception.util.Localizable localizable4 = null; org.apache.commons.math.exception.MathArithmeticException mathArithmeticException6 = new org.apache.commons.math.exception.MathArithmeticException(); java.lang.Object[] objArray9 = new java.lang.Object[] { 1.0f, mathArithmeticException6, (-1.0d), (short) 0 }; org.apache.commons.math.exception.NullArgumentException nullArgumentException10 = new org.apache.commons.math.exception.NullArgumentException(localizable4, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException11 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable2, number3, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException12 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable0, (java.lang.Number) (-4.60718242E18f), objArray9); int[] intArray14 = new int[] {}; int[] intArray20 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray20); int[] intArray22 = new int[] {}; int[] intArray28 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int29 = org.apache.commons.math.util.MathUtils.distance1(intArray22, intArray28); int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray28); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray53); int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray53); int int57 = org.apache.commons.math.util.MathUtils.distanceInf(intArray14, intArray37); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter58 = new org.apache.commons.math.util.MultidimensionalCounter(intArray37); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator59 = multidimensionalCounter58.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter58); int int61 = multidimensionalCounter58.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator62 = multidimensionalCounter58.new Iterator(); notFiniteNumberException12.setContext("", (java.lang.Object) iterator62); int int64 = iterator62.getCount(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0); org.junit.Assert.assertNotNull(iterator59); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); }
public void test167() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test167"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); int[] intArray27 = new int[] {}; int[] intArray33 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray33); int[] intArray35 = new int[] {}; int[] intArray41 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray35, intArray41); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray41); int[] intArray44 = org.apache.commons.math.util.MathUtils.copyOf(intArray41); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray41); double double46 = org.apache.commons.math.util.MathUtils.distance(intArray0, intArray41); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int[] intArray55 = org.apache.commons.math.util.MathUtils.copyOf(intArray53); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter56 = new org.apache.commons.math.util.MultidimensionalCounter(intArray55); int[] intArray57 = multidimensionalCounter56.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator58 = multidimensionalCounter56.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator59 = multidimensionalCounter56.new Iterator(); int[] intArray60 = multidimensionalCounter56.getSizes(); double double61 = org.apache.commons.math.util.MathUtils.distance(intArray41, intArray60); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]"); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d); }
public void test168() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test168"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter48.iterator(); boolean boolean51 = iterator50.hasNext(); boolean boolean52 = iterator50.hasNext(); // The following exception was thrown during execution in test generation try { int int54 = iterator50.getCount(32); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(iterator50); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true); }
public void test169() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test169"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = org.apache.commons.math.util.MathUtils.copyOf(intArray14); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray24); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray29 = multidimensionalCounter27.getCounts((int) (byte) 1); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int[] intArray38 = new int[] {}; int[] intArray44 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray38, intArray44); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray44); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int[] intArray55 = new int[] {}; int[] intArray61 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int62 = org.apache.commons.math.util.MathUtils.distance1(intArray55, intArray61); int[] intArray63 = new int[] {}; int[] intArray69 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray63, intArray69); int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray55, intArray69); int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray53, intArray69); int int73 = org.apache.commons.math.util.MathUtils.distanceInf(intArray30, intArray53); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter74 = new org.apache.commons.math.util.MultidimensionalCounter(intArray53); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator75 = multidimensionalCounter74.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter74); int[] intArray77 = multidimensionalCounter74.getSizes(); int int78 = org.apache.commons.math.util.MathUtils.distanceInf(intArray29, intArray77); int int79 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray77); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0, 0, 1, 0]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]"); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[]"); org.junit.Assert.assertNotNull(intArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]"); org.junit.Assert.assertNotNull(intArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); org.junit.Assert.assertNotNull(iterator75); org.junit.Assert.assertNotNull(intArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1023 + "'", int78 == 1023); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); }
public void test170() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test170"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); int[] intArray53 = multidimensionalCounter44.getSizes(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); }
public void test171() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test171"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); int int46 = multidimensionalCounter44.getDimension(); int[] intArray47 = multidimensionalCounter44.getSizes(); java.util.Spliterator<java.lang.Integer> intSpliterator48 = multidimensionalCounter44.spliterator(); // The following exception was thrown during execution in test generation try { java.lang.String str49 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator48); }
public void test172() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test172"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getSize(); int int49 = multidimensionalCounter44.getSize(); // The following exception was thrown during execution in test generation try { java.lang.String str50 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3273600 + "'", int48 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); }
public void test173() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test173"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, (int) (byte) 0); int[] intArray29 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, 0); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int int38 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray36); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray53); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int[] intArray64 = new int[] {}; int[] intArray70 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray64, intArray70); int[] intArray72 = new int[] {}; int[] intArray78 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int79 = org.apache.commons.math.util.MathUtils.distance1(intArray72, intArray78); int int80 = org.apache.commons.math.util.MathUtils.distance1(intArray64, intArray78); int int81 = org.apache.commons.math.util.MathUtils.distance1(intArray62, intArray78); int int82 = org.apache.commons.math.util.MathUtils.distanceInf(intArray39, intArray62); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter83 = new org.apache.commons.math.util.MultidimensionalCounter(intArray62); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator84 = multidimensionalCounter83.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter83); int int86 = multidimensionalCounter83.getDimension(); int[] intArray87 = multidimensionalCounter83.getSizes(); int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray87); int[] intArray90 = org.apache.commons.math.util.MathUtils.copyOf(intArray87, 300); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]"); org.junit.Assert.assertNotNull(intArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[]"); org.junit.Assert.assertNotNull(intArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0); org.junit.Assert.assertNotNull(iterator84); org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5); org.junit.Assert.assertNotNull(intArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertNotNull(intArray90); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 32, 1023, 10, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); }
public void test174() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test174"); org.apache.commons.math.exception.util.Localizable localizable0 = null; java.lang.Number number2 = null; org.apache.commons.math.exception.OutOfRangeException outOfRangeException4 = new org.apache.commons.math.exception.OutOfRangeException(localizable0, (java.lang.Number) 10.0d, number2, (java.lang.Number) (-0.9999999999999999d)); int[] intArray6 = new int[] {}; int[] intArray12 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int13 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray12); int[] intArray14 = new int[] {}; int[] intArray20 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray20); int int22 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray20); int[] intArray23 = new int[] {}; int[] intArray29 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray29); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int int47 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray45); int int48 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray45); int int49 = org.apache.commons.math.util.MathUtils.distanceInf(intArray6, intArray29); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter50 = new org.apache.commons.math.util.MultidimensionalCounter(intArray29); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter50.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter50); int int53 = multidimensionalCounter50.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator54 = multidimensionalCounter50.new Iterator(); int int55 = multidimensionalCounter50.getDimension(); java.util.Spliterator<java.lang.Integer> intSpliterator56 = multidimensionalCounter50.spliterator(); outOfRangeException4.setContext("", (java.lang.Object) intSpliterator56); java.lang.Number number58 = outOfRangeException4.getHi(); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertNotNull(iterator51); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5); org.junit.Assert.assertNotNull(intSpliterator56); org.junit.Assert.assertEquals("'" + number58 + "' != '" + (-0.9999999999999999d) + "'", number58, (-0.9999999999999999d)); }
public void test175() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test175"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray10 = multidimensionalCounter9.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator11 = multidimensionalCounter9.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator12 = multidimensionalCounter9.new Iterator(); boolean boolean13 = iterator12.hasNext(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); }
public void test176() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test176"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int[] intArray51 = multidimensionalCounter44.getCounts(4); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); int int53 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator55 = multidimensionalCounter44.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 4, 0]"); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5); }
public void test177() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test177"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray11 = multidimensionalCounter9.getCounts((int) (byte) 1); java.util.Spliterator<java.lang.Integer> intSpliterator12 = multidimensionalCounter9.spliterator(); java.util.Spliterator<java.lang.Integer> intSpliterator13 = multidimensionalCounter9.spliterator(); java.util.Spliterator<java.lang.Integer> intSpliterator14 = multidimensionalCounter9.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 1, 0]"); org.junit.Assert.assertNotNull(intSpliterator12); org.junit.Assert.assertNotNull(intSpliterator13); org.junit.Assert.assertNotNull(intSpliterator14); }
public void test178() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test178"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray45 = org.apache.commons.math.util.MathUtils.copyOf(intArray23); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); }
public void test179() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test179"); int[] intArray0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = org.apache.commons.math.util.MathUtils.copyOf(intArray7); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter10 = new org.apache.commons.math.util.MultidimensionalCounter(intArray9); int[] intArray11 = multidimensionalCounter10.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator12 = multidimensionalCounter10.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator13 = multidimensionalCounter10.new Iterator(); int[] intArray14 = multidimensionalCounter10.getSizes(); // The following exception was thrown during execution in test generation try { int int15 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray14); org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null"); } catch (java.lang.NullPointerException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); }
public void test180() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test180"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter44.new Iterator(); int[] intArray51 = iterator50.getCounts(); // The following exception was thrown during execution in test generation try { int int53 = iterator50.getCount(141326749); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 141326749"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); }
public void test181() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test181"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { java.lang.String str49 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); org.junit.Assert.assertNotNull(iterator48); }
public void test182() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test182"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); java.util.Spliterator<java.lang.Integer> intSpliterator45 = multidimensionalCounter44.spliterator(); int int46 = multidimensionalCounter44.getSize(); int int47 = multidimensionalCounter44.getDimension(); int int48 = multidimensionalCounter44.getDimension(); int int49 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intSpliterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3273600 + "'", int46 == 3273600); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); }
public void test183() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test183"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.iterator(); int int53 = multidimensionalCounter44.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator54 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); org.junit.Assert.assertNotNull(intSpliterator54); }
public void test184() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test184"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); boolean boolean46 = iterator45.hasNext(); int int48 = iterator45.getCount(0); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); }
public void test185() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test185"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray29 = multidimensionalCounter27.getSizes(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 32, 1023, 10, 1]"); }
public void test186() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test186"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator50 = multidimensionalCounter44.spliterator(); int int51 = multidimensionalCounter44.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3273600 + "'", int48 == 3273600); org.junit.Assert.assertNotNull(iterator49); org.junit.Assert.assertNotNull(intSpliterator50); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5); }
public void test187() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test187"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); // The following exception was thrown during execution in test generation try { int[] intArray47 = multidimensionalCounter44.getCounts(1080033280); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 1,080,033,280 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); }
public void test188() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test188"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter49.new Iterator(); int[] intArray52 = new int[] {}; int[] intArray58 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int59 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray58); int[] intArray60 = org.apache.commons.math.util.MathUtils.copyOf(intArray58); // The following exception was thrown during execution in test generation try { int int61 = multidimensionalCounter49.getCount(intArray58); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]"); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); }
public void test189() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test189"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getSize(); // The following exception was thrown during execution in test generation try { int[] intArray50 = multidimensionalCounter44.getCounts((-32736000)); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -32,736,000 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3273600 + "'", int48 == 3273600); }
public void test190() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test190"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator31 = multidimensionalCounter27.new Iterator(); int int32 = iterator31.getCount(); // The following exception was thrown during execution in test generation try { int int34 = iterator31.getCount((-1753164450)); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1753164450"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); }
public void test191() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test191"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator31 = multidimensionalCounter27.new Iterator(); int int32 = iterator31.getCount(); int int33 = iterator31.getCount(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); }
public void test192() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test192"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.new Iterator(); int[] intArray52 = multidimensionalCounter49.getCounts(0); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0, 0, 0, 0]"); }
public void test193() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test193"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getDimension(); int[] intArray48 = multidimensionalCounter44.getSizes(); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray48); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); }
public void test194() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test194"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getDimension(); java.util.Spliterator<java.lang.Integer> intSpliterator50 = multidimensionalCounter44.spliterator(); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertNotNull(intSpliterator50); org.junit.Assert.assertNotNull(intSpliterator51); }
public void test195() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test195"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray10 = multidimensionalCounter9.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator11 = multidimensionalCounter9.new Iterator(); int[] intArray12 = multidimensionalCounter9.getSizes(); // The following exception was thrown during execution in test generation try { java.lang.String str13 = multidimensionalCounter9.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 32, 1023, 10, 1]"); }
public void test196() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test196"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int[] intArray51 = multidimensionalCounter44.getCounts(4); java.util.Spliterator<java.lang.Integer> intSpliterator52 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator53 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { int int55 = iterator53.getCount((-1659038135)); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1659038135"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 4, 0]"); org.junit.Assert.assertNotNull(intSpliterator52); org.junit.Assert.assertNotNull(iterator53); }
public void test197() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test197"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter49.new Iterator(); int[] intArray53 = multidimensionalCounter49.getCounts(62); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 6, 2, 0]"); }
public void test198() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test198"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter44.iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertNotNull(iterator50); }
public void test199() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test199"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); int[] intArray29 = multidimensionalCounter27.getCounts(10); // The following exception was thrown during execution in test generation try { int[] intArray31 = multidimensionalCounter27.getCounts(2147483647); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 2,147,483,647 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 0, 1, 0, 0]"); }
public void test200() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test200"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); int int46 = multidimensionalCounter44.getDimension(); int[] intArray47 = multidimensionalCounter44.getSizes(); java.util.Spliterator<java.lang.Integer> intSpliterator48 = multidimensionalCounter44.spliterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); // The following exception was thrown during execution in test generation try { int[] intArray51 = multidimensionalCounter44.getCounts((-1580073779)); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -1,580,073,779 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator48); org.junit.Assert.assertNotNull(intSpliterator49); }
public void test201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test201"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); int[] intArray50 = new int[] {}; int[] intArray56 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int57 = org.apache.commons.math.util.MathUtils.distance1(intArray50, intArray56); int[] intArray58 = new int[] {}; int[] intArray64 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int65 = org.apache.commons.math.util.MathUtils.distance1(intArray58, intArray64); int int66 = org.apache.commons.math.util.MathUtils.distance1(intArray50, intArray64); int[] intArray67 = new int[] {}; int[] intArray73 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int74 = org.apache.commons.math.util.MathUtils.distance1(intArray67, intArray73); int[] intArray75 = new int[] {}; int[] intArray81 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int82 = org.apache.commons.math.util.MathUtils.distance1(intArray75, intArray81); int[] intArray83 = new int[] {}; int[] intArray89 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int90 = org.apache.commons.math.util.MathUtils.distance1(intArray83, intArray89); int int91 = org.apache.commons.math.util.MathUtils.distance1(intArray75, intArray89); int int92 = org.apache.commons.math.util.MathUtils.distance1(intArray73, intArray89); int int93 = org.apache.commons.math.util.MathUtils.distanceInf(intArray50, intArray73); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter94 = new org.apache.commons.math.util.MultidimensionalCounter(intArray73); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator95 = multidimensionalCounter94.iterator(); boolean boolean96 = iterator95.hasNext(); int[] intArray97 = iterator95.getCounts(); int int98 = org.apache.commons.math.util.MathUtils.distanceInf(intArray47, intArray97); int[] intArray99 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]"); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]"); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0); org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0); org.junit.Assert.assertNotNull(intArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[]"); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0); org.junit.Assert.assertNotNull(intArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]"); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0); org.junit.Assert.assertNotNull(intArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]"); org.junit.Assert.assertNotNull(intArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0); org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0); org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0); org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0); org.junit.Assert.assertNotNull(iterator95); org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true); org.junit.Assert.assertNotNull(intArray97); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray97), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1023 + "'", int98 == 1023); org.junit.Assert.assertNotNull(intArray99); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray99), "[10, 32, 1023, 10, 1]"); }
public void test202() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test202"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int[] intArray44 = new int[] {}; int[] intArray50 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int51 = org.apache.commons.math.util.MathUtils.distance1(intArray44, intArray50); int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray50); int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray50); int[] intArray54 = org.apache.commons.math.util.MathUtils.copyOf(intArray50); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter55 = new org.apache.commons.math.util.MultidimensionalCounter(intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int[] intArray64 = new int[] {}; int[] intArray70 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int71 = org.apache.commons.math.util.MathUtils.distance1(intArray64, intArray70); int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray70); int[] intArray73 = new int[] {}; double double74 = org.apache.commons.math.util.MathUtils.distance(intArray56, intArray73); int[] intArray75 = org.apache.commons.math.util.MathUtils.copyOf(intArray56); int[] intArray77 = org.apache.commons.math.util.MathUtils.copyOf(intArray75, (int) (byte) 100); int int78 = org.apache.commons.math.util.MathUtils.distanceInf(intArray54, intArray77); double double79 = org.apache.commons.math.util.MathUtils.distance(intArray22, intArray77); // The following exception was thrown during execution in test generation try { org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter80 = new org.apache.commons.math.util.MultidimensionalCounter(intArray77); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotStrictlyPositiveException; message: 0 is smaller than, or equal to, the minimum (0)"); } catch (org.apache.commons.math.exception.NotStrictlyPositiveException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]"); org.junit.Assert.assertNotNull(intArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[]"); org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d); org.junit.Assert.assertNotNull(intArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]"); org.junit.Assert.assertNotNull(intArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1023 + "'", int78 == 1023); org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1023.598554121683d + "'", double79 == 1023.598554121683d); }
public void test203() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test203"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); java.util.Spliterator<java.lang.Integer> intSpliterator47 = multidimensionalCounter44.spliterator(); java.util.Spliterator<java.lang.Integer> intSpliterator48 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator47); org.junit.Assert.assertNotNull(intSpliterator48); }
public void test204() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test204"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter44.new Iterator(); int[] intArray51 = iterator50.getCounts(); int int52 = iterator50.getCount(); int int53 = iterator50.getCount(); // The following exception was thrown during execution in test generation try { iterator50.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); }
public void test205() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test205"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getDimension(); int int49 = multidimensionalCounter44.getSize(); int int50 = multidimensionalCounter44.getDimension(); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5); org.junit.Assert.assertNotNull(intSpliterator51); }
public void test206() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test206"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator31 = multidimensionalCounter27.new Iterator(); int int32 = multidimensionalCounter27.getDimension(); int[] intArray33 = multidimensionalCounter27.getSizes(); // The following exception was thrown during execution in test generation try { java.lang.String str34 = multidimensionalCounter27.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 32, 1023, 10, 1]"); }
public void test207() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test207"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); int[] intArray48 = multidimensionalCounter44.getCounts(9); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 0, 0, 9, 0]"); org.junit.Assert.assertNotNull(intSpliterator49); }
public void test208() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test208"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (byte) 10); int[] intArray52 = new int[] {}; int[] intArray58 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int59 = org.apache.commons.math.util.MathUtils.distance1(intArray52, intArray58); int[] intArray60 = new int[] {}; int[] intArray66 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int67 = org.apache.commons.math.util.MathUtils.distance1(intArray60, intArray66); int[] intArray68 = new int[] {}; int[] intArray74 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int75 = org.apache.commons.math.util.MathUtils.distance1(intArray68, intArray74); int int76 = org.apache.commons.math.util.MathUtils.distance1(intArray60, intArray74); int int77 = org.apache.commons.math.util.MathUtils.distance1(intArray58, intArray74); int[] intArray78 = org.apache.commons.math.util.MathUtils.copyOf(intArray74); int[] intArray79 = org.apache.commons.math.util.MathUtils.copyOf(intArray74); // The following exception was thrown during execution in test generation try { int int80 = multidimensionalCounter44.getCount(intArray79); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]"); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]"); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]"); org.junit.Assert.assertNotNull(intArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0); org.junit.Assert.assertNotNull(intArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 32, 1023, 10, 1]"); }
public void test209() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test209"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int int45 = multidimensionalCounter44.getSize(); int[] intArray46 = multidimensionalCounter44.getSizes(); java.util.Spliterator<java.lang.Integer> intSpliterator47 = multidimensionalCounter44.spliterator(); int[] intArray49 = multidimensionalCounter44.getCounts(99); // The following exception was thrown during execution in test generation try { java.lang.String str50 = multidimensionalCounter44.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3273600 + "'", int45 == 3273600); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator47); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 9, 9, 0]"); }
public void test210() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test210"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); int[] intArray46 = multidimensionalCounter44.getCounts((int) (byte) 0); java.util.Spliterator<java.lang.Integer> intSpliterator47 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.iterator(); // The following exception was thrown during execution in test generation try { int int50 = iterator48.getCount(483395221); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 483395221"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intSpliterator47); org.junit.Assert.assertNotNull(iterator48); }
public void test211() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test211"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator31 = multidimensionalCounter27.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator32 = multidimensionalCounter27.new Iterator(); boolean boolean33 = iterator32.hasNext(); // The following exception was thrown during execution in test generation try { iterator32.remove(); org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null"); } catch (java.lang.UnsupportedOperationException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); }
public void test212() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test212"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getDimension(); int[] intArray49 = multidimensionalCounter44.getSizes(); int int50 = multidimensionalCounter44.getSize(); int[] intArray52 = multidimensionalCounter44.getCounts(0); int int53 = multidimensionalCounter44.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); }
public void test213() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test213"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray42); int[] intArray45 = new int[] {}; double double46 = org.apache.commons.math.util.MathUtils.distance(intArray28, intArray45); int[] intArray47 = org.apache.commons.math.util.MathUtils.copyOf(intArray28); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray47, (int) (byte) 100); int int50 = org.apache.commons.math.util.MathUtils.distanceInf(intArray26, intArray49); int[] intArray51 = new int[] {}; int[] intArray57 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int58 = org.apache.commons.math.util.MathUtils.distance1(intArray51, intArray57); int[] intArray59 = new int[] {}; int[] intArray65 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int66 = org.apache.commons.math.util.MathUtils.distance1(intArray59, intArray65); int int67 = org.apache.commons.math.util.MathUtils.distance1(intArray51, intArray65); // The following exception was thrown during execution in test generation try { double double68 = org.apache.commons.math.util.MathUtils.distance(intArray26, intArray51); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1023 + "'", int50 == 1023); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]"); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]"); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0); org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0); }
public void test214() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test214"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter44.new Iterator(); int[] intArray51 = iterator50.getCounts(); int int52 = iterator50.getCount(); int int53 = iterator50.getCount(); // The following exception was thrown during execution in test generation try { int int55 = iterator50.getCount(1072693279); org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1072693279"); } catch (java.lang.ArrayIndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); }
public void test215() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test215"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray11 = multidimensionalCounter9.getCounts((int) (byte) 1); int[] intArray12 = new int[] {}; int[] intArray18 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int19 = org.apache.commons.math.util.MathUtils.distance1(intArray12, intArray18); int[] intArray20 = new int[] {}; int[] intArray26 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int27 = org.apache.commons.math.util.MathUtils.distance1(intArray20, intArray26); int int28 = org.apache.commons.math.util.MathUtils.distance1(intArray12, intArray26); int[] intArray29 = new int[] {}; int[] intArray35 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int36 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray35); int[] intArray37 = new int[] {}; int[] intArray43 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray43); int[] intArray45 = new int[] {}; int[] intArray51 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray51); int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray51); int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray35, intArray51); int int55 = org.apache.commons.math.util.MathUtils.distanceInf(intArray12, intArray35); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter56 = new org.apache.commons.math.util.MultidimensionalCounter(intArray35); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator57 = multidimensionalCounter56.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter56); int[] intArray59 = multidimensionalCounter56.getSizes(); int int60 = org.apache.commons.math.util.MathUtils.distanceInf(intArray11, intArray59); // The following exception was thrown during execution in test generation try { int[] intArray62 = org.apache.commons.math.util.MathUtils.copyOf(intArray59, (-1011526758)); org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null"); } catch (java.lang.NegativeArraySizeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 1, 0]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[]"); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(iterator57); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1023 + "'", int60 == 1023); }
public void test216() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test216"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter49.new Iterator(); int[] intArray52 = iterator51.getCounts(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0, 0, 0, -1]"); }
public void test217() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test217"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); java.util.Spliterator<java.lang.Integer> intSpliterator28 = multidimensionalCounter27.spliterator(); int[] intArray30 = multidimensionalCounter27.getCounts((int) (short) 100); int int31 = multidimensionalCounter27.getSize(); int[] intArray32 = multidimensionalCounter27.getSizes(); int int33 = multidimensionalCounter27.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator34 = multidimensionalCounter27.new Iterator(); int int35 = multidimensionalCounter27.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3273600 + "'", int31 == 3273600); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3273600 + "'", int33 == 3273600); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5); }
public void test218() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test218"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator50 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter44.iterator(); int int52 = multidimensionalCounter44.getSize(); int int53 = multidimensionalCounter44.getDimension(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intSpliterator50); org.junit.Assert.assertNotNull(iterator51); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3273600 + "'", int52 == 3273600); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5); }
public void test219() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test219"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int int50 = multidimensionalCounter44.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3273600 + "'", int48 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); }
public void test220() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test220"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); int int50 = multidimensionalCounter48.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter48.iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator53 = multidimensionalCounter48.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertNotNull(intSpliterator51); org.junit.Assert.assertNotNull(iterator52); org.junit.Assert.assertNotNull(intSpliterator53); }
public void test221() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test221"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter44.iterator(); int[] intArray51 = multidimensionalCounter44.getCounts((int) (short) 10); int int52 = multidimensionalCounter44.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3273600 + "'", int48 == 3273600); org.junit.Assert.assertNotNull(iterator49); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3273600 + "'", int52 == 3273600); }
public void test222() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test222"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getDimension(); int int50 = multidimensionalCounter44.getSize(); int int51 = multidimensionalCounter44.getDimension(); int int52 = multidimensionalCounter44.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3273600 + "'", int52 == 3273600); }
public void test223() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test223"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int int50 = multidimensionalCounter44.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter44.new Iterator(); int[] intArray52 = iterator51.getCounts(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0, 0, 0, -1]"); }
public void test224() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test224"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); int int49 = multidimensionalCounter44.getDimension(); int int50 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter44.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 5 + "'", int49 == 5); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); }
public void test225() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test225"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = multidimensionalCounter44.getSizes(); int[] intArray50 = multidimensionalCounter44.getCounts(0); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(intSpliterator51); }
public void test226() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test226"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, (int) (byte) 0); int[] intArray29 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, 0); int[] intArray30 = new int[] {}; int[] intArray36 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int37 = org.apache.commons.math.util.MathUtils.distance1(intArray30, intArray36); int int38 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray36); int[] intArray39 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); int[] intArray40 = new int[] {}; int[] intArray46 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int47 = org.apache.commons.math.util.MathUtils.distance1(intArray40, intArray46); int[] intArray48 = new int[] {}; int[] intArray54 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray54); int[] intArray56 = new int[] {}; int[] intArray62 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int63 = org.apache.commons.math.util.MathUtils.distance1(intArray56, intArray62); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray48, intArray62); int int65 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray62); int[] intArray66 = org.apache.commons.math.util.MathUtils.copyOf(intArray62); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter67 = new org.apache.commons.math.util.MultidimensionalCounter(intArray66); java.util.Spliterator<java.lang.Integer> intSpliterator68 = multidimensionalCounter67.spliterator(); int[] intArray70 = multidimensionalCounter67.getCounts((int) (short) 100); int[] intArray71 = org.apache.commons.math.util.MathUtils.copyOf(intArray70); int int72 = org.apache.commons.math.util.MathUtils.distanceInf(intArray39, intArray70); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]"); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]"); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]"); org.junit.Assert.assertNotNull(intArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator68); org.junit.Assert.assertNotNull(intArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[0, 0, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); }
public void test227() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test227"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray6); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter9 = new org.apache.commons.math.util.MultidimensionalCounter(intArray8); int[] intArray10 = multidimensionalCounter9.getSizes(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator11 = multidimensionalCounter9.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator12 = multidimensionalCounter9.new Iterator(); // The following exception was thrown during execution in test generation try { java.lang.String str13 = multidimensionalCounter9.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); }
public void test228() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test228"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); int int50 = multidimensionalCounter48.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter48.spliterator(); // The following exception was thrown during execution in test generation try { java.lang.String str52 = multidimensionalCounter48.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertNotNull(intSpliterator51); }
public void test229() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test229"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray22); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = new int[] {}; int[] intArray42 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray36, intArray42); int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray42); int[] intArray45 = new int[] {}; double double46 = org.apache.commons.math.util.MathUtils.distance(intArray28, intArray45); int[] intArray47 = org.apache.commons.math.util.MathUtils.copyOf(intArray28); int[] intArray49 = org.apache.commons.math.util.MathUtils.copyOf(intArray47, (int) (byte) 100); // The following exception was thrown during execution in test generation try { int int50 = multidimensionalCounter27.getCount(intArray49); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 100 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"); }
public void test230() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test230"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); int int50 = multidimensionalCounter48.getDimension(); // The following exception was thrown during execution in test generation try { int[] intArray52 = multidimensionalCounter48.getCounts((int) (byte) -1); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: -1 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5); }
public void test231() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test231"); org.apache.commons.math.exception.util.Localizable localizable0 = null; int[] intArray1 = new int[] {}; int[] intArray7 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int8 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray7); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int int17 = org.apache.commons.math.util.MathUtils.distance1(intArray1, intArray15); int[] intArray18 = new int[] {}; int[] intArray24 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray18, intArray24); int[] intArray26 = new int[] {}; int[] intArray32 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray32); int[] intArray34 = new int[] {}; int[] intArray40 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray34, intArray40); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray26, intArray40); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray24, intArray40); int int44 = org.apache.commons.math.util.MathUtils.distanceInf(intArray1, intArray24); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter45 = new org.apache.commons.math.util.MultidimensionalCounter(intArray24); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator46 = multidimensionalCounter45.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter45); int int48 = multidimensionalCounter45.getDimension(); int[] intArray49 = multidimensionalCounter45.getSizes(); int[] intArray50 = multidimensionalCounter45.getSizes(); org.apache.commons.math.exception.util.Localizable localizable51 = null; org.apache.commons.math.exception.util.Localizable localizable52 = null; org.apache.commons.math.exception.NumberIsTooLargeException numberIsTooLargeException56 = new org.apache.commons.math.exception.NumberIsTooLargeException(localizable52, (java.lang.Number) (-1.0f), (java.lang.Number) (-1L), true); numberIsTooLargeException56.setContext("org.apache.commons.math.exception.NonMonotonousSequenceException: points -1 and 0 are not strictly increasing (null >= 10)", (java.lang.Object) 100L); org.apache.commons.math.exception.util.Localizable localizable60 = null; org.apache.commons.math.exception.util.Localizable localizable61 = null; org.apache.commons.math.exception.DimensionMismatchException dimensionMismatchException64 = new org.apache.commons.math.exception.DimensionMismatchException(localizable61, (int) '4', (int) (short) 0); dimensionMismatchException64.setContext("hi!", (java.lang.Object) (byte) 0); java.lang.Throwable[] throwableArray68 = dimensionMismatchException64.getSuppressed(); numberIsTooLargeException56.addMessage(localizable60, (java.lang.Object[]) throwableArray68); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) throwableArray68); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) intArray50, localizable51, (java.lang.Object[]) throwableArray68); org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException72 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) throwableArray68); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[]"); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(iterator46); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(throwableArray68); }
public void test232() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test232"); org.apache.commons.math.exception.util.Localizable localizable0 = null; int[] intArray2 = new int[] {}; int[] intArray8 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int9 = org.apache.commons.math.util.MathUtils.distance1(intArray2, intArray8); int[] intArray10 = new int[] {}; int[] intArray16 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int17 = org.apache.commons.math.util.MathUtils.distance1(intArray10, intArray16); int int18 = org.apache.commons.math.util.MathUtils.distance1(intArray2, intArray16); int[] intArray19 = new int[] {}; int[] intArray25 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int26 = org.apache.commons.math.util.MathUtils.distance1(intArray19, intArray25); int[] intArray27 = new int[] {}; int[] intArray33 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray33); int[] intArray35 = new int[] {}; int[] intArray41 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray35, intArray41); int int43 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray41); int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray41); int int45 = org.apache.commons.math.util.MathUtils.distanceInf(intArray2, intArray25); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter46 = new org.apache.commons.math.util.MultidimensionalCounter(intArray25); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator47 = multidimensionalCounter46.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter46); int int49 = multidimensionalCounter46.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter46.new Iterator(); int[] intArray51 = iterator50.getCounts(); int int52 = iterator50.getCount(); int[] intArray53 = iterator50.getCounts(); int[] intArray55 = org.apache.commons.math.util.MathUtils.copyOf(intArray53, 10); org.apache.commons.math.exception.util.Localizable localizable56 = null; org.apache.commons.math.exception.util.Localizable localizable57 = null; org.apache.commons.math.exception.util.Localizable localizable58 = null; org.apache.commons.math.exception.MathArithmeticException mathArithmeticException60 = new org.apache.commons.math.exception.MathArithmeticException(); java.lang.Object[] objArray63 = new java.lang.Object[] { 1.0f, mathArithmeticException60, (-1.0d), (short) 0 }; org.apache.commons.math.exception.NullArgumentException nullArgumentException64 = new org.apache.commons.math.exception.NullArgumentException(localizable58, objArray63); org.apache.commons.math.exception.MathArithmeticException mathArithmeticException65 = new org.apache.commons.math.exception.MathArithmeticException(localizable57, objArray63); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) intArray53, localizable56, objArray63); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException67 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable0, (java.lang.Number) 1.3362938564082754d, objArray63); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]"); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]"); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]"); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertNotNull(iterator47); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3273600 + "'", int49 == 3273600); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[0, 0, 0, 0, -1]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0, 0, 0, -1, 0, 0, 0, 0, 0]"); org.junit.Assert.assertNotNull(objArray63); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); }
public void test233() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test233"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray22); int[] intArray27 = org.apache.commons.math.util.MathUtils.copyOf(intArray0, (int) (byte) 0); int[] intArray28 = new int[] {}; int[] intArray34 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int35 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray34); int[] intArray36 = org.apache.commons.math.util.MathUtils.copyOf(intArray28); int[] intArray37 = new int[] {}; int[] intArray43 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray43); int[] intArray45 = new int[] {}; int[] intArray51 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int52 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray51); int[] intArray53 = new int[] {}; int[] intArray59 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int60 = org.apache.commons.math.util.MathUtils.distance1(intArray53, intArray59); int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray45, intArray59); int int62 = org.apache.commons.math.util.MathUtils.distance1(intArray43, intArray59); int[] intArray63 = org.apache.commons.math.util.MathUtils.copyOf(intArray59); int int64 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray59); int[] intArray65 = new int[] {}; int[] intArray71 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int72 = org.apache.commons.math.util.MathUtils.distance1(intArray65, intArray71); int[] intArray73 = org.apache.commons.math.util.MathUtils.copyOf(intArray71); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter74 = new org.apache.commons.math.util.MultidimensionalCounter(intArray73); int[] intArray75 = multidimensionalCounter74.getSizes(); int int76 = org.apache.commons.math.util.MathUtils.distance1(intArray28, intArray75); int int77 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray28); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]"); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]"); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0); org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0); }
public void test234() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test234"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator48 = multidimensionalCounter44.new Iterator(); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter44.spliterator(); int int50 = multidimensionalCounter44.getDimension(); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter44.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter44.new Iterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator53 = multidimensionalCounter44.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5); org.junit.Assert.assertNotNull(intSpliterator51); }
public void test235() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test235"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); java.util.Spliterator<java.lang.Integer> intSpliterator45 = multidimensionalCounter44.spliterator(); int int46 = multidimensionalCounter44.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator47 = multidimensionalCounter44.spliterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intSpliterator45); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3273600 + "'", int46 == 3273600); org.junit.Assert.assertNotNull(intSpliterator47); }
public void test236() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test236"); org.apache.commons.math.exception.DimensionMismatchException dimensionMismatchException2 = new org.apache.commons.math.exception.DimensionMismatchException((-3273600), 32); int[] intArray4 = new int[] {}; int[] intArray10 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int11 = org.apache.commons.math.util.MathUtils.distance1(intArray4, intArray10); int[] intArray12 = new int[] {}; int[] intArray18 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int19 = org.apache.commons.math.util.MathUtils.distance1(intArray12, intArray18); int int20 = org.apache.commons.math.util.MathUtils.distance1(intArray4, intArray18); int[] intArray21 = new int[] {}; int[] intArray27 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int28 = org.apache.commons.math.util.MathUtils.distance1(intArray21, intArray27); int[] intArray29 = new int[] {}; int[] intArray35 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int36 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray35); int[] intArray37 = new int[] {}; int[] intArray43 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray43); int int45 = org.apache.commons.math.util.MathUtils.distance1(intArray29, intArray43); int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray27, intArray43); int int47 = org.apache.commons.math.util.MathUtils.distanceInf(intArray4, intArray27); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray27); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator49 = multidimensionalCounter48.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter48); int int51 = multidimensionalCounter48.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter48.new Iterator(); int int53 = multidimensionalCounter48.getSize(); int[] intArray55 = multidimensionalCounter48.getCounts((int) (byte) 10); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator56 = multidimensionalCounter48.iterator(); dimensionMismatchException2.setContext("org.apache.commons.math.exception.NotFiniteNumberException: 0 is not a finite number", (java.lang.Object) multidimensionalCounter48); int int58 = multidimensionalCounter48.getDimension(); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0); org.junit.Assert.assertNotNull(iterator49); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3273600 + "'", int51 == 3273600); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3273600 + "'", int53 == 3273600); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[0, 0, 1, 0, 0]"); org.junit.Assert.assertNotNull(iterator56); org.junit.Assert.assertTrue("'" + int58 + "' != '" + 5 + "'", int58 == 5); }
public void test237() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test237"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator50 = multidimensionalCounter49.new Iterator(); int int51 = multidimensionalCounter49.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3273600 + "'", int51 == 3273600); }
public void test238() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test238"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); int int50 = multidimensionalCounter48.getSize(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator51 = multidimensionalCounter48.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); }
public void test239() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test239"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); int[] intArray48 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter49 = new org.apache.commons.math.util.MultidimensionalCounter(intArray48); // The following exception was thrown during execution in test generation try { int[] intArray51 = multidimensionalCounter49.getCounts(334391204); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 334,391,204 out of [0, 3,273,600] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 32, 1023, 10, 1]"); }
public void test240() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test240"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int[] intArray47 = multidimensionalCounter44.getSizes(); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter48 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); java.util.Spliterator<java.lang.Integer> intSpliterator49 = multidimensionalCounter48.spliterator(); int int50 = multidimensionalCounter48.getSize(); java.util.Spliterator<java.lang.Integer> intSpliterator51 = multidimensionalCounter48.spliterator(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator52 = multidimensionalCounter48.iterator(); // The following exception was thrown during execution in test generation try { java.lang.String str53 = multidimensionalCounter48.toString(); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 1 != 5"); } catch (org.apache.commons.math.exception.DimensionMismatchException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intSpliterator49); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertNotNull(intSpliterator51); org.junit.Assert.assertNotNull(iterator52); }
public void test241() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test241"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int[] intArray16 = new int[] {}; int[] intArray22 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int23 = org.apache.commons.math.util.MathUtils.distance1(intArray16, intArray22); int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray22); int int25 = org.apache.commons.math.util.MathUtils.distance1(intArray6, intArray22); int[] intArray26 = org.apache.commons.math.util.MathUtils.copyOf(intArray22); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter27 = new org.apache.commons.math.util.MultidimensionalCounter(intArray26); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator28 = multidimensionalCounter27.iterator(); int int29 = multidimensionalCounter27.getSize(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(iterator28); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3273600 + "'", int29 == 3273600); }
public void test242() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test242"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator45 = multidimensionalCounter44.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter44); int int47 = multidimensionalCounter44.getSize(); int int48 = multidimensionalCounter44.getDimension(); int[] intArray49 = multidimensionalCounter44.getSizes(); int int50 = multidimensionalCounter44.getSize(); int[] intArray52 = multidimensionalCounter44.getCounts(0); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator53 = multidimensionalCounter44.new Iterator(); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(iterator45); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3273600 + "'", int47 == 3273600); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3273600 + "'", int50 == 3273600); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[0, 0, 0, 0, 0]"); }
public void test243() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test243"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = new int[] {}; int[] intArray14 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int15 = org.apache.commons.math.util.MathUtils.distance1(intArray8, intArray14); int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray14); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int[] intArray33 = new int[] {}; int[] intArray39 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int40 = org.apache.commons.math.util.MathUtils.distance1(intArray33, intArray39); int int41 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray39); int int42 = org.apache.commons.math.util.MathUtils.distance1(intArray23, intArray39); int int43 = org.apache.commons.math.util.MathUtils.distanceInf(intArray0, intArray23); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter44 = new org.apache.commons.math.util.MultidimensionalCounter(intArray23); java.util.Spliterator<java.lang.Integer> intSpliterator45 = multidimensionalCounter44.spliterator(); int[] intArray46 = new int[] {}; int[] intArray52 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int53 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray52); int[] intArray54 = new int[] {}; int[] intArray60 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int61 = org.apache.commons.math.util.MathUtils.distance1(intArray54, intArray60); int int62 = org.apache.commons.math.util.MathUtils.distance1(intArray46, intArray60); int[] intArray63 = new int[] {}; int[] intArray69 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int70 = org.apache.commons.math.util.MathUtils.distance1(intArray63, intArray69); int[] intArray71 = new int[] {}; int[] intArray77 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int78 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray77); int[] intArray79 = new int[] {}; int[] intArray85 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int86 = org.apache.commons.math.util.MathUtils.distance1(intArray79, intArray85); int int87 = org.apache.commons.math.util.MathUtils.distance1(intArray71, intArray85); int int88 = org.apache.commons.math.util.MathUtils.distance1(intArray69, intArray85); int int89 = org.apache.commons.math.util.MathUtils.distanceInf(intArray46, intArray69); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter90 = new org.apache.commons.math.util.MultidimensionalCounter(intArray69); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator91 = multidimensionalCounter90.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter90); int[] intArray93 = multidimensionalCounter90.getSizes(); int[] intArray94 = org.apache.commons.math.util.MathUtils.copyOf(intArray93); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter95 = new org.apache.commons.math.util.MultidimensionalCounter(intArray93); int[] intArray96 = multidimensionalCounter95.getSizes(); // The following exception was thrown during execution in test generation try { int int97 = multidimensionalCounter44.getCount(intArray96); org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: 10 out of [0, 9] range"); } catch (org.apache.commons.math.exception.OutOfRangeException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[]"); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0); org.junit.Assert.assertNotNull(intSpliterator45); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]"); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]"); org.junit.Assert.assertNotNull(intArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]"); org.junit.Assert.assertNotNull(intArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0); org.junit.Assert.assertNotNull(intArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[]"); org.junit.Assert.assertNotNull(intArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0); org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0); org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0); org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0); org.junit.Assert.assertNotNull(iterator91); org.junit.Assert.assertNotNull(intArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray94); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray94), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray96); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray96), "[10, 32, 1023, 10, 1]"); }
public void test244() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test244"); int[] intArray0 = new int[] {}; int[] intArray6 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int7 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray6); int[] intArray8 = org.apache.commons.math.util.MathUtils.copyOf(intArray0); int[] intArray9 = new int[] {}; int[] intArray15 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int16 = org.apache.commons.math.util.MathUtils.distance1(intArray9, intArray15); int[] intArray17 = new int[] {}; int[] intArray23 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int24 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray23); int[] intArray25 = new int[] {}; int[] intArray31 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int32 = org.apache.commons.math.util.MathUtils.distance1(intArray25, intArray31); int int33 = org.apache.commons.math.util.MathUtils.distance1(intArray17, intArray31); int int34 = org.apache.commons.math.util.MathUtils.distance1(intArray15, intArray31); int[] intArray35 = org.apache.commons.math.util.MathUtils.copyOf(intArray31); int int36 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray31); int[] intArray37 = new int[] {}; int[] intArray43 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int44 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray43); int[] intArray45 = org.apache.commons.math.util.MathUtils.copyOf(intArray43); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter46 = new org.apache.commons.math.util.MultidimensionalCounter(intArray45); int[] intArray47 = multidimensionalCounter46.getSizes(); int int48 = org.apache.commons.math.util.MathUtils.distance1(intArray0, intArray47); int[] intArray49 = new int[] {}; int[] intArray55 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray49, intArray55); int[] intArray57 = org.apache.commons.math.util.MathUtils.copyOf(intArray55); double double58 = org.apache.commons.math.util.MathUtils.distance(intArray47, intArray55); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter59 = new org.apache.commons.math.util.MultidimensionalCounter(intArray47); int[] intArray60 = org.apache.commons.math.util.MathUtils.copyOf(intArray47); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 32, 1023, 10, 1]"); }
public void test245() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test245"); org.apache.commons.math.exception.util.Localizable localizable0 = null; org.apache.commons.math.exception.util.Localizable localizable2 = null; java.lang.Number number3 = null; org.apache.commons.math.exception.util.Localizable localizable4 = null; org.apache.commons.math.exception.MathArithmeticException mathArithmeticException6 = new org.apache.commons.math.exception.MathArithmeticException(); java.lang.Object[] objArray9 = new java.lang.Object[] { 1.0f, mathArithmeticException6, (-1.0d), (short) 0 }; org.apache.commons.math.exception.NullArgumentException nullArgumentException10 = new org.apache.commons.math.exception.NullArgumentException(localizable4, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException11 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable2, number3, objArray9); org.apache.commons.math.exception.NotFiniteNumberException notFiniteNumberException12 = new org.apache.commons.math.exception.NotFiniteNumberException(localizable0, (java.lang.Number) (-4.60718242E18f), objArray9); int[] intArray14 = new int[] {}; int[] intArray20 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int21 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray20); int[] intArray22 = new int[] {}; int[] intArray28 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int29 = org.apache.commons.math.util.MathUtils.distance1(intArray22, intArray28); int int30 = org.apache.commons.math.util.MathUtils.distance1(intArray14, intArray28); int[] intArray31 = new int[] {}; int[] intArray37 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int38 = org.apache.commons.math.util.MathUtils.distance1(intArray31, intArray37); int[] intArray39 = new int[] {}; int[] intArray45 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int46 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray45); int[] intArray47 = new int[] {}; int[] intArray53 = new int[] { (short) 10, ' ', 1023, (byte) 10, (short) 1 }; int int54 = org.apache.commons.math.util.MathUtils.distance1(intArray47, intArray53); int int55 = org.apache.commons.math.util.MathUtils.distance1(intArray39, intArray53); int int56 = org.apache.commons.math.util.MathUtils.distance1(intArray37, intArray53); int int57 = org.apache.commons.math.util.MathUtils.distanceInf(intArray14, intArray37); org.apache.commons.math.util.MultidimensionalCounter multidimensionalCounter58 = new org.apache.commons.math.util.MultidimensionalCounter(intArray37); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator59 = multidimensionalCounter58.iterator(); org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) multidimensionalCounter58); int int61 = multidimensionalCounter58.getDimension(); org.apache.commons.math.util.MultidimensionalCounter.Iterator iterator62 = multidimensionalCounter58.new Iterator(); notFiniteNumberException12.setContext("", (java.lang.Object) iterator62); int[] intArray64 = iterator62.getCounts(); org.junit.Assert.assertNotNull(objArray9); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[1.0, org.apache.commons.math.exception.MathArithmeticException: arithmetic exception, -1.0, 0]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]"); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 32, 1023, 10, 1]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0); org.junit.Assert.assertNotNull(iterator59); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 0, 0, 0, -1]"); }
