public void test0() throws Throwable { double[] doubleArray0 = new double[3]; doubleArray0[0] = 3680.718975; Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0); RealMatrix realMatrix0 = array2DRowRealMatrix0.getSubMatrix(0, 0, 0, 0); RectangularCholeskyDecomposition rectangularCholeskyDecomposition0 = new RectangularCholeskyDecomposition(realMatrix0, 103.9215079); int int0 = rectangularCholeskyDecomposition0.getRank(); assertEquals(1, int0); }
public void test1() throws Throwable { double[] doubleArray0 = new double[3]; doubleArray0[0] = 3680.718975; Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0); RealMatrix realMatrix0 = array2DRowRealMatrix0.getSubMatrix(0, 0, 0, 0); RectangularCholeskyDecomposition rectangularCholeskyDecomposition0 = new RectangularCholeskyDecomposition(realMatrix0, 103.9215079); RealMatrix realMatrix1 = rectangularCholeskyDecomposition0.getRootMatrix(); assertNotSame(realMatrix1, realMatrix0); }
public void test2() throws Throwable { double[] doubleArray0 = new double[3]; doubleArray0[2] = 1582.601578048; double[][] doubleArray1 = new double[6][1]; doubleArray1[0] = doubleArray0; doubleArray1[1] = doubleArray0; doubleArray1[2] = doubleArray0; doubleArray1[3] = doubleArray0; doubleArray1[4] = doubleArray0; doubleArray1[5] = doubleArray0; Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray1, true); RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose(); RectangularCholeskyDecomposition rectangularCholeskyDecomposition0 = null; try { rectangularCholeskyDecomposition0 = new RectangularCholeskyDecomposition(realMatrix0, 2281.191013467); fail("Expecting exception: IllegalArgumentException"); } catch(IllegalArgumentException e) { // // 1,582.602 is smaller than, or equal to, the minimum (2,281.191): not positive definite matrix: value 1,582.602 at index 2 // verifyException("org.apache.commons.math3.linear.RectangularCholeskyDecomposition", e); } }
public void test3() throws Throwable { double[] doubleArray0 = new double[3]; doubleArray0[0] = 3680.718975; double[][] doubleArray1 = new double[6][1]; doubleArray1[0] = doubleArray0; doubleArray1[1] = doubleArray0; doubleArray1[2] = doubleArray0; doubleArray1[3] = doubleArray0; doubleArray1[4] = doubleArray0; doubleArray1[5] = doubleArray0; Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray1, true); RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose(); RectangularCholeskyDecomposition rectangularCholeskyDecomposition0 = new RectangularCholeskyDecomposition(realMatrix0, 2281.191013467); assertEquals(2, rectangularCholeskyDecomposition0.getRank()); }
public void test4() throws Throwable { double[] doubleArray0 = new double[3]; doubleArray0[0] = 3680.718975; doubleArray0[2] = 1582.601578048; double[][] doubleArray1 = new double[6][1]; doubleArray1[0] = doubleArray0; doubleArray1[1] = doubleArray0; doubleArray1[2] = doubleArray0; doubleArray1[3] = doubleArray0; doubleArray1[4] = doubleArray0; doubleArray1[5] = doubleArray0; Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray1, true); RealMatrix realMatrix0 = array2DRowRealMatrix0.transpose(); RectangularCholeskyDecomposition rectangularCholeskyDecomposition0 = null; try { rectangularCholeskyDecomposition0 = new RectangularCholeskyDecomposition(realMatrix0, (-830.17)); fail("Expecting exception: IllegalArgumentException"); } catch(IllegalArgumentException e) { // // -2,776.352 is smaller than, or equal to, the minimum (-830.17): not positive definite matrix: value -2,776.352 at index 2 // verifyException("org.apache.commons.math3.linear.RectangularCholeskyDecomposition", e); } }
