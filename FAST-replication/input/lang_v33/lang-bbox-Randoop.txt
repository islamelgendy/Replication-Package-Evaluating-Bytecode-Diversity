public void test1501() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1501"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); org.apache.commons.lang3.ArrayUtils.reverse(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray5); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) shortArray5, "ClassUtils[][][]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "short[]" + "'", str11, "short[]"); }
public void test1502() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1502"); java.lang.Boolean[] booleanArray4 = new java.lang.Boolean[] { true, true, true, true }; boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); java.lang.Class<?> wildcardClass8 = null; java.lang.Class[] classArray10 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10; wildcardClassArray11[0] = wildcardClass8; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11); java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) booleanArray4, (java.lang.Object[]) wildcardClassArray14); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4, true); // The following exception was thrown during execution in test generation try { boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.add(booleanArray18, (int) (short) 100, false); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, true, true, true]"); org.junit.Assert.assertNotNull(classArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{<null>}" + "'", str15, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, true, true]"); }
public void test1503() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1503"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("double[][][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double[][][][]" + "'", str1, "double[][][][]"); }
public void test1504() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1504"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{a,4,a, ,#,#}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {a,4,a,,#,#}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1505() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1505"); java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray2, (byte) 100); java.lang.Byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray2); java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) byteArray7, "{10,10,100}"); byte[] byteArray11 = new byte[] { (byte) 0 }; java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray11); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12, (byte) 0); java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15, (byte) 10); byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray15); int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray18, (byte) -1, (int) (short) -1); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray7, byteArray18); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]"); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte[]" + "'", str9, "byte[]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0]"); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); }
public void test1506() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1506"); java.lang.Object[] objArray0 = null; java.lang.Class<?> wildcardClass1 = null; java.lang.Class[] classArray3 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray4 = (java.lang.Class<?>[]) classArray3; wildcardClassArray4[0] = wildcardClass1; java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray4); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray4); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray4); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.reflect.GenericDeclaration[]) wildcardClassArray10); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) boolean11, (int) (short) 10); org.junit.Assert.assertNotNull(classArray3); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); }
public void test1507() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1507"); char[] charArray6 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (short) 1, (int) (short) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray6, 'a', (int) (byte) -1); char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' '); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray15, '4', (int) (byte) 0); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(charArray15, '#'); char[] charArray21 = org.apache.commons.lang3.ArrayUtils.clone(charArray15); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray15, "10"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a, 4, a, #, #]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4, a, #, #]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "char[]" + "'", str23, "char[]"); }
public void test1508() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1508"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) (byte) 1); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) shortArray7, "{-1,1,0,100,0}"); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray7); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "short[]" + "'", str10, "short[]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); }
public void test1509() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1509"); double[] doubleArray2 = new double[] { 100.0f, (short) 100 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, 0); double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (short) 100, (double) 0L); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) (short) 10, (-1)); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray11, "{-1,0,1,100,-1,0,1}"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); }
public void test1510() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1510"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0,-1,0,0,-1,10,1,0,-1,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,-1,0,0,-1,10,1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1511() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1511"); double[] doubleArray2 = new double[] { 100.0f, (short) 100 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, 0); double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) '4', (int) '#'); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray2, (double) 100); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray2, "{10,10,100}"); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (-1.0d), (double) 100); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (byte) -1, (int) '4'); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); }
public void test1512() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1512"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(objArray7); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]"); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test1513() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1513"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass21 = null; java.lang.Class[] classArray23 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, false); java.lang.Class<?> wildcardClass30 = null; java.lang.Class[] classArray32 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; wildcardClassArray33[0] = wildcardClass30; java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray33); java.lang.Object obj37 = null; int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray36, obj37); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray36); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray36); java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray40); boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray41); java.lang.reflect.GenericDeclaration[] genericDeclarationArray45 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.reflect.GenericDeclaration[]) wildcardClassArray6, (int) (byte) -1, (int) (short) 1); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertNotNull(genericDeclarationArray45); }
public void test1514() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1514"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap9 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray6); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, 'null', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); }
public void test1515() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1515"); byte[] byteArray1 = new byte[] { (byte) 10 }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 1); boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (short) 0, (int) (short) -1); byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray1, (byte) 0); byte[] byteArray15 = new byte[] { (byte) 10 }; boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(byteArray15, (byte) 1); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray15); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray15, (int) (short) 0, (int) (short) -1); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray22, (byte) 10, 100); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray22); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray1, ""); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[10]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]"); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 10]"); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, ""); }
public void test1516() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1516"); java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10, 1 }; int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 1); int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) 10, "hi!"); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 1]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 1]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Integer" + "'", str8, "Integer"); }
public void test1517() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1517"); float[] floatArray3 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) 0); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5); float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5); float[] floatArray11 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray11, (float) 0); float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) ' '); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray7, floatArray15); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray15, (float) '4', (int) (byte) 0); float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray15, (int) (byte) 100, 10); java.lang.String str24 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (byte) 100, "1"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(floatArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]"); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Byte" + "'", str24, "Byte"); }
public void test1518() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1518"); float[] floatArray3 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) 0); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5); float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5); float[] floatArray11 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray11, (float) 0); float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, (float) ' '); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray7, floatArray15); float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray7); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray17, (float) 'a'); float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray17, (float) 10L); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray21, ""); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray21, (float) (short) 10); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[-1.0]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); }
public void test1519() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1519"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "[java.lang.Cloneable, java.io.Serializable]", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [java/lang/Cloneable,java/io/Serializable]"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1520() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1520"); byte[] byteArray1 = new byte[] { (byte) 10 }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 1); boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); byte[] byteArray6 = new byte[] { (byte) 10 }; boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 1); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray6); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, (byte) 1); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) 1 }; java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18, (byte) 100); java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray18); java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21); byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) byteArray23, "{10,10,100}"); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray14, byteArray23); byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[10]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 1]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1]"); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertNotNull(byteArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1]"); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "byte[]" + "'", str25, "byte[]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[1]"); }
public void test1521() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1521"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{-1,1,0,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1,1,0,100,0}" + "'", str1, "{-1,1,0,100,0}"); }
public void test1522() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1522"); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray0 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray0, arrayUtilsArray1, arrayUtilsArray2 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray4 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray7 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray4, arrayUtilsArray5, arrayUtilsArray6 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray10 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray11 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray8, arrayUtilsArray9, arrayUtilsArray10 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray12 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray13 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray15 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray12, arrayUtilsArray13, arrayUtilsArray14 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray16 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray3, arrayUtilsArray7, arrayUtilsArray11, arrayUtilsArray15 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray17 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray18 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray17 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray19 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray16, arrayUtilsArray18); char[] charArray26 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray26, (int) (short) 1, (int) (short) 0); char[] charArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.subarray(charArray26, (int) (byte) 0, (int) (short) 0); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(charArray33, '#'); org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray18, (java.lang.Object) '#'); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray18); java.lang.Object obj38 = null; int int40 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) arrayUtilsArray18, obj38, 0); org.junit.Assert.assertNotNull(arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray4); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray7); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(arrayUtilsArray10); org.junit.Assert.assertNotNull(arrayUtilsArray11); org.junit.Assert.assertNotNull(arrayUtilsArray12); org.junit.Assert.assertNotNull(arrayUtilsArray13); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertNotNull(arrayUtilsArray15); org.junit.Assert.assertNotNull(arrayUtilsArray16); org.junit.Assert.assertNotNull(arrayUtilsArray17); org.junit.Assert.assertNotNull(arrayUtilsArray18); org.junit.Assert.assertNotNull(arrayUtilsArray19); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(arrayUtilsArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); }
public void test1523() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1523"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{a,4,a, ,#,#}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {a,4,a,,#,#}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1524() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1524"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Float[] floatArray10 = new java.lang.Float[] { 100.0f }; java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray12); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) floatArray12); float[] floatArray18 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray18, (float) 0); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (-1.0f), (int) (byte) 10); float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray18, 1); float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray12, floatArray25); // The following exception was thrown during execution in test generation try { float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.add(floatArray25, (-1), (float) 1L); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(floatArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, 0.0]"); }
public void test1525() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1525"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { true, true, true, true }; boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray11); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray12); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true, (int) (byte) 0); java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { true }; boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18, true); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray18); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18); boolean[] booleanArray23 = new boolean[] {}; boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, false); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray25); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray22, booleanArray25); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray12, booleanArray25); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, true, true, true]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true]"); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true, false]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); }
public void test1526() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1526"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{a,4,a, ,#,#}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{a,4,a,,#,#}" + "'", str1, "{a,4,a,,#,#}"); }
public void test1527() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1527"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); java.util.ArrayList<java.lang.String>[] strListArray9 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray2); java.util.ArrayList<java.lang.String>[] strListArray10 = org.apache.commons.lang3.ArrayUtils.clone(strListArray2); float[] floatArray16 = new float[] { ' ', 0, 100L, '4', 0 }; float[] floatArray19 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray16, (int) (byte) 1, (int) (short) 10); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray16, 100.0f, (int) (short) 1); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strListArray2, (java.lang.Object) (short) 1); org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(strListArray9); org.junit.Assert.assertNotNull(strListArray10); org.junit.Assert.assertNotNull(floatArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[32.0, 0.0, 100.0, 52.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[0.0, 100.0, 52.0, 0.0]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); }
public void test1528() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1528"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "double[][][][]"); org.junit.Assert.assertNotNull(wildcardClass2); }
public void test1529() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1529"); byte[] byteArray1 = new byte[] { (byte) 10 }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 1); boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); byte[] byteArray6 = new byte[] { (byte) 10 }; boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 1); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray6); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, (byte) 1); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) 1 }; java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray17); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray18, (byte) 100); java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray18); java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21); byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray22); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) byteArray23, "{10,10,100}"); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray14, byteArray23); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.add(byteArray23, (byte) 1); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[10]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 1]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[1]"); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertNotNull(byteArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1]"); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "byte[]" + "'", str25, "byte[]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1, 1]"); }
public void test1530() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1530"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("1"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1531() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1531"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); java.lang.Object[] objArray46 = null; double[] doubleArray49 = new double[] { 100.0f, (short) 100 }; double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray49, 0); java.lang.Double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray49); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(objArray46, (java.lang.Object[]) doubleArray52); java.lang.Double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray52); boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray32, (java.lang.Object[]) doubleArray54); java.lang.Byte[] byteArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray32); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(byteArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 0, 10]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false); org.junit.Assert.assertNotNull(byteArray56); }
public void test1532() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1532"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); java.util.ArrayList<java.lang.String>[] strListArray9 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray2); java.lang.String[] strArray11 = new java.lang.String[] { "{0,100,10}" }; java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>(); boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11); java.util.AbstractCollection<java.lang.String>[] strCollectionArray14 = org.apache.commons.lang3.ArrayUtils.add((java.util.AbstractCollection<java.lang.String>[]) strListArray9, (java.util.AbstractCollection<java.lang.String>) strList12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList12); org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(strListArray9); org.junit.Assert.assertNotNull(strArray11); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertNotNull(strCollectionArray14); org.junit.Assert.assertNotNull(wildcardClassList15); }
public void test1533() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1533"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray2, "{0,100,10}"); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.clone(longArray2); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[10, 10]"); }
public void test1534() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1534"); java.lang.Long[] longArray5 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 1); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray5, (java.lang.Object) false, (int) (byte) 0); int[] intArray14 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray5, (java.lang.Object[]) intArray15); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5); org.apache.commons.lang3.ArrayUtils.reverse(longArray17); long[] longArray21 = org.apache.commons.lang3.ArrayUtils.subarray(longArray17, (int) ' ', 10); long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray17, (int) (short) 0, 10); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 10, "double[][][][]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 100, 0, 1, -1]"); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[0, 100, 0, 1, -1]"); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "java.lang" + "'", str26, "java.lang"); }
public void test1535() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1535"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); float[] floatArray40 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40); short[] shortArray46 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.clone(shortArray46); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray47); int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray47, (short) (byte) 10, (int) '#'); boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray41, (java.lang.Object) (byte) 10); float[] floatArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray41); int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray27, (java.lang.Object) floatArray53, 0); float[] floatArray56 = org.apache.commons.lang3.ArrayUtils.clone(floatArray53); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray41); org.junit.Assert.assertNotNull(shortArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray46), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[1, 0, -1, 100]"); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false); org.junit.Assert.assertNotNull(floatArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray53), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertNotNull(floatArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray56), "[97.0, 10.0, 1.0, 100.0]"); }
public void test1536() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1536"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{1,0,-1,100,1}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1537() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1537"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); java.lang.Object[] objArray46 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Object[]) byteArray32); byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(byteArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 0, 10]"); org.junit.Assert.assertNotNull(objArray46); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10, 0, 10]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10, 0, 10]"); org.junit.Assert.assertNotNull(byteArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 0, 10]"); }
public void test1538() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1538"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); java.lang.Object[] objArray46 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Object[]) byteArray32); org.apache.commons.lang3.ArrayUtils.reverse(objArray46); org.apache.commons.lang3.ArrayUtils.reverse(objArray46); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(byteArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 0, 10]"); org.junit.Assert.assertNotNull(objArray46); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[10, 0, 10]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[10, 0, 10]"); }
public void test1539() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1539"); float[] floatArray3 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) 0); float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray5, (float) ' '); java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray5, "{97.0,10.0,1.0,100.0}"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); }
public void test1540() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1540"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); java.util.ArrayList<java.lang.String>[] strListArray9 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray2); java.util.ArrayList<java.lang.String>[] strListArray10 = org.apache.commons.lang3.ArrayUtils.clone(strListArray2); java.util.AbstractCollection<java.lang.String>[] strCollectionArray11 = org.apache.commons.lang3.ArrayUtils.toArray((java.util.AbstractCollection<java.lang.String>[]) strListArray2); int[] intArray15 = new int[] { 1, '4', (byte) 0 }; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray15); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray15, (-1), 100); int[] intArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, 0); int[] intArray25 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray26 = org.apache.commons.lang3.ArrayUtils.toObject(intArray25); int[] intArray33 = new int[] { (short) -1, 'a', (byte) -1, 1, (short) 0, (-1) }; int[] intArray34 = org.apache.commons.lang3.ArrayUtils.addAll(intArray25, intArray33); int[] intArray36 = org.apache.commons.lang3.ArrayUtils.remove(intArray33, 1); int[] intArray37 = org.apache.commons.lang3.ArrayUtils.addAll(intArray15, intArray33); int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray33, (int) (byte) 0); java.lang.Long[] longArray45 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45, (long) 1); int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray45, (java.lang.Object) false, (int) (byte) 0); int[] intArray54 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray55 = org.apache.commons.lang3.ArrayUtils.toObject(intArray54); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray45, (java.lang.Object[]) intArray55); int[] intArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray55, (int) '#'); int[] intArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray58); int[] intArray60 = org.apache.commons.lang3.ArrayUtils.addAll(intArray33, intArray58); int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray60, 0); java.util.ArrayList<java.lang.String>[] strListArray63 = org.apache.commons.lang3.ArrayUtils.removeElement(strListArray2, (java.lang.Object) int62); java.util.ArrayList<java.lang.String>[] strListArray64 = org.apache.commons.lang3.ArrayUtils.clone(strListArray63); org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(strListArray9); org.junit.Assert.assertNotNull(strListArray10); org.junit.Assert.assertNotNull(strCollectionArray11); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[1, 52, 0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1, 52]"); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0, 100, 10, -1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[1, 52, 0, -1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4); org.junit.Assert.assertNotNull(longArray45); org.junit.Assert.assertNotNull(longArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 97, -1, 1, 0, -1, 0, 100, 10]"); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 6 + "'", int62 == 6); org.junit.Assert.assertNotNull(strListArray63); org.junit.Assert.assertNotNull(strListArray64); }
public void test1541() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1541"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray8 = null; boolean boolean9 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray3, wildcardClassArray8); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); }
public void test1542() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1542"); int[] intArray3 = new int[] { 1, '4', (byte) 0 }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray3); int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray3, (-1), 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray3, 0); int[] intArray13 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray14 = org.apache.commons.lang3.ArrayUtils.toObject(intArray13); int[] intArray21 = new int[] { (short) -1, 'a', (byte) -1, 1, (short) 0, (-1) }; int[] intArray22 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray21); int[] intArray24 = org.apache.commons.lang3.ArrayUtils.remove(intArray21, 1); int[] intArray25 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray21); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, (int) (byte) 0); java.lang.Long[] longArray33 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, (long) 1); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray33, (java.lang.Object) false, (int) (byte) 0); int[] intArray42 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray43 = org.apache.commons.lang3.ArrayUtils.toObject(intArray42); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray33, (java.lang.Object[]) intArray43); int[] intArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray43, (int) '#'); int[] intArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray46); int[] intArray48 = org.apache.commons.lang3.ArrayUtils.addAll(intArray21, intArray46); java.lang.String str50 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray46, "{a,4,a,,#,#}"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[1, 52, 0]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[1, 52]"); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[0, 100, 10, -1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 52, 0, -1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 4 + "'", int27 == 4); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 97, -1, 1, 0, -1, 0, 100, 10]"); org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, ""); }
public void test1543() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1543"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray4 = new boolean[] { true, true, false }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray0, booleanArray4); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray0); java.lang.Long[] longArray12 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray12, (long) 1); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray12, (java.lang.Object) false, (int) (byte) 0); int[] intArray21 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray22 = org.apache.commons.lang3.ArrayUtils.toObject(intArray21); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray12, (java.lang.Object[]) intArray22); float[] floatArray27 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray27, (float) 0); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray22, (java.lang.Object) 0, (int) (byte) -1); java.lang.Long[] longArray37 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray37, (long) 1); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray22, (java.lang.Object[]) longArray37); boolean[] booleanArray41 = new boolean[] {}; boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.add(booleanArray41, false); boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.add(booleanArray41, true); boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray45); int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray37, (java.lang.Object) booleanArray46); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray0, booleanArray46); boolean[] booleanArray49 = new boolean[] {}; boolean[] booleanArray53 = new boolean[] { true, true, false }; boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray49, booleanArray53); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray49); java.lang.Boolean[] booleanArray57 = new java.lang.Boolean[] { true }; boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray57, true); boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray59); boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray49, booleanArray59); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray0, booleanArray59); boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0); java.lang.String str65 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean63, ""); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[true, true, false]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertNotNull(longArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertNotNull(booleanArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[]"); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false]"); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[true]"); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[true]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); org.junit.Assert.assertNotNull(booleanArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[]"); org.junit.Assert.assertNotNull(booleanArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[true, true, false]"); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false); org.junit.Assert.assertNotNull(booleanArray57); org.junit.Assert.assertNotNull(booleanArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[true]"); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true); org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Boolean" + "'", str65, "Boolean"); }
public void test1544() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1544"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("[java.lang.Cloneable, java.io.Serializable]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Serializable][]" + "'", str1, "Serializable][]"); }
public void test1545() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1545"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray3); int[] intArray13 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray15 = org.apache.commons.lang3.ArrayUtils.remove(intArray13, (int) (short) 0); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray13, (int) (byte) 0, (int) (short) 0); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray13, (int) (short) 0); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray13, 0, 100); int[] intArray29 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray31 = org.apache.commons.lang3.ArrayUtils.remove(intArray29, (int) (short) 0); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray29, (int) (byte) 0, (int) (short) 0); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(intArray29, (int) (short) 0); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray29, 0, 100); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(intArray29, (int) (short) 1); int int43 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray29, 1); int[] intArray46 = org.apache.commons.lang3.ArrayUtils.add(intArray29, (int) (byte) 0, (-1)); int[] intArray47 = org.apache.commons.lang3.ArrayUtils.addAll(intArray13, intArray29); java.lang.reflect.GenericDeclaration[] genericDeclarationArray48 = org.apache.commons.lang3.ArrayUtils.removeElement((java.lang.reflect.GenericDeclaration[]) wildcardClassArray3, (java.lang.Object) intArray29); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[0, 35, 32, 100, 100, 0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(genericDeclarationArray48); }
public void test1546() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1546"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass21 = null; java.lang.Class[] classArray23 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, false); java.lang.Class<?> wildcardClass30 = null; java.lang.Class[] classArray32 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; wildcardClassArray33[0] = wildcardClass30; java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray33); java.lang.Object obj37 = null; int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray36, obj37); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray36); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray36); java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray40); boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray41); java.lang.reflect.Type[] typeArray45 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.reflect.Type[]) wildcardClassArray41, (int) (short) -1, (int) (short) 0); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertNotNull(typeArray45); }
public void test1547() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1547"); java.lang.reflect.GenericDeclaration[][] genericDeclarationArray0 = new java.lang.reflect.GenericDeclaration[][] {}; java.lang.reflect.GenericDeclaration[][] genericDeclarationArray1 = org.apache.commons.lang3.ArrayUtils.toArray(genericDeclarationArray0); java.lang.Class<?> wildcardClass2 = null; java.lang.Class[] classArray4 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; wildcardClassArray5[0] = wildcardClass2; java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Short[] shortArray10 = new java.lang.Short[] {}; short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray10); java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray10); boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray13, true); java.lang.Class<?> wildcardClass16 = null; java.lang.Class[] classArray18 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18; wildcardClassArray19[0] = wildcardClass16; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray19); java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray19); java.lang.Short[] shortArray24 = new java.lang.Short[] {}; short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray24); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray24); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray23, wildcardClassArray27, true); boolean boolean30 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray23); java.lang.reflect.GenericDeclaration[][] genericDeclarationArray31 = org.apache.commons.lang3.ArrayUtils.add(genericDeclarationArray1, (java.lang.reflect.GenericDeclaration[]) wildcardClassArray23); java.lang.reflect.AnnotatedElement[][] annotatedElementArray34 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray1, 0, 0); java.lang.Class<?> wildcardClass36 = null; java.lang.Class[] classArray38 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; wildcardClassArray39[0] = wildcardClass36; java.lang.Class<?>[] wildcardClassArray42 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Object obj43 = null; int int44 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray42, obj43); java.lang.Float[] floatArray46 = new java.lang.Float[] { 100.0f }; java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray46); float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray46); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray48); int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray42, (java.lang.Object) floatArray48); java.lang.reflect.GenericDeclaration[][] genericDeclarationArray51 = org.apache.commons.lang3.ArrayUtils.add(genericDeclarationArray1, (int) (short) 0, (java.lang.reflect.GenericDeclaration[]) wildcardClassArray42); org.junit.Assert.assertNotNull(genericDeclarationArray0); org.junit.Assert.assertNotNull(genericDeclarationArray1); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(classArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(genericDeclarationArray31); org.junit.Assert.assertNotNull(annotatedElementArray34); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertNotNull(floatArray46); org.junit.Assert.assertNotNull(floatArray47); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(genericDeclarationArray51); }
public void test1548() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1548"); float[] floatArray6 = new float[] { (short) 100, '#', ' ', 10L, 10, 100L }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray6, (float) (short) 1); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray6); float[] floatArray17 = new float[] { (short) 100, '#', ' ', 10L, 10, 100L }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray17); float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.remove(floatArray6, 1); float[] floatArray25 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray25, (float) 0); float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray27, (float) ' '); float[] floatArray30 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray21, floatArray27); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray27); float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray27, (float) (short) 1); java.lang.String str35 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray27, ""); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray27, (float) 100L, (int) (short) 1); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[100.0, 10.0, 32.0, 35.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertNotNull(floatArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[10.0, -1.0]"); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, ""); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); }
public void test1549() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1549"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("double[][][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1550() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1550"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Class<?> wildcardClass36 = null; java.lang.Class[] classArray38 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; wildcardClassArray39[0] = wildcardClass36; java.lang.Class<?>[] wildcardClassArray42 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray39); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray39, true); java.lang.Double[] doubleArray52 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray52); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray52); double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray52); java.lang.Double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray52); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray56, (double) 100.0f); java.lang.Object[] objArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray56); int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) doubleArray56); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(objArray59); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); }
public void test1551() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1551"); double[] doubleArray1 = new double[] { 100L }; boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray1); double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray1, (double) 100.0f); boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray1); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray1, 0.0d, (double) 0); int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray1, (-1.0d), (double) ' '); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) int11, "{10,10,100}"); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Integer" + "'", str13, "Integer"); }
public void test1552() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1552"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray9); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray9, (double) (-1L)); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) (short) 1); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray29); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) 100, (int) 'a', (double) 10.0f); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); }
public void test1553() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1553"); java.lang.Float[][][][] floatArray0 = new java.lang.Float[][][][] {}; java.lang.Object obj1 = null; java.lang.Float[][][][] floatArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray0, obj1); java.lang.String str4 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray2, "{0,-1,0,0,-1,10,1,0,-1,100}"); java.lang.Cloneable[][][] cloneableArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Cloneable[][][]) floatArray2); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.lang" + "'", str4, "java.lang"); org.junit.Assert.assertNotNull(cloneableArray5); }
public void test1554() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1554"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, (int) ' ', 0); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) shortArray5, "{10,10,100}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "short[]" + "'", str10, "short[]"); }
public void test1555() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1555"); java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] { true }; boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray1, true); java.lang.Class<?>[] wildcardClassArray4 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray1); java.lang.Class<?> wildcardClass5 = null; java.lang.Class[] classArray7 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Object obj12 = null; int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray11, obj12); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray11); short[] shortArray19 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.clone(shortArray19); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray20); org.apache.commons.lang3.ArrayUtils.reverse(shortArray20); short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray20); short[] shortArray28 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.clone(shortArray28); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray29); org.apache.commons.lang3.ArrayUtils.reverse(shortArray29); short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray29); short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.remove(shortArray32, (int) (byte) 0); short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray20, shortArray32); short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray20, (short) (byte) 10); int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray37, (short) 0); java.lang.Short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray37); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray11, (java.lang.Object[]) shortArray40); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray4, (java.lang.Object) shortArray40); java.lang.Short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray40); org.junit.Assert.assertNotNull(booleanArray1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true]"); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[-1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[100, -1, 0, 1, 100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertNotNull(shortArray43); }
public void test1556() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1556"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Serializable][]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Serializable]"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1557() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1557"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 10, (short) 100, (short) 100, (short) 10 }; short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) -1); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray27, (java.lang.Object[]) shortArray40); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray27); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertNotNull(shortArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[10, 100, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(wildcardClassArray44); }
public void test1558() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1558"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray2, "{0,100,10}"); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray2); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray2, "{10,10}"); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, ""); }
public void test1559() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1559"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Serializable][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Serializable][]" + "'", str1, "Serializable][]"); }
public void test1560() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1560"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean[] booleanArray3 = null; boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray2, booleanArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray2, "10"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "boolean[]" + "'", str6, "boolean[]"); }
public void test1561() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1561"); short[] shortArray4 = new short[] { (byte) 0, (short) 1, (short) 0, (short) -1 }; short[] shortArray5 = null; boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray5); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) (byte) 10); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.remove(shortArray4, (int) (byte) 0); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray4, (-1), (int) (short) 10); short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray14); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray14, "{10,10}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[0, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0, 1, 0, -1]"); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1, 0, -1]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[0, 1, 0, -1]"); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[0, 1, 0, -1]"); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, ""); }
public void test1562() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1562"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{97.0,10.0,1.0,100.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test1563() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1563"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test1564() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1564"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(obj0, "{a,4,a, ,#,#}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{a,4,a, ,#,#}" + "'", str2, "{a,4,a, ,#,#}"); }
public void test1565() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1565"); java.lang.Short[] shortArray0 = new java.lang.Short[] {}; short[] shortArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0); short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0); java.lang.Class<?>[] wildcardClassArray3 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray0); java.lang.Double[] doubleArray10 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[] doubleArray17 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[][] doubleArray18 = new java.lang.Double[][] { doubleArray10, doubleArray17 }; java.lang.Double[][][] doubleArray19 = new java.lang.Double[][][] { doubleArray18 }; java.lang.Double[] doubleArray22 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray25 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray28 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray31 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray34 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray37 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[][] doubleArray38 = new java.lang.Double[][] { doubleArray22, doubleArray25, doubleArray28, doubleArray31, doubleArray34, doubleArray37 }; java.lang.Double[][][] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray19, doubleArray38); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray3, (java.lang.Object[]) doubleArray19); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray19); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[]"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); }
public void test1566() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1566"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray4); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray10); }
public void test1567() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1567"); long[] longArray0 = null; long[] longArray2 = org.apache.commons.lang3.ArrayUtils.add(longArray0, (long) '4'); long[] longArray5 = new long[] { 10L, (byte) 10 }; long[] longArray8 = org.apache.commons.lang3.ArrayUtils.subarray(longArray5, (int) (short) 0, (int) ' '); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray5, (int) (byte) 0, (long) (short) 100); long[] longArray14 = new long[] { 10L, (byte) 10 }; long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, (int) (short) 0, (int) ' '); java.lang.Long[] longArray23 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray23, (long) 1); long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray17, longArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray25); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray25); java.lang.Long[] longArray29 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray5, 0L); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.subarray(longArray5, (-1), (int) (short) 10); int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray34, (long) (short) 0); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.add(longArray34, (long) (short) 1); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray2, longArray34); java.lang.Long[] longArray40 = org.apache.commons.lang3.ArrayUtils.toObject(longArray34); long[] longArray43 = new long[] { 10L, (byte) 10 }; long[] longArray46 = org.apache.commons.lang3.ArrayUtils.subarray(longArray43, (int) (short) 0, (int) ' '); java.lang.Long[] longArray52 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray52, (long) 1); long[] longArray55 = org.apache.commons.lang3.ArrayUtils.addAll(longArray46, longArray54); long[] longArray58 = org.apache.commons.lang3.ArrayUtils.add(longArray55, 0, 0L); long[] longArray61 = new long[] { 10L, (byte) 10 }; long[] longArray64 = org.apache.commons.lang3.ArrayUtils.subarray(longArray61, (int) (short) 0, (int) ' '); boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray58, longArray64); long[] longArray66 = org.apache.commons.lang3.ArrayUtils.addAll(longArray34, longArray58); java.lang.String str68 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) longArray34, "{10,100,0}"); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[52]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[10, 10]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1)); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[10, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertNotNull(longArray40); org.junit.Assert.assertNotNull(longArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[10, 10]"); org.junit.Assert.assertNotNull(longArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[10, 10]"); org.junit.Assert.assertNotNull(longArray52); org.junit.Assert.assertNotNull(longArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray55), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray61), "[10, 10]"); org.junit.Assert.assertNotNull(longArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false); org.junit.Assert.assertNotNull(longArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray66), "[10, 10, 0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertEquals("'" + str68 + "' != '" + "long[]" + "'", str68, "long[]"); }
public void test1568() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1568"); java.lang.Float[] floatArray4 = new java.lang.Float[] { 100.0f, 0.0f, 1.0f, 0.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray4); java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray4); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray6, (java.lang.Object) "{-1,1,0,100,0}"); java.lang.Class<?> wildcardClass9 = null; java.lang.Class[] classArray11 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11; wildcardClassArray12[0] = wildcardClass9; java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray12); java.lang.Object obj16 = null; int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray15, obj16); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); java.lang.reflect.Type[][][][][][] typeArray28 = null; short[] shortArray33 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.clone(shortArray33); short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.add(shortArray33, (short) (byte) 1); java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36); java.lang.reflect.Type[][][][][][] typeArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray28, (java.lang.Object) shortArray37); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray26, (java.lang.Object[]) shortArray37); java.lang.Class<?> wildcardClass40 = null; java.lang.Class[] classArray42 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; wildcardClassArray43[0] = wildcardClass40; java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray43); java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43); java.lang.Short[] shortArray48 = new java.lang.Short[] {}; short[] shortArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48); short[] shortArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray48); java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray48); boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray47, wildcardClassArray51, true); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray47, true); java.lang.Class<?> wildcardClass56 = null; java.lang.Class[] classArray58 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58; wildcardClassArray59[0] = wildcardClass56; java.lang.Class<?>[] wildcardClassArray62 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray59); java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray59); boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray59, true); boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray59, false); int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray6, (java.lang.Object) wildcardClassArray59, (int) (short) -1); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(classArray11); org.junit.Assert.assertNotNull(wildcardClassArray12); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertNull(typeArray38); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertNotNull(shortArray48); org.junit.Assert.assertNotNull(shortArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[]"); org.junit.Assert.assertNotNull(shortArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false); org.junit.Assert.assertNotNull(classArray58); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertNotNull(wildcardClassArray63); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false); org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1)); }
public void test1569() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1569"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = new long[] { 10L, (byte) 10 }; long[] longArray20 = org.apache.commons.lang3.ArrayUtils.subarray(longArray17, (int) (short) 0, (int) ' '); long[] longArray21 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray17); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray13, "{100.0,10.0,32.0,35.0,100.0}"); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10, 10]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "long[]" + "'", str23, "long[]"); }
public void test1570() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1570"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{100.0,10.0,32.0,35.0,100.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100/0,10/0,32/0,35/0,100/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1571() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1571"); double[] doubleArray2 = new double[] { 100.0f, (short) 100 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, 0); double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (short) 100, (double) 0L); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) (short) 10, (-1)); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray11, "{10,10}"); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray11); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]"); }
public void test1572() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1572"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Integer[] intArray12 = new java.lang.Integer[] { 10, 1 }; int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray12, (int) (byte) 1); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray12); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray15); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); }
public void test1573() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1573"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{-1,0,1,100,-1,0,1}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,0,1,100,-1,0,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1574() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1574"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); short[] shortArray14 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray15); org.apache.commons.lang3.ArrayUtils.reverse(shortArray15); short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15); short[] shortArray23 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray24); org.apache.commons.lang3.ArrayUtils.reverse(shortArray24); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray24); short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.remove(shortArray27, (int) (byte) 0); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray27); short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray15, (short) (byte) 10); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) 0); java.lang.Short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray32); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray35); java.lang.Class<?>[] wildcardClassArray37 = null; boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray37, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[-1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[100, -1, 0, 1, 100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2); org.junit.Assert.assertNotNull(shortArray35); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); }
public void test1575() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1575"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Class<?> wildcardClass36 = null; java.lang.Class[] classArray38 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; wildcardClassArray39[0] = wildcardClass36; java.lang.Class<?>[] wildcardClassArray42 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray39); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray39, true); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass47 = null; java.lang.Class[] classArray49 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49; wildcardClassArray50[0] = wildcardClass47; java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray50); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray50); java.lang.Class<?>[] wildcardClassArray55 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray50); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray55); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray55, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertNotNull(classArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertNotNull(wildcardClassArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); }
public void test1576() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1576"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{100.0,10.0,32.0,35.0,100.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100.0,10.0,32.0,35.0,100.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1577() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1577"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?> wildcardClass1 = null; java.lang.Class[] classArray3 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray4 = (java.lang.Class<?>[]) classArray3; wildcardClassArray4[0] = wildcardClass1; java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray4); java.lang.String str8 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray7); java.lang.reflect.Type[][][][][][] typeArray9 = null; short[] shortArray14 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.clone(shortArray14); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.add(shortArray14, (short) (byte) 1); java.lang.Short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray17); java.lang.reflect.Type[][][][][][] typeArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray9, (java.lang.Object) shortArray18); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray7, (java.lang.Object[]) shortArray18); java.lang.Class<?> wildcardClass21 = null; java.lang.Class[] classArray23 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Short[] shortArray29 = new java.lang.Short[] {}; short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29); short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray29); java.lang.Class<?>[] wildcardClassArray32 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray29); boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray28, wildcardClassArray32, true); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray28, true); java.lang.Class<?> wildcardClass37 = null; java.lang.Class[] classArray39 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; wildcardClassArray40[0] = wildcardClass37; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray40); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray40); boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray40, true); java.lang.Class[] classArray48 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray49 = (java.lang.Class<?>[]) classArray48; java.lang.Class<?> wildcardClass50 = null; java.lang.Class[] classArray52 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52; wildcardClassArray53[0] = wildcardClass50; java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray53); java.lang.String str57 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray56); java.lang.reflect.Type[][][][][][] typeArray58 = null; short[] shortArray63 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray64 = org.apache.commons.lang3.ArrayUtils.clone(shortArray63); short[] shortArray66 = org.apache.commons.lang3.ArrayUtils.add(shortArray63, (short) (byte) 1); java.lang.Short[] shortArray67 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray66); java.lang.reflect.Type[][][][][][] typeArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray58, (java.lang.Object) shortArray67); boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray56, (java.lang.Object[]) shortArray67); java.lang.Class<?> wildcardClass70 = null; java.lang.Class[] classArray72 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray73 = (java.lang.Class<?>[]) classArray72; wildcardClassArray73[0] = wildcardClass70; java.lang.Class<?>[] wildcardClassArray76 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray73); java.lang.Class<?>[] wildcardClassArray77 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray73); java.lang.Short[] shortArray78 = new java.lang.Short[] {}; short[] shortArray79 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78); short[] shortArray80 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray78); java.lang.Class<?>[] wildcardClassArray81 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray78); boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray77, wildcardClassArray81, true); boolean boolean85 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray56, wildcardClassArray77, true); boolean boolean87 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray49, wildcardClassArray56, false); boolean boolean88 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray49); java.lang.Object[] objArray89 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray49); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) wildcardClassArray49); boolean boolean91 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray49); java.lang.Class<?>[] wildcardClassArray92 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray0); org.junit.Assert.assertNotNull(classArray3); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{<null>}" + "'", str8, "{<null>}"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertNull(typeArray19); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertNotNull(classArray48); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(classArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{<null>}" + "'", str57, "{<null>}"); org.junit.Assert.assertNotNull(shortArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray64), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray66), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray67); org.junit.Assert.assertNull(typeArray68); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false); org.junit.Assert.assertNotNull(classArray72); org.junit.Assert.assertNotNull(wildcardClassArray73); org.junit.Assert.assertNotNull(wildcardClassArray76); org.junit.Assert.assertNotNull(wildcardClassArray77); org.junit.Assert.assertNotNull(shortArray78); org.junit.Assert.assertNotNull(shortArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray79), "[]"); org.junit.Assert.assertNotNull(shortArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray80), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray81); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false); org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false); org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false); org.junit.Assert.assertNotNull(objArray89); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]"); org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true); org.junit.Assert.assertNull(wildcardClassArray92); }
public void test1578() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1578"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 0, 0L); long[] longArray20 = new long[] { 10L, (byte) 10 }; long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 0, (int) ' '); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray23); java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toObject(longArray17); long[] longArray26 = null; long[] longArray29 = new long[] { 10L, (byte) 10 }; long[] longArray32 = org.apache.commons.lang3.ArrayUtils.subarray(longArray29, (int) (short) 0, (int) ' '); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.add(longArray29, (int) (byte) 0, (long) (short) 100); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray29, (long) 100); char[] charArray44 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray47 = org.apache.commons.lang3.ArrayUtils.subarray(charArray44, (int) (short) 1, (int) (short) 0); char[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44); char[] charArray51 = org.apache.commons.lang3.ArrayUtils.subarray(charArray44, (int) (byte) 0, (int) (short) 0); boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray29, (java.lang.Object) (byte) 0); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray29); long[] longArray54 = org.apache.commons.lang3.ArrayUtils.addAll(longArray17, longArray29); long[] longArray57 = new long[] { 10L, (byte) 10 }; long[] longArray60 = org.apache.commons.lang3.ArrayUtils.subarray(longArray57, (int) (short) 0, (int) ' '); java.lang.Long[] longArray66 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray66, (long) 1); long[] longArray69 = org.apache.commons.lang3.ArrayUtils.addAll(longArray60, longArray68); long[] longArray72 = new long[] { 10L, (byte) 10 }; long[] longArray75 = org.apache.commons.lang3.ArrayUtils.subarray(longArray72, (int) (short) 0, (int) ' '); long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray68, longArray72); long[] longArray79 = org.apache.commons.lang3.ArrayUtils.subarray(longArray68, 0, (int) (byte) 10); long[] longArray80 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray79); java.lang.String str82 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray29, "{0,100,10}"); org.apache.commons.lang3.ArrayUtils.reverse(longArray29); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, 10]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[10, 10]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 10, 100]"); org.junit.Assert.assertNotNull(charArray44); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray47); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]"); org.junit.Assert.assertNotNull(charArray48); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray51); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]"); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(longArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, 10, 10, -1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertNotNull(longArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, 10]"); org.junit.Assert.assertNotNull(longArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10, 10]"); org.junit.Assert.assertNotNull(longArray66); org.junit.Assert.assertNotNull(longArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[10, 10]"); org.junit.Assert.assertNotNull(longArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[10, 10]"); org.junit.Assert.assertNotNull(longArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[-1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertNotNull(longArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, ""); }
public void test1579() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest3.test1579"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{a,4,a, ,#,#}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {a,4,a,,#,#}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0501() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0501"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Integer[][] intArray21 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray22 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray23 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray24 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray25 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray26 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray27 = new java.lang.Integer[][][] { intArray21, intArray22, intArray23, intArray24, intArray25, intArray26 }; java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray56 = new java.lang.Integer[][] { intArray34, intArray41, intArray48, intArray55 }; java.lang.Integer[][] intArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray56, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray59 = org.apache.commons.lang3.ArrayUtils.add(intArray27, intArray56); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray59); boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray60, false); boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.lang.reflect.GenericDeclaration[]) wildcardClassArray60); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true); }
public void test0502() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0502"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) '.'); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray21); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 46.0]"); }
public void test0503() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0503"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) (short) 10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, (int) (short) 100); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, false); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray19, true, (int) (byte) 1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); }
public void test0504() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0504"); java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] { false }; boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray1, false); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY; int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray1, (java.lang.Object) shortArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray1, "boolean[]"); java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray1); org.junit.Assert.assertNotNull(booleanArray1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Boolean[]" + "'", str7, "Boolean[]"); org.junit.Assert.assertNotNull(booleanArray8); }
public void test0505() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0505"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray61, 0); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 10); java.lang.String str81 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray66, "hi!"); double[] doubleArray84 = new double[] { 10L, 0 }; double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray84, 0, (int) 'a'); boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray66, doubleArray84); double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray66); double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.add(doubleArray89, (double) (short) 10); double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.add(doubleArray91, (double) 10.0f); boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray93); int int98 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray93, (double) ' ', 0, 0.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertEquals("'" + str81 + "' != '" + "double[]" + "'", str81, "double[]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false); org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1)); }
public void test0506() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0506"); java.lang.Short[] shortArray0 = new java.lang.Short[] {}; short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0); java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5, (short) -1); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "Character"); short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[]"); }
public void test0507() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0507"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray13 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, '4'); char[] charArray18 = new char[] { 'a', '4' }; char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '4', 0); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '#', 4); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray27); org.apache.commons.lang3.ArrayUtils.reverse(charArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray28, "hi!"); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray28); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '#', (int) (byte) -1); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.contains(charArray28, '$'); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, , a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); }
public void test0508() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0508"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.lang.String str22 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strList19); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]" + "'", str22, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); }
public void test0509() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0509"); java.lang.Object[] objArray0 = null; double[] doubleArray3 = new double[] { 10L, 0 }; double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (-1L), 10); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 10); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray3, "hi!"); double[] doubleArray21 = new double[] { 10L, 0 }; double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, (int) 'a'); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray21); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) (short) 10); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (double) 10.0f); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(objArray0, (java.lang.Object) doubleArray28); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 100, (double) 100.0f); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "double[]" + "'", str18, "double[]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); }
public void test0510() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0510"); java.lang.String[] strArray10 = new java.lang.String[] { "boolean[]", "0", "Double", "java.lang", "0", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", "Byte", "Float", "char[]", "Class[]" }; java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>(); boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10); java.util.List<java.lang.Class<?>> wildcardClassList13 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList11); long[] longArray15 = new long[] { (short) 1 }; long[][] longArray16 = new long[][] { longArray15 }; long[][] longArray17 = new long[][] {}; long[][] longArray18 = org.apache.commons.lang3.ArrayUtils.addAll(longArray16, longArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray18); java.lang.String[] strArray30 = new java.lang.String[] { "boolean[]", "0", "Double", "java.lang", "0", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", "Byte", "Float", "char[]", "Class[]" }; java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>(); boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30); java.util.List<java.lang.Class<?>> wildcardClassList33 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList31); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray18, (java.lang.Object) strList31, (-1)); java.lang.String[] strArray54 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>(); boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54); java.util.List<java.lang.Class<?>> wildcardClassList57 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList55); java.lang.String str58 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strList55); java.util.List<java.lang.Class<?>> wildcardClassList59 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList55); java.util.List<java.lang.Class<?>> wildcardClassList60 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList55); java.util.AbstractList[] abstractListArray62 = new java.util.AbstractList[3]; @SuppressWarnings("unchecked") java.util.AbstractList<java.lang.String>[] strListArray63 = (java.util.AbstractList<java.lang.String>[]) abstractListArray62; strListArray63[0] = strList11; strListArray63[1] = strList31; strListArray63[2] = strList55; java.util.AbstractList<java.lang.String>[] strListArray72 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray63, 6, 1); org.junit.Assert.assertNotNull(strArray10); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true); org.junit.Assert.assertNotNull(wildcardClassList13); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[1]"); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertNotNull(longArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(strArray30); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); org.junit.Assert.assertNotNull(wildcardClassList33); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertNotNull(strArray54); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertNotNull(wildcardClassList57); org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]" + "'", str58, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertNotNull(wildcardClassList59); org.junit.Assert.assertNotNull(wildcardClassList60); org.junit.Assert.assertNotNull(abstractListArray62); org.junit.Assert.assertNotNull(strListArray63); org.junit.Assert.assertNotNull(strListArray72); }
public void test0511() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0511"); java.lang.Object[] objArray0 = null; double[] doubleArray4 = new double[] { 'a', 10.0d, (byte) 0 }; int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) '.', (double) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray4, "java.lang"); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, 0.0d, (int) (short) 100); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 3, (int) 'a'); double[] doubleArray18 = new double[] { 10L, 0 }; double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray18, 0, (int) 'a'); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (-1L), 10); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, (int) ' ', (double) (short) 10); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) '.', 10); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) 0, (int) ' '); double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray18, (int) (byte) 0, 100.0d); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (short) -1); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray15, doubleArray18); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray0, (java.lang.Object) doubleArray15, 0); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); }
public void test0512() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0512"); short[] shortArray6 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray13 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray20 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray27 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[][] shortArray28 = new short[][] { shortArray6, shortArray13, shortArray20, shortArray27 }; short[] shortArray29 = new short[] {}; short[] shortArray30 = new short[] {}; short[] shortArray31 = new short[] {}; short[][] shortArray32 = new short[][] { shortArray29, shortArray30, shortArray31 }; short[][] shortArray33 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray32); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); short[] shortArray37 = new short[] { (byte) 0 }; short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray37, (int) 'a', (int) (byte) 10); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray40, (short) 1); short[] shortArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray40); int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray40, (short) (byte) 0); // The following exception was thrown during execution in test generation try { short[][] shortArray46 = org.apache.commons.lang3.ArrayUtils.add(shortArray28, (int) '.', shortArray40); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 46, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]"); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[0]"); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertNotNull(shortArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray43), "[]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); }
public void test0513() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0513"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12, false); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]"); }
public void test0514() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0514"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, true); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, 6, (int) (byte) 0); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray15, 0, 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); }
public void test0515() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0515"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); }
public void test0516() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0516"); java.lang.Float[] floatArray6 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[] floatArray13 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[][] floatArray14 = new java.lang.Float[][] { floatArray6, floatArray13 }; java.lang.Float[] floatArray21 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[] floatArray28 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[][] floatArray29 = new java.lang.Float[][] { floatArray21, floatArray28 }; java.lang.Float[] floatArray36 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[] floatArray43 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[][] floatArray44 = new java.lang.Float[][] { floatArray36, floatArray43 }; java.lang.Float[] floatArray51 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[] floatArray58 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[][] floatArray59 = new java.lang.Float[][] { floatArray51, floatArray58 }; java.lang.Float[] floatArray66 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[] floatArray73 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[][] floatArray74 = new java.lang.Float[][] { floatArray66, floatArray73 }; java.lang.Float[] floatArray81 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[] floatArray88 = new java.lang.Float[] { 100.0f, 100.0f, 1.0f, 100.0f, 10.0f, 0.0f }; java.lang.Float[][] floatArray89 = new java.lang.Float[][] { floatArray81, floatArray88 }; java.lang.Float[][][] floatArray90 = new java.lang.Float[][][] { floatArray14, floatArray29, floatArray44, floatArray59, floatArray74, floatArray89 }; java.lang.Float[][][][] floatArray91 = new java.lang.Float[][][][] { floatArray90 }; boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray91); java.lang.Class<?>[] wildcardClassArray93 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) floatArray91); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertNotNull(floatArray28); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertNotNull(floatArray36); org.junit.Assert.assertNotNull(floatArray43); org.junit.Assert.assertNotNull(floatArray44); org.junit.Assert.assertNotNull(floatArray51); org.junit.Assert.assertNotNull(floatArray58); org.junit.Assert.assertNotNull(floatArray59); org.junit.Assert.assertNotNull(floatArray66); org.junit.Assert.assertNotNull(floatArray73); org.junit.Assert.assertNotNull(floatArray74); org.junit.Assert.assertNotNull(floatArray81); org.junit.Assert.assertNotNull(floatArray88); org.junit.Assert.assertNotNull(floatArray89); org.junit.Assert.assertNotNull(floatArray90); org.junit.Assert.assertNotNull(floatArray91); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false); org.junit.Assert.assertNotNull(wildcardClassArray93); }
public void test0517() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0517"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.ArrayList[] arrayListArray23 = new java.util.ArrayList[1]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray24 = (java.util.ArrayList<java.lang.String>[]) arrayListArray23; strListArray24[0] = strList19; java.util.ArrayList<java.lang.String>[] strListArray29 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray24, 6, (int) '#'); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.util.AbstractList<java.lang.String>[]) strListArray24); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(arrayListArray23); org.junit.Assert.assertNotNull(strListArray24); org.junit.Assert.assertNotNull(strListArray29); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true); }
public void test0518() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0518"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0519() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0519"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, (int) (short) 10, (int) (short) 10); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray25, 10.0d); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, 100.0d, 3); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); }
public void test0520() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0520"); org.apache.commons.lang3.ClassUtils classUtils0 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils1 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils[] classUtilsArray2 = new org.apache.commons.lang3.ClassUtils[] { classUtils0, classUtils1 }; org.apache.commons.lang3.ClassUtils classUtils3 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils4 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils5 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils6 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils7 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils8 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils[] classUtilsArray9 = new org.apache.commons.lang3.ClassUtils[] { classUtils3, classUtils4, classUtils5, classUtils6, classUtils7, classUtils8 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray10 = org.apache.commons.lang3.ArrayUtils.addAll(classUtilsArray2, classUtilsArray9); org.apache.commons.lang3.ClassUtils[] classUtilsArray11 = org.apache.commons.lang3.ArrayUtils.toArray(classUtilsArray2); org.junit.Assert.assertNotNull(classUtilsArray2); org.junit.Assert.assertNotNull(classUtilsArray9); org.junit.Assert.assertNotNull(classUtilsArray10); org.junit.Assert.assertNotNull(classUtilsArray11); }
public void test0521() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0521"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9, 0.0d); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray9, "Long"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Double[]" + "'", str14, "Double[]"); }
public void test0522() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0522"); java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0); boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(floatArray1, (float) (byte) -1); float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.add(floatArray1, (float) (byte) 100); java.lang.Float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6, (float) 'a'); float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray6, 0.0f); java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray6); float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray11, (float) 1L); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray13, (float) 4); float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray5, floatArray13); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray16, ""); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray16); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray1), "[]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[]"); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertNotNull(floatArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[100.0]"); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, ""); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); }
public void test0523() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0523"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); java.lang.Class<?> wildcardClass22 = doubleArray21.getClass(); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(wildcardClass22); }
public void test0524() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0524"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray10, false); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray13, false); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13); // The following exception was thrown during execution in test generation try { boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray13, (int) (short) 100); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); }
public void test0525() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0525"); java.lang.Boolean[] booleanArray0 = new java.lang.Boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray0, true); boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.add(booleanArray2, true); boolean[] booleanArray8 = new boolean[] { false, false, false }; boolean[] booleanArray10 = new boolean[] { true }; boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray10); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, true, (int) (short) -1); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray8, false); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray8, (-1), (int) (short) 10); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray8, 3, true); boolean[] booleanArray26 = new boolean[] { false, false, false }; boolean[] booleanArray28 = new boolean[] { true }; boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray26, booleanArray28); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray26, true, (int) (short) -1); boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.add(booleanArray26, false); boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray26, (-1), (int) (short) 10); boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.add(booleanArray26, 3, true); boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray22, booleanArray40); boolean[] booleanArray47 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, 100, 0); boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray47, false); int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray52, false); boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52); boolean[] booleanArray56 = null; boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray55, booleanArray56); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray55); boolean[] booleanArray62 = new boolean[] { false, false, false }; boolean[] booleanArray64 = new boolean[] { true }; boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray62, booleanArray64); boolean[] booleanArray71 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray71, 100, 0); int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray74, false); boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray74, true); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray74); boolean[] booleanArray81 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray74, false); boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray62, booleanArray81); boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray55, booleanArray82); boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray22, booleanArray82); boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray2, booleanArray22); java.lang.String str87 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) boolean85, "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10.0}}}"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[]"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true]"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, false, true, false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]"); org.junit.Assert.assertNotNull(booleanArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[true, true, false, false]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3); org.junit.Assert.assertNotNull(booleanArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, true, true]"); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertNotNull(booleanArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true]"); org.junit.Assert.assertNotNull(booleanArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[]"); org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1)); org.junit.Assert.assertNotNull(booleanArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[]"); org.junit.Assert.assertNotNull(booleanArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray81), "[]"); org.junit.Assert.assertNotNull(booleanArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, true, true, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false); org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false); org.junit.Assert.assertEquals("'" + str87 + "' != '" + "java.lang" + "'", str87, "java.lang"); }
public void test0526() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0526"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Class;,class [Z,class [Z,class [Z,class [Z}" + "'", str1, "Class;,class [Z,class [Z,class [Z,class [Z}"); }
public void test0527() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0527"); java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray0); java.lang.Class<?> wildcardClass4 = org.apache.commons.lang3.ClassUtils.getClass("double[]"); int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray0, (java.lang.Object) wildcardClass4); boolean[] booleanArray11 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray11, 100, 0); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, true); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, false); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, false, (int) '#'); java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray0, (java.lang.Object) booleanArray14); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, true); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertNotNull(wildcardClass4); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); }
public void test0528() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0528"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{false}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0529() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0529"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray3 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray6 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2, intArray3, intArray4, intArray5 }; java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray35 = new java.lang.Integer[][] { intArray13, intArray20, intArray27, intArray34 }; java.lang.Integer[][] intArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray35, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray6, intArray35); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray38); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray41); }
public void test0530() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0530"); java.lang.Integer[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY; java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1, (long) (byte) 10); org.apache.commons.lang3.ArrayUtils.reverse(longArray3); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray3, (java.lang.Object) 'a'); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray3); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray0, (java.lang.Object) longArray3, (int) (byte) -1); java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0); java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10); java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray11, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}"); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(longArray1); org.junit.Assert.assertNotNull(longArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "java.lang" + "'", str14, "java.lang"); }
public void test0531() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0531"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray22); java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray23); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray24); }
public void test0532() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0532"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0, 10.0, 0.0]"); }
public void test0533() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0533"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) (short) -1, (int) (short) 10); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, 1.0d); double[] doubleArray17 = new double[] { 10L, 0 }; double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray17, 0, (int) 'a'); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) (-1L), 10); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray17, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray17); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) 10); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray17, "hi!"); double[] doubleArray35 = new double[] { 10L, 0 }; double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray35, 0, (int) 'a'); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray17, doubleArray35); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray17); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray17, (double) 5, (double) (short) 0); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray17, 0, (double) 100.0f); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray14, doubleArray17); int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) 100, (int) '$'); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double[]" + "'", str32, "double[]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); }
public void test0534() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0534"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, 0, (double) (byte) 10); double[] doubleArray42 = new double[] { 10L, 0 }; double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, 0, (int) 'a'); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (-1L), 10); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray42); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 10); java.lang.String str57 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray42, "hi!"); double[] doubleArray60 = new double[] { 10L, 0 }; double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, 0, (int) 'a'); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray42, doubleArray60); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, 0, (double) (byte) 10); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray68); int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (short) 1); java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39); boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray39); double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39); double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray74); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray10, doubleArray74); double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (double) 5); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertEquals("'" + str57 + "' != '" + "double[]" + "'", str57, "double[]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 0.0, 5.0]"); }
public void test0535() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0535"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = null; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray22, true); boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray22, wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray28 = null; boolean boolean30 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray28, false); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true); }
public void test0536() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0536"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false, (int) '4'); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, true, 1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); }
public void test0537() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0537"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) '.'); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) '4', 3); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) (short) 1, (int) (short) 10, (double) (byte) 100); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 46.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); }
public void test0538() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0538"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) '$'); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray3, (double) 100L); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0, 10.0, 0.0, 0.0]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0, 10.0, 0.0]"); }
public void test0539() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0539"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 1, (-1)); double[] doubleArray32 = new double[] { 10L, 0 }; double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, 0, (int) 'a'); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), 10); int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray32); int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) (short) 1, (int) (short) 10); int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, 0.0d, 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1); }
public void test0540() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0540"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "true"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: true"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0541() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0541"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray61, (double) 0); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61); int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray64, (double) 5, (double) '.'); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0); }
public void test0542() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0542"); java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY; double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0, (double) 0); java.lang.Double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); java.lang.Class<?>[] wildcardClassArray4 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray3); org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertNotNull(wildcardClassArray4); }
public void test0543() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0543"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray63, 0, (int) '$'); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 2, 2); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[]"); }
public void test0544() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0544"); java.lang.Short[] shortArray0 = new java.lang.Short[] {}; short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0); java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5, (short) -1); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "Character"); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray8, (short) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray12); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]"); }
public void test0545() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0545"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (byte) 1, (double) 9); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); }
public void test0546() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0546"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray18 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray18, 100, 0); boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, true); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, false); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray21); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray27, ", Character, boolean[], Double, Double][]"); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray27); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]"); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "boolean[]" + "'", str29, "boolean[]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true); }
public void test0547() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0547"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("Class"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0548() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0548"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (short) -1, (int) (short) 10, (double) 4); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, (int) '$', (int) (byte) 10); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray23, (double) (short) 0, (double) 6); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) (-1L)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); }
public void test0549() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0549"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Float", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Float"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0550() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0550"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "lang", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: lang"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0551() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0551"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray3, (int) (short) 1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false]"); }
public void test0552() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0552"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); java.lang.Class[] classArray33 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; java.lang.Class[] classArray36 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray37 = (java.lang.Class<?>[]) classArray36; boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray33, wildcardClassArray37, false); java.lang.Class[] classArray41 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41; java.lang.Class[] classArray44 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44; boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray45, false); boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, wildcardClassArray45); java.lang.Class<?>[] wildcardClassArray49 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray37); java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray37); java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray37); java.lang.Class[] classArray53 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53; java.lang.Class[] classArray56 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56; boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray53, wildcardClassArray57, false); java.lang.Class[] classArray61 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61; java.lang.Class[] classArray64 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray65 = (java.lang.Class<?>[]) classArray64; boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray61, wildcardClassArray65, false); boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray57, wildcardClassArray65); boolean boolean69 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray51, wildcardClassArray57); boolean boolean71 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray57, true); java.lang.Class<?>[] wildcardClassArray72 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray17); java.lang.Class<?>[] wildcardClassArray73 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(classArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(classArray41); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertNotNull(classArray44); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertNotNull(classArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertNotNull(classArray56); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(classArray61); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertNotNull(classArray64); org.junit.Assert.assertNotNull(wildcardClassArray65); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true); org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true); org.junit.Assert.assertNotNull(wildcardClassArray72); org.junit.Assert.assertNotNull(wildcardClassArray73); }
public void test0553() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0553"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray9, (double) 2, 0.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); }
public void test0554() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0554"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray13 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, '4'); char[] charArray18 = new char[] { 'a', '4' }; char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '4', 0); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '#', 4); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray27); org.apache.commons.lang3.ArrayUtils.reverse(charArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray28, "hi!"); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray28); boolean boolean34 = org.apache.commons.lang3.ArrayUtils.contains(charArray32, 'a'); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, , a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); }
public void test0555() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0555"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray48 = new java.lang.Integer[][] { intArray26, intArray33, intArray40, intArray47 }; java.lang.Integer[][] intArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray48, (java.lang.Object) (-1L)); java.lang.Integer[][] intArray51 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray52 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray53 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray54 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray55 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray56 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray57 = new java.lang.Integer[][][] { intArray51, intArray52, intArray53, intArray54, intArray55, intArray56 }; java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray86 = new java.lang.Integer[][] { intArray64, intArray71, intArray78, intArray85 }; java.lang.Integer[][] intArray88 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray86, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray89 = org.apache.commons.lang3.ArrayUtils.add(intArray57, intArray86); java.lang.Long[] longArray90 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; java.lang.Long[] longArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray90); boolean boolean92 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray86, (java.lang.Object) longArray91); java.lang.Integer[][] intArray93 = org.apache.commons.lang3.ArrayUtils.addAll(intArray50, intArray86); java.lang.Class<?>[] wildcardClassArray94 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray93); boolean boolean96 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray94, false); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertNotNull(intArray57); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertNotNull(intArray78); org.junit.Assert.assertNotNull(intArray85); org.junit.Assert.assertNotNull(intArray86); org.junit.Assert.assertNotNull(intArray88); org.junit.Assert.assertNotNull(intArray89); org.junit.Assert.assertNotNull(longArray90); org.junit.Assert.assertNotNull(longArray91); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false); org.junit.Assert.assertNotNull(intArray93); org.junit.Assert.assertNotNull(wildcardClassArray94); org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false); }
public void test0556() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0556"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (-1.0d)); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray19); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); }
public void test0557() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0557"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); java.lang.Object obj32 = null; int int33 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, obj32); double[] doubleArray37 = new double[] { 'a', 10.0d, (byte) 0 }; int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray37, (double) '.', (double) 10); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray37, "java.lang"); int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray37, 0.0d, (int) (short) 100); double[] doubleArray49 = new double[] { 'a', 10.0d, (byte) 0 }; int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray49, (double) '.', (double) 10); double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray37, doubleArray49); double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray37, (int) (byte) 0); int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, 1.0d, 5, (double) (short) -1); boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray55); boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray55); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray55); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, ""); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); }
public void test0558() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0558"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray8, true); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, false, (int) '#'); java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray16); java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray17); double[] doubleArray22 = new double[] { 'a', 10.0d, (byte) 0 }; int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) '.', (double) 10); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray22, "java.lang"); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, 0.0d, (int) (short) 100); double[] doubleArray34 = new double[] { 'a', 10.0d, (byte) 0 }; int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, (double) '.', (double) 10); double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray22, doubleArray34); java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray34); java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray39); java.lang.Double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray39); double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray39); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray18, (java.lang.Object) doubleArray42); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, ""); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); }
public void test0559() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0559"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray19, (double) (-1L), (int) (short) 0, (double) 0L); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 6, (int) (short) 1, (double) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); }
public void test0560() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0560"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.lang.String[] strArray40 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>(); boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40); java.util.List<java.lang.Class<?>> wildcardClassList43 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList41); java.lang.String str44 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strList41); java.lang.String[] strArray62 = new java.lang.String[] { "true", "String", "", "", "0", "java.lang", "Double", ".", "$", "hi!", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", "{false,false,false}", "Byte", "{32,0,0,100}", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", "hi!", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}" }; java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>(); boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62); java.util.List<java.lang.Class<?>> wildcardClassList65 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList63); java.lang.String[] strArray84 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>(); boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84); java.util.List<java.lang.Class<?>> wildcardClassList87 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList85); java.util.List<java.lang.Class<?>> wildcardClassList88 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList85); java.util.RandomAccess[] randomAccessArray89 = new java.util.RandomAccess[] { strList19, strList41, strList63, strList85 }; java.util.RandomAccess[] randomAccessArray90 = org.apache.commons.lang3.ArrayUtils.toArray(randomAccessArray89); java.util.RandomAccess[] randomAccessArray91 = org.apache.commons.lang3.ArrayUtils.clone(randomAccessArray89); boolean boolean92 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(randomAccessArray91); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(strArray40); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertNotNull(wildcardClassList43); org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]" + "'", str44, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertNotNull(strArray62); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(wildcardClassList65); org.junit.Assert.assertNotNull(strArray84); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true); org.junit.Assert.assertNotNull(wildcardClassList87); org.junit.Assert.assertNotNull(wildcardClassList88); org.junit.Assert.assertNotNull(randomAccessArray89); org.junit.Assert.assertNotNull(randomAccessArray90); org.junit.Assert.assertNotNull(randomAccessArray91); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true); }
public void test0561() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0561"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray12 = new double[] { 10L, 0 }; double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray12, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) 'a', 0, (double) 0L); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) 100L); double[] doubleArray24 = new double[] { 10L, 0 }; double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, 0, (int) 'a'); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (-1L), 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray24); double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray31, (double) 1L); double[] doubleArray36 = new double[] { 10L, 0 }; double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray36, 0, (int) 'a'); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) (-1L), 10); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray36); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) 10); java.lang.String str51 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray36, "hi!"); double[] doubleArray54 = new double[] { 10L, 0 }; double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray54, 0, (int) 'a'); boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray36, doubleArray54); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray33, doubleArray36); boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray36); int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertEquals("'" + str51 + "' != '" + "double[]" + "'", str51, "double[]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true); org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1)); }
public void test0562() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0562"); int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY; java.lang.Integer[] intArray1 = org.apache.commons.lang3.ArrayUtils.toObject(intArray0); int[] intArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1); int[] intArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1); int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray3, (int) (byte) 10); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(intArray3, (int) (byte) 1); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray3, ""); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[]"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]"); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); }
public void test0563() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0563"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 1, (-1)); double[] doubleArray32 = new double[] { 10L, 0 }; double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, 0, (int) 'a'); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), 10); int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray32); int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) (short) 1, (int) (short) 10); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray44); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0, 10.0, 0.0]"); }
public void test0564() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0564"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (-1.0d)); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14); double[] doubleArray24 = new double[] { 'a', 10.0d, (byte) 0 }; int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) '.', (double) 10); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray24, "java.lang"); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, 0.0d, (int) (short) 100); double[] doubleArray36 = new double[] { 'a', 10.0d, (byte) 0 }; int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) '.', (double) 10); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray24, doubleArray36); java.lang.Double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray36); java.lang.Double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray41); java.lang.Double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray41); double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray41, 10.0d); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray45); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) (short) 10); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, ""); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0]"); }
public void test0565() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0565"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); boolean[] booleanArray7 = null; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray7); boolean[] booleanArray12 = new boolean[] { false, false, false }; boolean[] booleanArray14 = new boolean[] { true }; boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray14); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true, (int) (short) -1); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, false); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, false); boolean[] booleanArray26 = new boolean[] { false, false, false }; boolean[] booleanArray28 = new boolean[] { true }; boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray26, booleanArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray26, ""); java.lang.String str32 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray26); boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray26); boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray33); boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, (int) (byte) 1, false); boolean[] booleanArray38 = null; boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray37, booleanArray38); boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray39); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray12); boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true]"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "boolean[]" + "'", str31, "boolean[]"); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{false,false,false}" + "'", str32, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(booleanArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, false, false]"); }
public void test0566() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0566"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) (byte) 100); double[] doubleArray42 = new double[] { 10L, 0 }; double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, 0, (int) 'a'); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 'a', 0, (double) 0L); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray42, (double) 100L); double[] doubleArray54 = new double[] { 10L, 0 }; double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray54, 0, (int) 'a'); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray54, (double) (-1L), 10); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray42, doubleArray54); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray61, (double) 1L); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 10); java.lang.String str81 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray66, "hi!"); double[] doubleArray84 = new double[] { 10L, 0 }; double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray84, 0, (int) 'a'); boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray66, doubleArray84); boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray66); double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray63); double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray63); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1)); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertEquals("'" + str81 + "' != '" + "double[]" + "'", str81, "double[]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false); org.junit.Assert.assertNotNull(doubleArray90); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, 0.0, 10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, 0.0, 10.0, 0.0, 1.0]"); }
public void test0567() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0567"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0568() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0568"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); }
public void test0569() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0569"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, (int) (byte) 1, false); byte[] byteArray17 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 0); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray10, (java.lang.Object) boolean19); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray10, 0); java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray22); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false]"); org.junit.Assert.assertNotNull(booleanArray23); }
public void test0570() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0570"); java.lang.String[] strArray3 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray4 = org.apache.commons.lang3.ArrayUtils.toArray(strArray3); double[] doubleArray8 = new double[] { 'a', 10.0d, (byte) 0 }; int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) '.', (double) 10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray8, "java.lang"); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray14); double[] doubleArray18 = new double[] { 10L, 0 }; double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray18, 0, (int) 'a'); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (-1L), 10); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) 10); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray18, "hi!"); double[] doubleArray36 = new double[] { 10L, 0 }; double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray36, 0, (int) 'a'); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray18, doubleArray36); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, 0); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray18); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray3, (java.lang.Object) doubleArray14, (int) (byte) 0); java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray3); java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray47); java.lang.String[] strArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray48); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double[]" + "'", str33, "double[]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); org.junit.Assert.assertNotNull(strArray47); org.junit.Assert.assertNotNull(strArray48); org.junit.Assert.assertNotNull(strArray49); }
public void test0571() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0571"); byte[] byteArray3 = new byte[] { (byte) -1, (byte) 10, (byte) 100 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray3, (int) (byte) 100, (int) (byte) 100); java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) 0, (byte) 1, (byte) 10 }; byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 0); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray12); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray12, (int) '.', 0); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) 0, "Short"); org.junit.Assert.assertNotNull(byteArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, 10, 100]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 1, 10]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 1, 10]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]"); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Integer" + "'", str18, "Integer"); }
public void test0572() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0572"); java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) (byte) 10); org.apache.commons.lang3.ArrayUtils.reverse(longArray2); long[] longArray4 = org.apache.commons.lang3.ArrayUtils.clone(longArray2); long[] longArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray4, (long) 100); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray4, "-1"); java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY; java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray10, (long) (byte) 10); org.apache.commons.lang3.ArrayUtils.reverse(longArray12); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray12, (java.lang.Object) 'a'); long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray12); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray9, (java.lang.Object) longArray12, (int) (byte) -1); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray4, longArray12); org.junit.Assert.assertNotNull(longArray0); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); }
public void test0573() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0573"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray2); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) '#'); int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 100, 100); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); }
public void test0574() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0574"); java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, true, false, true, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray9); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray9, "$"); boolean[] booleanArray13 = null; boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray9, booleanArray13); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, false, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true, false, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true, false, true, false, false]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "boolean[]" + "'", str12, "boolean[]"); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); }
public void test0575() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0575"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 3, (int) 'a'); java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); }
public void test0576() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0576"); long[] longArray6 = new long[] { '#', (short) 0, 0L, '4', 0, (byte) 0 }; long[] longArray13 = new long[] { '#', (short) 0, 0L, '4', 0, (byte) 0 }; long[][] longArray14 = new long[][] { longArray6, longArray13 }; long[] longArray20 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.toObject(longArray20); java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray21); long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray21, (long) 10); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray24); long[][] longArray26 = org.apache.commons.lang3.ArrayUtils.add(longArray14, longArray24); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); java.lang.Class[] classArray36 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray37 = (java.lang.Class<?>[]) classArray36; java.lang.Class[] classArray39 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray36, wildcardClassArray40, false); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray32, wildcardClassArray40); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray32); double[] doubleArray47 = new double[] { 10L, 0 }; double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, 0, (int) 'a'); int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) 'a', 0, (double) 0L); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) 100L); int int58 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray44, (java.lang.Object) doubleArray47, (int) '.'); int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray47); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray63); int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) longArray14, (java.lang.Object) doubleArray63, (int) '.'); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[35, 0, 0, 52, 0, 0]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[35, 0, 0, 52, 0, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(classArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1)); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1)); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1)); }
public void test0577() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0577"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) (-1L)); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 4, (double) 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 10, (double) (byte) 10); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (short) 0, (double) '#'); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 2); double[] doubleArray25 = new double[] { 10L, 0 }; double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, 0, (int) 'a'); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (-1L), 10); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10); java.lang.String str40 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray25, "hi!"); double[] doubleArray43 = new double[] { 10L, 0 }; double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, 0, (int) 'a'); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray43); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25); double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, 0, (double) (byte) 10); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (-1), 5); int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) (short) 10, (double) 1.0f); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, 0.0d, (int) (short) 1, (double) 'a'); int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) ' ', 10); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray54); boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray54, 100.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double[]" + "'", str40, "double[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, -1.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false); }
public void test0578() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0578"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray58); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray58, (double) 10.0f); double[] doubleArray65 = new double[] { 'a', 10.0d, (byte) 0 }; int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) '.', (double) 10); java.lang.String str70 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray65, "java.lang"); int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, 0.0d, (int) (short) 100); double[] doubleArray77 = new double[] { 'a', 10.0d, (byte) 0 }; int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray77, (double) '.', (double) 10); double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray77); java.lang.Double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray77); int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray77, (double) 10.0f, (double) (byte) 1); double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray77, 1, 1); double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray58, doubleArray77); int int92 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray77, (double) 100L, (int) ' '); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, ""); org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1)); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1)); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1); org.junit.Assert.assertNotNull(doubleArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]"); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1)); }
public void test0579() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0579"); java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY; java.lang.Character[] charArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0); char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0); java.lang.String str4 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray2, "{32,0,0,100}"); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray7 = new char[] { 'a' }; boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(charArray7, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray7); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, '#'); char[] charArray14 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray13); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]"); org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, ""); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[a]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a]"); }
public void test0580() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0580"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, 3, (int) '#'); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (byte) 0, (int) (byte) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); }
public void test0581() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0581"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, 100.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 10.0, 0.0, 100.0]"); }
public void test0582() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0582"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) (-1.0f)); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0]"); }
public void test0583() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0583"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class[] classArray23 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; java.lang.Class[] classArray26 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26; boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray23, wildcardClassArray27, false); java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; java.lang.Class[] classArray34 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34; boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray31, wildcardClassArray35, false); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray35); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray35, false); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(classArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertNotNull(classArray34); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); }
public void test0584() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0584"); char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, 0, (int) (short) -1); double[] doubleArray6 = new double[] { 10L, 0 }; double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray6, 0, (int) 'a'); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, (double) (-1L), 10); java.lang.Double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray6); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray13); double[] doubleArray17 = new double[] { 10L, 0 }; double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray17, 0, (int) 'a'); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) (-1L), 10); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray17, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray17); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) 10); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray17, "hi!"); double[] doubleArray35 = new double[] { 10L, 0 }; double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray35, 0, (int) 'a'); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray17, doubleArray35); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray40, 0, (double) (byte) 10); double[] doubleArray46 = new double[] { 10L, 0 }; double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray46, 0, (int) 'a'); int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (-1L), 10); int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray46); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) 10); java.lang.String str61 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray46, "hi!"); double[] doubleArray64 = new double[] { 10L, 0 }; double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray64, 0, (int) 'a'); boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray46, doubleArray64); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray46); double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.add(doubleArray69, 0, (double) (byte) 10); double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray43, doubleArray72); int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray43, (double) (short) 1); java.lang.Double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray43); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray43); double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray43); double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray78); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray14, doubleArray78); int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) ' '); boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) 0, (java.lang.Object) doubleArray14); double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray14, (double) (-1)); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "double[]" + "'", str32, "double[]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); org.junit.Assert.assertEquals("'" + str61 + "' != '" + "double[]" + "'", str61, "double[]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1)); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1)); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false); org.junit.Assert.assertNotNull(doubleArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, 0.0]"); }
public void test0585() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0585"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) (short) 10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, true, (int) (short) 100); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, false); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, 4); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3); }
public void test0586() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0586"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("Short"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0587() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0587"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray15); double[] doubleArray24 = new double[] { 10L, 0 }; double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, 0, (int) 'a'); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) 'a', 0, (double) 0L); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray24); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) (short) 0); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, 0.0d, (double) (byte) 1); double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray15, doubleArray24); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray39); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0, 10.0, 0.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0, 10.0, 0.0, 0.0, 10.0]"); }
public void test0588() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0588"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) (-1L)); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 4, (double) 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 10, (double) (byte) 10); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (short) 0, (double) '#'); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 2); double[] doubleArray25 = new double[] { 10L, 0 }; double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, 0, (int) 'a'); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (-1L), 10); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10); java.lang.String str40 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray25, "hi!"); double[] doubleArray43 = new double[] { 10L, 0 }; double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, 0, (int) 'a'); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray43); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25); double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, 0, (double) (byte) 10); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (-1), 5); int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) (short) 10, (double) 1.0f); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, 0.0d, (int) (short) 1, (double) 'a'); int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) ' ', 10); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray54); double[] doubleArray68 = new double[] { 10L, 0 }; double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray68, 0, (int) 'a'); int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, (double) (-1L), 10); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray68, (double) (byte) 0, (double) 100L); double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, (double) 1.0f); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray79); boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray79); boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray79); java.lang.Double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray79); double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray79, 2, (int) (byte) 100); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double[]" + "'", str40, "double[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, -1.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1)); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 0.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true); org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true); org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true); org.junit.Assert.assertNotNull(doubleArray83); org.junit.Assert.assertNotNull(doubleArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0]"); }
public void test0589() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0589"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0590() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0590"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10.0,0.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test0591() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0591"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray18 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray18, 100, 0); boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, true); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, false); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray21); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray27, ", Character, boolean[], Double, Double][]"); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray27); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]"); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "boolean[]" + "'", str29, "boolean[]"); }
public void test0592() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0592"); java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) (byte) 10); boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray2); int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray2, (long) (byte) 10); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray2, "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java"); org.junit.Assert.assertNotNull(longArray0); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "long[]" + "'", str7, "long[]"); }
public void test0593() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0593"); try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{{java,"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,"); } catch (java.lang.ClassNotFoundException e) { } }
public void test0594() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0594"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("java", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: java"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0595() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0595"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; java.lang.Class[] classArray23 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, wildcardClassArray24, false); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray24, wildcardClassArray32); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class[] classArray38 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; java.lang.Class[] classArray41 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41; boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray42, false); java.lang.Class[] classArray46 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46; java.lang.Class[] classArray49 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49; boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray46, wildcardClassArray50, false); boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray42, wildcardClassArray50); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray55 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray42); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray36, wildcardClassArray58); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray58, true); java.lang.Class<?>[] wildcardClassArray62 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray58); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(classArray41); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true); org.junit.Assert.assertNotNull(classArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertNotNull(classArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertNotNull(wildcardClassArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertNotNull(wildcardClassArray62); }
public void test0596() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0596"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray28, "java.lang"); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray28); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 3, (int) (byte) 1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, ""); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); }
public void test0597() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0597"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("Class", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Class"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0598() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0598"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray6, (java.lang.Object[]) byteArray10); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10); java.lang.Object obj14 = null; boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray10, obj14); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 1); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 1); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray17, (byte) 0); byte[] byteArray24 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 0); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 10); byte[] byteArray33 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray33, (byte) 10); byte[] byteArray40 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray40, (byte) 10); byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray35, byteArray42); byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.remove(byteArray43, 3); byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.remove(byteArray45, 0); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray24, byteArray45); byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 0); byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray21, byteArray50); java.lang.String str53 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray21, "0}");
public void test0599() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0599"); java.lang.String[] strArray3 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray4 = org.apache.commons.lang3.ArrayUtils.toArray(strArray3); double[] doubleArray8 = new double[] { 'a', 10.0d, (byte) 0 }; int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) '.', (double) 10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray8, "java.lang"); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray14); double[] doubleArray18 = new double[] { 10L, 0 }; double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray18, 0, (int) 'a'); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (-1L), 10); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) 10); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray18, "hi!"); double[] doubleArray36 = new double[] { 10L, 0 }; double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray36, 0, (int) 'a'); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray18, doubleArray36); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, 0); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray18); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray3, (java.lang.Object) doubleArray14, (int) (byte) 0); double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, (int) '4', 0); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double[]" + "'", str33, "double[]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]"); }
public void test0600() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0600"); double[] doubleArray0 = null; double[] doubleArray3 = new double[] { 10L, 0 }; double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (-1L), 10); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 10); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray3, "hi!"); double[] doubleArray21 = new double[] { 10L, 0 }; double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, (int) 'a'); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray21); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 1, 0); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray0, doubleArray3); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "double[]" + "'", str18, "double[]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); }
public void test0601() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0601"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) '.'); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) '4', 3); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) (short) 1, (int) '.'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 46.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); }
public void test0602() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0602"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.ArrayList[] arrayListArray23 = new java.util.ArrayList[1]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray24 = (java.util.ArrayList<java.lang.String>[]) arrayListArray23; strListArray24[0] = strList19; java.util.ArrayList<java.lang.String>[] strListArray29 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray24, 6, (int) '#'); java.lang.String[] strArray48 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>(); boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48); java.util.List<java.lang.Class<?>> wildcardClassList51 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList49); java.util.List<java.lang.Class<?>> wildcardClassList52 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList49); java.util.List<java.lang.Class<?>> wildcardClassList53 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList49); java.util.AbstractCollection<java.lang.String>[] strCollectionArray54 = org.apache.commons.lang3.ArrayUtils.add((java.util.AbstractCollection<java.lang.String>[]) strListArray24, (java.util.AbstractCollection<java.lang.String>) strList49); java.util.AbstractList<java.lang.String>[] strListArray56 = org.apache.commons.lang3.ArrayUtils.remove((java.util.AbstractList<java.lang.String>[]) strListArray24, 0); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(arrayListArray23); org.junit.Assert.assertNotNull(strListArray24); org.junit.Assert.assertNotNull(strListArray29); org.junit.Assert.assertNotNull(strArray48); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true); org.junit.Assert.assertNotNull(wildcardClassList51); org.junit.Assert.assertNotNull(wildcardClassList52); org.junit.Assert.assertNotNull(wildcardClassList53); org.junit.Assert.assertNotNull(strCollectionArray54); org.junit.Assert.assertNotNull(strListArray56); }
public void test0603() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0603"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray28, (double) '#'); java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 0.0f, (double) (short) -1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); }
public void test0604() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0604"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray11 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 10); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray13); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 0); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray6, (byte) -1); java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray19); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray20); java.lang.Byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray20); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(byteArray22); }
public void test0605() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0605"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); java.lang.Object obj5 = null; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray2, obj5, (int) 'a'); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray8); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[10, 0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); }
public void test0606() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0606"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray19); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray19); java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray21); java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); }
public void test0607() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0607"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = new char[] { 'a', '4' }; char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, '4', 0); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, '#', 4); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray11, 'a'); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray19); org.apache.commons.lang3.ArrayUtils.reverse(charArray20); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray20, "hi!"); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(charArray20, ' '); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray20); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); }
public void test0608() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0608"); long[] longArray5 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray7, (long) (byte) -1, (int) 'a'); java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) (short) 1); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray11, "{}"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "java.lang" + "'", str15, "java.lang"); }
public void test0609() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0609"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean[] booleanArray16 = new boolean[] { false, false, false }; boolean[] booleanArray18 = new boolean[] { true }; boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, true, (int) (short) -1); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, false); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray24, false, 2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray24); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray11, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, true]"); }
public void test0610() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0610"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray12 = new double[] { 10L, 0 }; double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray12, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) 'a', 0, (double) 0L); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) 100L); double[] doubleArray24 = new double[] { 10L, 0 }; double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, 0, (int) 'a'); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (double) (-1L), 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray24); double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray31, (double) 1L); double[] doubleArray36 = new double[] { 10L, 0 }; double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray36, 0, (int) 'a'); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) (-1L), 10); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray36, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray36); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray36, (double) 10); java.lang.String str51 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray36, "hi!"); double[] doubleArray54 = new double[] { 10L, 0 }; double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray54, 0, (int) 'a'); boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray36, doubleArray54); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray33, doubleArray36); boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray36); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, 0, (double) 3); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertEquals("'" + str51 + "' != '" + "double[]" + "'", str51, "double[]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[3.0, 10.0, 0.0]"); }
public void test0611() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0611"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray15); char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a'); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15); char[] charArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, '4'); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]"); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[]"); }
public void test0612() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0612"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, 0, (double) (byte) 10); double[] doubleArray42 = new double[] { 10L, 0 }; double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, 0, (int) 'a'); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (-1L), 10); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray42); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 10); java.lang.String str57 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray42, "hi!"); double[] doubleArray60 = new double[] { 10L, 0 }; double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, 0, (int) 'a'); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray42, doubleArray60); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, 0, (double) (byte) 10); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray68); int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (short) 1); java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39); boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray39); double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39); double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray74); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray10, doubleArray74); int int78 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray10, (double) ' '); int int82 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray10, (double) (-1L), (int) 'a', (double) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertEquals("'" + str57 + "' != '" + "double[]" + "'", str57, "double[]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1)); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1); }
public void test0613() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0613"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); double[] doubleArray35 = new double[] { 'a', 10.0d, (byte) 0 }; int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) '.', (double) 10); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray35); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 10.0, 0.0]"); }
public void test0614() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0614"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray9, (int) ' ', (int) (byte) 10); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray9, (double) 0); java.lang.Double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray9); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[97.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray15); }
public void test0615() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0615"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) '.'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray23); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray23); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 46.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0, 46.0]"); }
public void test0616() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0616"); char[] charArray1 = new char[] { 'a' }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(charArray1, '4'); char[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray1); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray4, ""); char[] charArray9 = new char[] { 'a', '4' }; char[] charArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, '4', 0); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray10, '#', 4); char[] charArray18 = org.apache.commons.lang3.ArrayUtils.add(charArray10, 'a'); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.clone(charArray18); java.lang.Character[] charArray20 = org.apache.commons.lang3.ArrayUtils.toObject(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray18, '4'); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray4, charArray18); char[] charArray25 = new char[] { 'a' }; boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(charArray25, '4'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.clone(charArray25); java.lang.Character[] charArray29 = org.apache.commons.lang3.ArrayUtils.toObject(charArray25); char[] charArray30 = org.apache.commons.lang3.ArrayUtils.clone(charArray25); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray30, '4'); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray18, charArray30); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "char[]" + "'", str6, "char[]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, 4]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a]"); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a]"); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), "a4aa"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), "a4aa"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[a, 4, a, a]"); }
public void test0617() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0617"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray15); java.lang.Character[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertNotNull(charArray17); }
public void test0618() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0618"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) (-1L)); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 4, (double) 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 10, (double) (byte) 10); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (short) 0, (double) '#'); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 2); double[] doubleArray25 = new double[] { 10L, 0 }; double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, 0, (int) 'a'); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (-1L), 10); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10); java.lang.String str40 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray25, "hi!"); double[] doubleArray43 = new double[] { 10L, 0 }; double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, 0, (int) 'a'); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray43); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25); double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, 0, (double) (byte) 10); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (-1), 5); int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) (short) 10, (double) 1.0f); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, 0.0d, (int) (short) 1, (double) 'a'); int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) ' ', 10); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray54); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (byte) 100, (-1)); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double[]" + "'", str40, "double[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, -1.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]"); }
public void test0619() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0619"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false]"); }
public void test0620() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0620"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20, 10.0d); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 97.0, 10.0, 0.0]"); }
public void test0621() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0621"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, 0); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray9, doubleArray13); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 100, 0); // The following exception was thrown during execution in test generation try { int int43 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) int42); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); }
public void test0622() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0622"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) (byte) -1); int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) ' ', (-1.0d)); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1)); }
public void test0623() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0623"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 1.0f, 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1)); }
public void test0624() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0624"); long[] longArray5 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray6); java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8); java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray8); java.lang.String[] strArray30 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>(); boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30); java.util.List<java.lang.Class<?>> wildcardClassList33 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList31); java.util.ArrayList[] arrayListArray35 = new java.util.ArrayList[1]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray36 = (java.util.ArrayList<java.lang.String>[]) arrayListArray35; strListArray36[0] = strList31; java.util.ArrayList<java.lang.String>[] strListArray41 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray36, 6, (int) '#'); java.util.AbstractList<java.lang.String>[] strListArray42 = org.apache.commons.lang3.ArrayUtils.toArray((java.util.AbstractList<java.lang.String>[]) strListArray41); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray8, (java.lang.Object[]) strListArray41); java.util.AbstractList<java.lang.String>[] strListArray46 = org.apache.commons.lang3.ArrayUtils.subarray((java.util.AbstractList<java.lang.String>[]) strListArray41, (int) (byte) 1, 100); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertNotNull(objArray7); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(strArray30); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); org.junit.Assert.assertNotNull(wildcardClassList33); org.junit.Assert.assertNotNull(arrayListArray35); org.junit.Assert.assertNotNull(strListArray36); org.junit.Assert.assertNotNull(strListArray41); org.junit.Assert.assertNotNull(strListArray42); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(strListArray46); }
public void test0625() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0625"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, true); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, 6, (int) (byte) 0); java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]"); org.junit.Assert.assertNotNull(booleanArray16); }
public void test0626() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0626"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, true, 0); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); }
public void test0627() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0627"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); }
public void test0628() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0628"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "long[]", true); org.junit.Assert.assertNotNull(wildcardClass3); }
public void test0629() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0629"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9); java.lang.Short[] shortArray11 = new java.lang.Short[] {}; short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11, (short) 0); short[] shortArray16 = new short[] { (short) 1, (short) 10 }; short[] shortArray20 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray16, shortArray20); short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray16); short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, 100, (int) ' '); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.remove(shortArray16, 0); short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray13, shortArray27); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray13, (short) (byte) 1); short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray13); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) doubleArray9, (java.lang.Object) shortArray31); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[10]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[10]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); }
public void test0630() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0630"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36); java.lang.Double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray38); }
public void test0631() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0631"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20); short[] shortArray28 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray35 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray42 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray49 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[][] shortArray50 = new short[][] { shortArray28, shortArray35, shortArray42, shortArray49 }; short[] shortArray51 = new short[] {}; short[] shortArray52 = new short[] {}; short[] shortArray53 = new short[] {}; short[][] shortArray54 = new short[][] { shortArray51, shortArray52, shortArray53 }; short[][] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray54); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray50); java.lang.Class[] classArray58 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58; java.lang.Class[] classArray61 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61; boolean boolean64 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray58, wildcardClassArray62, false); java.lang.Class[] classArray66 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66; java.lang.Class[] classArray69 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69; boolean boolean72 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray66, wildcardClassArray70, false); boolean boolean73 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray62, wildcardClassArray70); java.lang.Class<?>[] wildcardClassArray74 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray62); java.lang.Class<?>[] wildcardClassArray75 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray62); java.lang.Class<?>[] wildcardClassArray76 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray62); boolean boolean77 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray56, wildcardClassArray76); boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray20, wildcardClassArray76); java.lang.String[] strArray82 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray83 = org.apache.commons.lang3.ArrayUtils.toArray(strArray82); java.lang.Comparable<java.lang.String>[] strComparableArray84 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Comparable<java.lang.String>[]) strArray83); boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray20, (java.lang.Object[]) strArray83); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray50); org.junit.Assert.assertNotNull(shortArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]"); org.junit.Assert.assertNotNull(shortArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]"); org.junit.Assert.assertNotNull(shortArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]"); org.junit.Assert.assertNotNull(shortArray54); org.junit.Assert.assertNotNull(shortArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertNotNull(classArray58); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(classArray61); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(classArray66); org.junit.Assert.assertNotNull(wildcardClassArray67); org.junit.Assert.assertNotNull(classArray69); org.junit.Assert.assertNotNull(wildcardClassArray70); org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true); org.junit.Assert.assertNotNull(wildcardClassArray74); org.junit.Assert.assertNotNull(wildcardClassArray75); org.junit.Assert.assertNotNull(wildcardClassArray76); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); org.junit.Assert.assertNotNull(strArray82); org.junit.Assert.assertNotNull(strArray83); org.junit.Assert.assertNotNull(strComparableArray84); org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false); }
public void test0632() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0632"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray9, (int) ' ', (int) (byte) 10); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray9, (double) 0); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) 9, (double) (short) 0); // The following exception was thrown during execution in test generation try { double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, 5, (double) 2); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[97.0, 10.0]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); }
public void test0633() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0633"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); boolean[] booleanArray15 = new boolean[] { false, false, false }; boolean[] booleanArray17 = new boolean[] { true }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray15, ""); java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray15); boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray15, false); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray23); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray11, booleanArray23); boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray23, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean[]" + "'", str20, "boolean[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{false,false,false}" + "'", str21, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false, false]"); }
public void test0634() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0634"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0,10,100,3,1,1,0,10,35,-1,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,10,100,3,1,1,0,10,35,-1,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0635() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0635"); java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray0); java.lang.Class<?> wildcardClass4 = org.apache.commons.lang3.ClassUtils.getClass("double[]"); int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray0, (java.lang.Object) wildcardClass4); boolean[] booleanArray11 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray11, 100, 0); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, true); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray14, false); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray14, false, (int) '#'); java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray0, (java.lang.Object) booleanArray14); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertNotNull(wildcardClass4); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); }
public void test0636() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0636"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21, (double) (byte) 10); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21, (double) 9); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0, 10.0, 0.0]"); }
public void test0637() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0637"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, true); long[] longArray17 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray19 = org.apache.commons.lang3.ArrayUtils.add(longArray17, 0L); long[] longArray24 = new long[] { 10L, '#', (-1), 10L }; long[] longArray25 = org.apache.commons.lang3.ArrayUtils.addAll(longArray19, longArray24); long[] longArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) booleanArray10, (java.lang.Object) longArray26); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); }
public void test0638() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0638"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray12, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false]"); }
public void test0639() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0639"); java.lang.String[] strArray3 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray4 = org.apache.commons.lang3.ArrayUtils.toArray(strArray3); java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray3); java.lang.CharSequence[] charSequenceArray7 = org.apache.commons.lang3.ArrayUtils.add((java.lang.CharSequence[]) strArray3, (java.lang.CharSequence) "."); java.lang.String[] strArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray3); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) strArray8, "Byte"); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertNotNull(charSequenceArray7); org.junit.Assert.assertNotNull(strArray8); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "String[]" + "'", str10, "String[]"); }
public void test0640() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0640"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20, 10.0d); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray24, (double) (-1.0f), (double) 5); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); }
public void test0641() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0641"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) '4', (double) (byte) 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); }
public void test0642() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0642"); java.lang.String[] strArray3 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray4 = org.apache.commons.lang3.ArrayUtils.toArray(strArray3); double[] doubleArray8 = new double[] { 'a', 10.0d, (byte) 0 }; int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) '.', (double) 10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray8, "java.lang"); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray14); double[] doubleArray18 = new double[] { 10L, 0 }; double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray18, 0, (int) 'a'); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (-1L), 10); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) 10); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray18, "hi!"); double[] doubleArray36 = new double[] { 10L, 0 }; double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray36, 0, (int) 'a'); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray18, doubleArray36); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, 0); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray18); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray3, (java.lang.Object) doubleArray14, (int) (byte) 0); java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray3); java.lang.String[] strArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray47); long[] longArray54 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray55 = org.apache.commons.lang3.ArrayUtils.toObject(longArray54); long[] longArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray55); java.lang.Object[] objArray57 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray55); long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray55); long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray58); boolean boolean60 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray58); int int61 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray47, (java.lang.Object) boolean60); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double[]" + "'", str33, "double[]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); org.junit.Assert.assertNotNull(strArray47); org.junit.Assert.assertNotNull(strArray48); org.junit.Assert.assertNotNull(longArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray55); org.junit.Assert.assertNotNull(longArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray56), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(objArray57); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); }
public void test0643() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0643"); java.lang.Object[] objArray4 = new java.lang.Object[] { (short) -1, 0.0d, ' ', (short) -1 }; java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(objArray4); byte[] byteArray10 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 10); byte[] byteArray17 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray17, (byte) 10); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray19); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray4, (java.lang.Object) byteArray20); byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.remove(byteArray20, 1); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(byteArray20, (byte) 100); java.lang.Byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray20); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26, (byte) 0); byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) byteArray26, "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java"); byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray26); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(objArray5); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertNotNull(byteArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Byte[]" + "'", str31, "Byte[]"); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, -1, 0, 0, -1, -1, 0, 0]"); }
public void test0644() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0644"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, 0.0d, 4); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) '4', 1, (double) 4); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, 0); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); }
public void test0645() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0645"); short[] shortArray2 = new short[] { (short) 1, (short) 10 }; short[] shortArray6 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray2, shortArray6); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.remove(shortArray7, 4); int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray7, (short) (byte) 100); short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray7, (short) 0); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray13, (short) (byte) 0, (int) (byte) -1); short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) -1); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) shortArray18, "String[]"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 10, -1, 1]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 10, -1, 1]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[1, 10, -1, 1, -1]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "short[]" + "'", str20, "short[]"); }
public void test0646() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0646"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (byte) 10, (double) 0L); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, (int) (byte) 1, (int) (byte) 10); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray15, 1); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, 0.0d, (int) (short) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1); }
public void test0647() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0647"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); boolean[] booleanArray21 = new boolean[] {}; int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, false); boolean[] booleanArray27 = new boolean[] { false, false, false }; boolean[] booleanArray29 = new boolean[] { true }; boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray27, booleanArray29); int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray27, true, (int) (short) -1); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray27, true); boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray27, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray27); boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray21, booleanArray27); boolean[] booleanArray44 = new boolean[] { false, false, false }; boolean[] booleanArray46 = new boolean[] { true }; boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray44, booleanArray46); int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray44, true, (int) (short) -1); boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.add(booleanArray44, false); boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray44, (-1), (int) (short) 10); boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.add(booleanArray44, 3, true); boolean[] booleanArray62 = new boolean[] { false, false, false }; boolean[] booleanArray64 = new boolean[] { true }; boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray62, booleanArray64); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray62, true, (int) (short) -1); boolean[] booleanArray70 = org.apache.commons.lang3.ArrayUtils.add(booleanArray62, false); boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray62, (-1), (int) (short) 10); boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.add(booleanArray62, 3, true); boolean[] booleanArray77 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray58, booleanArray76); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray58, true); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray21, booleanArray58); int int81 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray20, (java.lang.Object) booleanArray58); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[true]"); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(booleanArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[true]"); org.junit.Assert.assertNotNull(booleanArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertNotNull(booleanArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray77), "[false, false, false, true, false, false, false, true]"); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 3 + "'", int79 == 3); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1)); }
public void test0648() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0648"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); java.lang.Class<?>[] wildcardClassArray32 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray32); }
public void test0649() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0649"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("0"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0" + "'", str1, "0"); }
public void test0650() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0650"); int[] intArray0 = null; java.lang.Integer[] intArray7 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7, (int) (byte) 100); int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray7); int[] intArray15 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray15, 3, 100); int[] intArray19 = org.apache.commons.lang3.ArrayUtils.clone(intArray15); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(intArray19, (int) (byte) 100); int[] intArray24 = org.apache.commons.lang3.ArrayUtils.subarray(intArray19, (int) ' ', 1); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray10, intArray19); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray19, "-1"); int[] intArray28 = org.apache.commons.lang3.ArrayUtils.clone(intArray19); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray0, intArray19); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[100]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, ""); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); }
public void test0651() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0651"); java.lang.Double[][] doubleArray0 = null; java.lang.Double[] doubleArray1 = new java.lang.Double[] {}; java.lang.Double[] doubleArray2 = new java.lang.Double[] {}; java.lang.Double[] doubleArray3 = new java.lang.Double[] {}; java.lang.Double[] doubleArray4 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray5 = new java.lang.Double[][] { doubleArray1, doubleArray2, doubleArray3, doubleArray4 }; java.lang.Double[] doubleArray6 = new java.lang.Double[] {}; java.lang.Double[] doubleArray7 = new java.lang.Double[] {}; java.lang.Double[] doubleArray8 = new java.lang.Double[] {}; java.lang.Double[] doubleArray9 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray10 = new java.lang.Double[][] { doubleArray6, doubleArray7, doubleArray8, doubleArray9 }; java.lang.Double[] doubleArray11 = new java.lang.Double[] {}; java.lang.Double[] doubleArray12 = new java.lang.Double[] {}; java.lang.Double[] doubleArray13 = new java.lang.Double[] {}; java.lang.Double[] doubleArray14 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray15 = new java.lang.Double[][] { doubleArray11, doubleArray12, doubleArray13, doubleArray14 }; java.lang.Double[] doubleArray16 = new java.lang.Double[] {}; java.lang.Double[] doubleArray17 = new java.lang.Double[] {}; java.lang.Double[] doubleArray18 = new java.lang.Double[] {}; java.lang.Double[] doubleArray19 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray16, doubleArray17, doubleArray18, doubleArray19 }; java.lang.Double[] doubleArray21 = new java.lang.Double[] {}; java.lang.Double[] doubleArray22 = new java.lang.Double[] {}; java.lang.Double[] doubleArray23 = new java.lang.Double[] {}; java.lang.Double[] doubleArray24 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray25 = new java.lang.Double[][] { doubleArray21, doubleArray22, doubleArray23, doubleArray24 }; java.lang.Double[] doubleArray26 = new java.lang.Double[] {}; java.lang.Double[] doubleArray27 = new java.lang.Double[] {}; java.lang.Double[] doubleArray28 = new java.lang.Double[] {}; java.lang.Double[] doubleArray29 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray30 = new java.lang.Double[][] { doubleArray26, doubleArray27, doubleArray28, doubleArray29 }; java.lang.Double[][][] doubleArray31 = new java.lang.Double[][][] { doubleArray5, doubleArray10, doubleArray15, doubleArray20, doubleArray25, doubleArray30 }; java.lang.Double[] doubleArray34 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray37 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray40 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray43 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray44 = new java.lang.Double[][] { doubleArray34, doubleArray37, doubleArray40, doubleArray43 }; double[] doubleArray48 = new double[] { 'a', 10.0d, (byte) 0 }; int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray48, (double) '.', (double) 10); java.lang.String str53 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray48, "java.lang"); int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray48, 0.0d, (int) (short) 100); double[] doubleArray60 = new double[] { 'a', 10.0d, (byte) 0 }; int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) '.', (double) 10); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray48, doubleArray60); double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray48, (int) (byte) 0); java.lang.Double[][] doubleArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray44, (java.lang.Object) doubleArray48); java.lang.Double[][][] doubleArray68 = org.apache.commons.lang3.ArrayUtils.add(doubleArray31, doubleArray67); java.lang.Double[][] doubleArray69 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray67); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, ""); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1)); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertNotNull(doubleArray69); }
public void test0652() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0652"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray8, (double) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray11, (int) (byte) 1, 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); }
public void test0653() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0653"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); long[] longArray26 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray28, (long) (byte) -1, (int) 'a'); java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray28); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32, (long) (short) 1); int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray20, (java.lang.Object) longArray34, (int) '.'); java.lang.String str38 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) '.', "char[]"); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1)); org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Character" + "'", str38, "Character"); }
public void test0654() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0654"); java.lang.Character[] charArray3 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray7 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray11 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[][] charArray12 = new java.lang.Character[][] { charArray3, charArray7, charArray11 }; java.lang.Character[] charArray16 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray20 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray24 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[][] charArray25 = new java.lang.Character[][] { charArray16, charArray20, charArray24 }; java.lang.Character[] charArray29 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray33 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray37 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[][] charArray38 = new java.lang.Character[][] { charArray29, charArray33, charArray37 }; java.lang.Character[] charArray42 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray46 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[] charArray50 = new java.lang.Character[] { 'a', '#', '$' }; java.lang.Character[][] charArray51 = new java.lang.Character[][] { charArray42, charArray46, charArray50 }; java.lang.Character[][][] charArray52 = new java.lang.Character[][][] { charArray12, charArray25, charArray38, charArray51 }; java.lang.Character[] charArray58 = new java.lang.Character[] { '.', '#', '.', ' ', '#' }; java.lang.Character[] charArray64 = new java.lang.Character[] { '.', '#', '.', ' ', '#' }; java.lang.Character[][] charArray65 = new java.lang.Character[][] { charArray58, charArray64 }; java.lang.Character[][] charArray66 = org.apache.commons.lang3.ArrayUtils.toArray(charArray65); java.lang.Character[][][] charArray67 = org.apache.commons.lang3.ArrayUtils.add(charArray52, charArray66); char[] charArray73 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray73, '4'); char[] charArray78 = org.apache.commons.lang3.ArrayUtils.subarray(charArray73, 3, 2); java.lang.Character[] charArray79 = org.apache.commons.lang3.ArrayUtils.toObject(charArray78); char[] charArray81 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray79, 'a'); java.lang.Class<?>[] wildcardClassArray82 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray79); java.lang.Character[] charArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray79); java.lang.Class<?>[] wildcardClassArray84 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray83); char[] charArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray83, 'a'); char[] charArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray83); java.lang.Character[][] charArray88 = org.apache.commons.lang3.ArrayUtils.add(charArray66, charArray83); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray12); org.junit.Assert.assertNotNull(charArray16); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertNotNull(charArray37); org.junit.Assert.assertNotNull(charArray38); org.junit.Assert.assertNotNull(charArray42); org.junit.Assert.assertNotNull(charArray46); org.junit.Assert.assertNotNull(charArray50); org.junit.Assert.assertNotNull(charArray51); org.junit.Assert.assertNotNull(charArray52); org.junit.Assert.assertNotNull(charArray58); org.junit.Assert.assertNotNull(charArray64); org.junit.Assert.assertNotNull(charArray65); org.junit.Assert.assertNotNull(charArray66); org.junit.Assert.assertNotNull(charArray67); org.junit.Assert.assertNotNull(charArray73); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray75); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray75), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray75), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray75), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray78); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[]"); org.junit.Assert.assertNotNull(charArray79); org.junit.Assert.assertNotNull(charArray81); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray82); org.junit.Assert.assertNotNull(charArray83); org.junit.Assert.assertNotNull(wildcardClassArray84); org.junit.Assert.assertNotNull(charArray86); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[]"); org.junit.Assert.assertNotNull(charArray87); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray87), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray87), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray87), "[]"); org.junit.Assert.assertNotNull(charArray88); }
public void test0655() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0655"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Integer[][] intArray17 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray18 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray19 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray20 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray21 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray22 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray23 = new java.lang.Integer[][][] { intArray17, intArray18, intArray19, intArray20, intArray21, intArray22 }; java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray52 = new java.lang.Integer[][] { intArray30, intArray37, intArray44, intArray51 }; java.lang.Integer[][] intArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray52, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray23, intArray52); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray55); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray56, false); java.lang.Class[] classArray60 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60; java.lang.Class[] classArray63 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray64 = (java.lang.Class<?>[]) classArray63; boolean boolean66 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray60, wildcardClassArray64, false); java.lang.Class[] classArray68 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray69 = (java.lang.Class<?>[]) classArray68; java.lang.Class[] classArray71 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray72 = (java.lang.Class<?>[]) classArray71; boolean boolean74 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray68, wildcardClassArray72, false); boolean boolean75 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray64, wildcardClassArray72); java.lang.Class<?>[] wildcardClassArray76 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray64); java.lang.Class<?>[] wildcardClassArray77 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray64); java.lang.Class<?>[] wildcardClassArray78 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray64); java.lang.Class[] classArray80 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80; java.lang.Class[] classArray83 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83; boolean boolean86 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray80, wildcardClassArray84, false); java.lang.Class[] classArray88 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray89 = (java.lang.Class<?>[]) classArray88; java.lang.Class[] classArray91 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray92 = (java.lang.Class<?>[]) classArray91; boolean boolean94 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray88, wildcardClassArray92, false); boolean boolean95 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray84, wildcardClassArray92); boolean boolean96 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray78, wildcardClassArray84); java.lang.Class<?>[] wildcardClassArray97 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray84); java.lang.Class<?>[] wildcardClassArray98 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray84); boolean boolean99 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray84); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); org.junit.Assert.assertNotNull(classArray60); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertNotNull(classArray63); org.junit.Assert.assertNotNull(wildcardClassArray64); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true); org.junit.Assert.assertNotNull(classArray68); org.junit.Assert.assertNotNull(wildcardClassArray69); org.junit.Assert.assertNotNull(classArray71); org.junit.Assert.assertNotNull(wildcardClassArray72); org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true); org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true); org.junit.Assert.assertNotNull(wildcardClassArray76); org.junit.Assert.assertNotNull(wildcardClassArray77); org.junit.Assert.assertNotNull(wildcardClassArray78); org.junit.Assert.assertNotNull(classArray80); org.junit.Assert.assertNotNull(wildcardClassArray81); org.junit.Assert.assertNotNull(classArray83); org.junit.Assert.assertNotNull(wildcardClassArray84); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true); org.junit.Assert.assertNotNull(classArray88); org.junit.Assert.assertNotNull(wildcardClassArray89); org.junit.Assert.assertNotNull(classArray91); org.junit.Assert.assertNotNull(wildcardClassArray92); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true); org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true); org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true); org.junit.Assert.assertNotNull(wildcardClassArray97); org.junit.Assert.assertNotNull(wildcardClassArray98); org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true); }
public void test0656() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0656"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("String", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: String"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0657() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0657"); java.lang.Object[] objArray4 = new java.lang.Object[] { (short) -1, 0.0d, ' ', (short) -1 }; java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(objArray4); byte[] byteArray10 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray10, (byte) 10); byte[] byteArray17 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray17, (byte) 10); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray19); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray4, (java.lang.Object) byteArray20); byte[] byteArray26 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray26, (byte) 10); byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray28); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray20, byteArray29); byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray20, (int) (byte) 0, (int) (byte) 1); int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray33, (byte) 100, (int) ' '); java.lang.Byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray33); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) byteArray33, "Double"); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(objArray5); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1)); org.junit.Assert.assertNotNull(byteArray37); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "byte[]" + "'", str39, "byte[]"); }
public void test0658() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0658"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{false,false,false,true}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {false,false,false,true}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0659() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0659"); long[] longArray5 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray6); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) (short) -1); double[] doubleArray12 = new double[] { 10L, 0 }; double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray12, 0, (int) 'a'); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) (-1L), 10); java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray12); double[] doubleArray22 = new double[] { 10L, 0 }; double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, 0, (int) 'a'); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) 'a', 0, (double) 0L); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray22, (double) 100L); double[] doubleArray34 = new double[] { 10L, 0 }; double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, 0, (int) 'a'); int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, (double) (-1L), 10); double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray22, doubleArray34); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray41, (double) 1L); double[] doubleArray46 = new double[] { 10L, 0 }; double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray46, 0, (int) 'a'); int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) (-1L), 10); int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray46, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray46); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) 10); java.lang.String str61 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray46, "hi!"); double[] doubleArray64 = new double[] { 10L, 0 }; double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray64, 0, (int) 'a'); boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray46, doubleArray64); boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray43, doubleArray46); boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray46); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray6, (java.lang.Object) doubleArray46, 4); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertNotNull(objArray7); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); org.junit.Assert.assertEquals("'" + str61 + "' != '" + "double[]" + "'", str61, "double[]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false); org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); }
public void test0660() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0660"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray19 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[]) classArray19; java.lang.Class[] classArray22 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray19, wildcardClassArray23, false); java.lang.Class[] classArray27 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27; java.lang.Class[] classArray30 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray27, wildcardClassArray31, false); boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray23, wildcardClassArray31); java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class[] classArray39 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; java.lang.Class[] classArray42 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray39, wildcardClassArray43, false); java.lang.Class[] classArray47 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47; java.lang.Class[] classArray50 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50; boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray47, wildcardClassArray51, false); boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray51); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, wildcardClassArray43); short[] shortArray62 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray69 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray76 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray83 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[][] shortArray84 = new short[][] { shortArray62, shortArray69, shortArray76, shortArray83 }; short[] shortArray85 = new short[] {}; short[] shortArray86 = new short[] {}; short[] shortArray87 = new short[] {}; short[][] shortArray88 = new short[][] { shortArray85, shortArray86, shortArray87 }; short[][] shortArray89 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray84, shortArray88); java.lang.Class<?>[] wildcardClassArray90 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray84); boolean boolean91 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, wildcardClassArray90); boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray37); java.lang.Class<?>[] wildcardClassArray93 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray37); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(classArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(classArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertNotNull(classArray47); org.junit.Assert.assertNotNull(wildcardClassArray48); org.junit.Assert.assertNotNull(classArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); org.junit.Assert.assertNotNull(shortArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray84); org.junit.Assert.assertNotNull(shortArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]"); org.junit.Assert.assertNotNull(shortArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]"); org.junit.Assert.assertNotNull(shortArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]"); org.junit.Assert.assertNotNull(shortArray88); org.junit.Assert.assertNotNull(shortArray89); org.junit.Assert.assertNotNull(wildcardClassArray90); org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true); org.junit.Assert.assertNotNull(wildcardClassArray93); }
public void test0661() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0661"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) (byte) 100); double[] doubleArray42 = new double[] { 10L, 0 }; double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, 0, (int) 'a'); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 'a', 0, (double) 0L); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray42, (double) 100L); double[] doubleArray54 = new double[] { 10L, 0 }; double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray54, 0, (int) 'a'); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray54, (double) (-1L), 10); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray42, doubleArray54); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.add(doubleArray61, (double) 1L); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 10); java.lang.String str81 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray66, "hi!"); double[] doubleArray84 = new double[] { 10L, 0 }; double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray84, 0, (int) 'a'); boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray66, doubleArray84); boolean boolean89 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray66); double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray63); double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray91); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1)); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertEquals("'" + str81 + "' != '" + "double[]" + "'", str81, "double[]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false); org.junit.Assert.assertNotNull(doubleArray90); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, 0.0, 10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[0.0, 10.0]"); }
public void test0662() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0662"); int[] intArray4 = new int[] { '#', (byte) 0, 0, (byte) 1 }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray4); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.subarray(intArray4, 0, (-1)); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) intArray8, "Class[]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[35, 0, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "int[]" + "'", str12, "int[]"); }
public void test0663() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0663"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "{10.0,0.0}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{10.0,0.0}" + "'", str2, "{10.0,0.0}"); }
public void test0664() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0664"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray8, true); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray8, false, (int) '#'); java.lang.Boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray16); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17, false); boolean[] booleanArray23 = new boolean[] { false, false, false }; boolean[] booleanArray25 = new boolean[] { true }; boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray23, booleanArray25); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray23, true, (int) (short) -1); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray23, true); boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23); boolean[] booleanArray38 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray38, 100, 0); boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.add(booleanArray41, true); int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray41, false); boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray32, booleanArray41); boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray19, booleanArray46); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray46); boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray46, true); boolean[] booleanArray54 = new boolean[] { false, false, false }; boolean[] booleanArray56 = new boolean[] { true }; boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray54, booleanArray56); java.lang.String str59 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray54, ""); java.lang.String str60 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray54); boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray54); int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray61, true); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray46, booleanArray61); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[true]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertNotNull(booleanArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[]"); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false); org.junit.Assert.assertNotNull(booleanArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[true]"); org.junit.Assert.assertNotNull(booleanArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str59 + "' != '" + "boolean[]" + "'", str59, "boolean[]"); org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{false,false,false}" + "'", str60, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray61), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1)); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); }
public void test0665() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0665"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 3, (int) 'a'); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) '$', (double) ' '); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, (double) 1L); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2); }
public void test0666() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0666"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21); java.lang.Double[] doubleArray23 = new java.lang.Double[] {}; java.lang.Double[] doubleArray24 = new java.lang.Double[] {}; java.lang.Double[] doubleArray25 = new java.lang.Double[] {}; java.lang.Double[] doubleArray26 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray27 = new java.lang.Double[][] { doubleArray23, doubleArray24, doubleArray25, doubleArray26 }; java.lang.Double[] doubleArray28 = new java.lang.Double[] {}; java.lang.Double[] doubleArray29 = new java.lang.Double[] {}; java.lang.Double[] doubleArray30 = new java.lang.Double[] {}; java.lang.Double[] doubleArray31 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray32 = new java.lang.Double[][] { doubleArray28, doubleArray29, doubleArray30, doubleArray31 }; java.lang.Double[] doubleArray33 = new java.lang.Double[] {}; java.lang.Double[] doubleArray34 = new java.lang.Double[] {}; java.lang.Double[] doubleArray35 = new java.lang.Double[] {}; java.lang.Double[] doubleArray36 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray37 = new java.lang.Double[][] { doubleArray33, doubleArray34, doubleArray35, doubleArray36 }; java.lang.Double[] doubleArray38 = new java.lang.Double[] {}; java.lang.Double[] doubleArray39 = new java.lang.Double[] {}; java.lang.Double[] doubleArray40 = new java.lang.Double[] {}; java.lang.Double[] doubleArray41 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray42 = new java.lang.Double[][] { doubleArray38, doubleArray39, doubleArray40, doubleArray41 }; java.lang.Double[] doubleArray43 = new java.lang.Double[] {}; java.lang.Double[] doubleArray44 = new java.lang.Double[] {}; java.lang.Double[] doubleArray45 = new java.lang.Double[] {}; java.lang.Double[] doubleArray46 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray47 = new java.lang.Double[][] { doubleArray43, doubleArray44, doubleArray45, doubleArray46 }; java.lang.Double[] doubleArray48 = new java.lang.Double[] {}; java.lang.Double[] doubleArray49 = new java.lang.Double[] {}; java.lang.Double[] doubleArray50 = new java.lang.Double[] {}; java.lang.Double[] doubleArray51 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray52 = new java.lang.Double[][] { doubleArray48, doubleArray49, doubleArray50, doubleArray51 }; java.lang.Double[][][] doubleArray53 = new java.lang.Double[][][] { doubleArray27, doubleArray32, doubleArray37, doubleArray42, doubleArray47, doubleArray52 }; java.lang.Double[] doubleArray56 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray59 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray62 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray65 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray66 = new java.lang.Double[][] { doubleArray56, doubleArray59, doubleArray62, doubleArray65 }; double[] doubleArray70 = new double[] { 'a', 10.0d, (byte) 0 }; int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray70, (double) '.', (double) 10); java.lang.String str75 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray70, "java.lang"); int int78 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray70, 0.0d, (int) (short) 100); double[] doubleArray82 = new double[] { 'a', 10.0d, (byte) 0 }; int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray82, (double) '.', (double) 10); double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray70, doubleArray82); double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray70, (int) (byte) 0); java.lang.Double[][] doubleArray89 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray66, (java.lang.Object) doubleArray70); java.lang.Double[][][] doubleArray90 = org.apache.commons.lang3.ArrayUtils.add(doubleArray53, doubleArray89); java.lang.Double[][][] doubleArray91 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray53); java.lang.Double[][][] doubleArray92 = org.apache.commons.lang3.ArrayUtils.toArray(doubleArray53); boolean boolean93 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray21, (java.lang.Object[]) doubleArray92); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertNotNull(doubleArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1)); org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, ""); org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1)); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1)); org.junit.Assert.assertNotNull(doubleArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertNotNull(doubleArray90); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertNotNull(doubleArray92); org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false); }
public void test0667() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0667"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray10, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false]"); }
public void test0668() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0668"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Class;,class [Z,class [Z,class [Z,class [Z}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Class;,class[Z,class[Z,class[Z,class[Z}");
public void test0669() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0669"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = new char[] { 'a', '4' }; char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, '4', 0); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, '#', 4); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray11, 'a'); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray19); org.apache.commons.lang3.ArrayUtils.reverse(charArray20); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray20, "hi!"); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(charArray20, ' '); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray20); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; char[] charArray28 = org.apache.commons.lang3.ArrayUtils.clone(charArray27); char[] charArray31 = org.apache.commons.lang3.ArrayUtils.subarray(charArray28, (int) (byte) 10, (int) ' '); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray28, '#'); char[] charArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray33, 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray35, ' '); char[] charArray40 = org.apache.commons.lang3.ArrayUtils.subarray(charArray35, (int) '.', (int) ' '); char[] charArray41 = org.apache.commons.lang3.ArrayUtils.addAll(charArray20, charArray40); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[]"); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]"); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]"); org.junit.Assert.assertNotNull(charArray35); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertNotNull(charArray40); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[]"); org.junit.Assert.assertNotNull(charArray41); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, 4, a, , #, #, 4, 4]"); }
public void test0670() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0670"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray28, (double) '#'); java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28); int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, 0.0d, (int) (short) 1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); }
public void test0671() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0671"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); int[] intArray14 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray14, 3, 100); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray14); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) (byte) 100); int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) ' ', 1); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray18); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray18, "-1"); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray18, 4, 6); int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray18, 0, 2); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray18); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); }
public void test0672() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0672"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, 0.0d, (int) '#', 1.0d); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5); }
public void test0673() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0673"); java.lang.Double[] doubleArray0 = new java.lang.Double[] {}; java.lang.Double[] doubleArray1 = new java.lang.Double[] {}; java.lang.Double[] doubleArray2 = new java.lang.Double[] {}; java.lang.Double[] doubleArray3 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray4 = new java.lang.Double[][] { doubleArray0, doubleArray1, doubleArray2, doubleArray3 }; java.lang.Double[] doubleArray5 = new java.lang.Double[] {}; java.lang.Double[] doubleArray6 = new java.lang.Double[] {}; java.lang.Double[] doubleArray7 = new java.lang.Double[] {}; java.lang.Double[] doubleArray8 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray9 = new java.lang.Double[][] { doubleArray5, doubleArray6, doubleArray7, doubleArray8 }; java.lang.Double[] doubleArray10 = new java.lang.Double[] {}; java.lang.Double[] doubleArray11 = new java.lang.Double[] {}; java.lang.Double[] doubleArray12 = new java.lang.Double[] {}; java.lang.Double[] doubleArray13 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray14 = new java.lang.Double[][] { doubleArray10, doubleArray11, doubleArray12, doubleArray13 }; java.lang.Double[] doubleArray15 = new java.lang.Double[] {}; java.lang.Double[] doubleArray16 = new java.lang.Double[] {}; java.lang.Double[] doubleArray17 = new java.lang.Double[] {}; java.lang.Double[] doubleArray18 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray19 = new java.lang.Double[][] { doubleArray15, doubleArray16, doubleArray17, doubleArray18 }; java.lang.Double[] doubleArray20 = new java.lang.Double[] {}; java.lang.Double[] doubleArray21 = new java.lang.Double[] {}; java.lang.Double[] doubleArray22 = new java.lang.Double[] {}; java.lang.Double[] doubleArray23 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray24 = new java.lang.Double[][] { doubleArray20, doubleArray21, doubleArray22, doubleArray23 }; java.lang.Double[] doubleArray25 = new java.lang.Double[] {}; java.lang.Double[] doubleArray26 = new java.lang.Double[] {}; java.lang.Double[] doubleArray27 = new java.lang.Double[] {}; java.lang.Double[] doubleArray28 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray29 = new java.lang.Double[][] { doubleArray25, doubleArray26, doubleArray27, doubleArray28 }; java.lang.Double[][][] doubleArray30 = new java.lang.Double[][][] { doubleArray4, doubleArray9, doubleArray14, doubleArray19, doubleArray24, doubleArray29 }; java.lang.Double[] doubleArray33 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray36 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray39 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray42 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray43 = new java.lang.Double[][] { doubleArray33, doubleArray36, doubleArray39, doubleArray42 }; double[] doubleArray47 = new double[] { 'a', 10.0d, (byte) 0 }; int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) '.', (double) 10); java.lang.String str52 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray47, "java.lang"); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, 0.0d, (int) (short) 100); double[] doubleArray59 = new double[] { 'a', 10.0d, (byte) 0 }; int int62 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray59, (double) '.', (double) 10); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray47, doubleArray59); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray47, (int) (byte) 0); java.lang.Double[][] doubleArray66 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray43, (java.lang.Object) doubleArray47); java.lang.Double[][][] doubleArray67 = org.apache.commons.lang3.ArrayUtils.add(doubleArray30, doubleArray66); java.lang.Double[][][] doubleArray68 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray30); java.lang.Double[][][] doubleArray69 = org.apache.commons.lang3.ArrayUtils.toArray(doubleArray30); int int70 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray30); org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, ""); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1)); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertTrue("'" + int70 + "' != '" + 6 + "'", int70 == 6); }
public void test0674() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0674"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray11 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 10); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray13); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 0); java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); java.lang.Byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray18); double[] doubleArray22 = new double[] { 10L, 0 }; double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, 0, (int) 'a'); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) (-1L), 10); int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray22); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, (double) 10); java.lang.String str37 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray22, "hi!"); double[] doubleArray40 = new double[] { 10L, 0 }; double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray40, 0, (int) 'a'); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray22, doubleArray40); double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray22); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray45, 0, (double) (byte) 10); double[] doubleArray51 = new double[] { 10L, 0 }; double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, 0, (int) 'a'); int int57 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) (-1L), 10); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray51, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray51); int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray51, (double) 10); java.lang.String str66 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray51, "hi!"); double[] doubleArray69 = new double[] { 10L, 0 }; double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray69, 0, (int) 'a'); boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray51, doubleArray69); double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray51); double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.add(doubleArray74, 0, (double) (byte) 10); double[] doubleArray78 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray48, doubleArray77); int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray48, (double) (short) 1); java.lang.Double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray48); boolean boolean82 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray48); double[] doubleArray83 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray48); double[] doubleArray84 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray83); boolean boolean85 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray19, (java.lang.Object) doubleArray83); java.lang.Object obj86 = null; int int87 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray19, obj86); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertEquals("'" + str37 + "' != '" + "double[]" + "'", str37, "double[]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1)); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0); org.junit.Assert.assertEquals("'" + str66 + "' != '" + "double[]" + "'", str66, "double[]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1)); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false); org.junit.Assert.assertNotNull(doubleArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false); org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1)); }
public void test0675() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0675"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray21 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; java.lang.Class[] classArray24 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray25 = (java.lang.Class<?>[]) classArray24; boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray21, wildcardClassArray25, false); java.lang.Class[] classArray29 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29; java.lang.Class[] classArray32 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray33, false); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray25, wildcardClassArray33); boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray19, wildcardClassArray25); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray25); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray25); // The following exception was thrown during execution in test generation try { java.lang.reflect.AnnotatedElement[] annotatedElementArray41 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.reflect.AnnotatedElement[]) wildcardClassArray25, (int) '.'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 46, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(classArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); org.junit.Assert.assertNotNull(classArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); }
public void test0676() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0676"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, 0.0d, (int) '#', (double) (byte) -1); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0, 10.0, 97.0, 10.0, 0.0]"); }
public void test0677() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0677"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray61); int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray62, (double) (short) -1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); }
public void test0678() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0678"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray3 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2 }; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] { intArray4, intArray5, intArray6 }; java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray11 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10 }; java.lang.Integer[][][][] intArray12 = new java.lang.Integer[][][][] { intArray3, intArray7, intArray11 }; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray14 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray15 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray16 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray17 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray18 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray19 = new java.lang.Integer[][][] { intArray13, intArray14, intArray15, intArray16, intArray17, intArray18 }; java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray48 = new java.lang.Integer[][] { intArray26, intArray33, intArray40, intArray47 }; java.lang.Integer[][] intArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray48, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray19, intArray48); java.lang.Integer[][][][] intArray52 = org.apache.commons.lang3.ArrayUtils.add(intArray12, intArray19); double[] doubleArray55 = new double[] { 10L, 0 }; double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, 0, (int) 'a'); int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (-1L), 10); int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray55); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) 10); java.lang.String str70 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray55, "hi!"); double[] doubleArray73 = new double[] { 10L, 0 }; double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray73, 0, (int) 'a'); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray55, doubleArray73); int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray19, (java.lang.Object) doubleArray55, 4); double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, (int) (byte) 1, (-1)); int int85 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray82, (-1.0d), (double) (byte) 0); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0); org.junit.Assert.assertEquals("'" + str70 + "' != '" + "double[]" + "'", str70, "double[]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true); org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1)); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]"); org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1)); }
public void test0679() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0679"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Class"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Class" + "'", str1, "Class"); }
public void test0680() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0680"); short[] shortArray2 = new short[] { (short) 1, (short) 10 }; short[] shortArray6 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray2, shortArray6); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray6, (short) 0); short[] shortArray12 = new short[] { (short) 1, (short) 10 }; short[] shortArray16 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray16); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray16); short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, (int) '.', (int) (byte) 0); short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray9, shortArray21); java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray22); short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23, (short) -1); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); java.lang.Class[] classArray36 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray37 = (java.lang.Class<?>[]) classArray36; java.lang.Class[] classArray39 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray36, wildcardClassArray40, false); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray32, wildcardClassArray40); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray32); double[] doubleArray47 = new double[] { 10L, 0 }; double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, 0, (int) 'a'); int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) 'a', 0, (double) 0L); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) 100L); int int58 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray44, (java.lang.Object) doubleArray47, (int) '.'); java.lang.Object obj59 = null; int int60 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray44, obj59); java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray44); java.lang.String str63 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray44, "Boolean"); java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray44); boolean boolean65 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) shortArray23, (java.lang.Object) wildcardClassArray44); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[-1, 1, 0, 0]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[-1, 1, 0, 0]"); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[-1, 1, 0, 0]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[-1, 1, 0, 0]"); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(classArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1)); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1)); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}"); org.junit.Assert.assertNotNull(objMap64); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false); }
public void test0681() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0681"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "-1", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: -1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0682() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0682"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 10, (double) 1.0f); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, 0.0d, (int) (short) 1, (double) 'a'); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) ' ', 10); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 4); double[] doubleArray47 = new double[] { 'a', 10.0d, (byte) 0 }; int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) '.', (double) 10); java.lang.String str52 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray47, "java.lang"); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, 0.0d, (int) (short) 100); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, (int) (byte) 10, 5); double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray47); double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray31, doubleArray47); int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 0L, (int) (short) -1, (double) (short) -1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, ""); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); }
public void test0683() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0683"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) 1L); java.lang.Class[] classArray39 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; java.lang.Class[] classArray42 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray39, wildcardClassArray43, false); java.lang.Class[] classArray47 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47; java.lang.Class[] classArray50 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50; boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray47, wildcardClassArray51, false); boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray51); java.lang.Class<?>[] wildcardClassArray55 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43); double[] doubleArray58 = new double[] { 10L, 0 }; double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray58, 0, (int) 'a'); int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, (double) 'a', 0, (double) 0L); boolean boolean67 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray58, (double) 100L); int int69 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray55, (java.lang.Object) doubleArray58, (int) '.'); int int73 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray58, (double) (short) 10, (int) '#', 0.0d); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray58); boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray58); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[97.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertNotNull(classArray47); org.junit.Assert.assertNotNull(wildcardClassArray48); org.junit.Assert.assertNotNull(classArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true); org.junit.Assert.assertNotNull(wildcardClassArray55); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1)); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false); org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1)); org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0); org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false); }
public void test0684() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0684"); byte[] byteArray5 = new byte[] { (byte) -1, (byte) 1, (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray5, (byte) 100); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.remove(byteArray7, 0); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray7, "String"); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.add(byteArray7, (byte) 1); java.lang.Object[] objArray18 = new java.lang.Object[] { (short) -1, 0.0d, ' ', (short) -1 }; java.lang.Object[] objArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(objArray18); byte[] byteArray24 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 10); byte[] byteArray31 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray31, (byte) 10); byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray26, byteArray33); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray18, (java.lang.Object) byteArray34); byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.remove(byteArray34, 1); byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray37, 4, 100); java.lang.Byte[] byteArray44 = new java.lang.Byte[] { (byte) 0, (byte) 1, (byte) 10 }; byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44, (byte) 0); byte[] byteArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray44, (byte) 10); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray48); byte[] byteArray50 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray40, byteArray48); java.lang.String str52 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray50, "java.lang"); byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray13, byteArray50); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, 1, 10, 0, 10]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 1, 10, 0, 10]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1, 10, 0, 10]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, 1, 10, 0, 10, 1]"); org.junit.Assert.assertNotNull(objArray18); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(objArray19); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertNotNull(byteArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray44); org.junit.Assert.assertNotNull(byteArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 1, 10]"); org.junit.Assert.assertNotNull(byteArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[0, 1, 10]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(byteArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, 0, 0, 0, 1, 10]"); org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, ""); org.junit.Assert.assertNotNull(byteArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, 1, 10, 0, 10, 1, -1, 0, 0, 0, 1, 10]"); }
public void test0685() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0685"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray1); java.lang.Class<?>[] wildcardClassArray9 = null; boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray9); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); }
public void test0686() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0686"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Long"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Long" + "'", str1, "Long"); }
public void test0687() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0687"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 10); short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 0); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) -1); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray10, "Boolean"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[10, 0]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, ""); }
public void test0688() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0688"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false); boolean[] booleanArray15 = new boolean[] { false, false, false }; boolean[] booleanArray17 = new boolean[] { true }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray15, ""); java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray15); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray15); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray15, 6, 10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean[]" + "'", str20, "boolean[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{false,false,false}" + "'", str21, "{false,false,false}"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]"); }
public void test0689() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0689"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray28, (double) (-1)); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 0.0]"); }
public void test0690() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0690"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray15); char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, 'a'); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' '); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[]"); }
public void test0691() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0691"); java.lang.Character[] charArray5 = new java.lang.Character[] { '.', '#', '.', ' ', '#' }; java.lang.Character[] charArray11 = new java.lang.Character[] { '.', '#', '.', ' ', '#' }; java.lang.Character[][] charArray12 = new java.lang.Character[][] { charArray5, charArray11 }; java.lang.Character[][] charArray13 = org.apache.commons.lang3.ArrayUtils.toArray(charArray12); double[] doubleArray17 = new double[] { 'a', 10.0d, (byte) 0 }; int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) '.', (double) 10); java.lang.String str22 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray17, "java.lang"); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, 0.0d, (int) (short) 100); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray17, 3, (int) 'a'); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray17, (int) '4', (int) (byte) 10); int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray13, (java.lang.Object) doubleArray17, (int) (byte) 100); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray12); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, ""); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); }
public void test0692() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0692"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray21 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; java.lang.Class[] classArray24 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray25 = (java.lang.Class<?>[]) classArray24; boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray21, wildcardClassArray25, false); java.lang.Class[] classArray29 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29; java.lang.Class[] classArray32 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray33, false); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray25, wildcardClassArray33); boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray19, wildcardClassArray25); short[] shortArray44 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray51 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray58 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray65 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[][] shortArray66 = new short[][] { shortArray44, shortArray51, shortArray58, shortArray65 }; short[] shortArray67 = new short[] {}; short[] shortArray68 = new short[] {}; short[] shortArray69 = new short[] {}; short[][] shortArray70 = new short[][] { shortArray67, shortArray68, shortArray69 }; short[][] shortArray71 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray66, shortArray70); java.lang.Class<?>[] wildcardClassArray72 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray66); boolean boolean73 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray19, wildcardClassArray72); java.lang.Class<?>[] wildcardClassArray74 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray19); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(classArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); org.junit.Assert.assertNotNull(classArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(shortArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray44), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray58), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray65), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray66); org.junit.Assert.assertNotNull(shortArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[]"); org.junit.Assert.assertNotNull(shortArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[]"); org.junit.Assert.assertNotNull(shortArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[]"); org.junit.Assert.assertNotNull(shortArray70); org.junit.Assert.assertNotNull(shortArray71); org.junit.Assert.assertNotNull(wildcardClassArray72); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertNotNull(wildcardClassArray74); }
public void test0693() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0693"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray28 = new java.lang.Integer[][] { intArray6, intArray13, intArray20, intArray27 }; java.lang.Integer[][] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray28, (java.lang.Object) (-1L)); java.lang.Integer[][] intArray31 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray32 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray33 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray34 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray35 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray36 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray37 = new java.lang.Integer[][][] { intArray31, intArray32, intArray33, intArray34, intArray35, intArray36 }; java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray66 = new java.lang.Integer[][] { intArray44, intArray51, intArray58, intArray65 }; java.lang.Integer[][] intArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray66, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray69 = org.apache.commons.lang3.ArrayUtils.add(intArray37, intArray66); java.lang.Long[] longArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; java.lang.Long[] longArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray70); boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray66, (java.lang.Object) longArray71); java.lang.Integer[][] intArray73 = org.apache.commons.lang3.ArrayUtils.addAll(intArray30, intArray66); java.lang.Class<?>[] wildcardClassArray74 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray73); java.lang.Class<?>[] wildcardClassArray75 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray74); java.lang.Object[] objArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray74); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertNotNull(intArray69); org.junit.Assert.assertNotNull(longArray70); org.junit.Assert.assertNotNull(longArray71); org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertNotNull(wildcardClassArray74); org.junit.Assert.assertNotNull(wildcardClassArray75); org.junit.Assert.assertNotNull(objArray76); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;, class [Ljava.lang.Integer;]"); }
public void test0694() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0694"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray3 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2 }; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] { intArray4, intArray5, intArray6 }; java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray11 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10 }; java.lang.Integer[][][][] intArray12 = new java.lang.Integer[][][][] { intArray3, intArray7, intArray11 }; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray14 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray15 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray16 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray17 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray18 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray19 = new java.lang.Integer[][][] { intArray13, intArray14, intArray15, intArray16, intArray17, intArray18 }; java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray48 = new java.lang.Integer[][] { intArray26, intArray33, intArray40, intArray47 }; java.lang.Integer[][] intArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray48, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray19, intArray48); java.lang.Integer[][][][] intArray52 = org.apache.commons.lang3.ArrayUtils.add(intArray12, intArray19); double[] doubleArray55 = new double[] { 10L, 0 }; double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, 0, (int) 'a'); int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (-1L), 10); int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray55); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) 10); java.lang.String str70 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray55, "hi!"); double[] doubleArray73 = new double[] { 10L, 0 }; double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray73, 0, (int) 'a'); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray55, doubleArray73); int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray19, (java.lang.Object) doubleArray55, 4); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray55); double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray55, (double) 10L); double[] doubleArray85 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, (int) (short) 0, (double) 10L); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0); org.junit.Assert.assertEquals("'" + str70 + "' != '" + "double[]" + "'", str70, "double[]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true); org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1)); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[10.0, 10.0, 0.0]"); }
public void test0695() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0695"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray6, (java.lang.Object[]) byteArray10); int[] intArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (short) 100); int[] intArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) 'a'); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray6); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray16); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); }
public void test0696() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0696"); float[] floatArray0 = new float[] {}; float[] floatArray3 = new float[] { (-1.0f), '#' }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray0, floatArray3); boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray3); int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray3, (float) 1L, (int) '.'); float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) '.'); org.apache.commons.lang3.ArrayUtils.reverse(floatArray10); java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray10); java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12); double[] doubleArray16 = new double[] { 10L, 0 }; double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray16, 0, (int) 'a'); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) (-1L), 10); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray16); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) 10); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray16, "hi!"); double[] doubleArray34 = new double[] { 10L, 0 }; double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, 0, (int) 'a'); boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray34); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray16); double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, 0, (double) (byte) 10); double[] doubleArray45 = new double[] { 10L, 0 }; double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, 0, (int) 'a'); int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray45, (double) (-1L), 10); int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray45, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray45); int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray45, (double) 10); java.lang.String str60 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray45, "hi!"); double[] doubleArray63 = new double[] { 10L, 0 }; double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray63, 0, (int) 'a'); boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray45, doubleArray63); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray45); double[] doubleArray71 = org.apache.commons.lang3.ArrayUtils.add(doubleArray68, 0, (double) (byte) 10); double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray42, doubleArray71); int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (short) 1); java.lang.Double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray42); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray42); double[] doubleArray77 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray12, (java.lang.Object) doubleArray77, (int) (short) 10); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[35.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "double[]" + "'", str31, "double[]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0); org.junit.Assert.assertEquals("'" + str60 + "' != '" + "double[]" + "'", str60, "double[]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1)); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1)); }
public void test0697() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0697"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray3, '4', 0); java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.toObject(charArray3); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray7); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray10 = null; boolean boolean11 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray8, wildcardClassArray10); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{class java.lang.Character,class java.lang.Character}" + "'", str9, "{class java.lang.Character,class java.lang.Character}"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); }
public void test0698() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0698"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Class[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Class[]" + "'", str1, "Class[]"); }
public void test0699() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0699"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray11 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 10); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray13); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 0); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray6, (byte) -1); java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray19); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray20); java.lang.String str22 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) byteArray20); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{-1,0,0}" + "'", str22, "{-1,0,0}"); }
public void test0700() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0700"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, 0, (double) (byte) 10); double[] doubleArray42 = new double[] { 10L, 0 }; double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, 0, (int) 'a'); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (-1L), 10); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray42); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 10); java.lang.String str57 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray42, "hi!"); double[] doubleArray60 = new double[] { 10L, 0 }; double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, 0, (int) 'a'); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray42, doubleArray60); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, 0, (double) (byte) 10); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray68); int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (short) 1); java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39); boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray39); double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39); double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray74); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray10, doubleArray74); int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray10, (double) 10, 9); boolean boolean81 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray10, (double) (byte) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertEquals("'" + str57 + "' != '" + "double[]" + "'", str57, "double[]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true); }
public void test0701() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0701"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = null; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray22, true); boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray22); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(wildcardClassArray26); }
public void test0702() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0702"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = new char[] { 'a', '4' }; char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, '4', 0); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, '#', 4); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray11, 'a'); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray19); org.apache.commons.lang3.ArrayUtils.reverse(charArray20); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray20, "hi!"); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.contains(charArray20, ' '); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray20); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray20, '.', 2); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); }
public void test0703() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0703"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean[] booleanArray16 = new boolean[] { false, false, false }; boolean[] booleanArray18 = new boolean[] { true }; boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, true, (int) (short) -1); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, false); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray24, false, 2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray24); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray24, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false, false, false]"); }
public void test0704() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0704"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray24); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[97.0, 10.0, 0.0]"); }
public void test0705() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0705"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (short) -1, (int) (short) 10, (double) 4); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray14, (double) 11); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); }
public void test0706() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0706"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0]"); }
public void test0707() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0707"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0708() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0708"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("java.util"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: java.util"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0709() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0709"); java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray0); java.lang.Class<?>[] wildcardClassArray2 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray1); java.util.Map<java.lang.Object, java.lang.Object> objMap3 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray2); java.lang.Class<?> wildcardClass4 = wildcardClassArray2.getClass(); org.junit.Assert.assertNotNull(longArray0); org.junit.Assert.assertNotNull(wildcardClassArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(objMap3); org.junit.Assert.assertNotNull(wildcardClass4); }
public void test0710() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0710"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); int[] intArray14 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray14, 3, 100); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray14); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) (byte) 100); int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) ' ', 1); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray18); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray18, "-1"); int[] intArray27 = org.apache.commons.lang3.ArrayUtils.clone(intArray18); org.apache.commons.lang3.ArrayUtils.reverse(intArray27); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray27); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 0, 0, 32]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); }
public void test0711() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0711"); java.lang.Character[] charArray1 = new java.lang.Character[] { '#' }; char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1); char[] charArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray1); java.lang.Character[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray1); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) charArray5, ""); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "#"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "#"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[#]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "#"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "#"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[#]"); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "#"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "#"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[#]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, ""); }
public void test0712() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0712"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (-1.0d)); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray17, (double) '.'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); }
public void test0713() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0713"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean[] booleanArray16 = new boolean[] { false, false, false }; boolean[] booleanArray18 = new boolean[] { true }; boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, true, (int) (short) -1); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, false); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray24, false, 2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray24); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray24, false); int int31 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) booleanArray24); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4); }
public void test0714() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0714"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) (short) 10); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (short) 100, (double) (short) -1); java.lang.Double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray25); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) 4, (int) (short) 1, (double) (short) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); }
public void test0715() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0715"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9, (double) (-1.0f)); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9); double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); java.lang.Double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray33); java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray33); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray35); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray12, doubleArray36); int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) ' ', (int) (short) 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); }
public void test0716() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0716"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); }
public void test0717() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0717"); java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray0); java.lang.Class<?> wildcardClass4 = org.apache.commons.lang3.ClassUtils.getClass("double[]"); int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray0, (java.lang.Object) wildcardClass4); java.lang.Object[] objArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray0); byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0, (byte) 0); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertNotNull(wildcardClass4); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(objArray6); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]"); }
public void test0718() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0718"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) ' ', (int) (byte) 0, (double) 10L); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, (double) 100, 4, (double) (byte) 10); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) 1L); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray9, 0.0d, (double) 100.0f); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); }
public void test0719() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0719"); float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY; float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray0, 0.0f); java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) 10L); float[] floatArray6 = new float[] {}; float[] floatArray9 = new float[] { (-1.0f), '#' }; boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray9); float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray6, (int) ' ', 4); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray13); float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray5); float[] floatArray16 = new float[] {}; float[] floatArray19 = new float[] { (-1.0f), '#' }; boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray16, floatArray19); float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray19, 3, 0); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray19, (float) 3); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(floatArray19, (float) (byte) 0); float[] floatArray28 = org.apache.commons.lang3.ArrayUtils.clone(floatArray19); float[] floatArray29 = new float[] {}; float[] floatArray32 = new float[] { (-1.0f), '#' }; boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray29, floatArray32); float[] floatArray34 = new float[] {}; float[] floatArray37 = new float[] { (-1.0f), '#' }; boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray34, floatArray37); float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray37, 3, 0); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray32, floatArray37); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray19, floatArray32); float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray2, floatArray19); float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2); float[] floatArray46 = org.apache.commons.lang3.ArrayUtils.clone(floatArray2); float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.add(floatArray46, 10.0f); java.lang.String str50 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) 10.0f, ",Class[],{false,false,false}},{java,"); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]"); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]"); org.junit.Assert.assertNotNull(floatArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[]"); org.junit.Assert.assertNotNull(floatArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray19), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(floatArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(floatArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[-1.0, 35.0]"); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[]"); org.junit.Assert.assertNotNull(floatArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertNotNull(floatArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[]"); org.junit.Assert.assertNotNull(floatArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertNotNull(floatArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[]"); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(floatArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[-1.0, 35.0]"); org.junit.Assert.assertNotNull(floatArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[]"); org.junit.Assert.assertNotNull(floatArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[]"); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[10.0]"); org.junit.Assert.assertEquals("'" + str50 + "' != '" + "java.lang" + "'", str50, "java.lang"); }
public void test0720() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0720"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); java.lang.Double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray61); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.add(doubleArray61, (double) (short) 100); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0, 100.0]"); }
public void test0721() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0721"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray13 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, '4'); char[] charArray18 = new char[] { 'a', '4' }; char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '4', 0); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '#', 4); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray27); org.apache.commons.lang3.ArrayUtils.reverse(charArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray28, "hi!"); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray28); char[] charArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray32, ' '); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, , a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertNotNull(charArray34); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), "a4a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), "a4a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[a, 4, a, 4, a, , #, #, 4, 4]"); }
public void test0722() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0722"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) (short) -1, 1); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, 0.0d, (int) (short) 0); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0]"); }
public void test0723() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0723"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray19); short[] shortArray23 = new short[] { (short) 1, (short) 10 }; short[] shortArray27 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray23, shortArray27); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray27); org.apache.commons.lang3.ArrayUtils.reverse(shortArray27); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray20, (java.lang.Object) shortArray27); java.lang.Class<?>[] wildcardClassArray32 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20); java.lang.Class[] classArray34 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34; java.lang.Class[] classArray37 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray34, wildcardClassArray38, false); java.lang.Class[] classArray42 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; java.lang.Class[] classArray45 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45; boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray42, wildcardClassArray46, false); boolean boolean49 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray38, wildcardClassArray46); java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray38); java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); java.lang.Class<?>[] wildcardClassArray52 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray38); java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray32, wildcardClassArray53, false); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 1, -1]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertNotNull(classArray34); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(classArray45); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); }
public void test0724() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0724"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray0); org.junit.Assert.assertNull(wildcardClassArray1); }
public void test0725() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0725"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20, 10.0d); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20, (double) (-1)); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); }
public void test0726() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0726"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("double[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double[]" + "'", str1, "double[]"); }
public void test0727() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0727"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); java.lang.Object obj32 = null; int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray17, obj32); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); java.lang.String str36 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray17, "Boolean"); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}"); org.junit.Assert.assertNotNull(wildcardClassArray37); }
public void test0728() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0728"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Class<?>[] wildcardClassArray4 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray2); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(wildcardClassArray4); }
public void test0729() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0729"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray11 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 10); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray13); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 0); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.clone(byteArray6); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray6, (byte) -1); java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray19); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray20); java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray22, (long) (byte) 10); org.apache.commons.lang3.ArrayUtils.reverse(longArray24); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray24, (java.lang.Object) 'a'); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.clone(longArray24); long[] longArray29 = org.apache.commons.lang3.ArrayUtils.clone(longArray24); long[] longArray30 = org.apache.commons.lang3.ArrayUtils.clone(longArray29); java.lang.Long[] longArray31 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray31, (long) (byte) 10); boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray33); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray29, longArray33); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray29, (long) 10); long[] longArray44 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray46 = org.apache.commons.lang3.ArrayUtils.add(longArray44, 0L); long[] longArray47 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray46); java.lang.Long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toObject(longArray47); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) wildcardClassArray21, (java.lang.Object) longArray48); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]"); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[]"); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[]"); org.junit.Assert.assertNotNull(longArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray46), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray48); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false); }
public void test0730() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0730"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); }
public void test0731() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0731"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray3 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2 }; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] { intArray4, intArray5, intArray6 }; java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray11 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10 }; java.lang.Integer[][][][] intArray12 = new java.lang.Integer[][][][] { intArray3, intArray7, intArray11 }; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray14 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray15 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray16 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray17 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray18 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray19 = new java.lang.Integer[][][] { intArray13, intArray14, intArray15, intArray16, intArray17, intArray18 }; java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray48 = new java.lang.Integer[][] { intArray26, intArray33, intArray40, intArray47 }; java.lang.Integer[][] intArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray48, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray19, intArray48); java.lang.Integer[][][][] intArray52 = org.apache.commons.lang3.ArrayUtils.add(intArray12, intArray19); double[] doubleArray55 = new double[] { 10L, 0 }; double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, 0, (int) 'a'); int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) (-1L), 10); int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray55, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray55); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) 10); java.lang.String str70 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray55, "hi!"); double[] doubleArray73 = new double[] { 10L, 0 }; double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray73, 0, (int) 'a'); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray55, doubleArray73); int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray19, (java.lang.Object) doubleArray55, 4); double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray55, (int) (byte) 1, (-1)); boolean boolean83 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray55); int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray55, (double) 10L, 6, 0.0d); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0); org.junit.Assert.assertEquals("'" + str70 + "' != '" + "double[]" + "'", str70, "double[]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true); org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1)); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[]"); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true); org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1)); }
public void test0732() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0732"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean[] booleanArray16 = new boolean[] { false, false, false }; boolean[] booleanArray18 = new boolean[] { true }; boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, true, (int) (short) -1); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, false); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray24, false, 2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray24); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray24, false); boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray30, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, false]"); }
public void test0733() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0733"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28); double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) '4', (int) '.'); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.add(doubleArray67, (double) 6); double[] doubleArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray69); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[6.0]"); org.junit.Assert.assertNotNull(doubleArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[6.0]"); }
public void test0734() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0734"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.ArrayList[] arrayListArray23 = new java.util.ArrayList[1]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray24 = (java.util.ArrayList<java.lang.String>[]) arrayListArray23; strListArray24[0] = strList19; java.util.ArrayList<java.lang.String>[] strListArray29 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray24, 6, (int) '#'); java.lang.String[] strArray48 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>(); boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48); java.util.List<java.lang.Class<?>> wildcardClassList51 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList49); java.util.List<java.lang.Class<?>> wildcardClassList52 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList49); java.util.List<java.lang.Class<?>> wildcardClassList53 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList49); java.util.AbstractCollection<java.lang.String>[] strCollectionArray54 = org.apache.commons.lang3.ArrayUtils.add((java.util.AbstractCollection<java.lang.String>[]) strListArray24, (java.util.AbstractCollection<java.lang.String>) strList49); java.util.List<java.lang.Class<?>> wildcardClassList55 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList49); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(arrayListArray23); org.junit.Assert.assertNotNull(strListArray24); org.junit.Assert.assertNotNull(strListArray29); org.junit.Assert.assertNotNull(strArray48); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true); org.junit.Assert.assertNotNull(wildcardClassList51); org.junit.Assert.assertNotNull(wildcardClassList52); org.junit.Assert.assertNotNull(wildcardClassList53); org.junit.Assert.assertNotNull(strCollectionArray54); org.junit.Assert.assertNotNull(wildcardClassList55); }
public void test0735() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0735"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray3, (double) 4); // The following exception was thrown during execution in test generation try { double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) '#'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[97.0, 10.0, 0.0]"); }
public void test0736() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0736"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray22, 0.0d, (double) (short) 10); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1); }
public void test0737() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0737"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray2, 'a'); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray2); char[] charArray11 = new char[] { 'a', '4' }; char[] charArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11); char[] charArray15 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, 5, (int) (byte) 100); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray11); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) charArray2, "Float"); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4]"); org.junit.Assert.assertNotNull(charArray12); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray12), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray12), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray12), "[a, 4]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, ""); }
public void test0738() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0738"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = new char[] { 'a', '4' }; char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, '4', 0); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, '#', 4); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray11, 'a'); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray19); char[] charArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20); char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray20); char[] charArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray22); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) charArray23, "java.lang"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44## a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44## a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4, #, #, , a, 4, a]"); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "44## a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "44## a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, 4, #, #, , a, 4, a]"); org.junit.Assert.assertNotNull(charArray22); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "44## a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "44## a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[4, 4, #, #, , a, 4, a]"); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "44## a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "44## a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[4, 4, #, #, , a, 4, a]"); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "char[]" + "'", str25, "char[]"); }
public void test0739() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0739"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray15); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); }
public void test0740() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0740"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (byte) 10, (double) 0L); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, (int) (byte) 1, (int) (byte) 10); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, (double) '4'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0, 52.0]"); }
public void test0741() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0741"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray27 = new double[] { 10L, 0 }; double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, 0, (int) 'a'); int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) (-1L), 10); int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray27); int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray27, "hi!"); double[] doubleArray45 = new double[] { 10L, 0 }; double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, 0, (int) 'a'); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray45); double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27); double[] doubleArray53 = new double[] { 10L, 0 }; double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray53, 0, (int) 'a'); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray53, (double) (-1L), 10); int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray53, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray53); int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray53, (double) 10); int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray53, (double) 3, 0, 0.0d); boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray50, doubleArray53); boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray53); int int74 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) (byte) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "double[]" + "'", str42, "double[]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false); org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1)); org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true); org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true); org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0); }
public void test0742() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0742"); double[] doubleArray0 = null; double[] doubleArray4 = new double[] { 'a', 10.0d, (byte) 0 }; int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) '.', (double) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray4, "java.lang"); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, 0.0d, (int) (short) 100); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, (int) (byte) 10, 5); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray15); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (-1.0d)); java.lang.Double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY; double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray19); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray19, (double) 100L); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray19, (double) 1L); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray24); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray18); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0]"); }
public void test0743() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0743"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{java,.,Class[],{false,false,false}},{java," + "'", str1, "{{java,.,Class[],{false,false,false}},{java,"); }
public void test0744() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0744"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray13 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, '4'); char[] charArray18 = new char[] { 'a', '4' }; char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '4', 0); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '#', 4); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray27); org.apache.commons.lang3.ArrayUtils.reverse(charArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray28, "hi!"); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray28); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray28, '#', (int) (byte) -1); char[] charArray37 = org.apache.commons.lang3.ArrayUtils.remove(charArray28, 0); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, , a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4); org.junit.Assert.assertNotNull(charArray37); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray37), "4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray37), "4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray37), "[4, a, , #, #, 4, 4]"); }
public void test0745() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0745"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Integer[][] intArray21 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray22 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray23 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray24 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray25 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray26 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray27 = new java.lang.Integer[][][] { intArray21, intArray22, intArray23, intArray24, intArray25, intArray26 }; java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray48 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray56 = new java.lang.Integer[][] { intArray34, intArray41, intArray48, intArray55 }; java.lang.Integer[][] intArray58 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray56, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray59 = org.apache.commons.lang3.ArrayUtils.add(intArray27, intArray56); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray59); long[] longArray64 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(longArray64, (long) 'a'); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray64, (long) '4'); int int69 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray60, (java.lang.Object) '4'); java.lang.Class<?>[] wildcardClassArray70 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray60); boolean boolean72 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray20, wildcardClassArray70, true); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(longArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray70); org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false); }
public void test0746() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0746"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray11 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 10); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray13); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray13, "class [Z"); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, ""); }
public void test0747() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0747"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (short) 10); java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; java.lang.Class[] classArray15 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray16 = (java.lang.Class<?>[]) classArray15; boolean boolean18 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray16, false); java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; java.lang.Class[] classArray23 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, wildcardClassArray24, false); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray24, wildcardClassArray32); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class[] classArray40 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray41 = (java.lang.Class<?>[]) classArray40; java.lang.Class[] classArray43 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43; boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray40, wildcardClassArray44, false); java.lang.Class[] classArray48 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray49 = (java.lang.Class<?>[]) classArray48; java.lang.Class[] classArray51 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray48, wildcardClassArray52, false); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray44, wildcardClassArray52); boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray38, wildcardClassArray44); java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray44); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray12, wildcardClassArray44); java.lang.Integer[] intArray65 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray65, (int) (byte) 100); int[] intArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray65); int[] intArray71 = org.apache.commons.lang3.ArrayUtils.add(intArray68, 3, (int) (byte) -1); int[] intArray72 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray68); int[] intArray74 = org.apache.commons.lang3.ArrayUtils.remove(intArray72, 5); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) classArray12, (java.lang.Object) intArray74, (int) (short) 0); int[] intArray77 = org.apache.commons.lang3.ArrayUtils.addAll(intArray10, intArray74); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(classArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(classArray40); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertNotNull(classArray43); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(classArray48); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertNotNull(intArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[4, -1, 10, -1, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[4, -1, 10, 0, -1]"); org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1)); org.junit.Assert.assertNotNull(intArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[4, -1, 10, 0, -1, 100, 4, -1, 10, 0, -1]"); }
public void test0748() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0748"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray28, (double) '#'); java.lang.Double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28); double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, (double) (byte) 100); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray38, 0.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); }
public void test0749() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0749"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Byte", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Byte"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0750() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0750"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Character"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Character"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0751() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0751"); long[] longArray3 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray3, (long) 'a'); int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) '4'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) (short) 0); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.subarray(longArray3, 4, (int) 'a'); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray12); org.apache.commons.lang3.ArrayUtils.reverse(longArray12); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray12); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray15, "true"); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray15, 0L); org.junit.Assert.assertNotNull(longArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, ""); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); }
public void test0752() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0752"); char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, ' '); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) ' ', (int) (short) 10); java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY; java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray8, "{32,0,0,100}"); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray8); java.lang.Character[] charArray12 = org.apache.commons.lang3.ArrayUtils.toObject(charArray8); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray12); char[] charArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray12, ' '); java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray12); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1)); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(charArray12); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[]"); org.junit.Assert.assertNotNull(charArray16); }
public void test0753() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0753"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Double"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Double"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0754() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0754"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; java.lang.Class[] classArray23 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, wildcardClassArray24, false); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray24, wildcardClassArray32); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray40, true); java.lang.Class[] classArray44 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44; java.lang.Class[] classArray47 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47; boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray44, wildcardClassArray48, false); java.lang.Class[] classArray52 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52; java.lang.Class[] classArray55 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55; boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray52, wildcardClassArray56, false); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray48, wildcardClassArray56); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray48); java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray48); java.lang.Class<?>[] wildcardClassArray62 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray61); java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray61); java.lang.Class<?>[] wildcardClassArray64 = null; java.lang.Class<?>[] wildcardClassArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray64, wildcardClassArray65, true); boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray61, wildcardClassArray65); boolean boolean70 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray65, true); boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.reflect.GenericDeclaration[]) wildcardClassArray65); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertNotNull(classArray44); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(classArray47); org.junit.Assert.assertNotNull(wildcardClassArray48); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true); org.junit.Assert.assertNotNull(classArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(classArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertNotNull(wildcardClassArray63); org.junit.Assert.assertNotNull(wildcardClassArray65); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true); org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true); org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true); }
public void test0755() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0755"); int[] intArray2 = new int[] { (byte) 0, 10 }; int[] intArray5 = org.apache.commons.lang3.ArrayUtils.subarray(intArray2, (int) ' ', (int) '#'); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.subarray(intArray2, (int) (short) 0, 0); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8); int[] intArray12 = new int[] { (byte) 0, 10 }; int[] intArray15 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, (int) ' ', (int) '#'); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, (int) (short) 0, 0); int[] intArray19 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray18); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray19, "true"); java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) 0, (byte) 1, (byte) 10 }; byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25, (byte) 0); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) intArray19, (java.lang.Object) byteArray27); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 10]"); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 10]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 1, 10]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); }
public void test0756() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0756"); byte[] byteArray2 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(byteArray2, (byte) 0); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray2, (byte) 10); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray2); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.add(byteArray2, (byte) 0); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray2, (byte) 1); java.lang.Byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray11); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) -1); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray13); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 1, 0]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10]"); org.junit.Assert.assertNotNull(wildcardClassArray16); }
public void test0757() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0757"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 5, (double) (short) 0); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, 0, (double) 100.0f); double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.add(doubleArray31, (double) (byte) -1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 10.0, 0.0, -1.0]"); }
public void test0758() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0758"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (double) (-1)); double[] doubleArray14 = new double[] { 10L, 0 }; double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 0, (int) 'a'); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (-1L), 10); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray14); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, (int) (short) -1, (int) (short) 10); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray24, 1.0d); double[] doubleArray29 = new double[] { 10L, 0 }; double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) 'a'); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (-1L), 10); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray29); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) 10); java.lang.String str44 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray29, "hi!"); double[] doubleArray47 = new double[] { 10L, 0 }; double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, 0, (int) 'a'); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray29, doubleArray47); double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray29); boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray29, (double) 5, (double) (short) 0); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray29, 0, (double) 100.0f); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray26, doubleArray29); double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray26); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertEquals("'" + str44 + "' != '" + "double[]" + "'", str44, "double[]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[97.0, 10.0, 0.0, 10.0, 0.0]"); }
public void test0759() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0759"); int[] intArray2 = new int[] { (byte) 0, 10 }; int[] intArray5 = org.apache.commons.lang3.ArrayUtils.subarray(intArray2, (int) ' ', (int) '#'); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.subarray(intArray2, (int) (short) 0, 0); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray8); int[] intArray12 = new int[] { (byte) 0, 10 }; int[] intArray15 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, (int) ' ', (int) '#'); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, (int) (short) 0, 0); int[] intArray19 = org.apache.commons.lang3.ArrayUtils.addAll(intArray8, intArray18); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray19, "true"); int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray19); // The following exception was thrown during execution in test generation try { int[] intArray25 = org.apache.commons.lang3.ArrayUtils.add(intArray22, (int) (byte) 1, (int) '.'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 10]"); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 10]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[]"); }
public void test0760() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0760"); double[] doubleArray0 = null; double[] doubleArray4 = new double[] { 'a', 10.0d, (byte) 0 }; int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) '.', (double) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray4, "java.lang"); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, 0.0d, (int) (short) 100); double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray16); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray0, doubleArray4); java.lang.Float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, (float) 'a'); float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray22, 0.0f); java.lang.Float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray22); float[] floatArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray27, (float) 1L); float[] floatArray31 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray27, (float) (-1)); double[] doubleArray34 = new double[] { 10L, 0 }; double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, 0, (int) 'a'); int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, (double) (-1L), 10); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray34, 10, 3); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, 5, (int) (byte) -1); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray27, (java.lang.Object) doubleArray46, 5); double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray46); int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray49, (double) 0); int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray49, (-1.0d), (int) (byte) -1, (double) 10); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray0, doubleArray49); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); org.junit.Assert.assertNotNull(floatArray22); org.junit.Assert.assertNotNull(floatArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[]"); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[]"); org.junit.Assert.assertNotNull(floatArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); }
public void test0761() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0761"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = null; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray22, true); boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray26 = null; boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray22, wildcardClassArray26); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); }
public void test0762() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0762"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray15, (int) (byte) 1, 0); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) 0.0f, (int) (byte) -1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); }
public void test0763() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0763"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray28 = new java.lang.Integer[][] { intArray6, intArray13, intArray20, intArray27 }; java.lang.Integer[][] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray28, (java.lang.Object) (-1L)); java.lang.Integer[][] intArray31 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray32 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray33 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray34 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray35 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray36 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray37 = new java.lang.Integer[][][] { intArray31, intArray32, intArray33, intArray34, intArray35, intArray36 }; java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray66 = new java.lang.Integer[][] { intArray44, intArray51, intArray58, intArray65 }; java.lang.Integer[][] intArray68 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray66, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray69 = org.apache.commons.lang3.ArrayUtils.add(intArray37, intArray66); java.lang.Long[] longArray70 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; java.lang.Long[] longArray71 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray70); boolean boolean72 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) intArray66, (java.lang.Object) longArray71); java.lang.Integer[][] intArray73 = org.apache.commons.lang3.ArrayUtils.addAll(intArray30, intArray66); java.lang.Class<?>[] wildcardClassArray74 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray73); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) intArray73); byte[] byteArray78 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains(byteArray78, (byte) 0); byte[] byteArray82 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray78, (byte) 10); byte[] byteArray84 = org.apache.commons.lang3.ArrayUtils.add(byteArray82, (byte) 10); boolean boolean86 = org.apache.commons.lang3.ArrayUtils.contains(byteArray82, (byte) 0); int int88 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray73, (java.lang.Object) (byte) 0, 10); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertNotNull(intArray66); org.junit.Assert.assertNotNull(intArray68); org.junit.Assert.assertNotNull(intArray69); org.junit.Assert.assertNotNull(longArray70); org.junit.Assert.assertNotNull(longArray71); org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertNotNull(wildcardClassArray74); org.junit.Assert.assertNotNull(byteArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertNotNull(byteArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[1]"); org.junit.Assert.assertNotNull(byteArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[1, 10]"); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false); org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1)); }
public void test0764() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0764"); java.lang.Object[] objArray0 = null; double[] doubleArray3 = new double[] { 10L, 0 }; double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (-1L), 10); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 10); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray3, "hi!"); double[] doubleArray21 = new double[] { 10L, 0 }; double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, (int) 'a'); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray21); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray26, 0, (double) (byte) 10); double[] doubleArray32 = new double[] { 10L, 0 }; double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, 0, (int) 'a'); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), 10); int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32); int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) 10); java.lang.String str47 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray32, "hi!"); double[] doubleArray50 = new double[] { 10L, 0 }; double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray50, 0, (int) 'a'); boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray32, doubleArray50); double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray32); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.add(doubleArray55, 0, (double) (byte) 10); double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray29, doubleArray58); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (byte) -1); int int62 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray0, (java.lang.Object) (byte) -1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "double[]" + "'", str18, "double[]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertEquals("'" + str47 + "' != '" + "double[]" + "'", str47, "double[]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1)); }
public void test0765() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0765"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 3, (int) 'a'); double[] doubleArray17 = new double[] { 10L, 0 }; double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray17, 0, (int) 'a'); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) (-1L), 10); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray17, (double) (short) 1, (int) ' ', (double) (short) 10); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray17, (double) '.', 10); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray17); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray17, (double) 0, (int) ' '); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray17, (int) (byte) 0, 100.0d); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray17, (double) (short) -1); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray14, doubleArray17); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (-1.0d), 4, 0.0d); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); }
public void test0766() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0766"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray13 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, '4'); char[] charArray18 = new char[] { 'a', '4' }; char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '4', 0); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '#', 4); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray27); org.apache.commons.lang3.ArrayUtils.reverse(charArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray28, "hi!"); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray28); java.lang.Character[] charArray33 = org.apache.commons.lang3.ArrayUtils.toObject(charArray28); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, , a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertNotNull(charArray33); }
public void test0767() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0767"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; java.lang.Class[] classArray23 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, wildcardClassArray24, false); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray24, wildcardClassArray32); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray40, true); java.lang.Class[] classArray44 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44; java.lang.Class[] classArray47 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47; boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray44, wildcardClassArray48, false); java.lang.Class[] classArray52 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52; java.lang.Class[] classArray55 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55; boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray52, wildcardClassArray56, false); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray48, wildcardClassArray56); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray48); java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray48); java.lang.Class<?>[] wildcardClassArray62 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray61); java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray61); java.lang.Class<?>[] wildcardClassArray64 = null; java.lang.Class<?>[] wildcardClassArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray64, wildcardClassArray65, true); boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray61, wildcardClassArray65); boolean boolean70 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray65, true); java.lang.Class[] classArray72 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray73 = (java.lang.Class<?>[]) classArray72; java.lang.Class[] classArray75 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75; boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray72, wildcardClassArray76, false); java.lang.Class[] classArray80 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80; java.lang.Class[] classArray83 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83; boolean boolean86 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray80, wildcardClassArray84, false); boolean boolean87 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray76, wildcardClassArray84); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) wildcardClassArray76); java.util.Map<java.lang.Object, java.lang.Object> objMap89 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray76); java.lang.Class<?>[] wildcardClassArray90 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray76); boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray90, false); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertNotNull(classArray44); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(classArray47); org.junit.Assert.assertNotNull(wildcardClassArray48); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true); org.junit.Assert.assertNotNull(classArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(classArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertNotNull(wildcardClassArray63); org.junit.Assert.assertNotNull(wildcardClassArray65); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true); org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true); org.junit.Assert.assertNotNull(classArray72); org.junit.Assert.assertNotNull(wildcardClassArray73); org.junit.Assert.assertNotNull(classArray75); org.junit.Assert.assertNotNull(wildcardClassArray76); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); org.junit.Assert.assertNotNull(classArray80); org.junit.Assert.assertNotNull(wildcardClassArray81); org.junit.Assert.assertNotNull(classArray83); org.junit.Assert.assertNotNull(wildcardClassArray84); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true); org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true); org.junit.Assert.assertNotNull(objMap89); org.junit.Assert.assertNotNull(wildcardClassArray90); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true); }
public void test0768() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0768"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false); boolean[] booleanArray15 = new boolean[] { false, false, false }; boolean[] booleanArray17 = new boolean[] { true }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray15, ""); java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray15); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray15); java.lang.Boolean[] booleanArray26 = new java.lang.Boolean[] { false }; boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26, false); short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY; int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray26, (java.lang.Object) shortArray29); boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26, true); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray32); boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray32, (-1), (int) (short) 10); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray24, booleanArray32); boolean[] booleanArray43 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray43, 100, 0); boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray43, false); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray48); boolean[] booleanArray53 = new boolean[] { false, false, false }; boolean[] booleanArray55 = new boolean[] { true }; boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray53, booleanArray55); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, true, (int) (short) -1); boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray53, true); boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53); int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray53, true); boolean[] booleanArray65 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray53); boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray48, booleanArray53); boolean[] booleanArray67 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray32, booleanArray53); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean[]" + "'", str20, "boolean[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{false,false,false}" + "'", str21, "{false,false,false}"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false]"); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1)); org.junit.Assert.assertNotNull(booleanArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]"); org.junit.Assert.assertNotNull(booleanArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, true, true]"); org.junit.Assert.assertNotNull(booleanArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[true]"); org.junit.Assert.assertNotNull(booleanArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); org.junit.Assert.assertNotNull(booleanArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(booleanArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray65), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertNotNull(booleanArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray67), "[false, false, false, false]"); }
public void test0769() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0769"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray58); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray58, (double) 10.0f); double[] doubleArray65 = new double[] { 'a', 10.0d, (byte) 0 }; int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) '.', (double) 10); java.lang.String str70 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray65, "java.lang"); int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, 0.0d, (int) (short) 100); double[] doubleArray77 = new double[] { 'a', 10.0d, (byte) 0 }; int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray77, (double) '.', (double) 10); double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray77); java.lang.Double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray77); int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray77, (double) 10.0f, (double) (byte) 1); double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray77, 1, 1); double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray58, doubleArray77); boolean boolean90 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray89); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray89); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, ""); org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1)); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1)); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1); org.junit.Assert.assertNotNull(doubleArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]"); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[0.0, 10.0, 97.0, 0.0, 10.0, 10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false); }
public void test0770() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0770"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0]"); }
public void test0771() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0771"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray37, 0.0d); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); }
public void test0772() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0772"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.String str8 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) doubleArray6); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{10.0,0.0}" + "'", str8, "{10.0,0.0}"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); }
public void test0773() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0773"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) (short) -1); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]"); }
public void test0774() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0774"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 100.0f, 0, 1.0d); int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 10, (double) (short) -1); int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, 0.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1)); org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1)); org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2); }
public void test0775() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0775"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0]"); }
public void test0776() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0776"); java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] { false }; boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray1, false); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY; int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray1, (java.lang.Object) shortArray4); java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray1); java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false); org.junit.Assert.assertNotNull(booleanArray1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false]"); }
public void test0777() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0777"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); boolean[] booleanArray15 = new boolean[] { false, false, false }; boolean[] booleanArray17 = new boolean[] { true }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray15, ""); java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray15); boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray15, false); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray23); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray11, booleanArray23); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray26, "{class java.lang.Character,class java.lang.Character}"); int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray26, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean[]" + "'", str20, "boolean[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{false,false,false}" + "'", str21, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false, false, false, false, false]"); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "boolean[]" + "'", str28, "boolean[]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 6 + "'", int30 == 6); }
public void test0778() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0778"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, (double) (short) 10); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.add(doubleArray27, (double) 10.0f); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray27); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray27); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0, 10.0]"); }
public void test0779() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0779"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (-1.0f), (double) (-1L)); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) (byte) -1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); }
public void test0780() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0780"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, (int) (short) 1); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0]"); }
public void test0781() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0781"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 10, (double) 1.0f); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, 0.0d, (int) (short) 1, (double) 'a'); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) ' ', 10); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 4); double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.add(doubleArray31, (double) ' '); int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray45, 0.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 10.0, 0.0, 32.0]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2); }
public void test0782() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0782"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray11); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray11); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray11, 5, (int) ' '); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]"); }
public void test0783() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0783"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray6, (java.lang.Object[]) byteArray10); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10); java.lang.Object obj14 = null; boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray10, obj14); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 1); boolean[] booleanArray21 = new boolean[] { false, false, false }; boolean[] booleanArray23 = new boolean[] { true }; boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray21, booleanArray23); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray21, ""); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray21); boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, false); java.lang.Boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29); java.lang.Object[] objArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) booleanArray30); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray10, (java.lang.Object) booleanArray30); byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 100); byte[] byteArray35 = null; boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray34, byteArray35); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true]"); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "boolean[]" + "'", str26, "boolean[]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{false,false,false}" + "'", str27, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertNotNull(objArray31); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[false, false, false, false]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(byteArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]"); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); }
public void test0784() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0784"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, 0.0d); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 100, 5, (double) 100L); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); }
public void test0785() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0785"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = null; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray22, true); boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray22); java.lang.Class[] classArray27 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27; java.lang.Class[] classArray30 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray27, wildcardClassArray31, false); java.lang.Class[] classArray35 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35; java.lang.Class[] classArray38 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; boolean boolean41 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray35, wildcardClassArray39, false); boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray31, wildcardClassArray39); java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray31); double[] doubleArray46 = new double[] { 10L, 0 }; double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray46, 0, (int) 'a'); int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) 'a', 0, (double) 0L); boolean boolean55 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) 100L); int int57 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray43, (java.lang.Object) doubleArray46, (int) '.'); java.lang.Object obj58 = null; int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray43, obj58); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray22, wildcardClassArray43); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(classArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); org.junit.Assert.assertNotNull(classArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false); org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1)); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); }
public void test0786() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0786"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray21 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; java.lang.Class[] classArray24 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray25 = (java.lang.Class<?>[]) classArray24; boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray21, wildcardClassArray25, false); java.lang.Class[] classArray29 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29; java.lang.Class[] classArray32 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray33, false); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray25, wildcardClassArray33); boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray19, wildcardClassArray25); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray25); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray25); java.lang.Class[] classArray41 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41; java.lang.Class[] classArray44 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44; boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray41, wildcardClassArray45, false); java.lang.Class[] classArray49 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49; java.lang.Class[] classArray52 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52; boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray49, wildcardClassArray53, false); boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray45, wildcardClassArray53); java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray45); java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray45); java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray45); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray59); short[] shortArray63 = new short[] { (short) 1, (short) 10 }; short[] shortArray67 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray68 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray63, shortArray67); boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray67); org.apache.commons.lang3.ArrayUtils.reverse(shortArray67); int int71 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray60, (java.lang.Object) shortArray67); boolean boolean73 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, wildcardClassArray60, false); java.lang.Object[] objArray74 = null; boolean boolean75 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray60, objArray74); java.lang.Class[] classArray77 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77; java.lang.Class[] classArray80 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80; boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray77, wildcardClassArray81, false); boolean boolean84 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray60, wildcardClassArray81); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(classArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); org.junit.Assert.assertNotNull(classArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(classArray41); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertNotNull(classArray44); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(classArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(classArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(shortArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray63), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray67), "[0, 1, -1]"); org.junit.Assert.assertNotNull(shortArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray68), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true); org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true); org.junit.Assert.assertNotNull(classArray77); org.junit.Assert.assertNotNull(wildcardClassArray78); org.junit.Assert.assertNotNull(classArray80); org.junit.Assert.assertNotNull(wildcardClassArray81); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true); org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true); }
public void test0787() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0787"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) '#', 2, (double) (short) 100); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 10.0d, (-1)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); }
public void test0788() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0788"); int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY; java.lang.Integer[] intArray1 = org.apache.commons.lang3.ArrayUtils.toObject(intArray0); int[] intArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1); int[] intArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1); int[] intArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY; java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.toObject(intArray4); int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5); int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.addAll(intArray3, intArray7); int[] intArray10 = org.apache.commons.lang3.ArrayUtils.add(intArray7, (-1)); org.apache.commons.lang3.ArrayUtils.reverse(intArray7); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray7, "class [Z"); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[]"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]"); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[-1]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); }
public void test0789() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0789"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (byte) 0, (double) (byte) 10); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray25); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); }
public void test0790() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0790"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray3 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] { intArray1, intArray2, intArray3, intArray4, intArray5, intArray6 }; java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray36 = new java.lang.Integer[][] { intArray14, intArray21, intArray28, intArray35 }; java.lang.Integer[][] intArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray36, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray39 = org.apache.commons.lang3.ArrayUtils.add(intArray7, intArray36); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray39); long[] longArray44 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains(longArray44, (long) 'a'); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray44, (long) '4'); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray40, (java.lang.Object) '4'); java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray40); java.lang.Class<?>[] wildcardClassArray51 = null; java.lang.Class[] classArray53 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53; java.lang.Class[] classArray56 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56; boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray53, wildcardClassArray57, false); java.lang.Class[] classArray61 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61; java.lang.Class[] classArray64 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray65 = (java.lang.Class<?>[]) classArray64; boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray61, wildcardClassArray65, false); boolean boolean68 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray57, wildcardClassArray65); java.lang.Class<?>[] wildcardClassArray69 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray57); java.lang.Class<?>[] wildcardClassArray70 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray57); java.lang.Class<?>[] wildcardClassArray71 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray57); java.lang.Class[] classArray73 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray74 = (java.lang.Class<?>[]) classArray73; java.lang.Class[] classArray76 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76; boolean boolean79 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray73, wildcardClassArray77, false); java.lang.Class[] classArray81 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81; java.lang.Class[] classArray84 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray85 = (java.lang.Class<?>[]) classArray84; boolean boolean87 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray81, wildcardClassArray85, false); boolean boolean88 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray77, wildcardClassArray85); boolean boolean89 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray71, wildcardClassArray77); java.lang.Class<?>[] wildcardClassArray90 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray77); java.lang.Class<?>[] wildcardClassArray91 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray77); boolean boolean93 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray51, wildcardClassArray91, false); boolean boolean94 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray50, wildcardClassArray91); boolean boolean95 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray50); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(longArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(classArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertNotNull(classArray56); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(classArray61); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertNotNull(classArray64); org.junit.Assert.assertNotNull(wildcardClassArray65); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true); org.junit.Assert.assertNotNull(wildcardClassArray69); org.junit.Assert.assertNotNull(wildcardClassArray70); org.junit.Assert.assertNotNull(wildcardClassArray71); org.junit.Assert.assertNotNull(classArray73); org.junit.Assert.assertNotNull(wildcardClassArray74); org.junit.Assert.assertNotNull(classArray76); org.junit.Assert.assertNotNull(wildcardClassArray77); org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true); org.junit.Assert.assertNotNull(classArray81); org.junit.Assert.assertNotNull(wildcardClassArray82); org.junit.Assert.assertNotNull(classArray84); org.junit.Assert.assertNotNull(wildcardClassArray85); org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true); org.junit.Assert.assertNotNull(wildcardClassArray90); org.junit.Assert.assertNotNull(wildcardClassArray91); org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false); org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false); }
public void test0791() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0791"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "0.0", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0/0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0792() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0792"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); int[] intArray14 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray14, 3, 100); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray14); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) (byte) 100); int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) ' ', 1); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray18); int[] intArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray9, (int) (byte) 0); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray9, (int) (byte) 0); java.lang.String str30 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) int28, "."); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[4, -1, 10, -1, 100]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3); org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Integer" + "'", str30, "Integer"); }
public void test0793() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0793"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, 0.0d, 4); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) '4', 1, (double) 4); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, 0); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray21); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); }
public void test0794() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0794"); java.lang.Object[] objArray0 = null; double[] doubleArray4 = new double[] { 'a', 10.0d, (byte) 0 }; int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) '.', (double) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray4, "java.lang"); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, 0.0d, (int) (short) 100); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 3, (int) 'a'); double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray4); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray0, (java.lang.Object) doubleArray4, (int) (short) 0); int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (byte) 100, (double) 11); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0); }
public void test0795() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0795"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, 0); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray9, doubleArray13); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray39, 0.0d, 0, (double) (-1)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); }
public void test0796() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0796"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, 0.0d, 4); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (short) 1, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) (-1L), (int) (byte) 0, (double) 100L); java.lang.Double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray21); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); org.junit.Assert.assertNotNull(doubleArray32); }
public void test0797() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0797"); org.apache.commons.lang3.ClassUtils[] classUtilsArray0 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray1 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray2 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray3 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray4 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray0, classUtilsArray1, classUtilsArray2, classUtilsArray3 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray5 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray6 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray7 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray5, classUtilsArray6 }; org.apache.commons.lang3.ClassUtils[][] classUtilsArray8 = org.apache.commons.lang3.ArrayUtils.addAll(classUtilsArray4, classUtilsArray7); java.lang.Class[] classArray10 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10; java.lang.Class[] classArray13 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13; boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray10, wildcardClassArray14, false); java.lang.Class[] classArray18 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18; java.lang.Class[] classArray21 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray18, wildcardClassArray22, false); boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray27); java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray27); java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; java.lang.Class[] classArray34 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34; boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray31, wildcardClassArray35, false); java.lang.Class[] classArray39 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; java.lang.Class[] classArray42 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray39, wildcardClassArray43, false); boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray35, wildcardClassArray43); java.lang.Integer[][] intArray47 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray48 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray49 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray50 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray51 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray52 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray53 = new java.lang.Integer[][][] { intArray47, intArray48, intArray49, intArray50, intArray51, intArray52 }; java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray82 = new java.lang.Integer[][] { intArray60, intArray67, intArray74, intArray81 }; java.lang.Integer[][] intArray84 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray82, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray85 = org.apache.commons.lang3.ArrayUtils.add(intArray53, intArray82); java.lang.Class<?>[] wildcardClassArray86 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray85); boolean boolean88 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray86, false); boolean boolean89 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, wildcardClassArray43); java.lang.Class<?>[] wildcardClassArray90 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray29); org.apache.commons.lang3.ClassUtils[][] classUtilsArray91 = org.apache.commons.lang3.ArrayUtils.removeElement(classUtilsArray7, (java.lang.Object) wildcardClassArray90); org.junit.Assert.assertNotNull(classUtilsArray0); org.junit.Assert.assertNotNull(classUtilsArray1); org.junit.Assert.assertNotNull(classUtilsArray2); org.junit.Assert.assertNotNull(classUtilsArray3); org.junit.Assert.assertNotNull(classUtilsArray4); org.junit.Assert.assertNotNull(classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray6); org.junit.Assert.assertNotNull(classUtilsArray7); org.junit.Assert.assertNotNull(classUtilsArray8); org.junit.Assert.assertNotNull(classArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(classArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(classArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertNotNull(classArray34); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertNotNull(intArray67); org.junit.Assert.assertNotNull(intArray74); org.junit.Assert.assertNotNull(intArray81); org.junit.Assert.assertNotNull(intArray82); org.junit.Assert.assertNotNull(intArray84); org.junit.Assert.assertNotNull(intArray85); org.junit.Assert.assertNotNull(wildcardClassArray86); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false); org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true); org.junit.Assert.assertNotNull(wildcardClassArray90); org.junit.Assert.assertNotNull(classUtilsArray91); }
public void test0798() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0798"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("Byte[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0799() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0799"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); }
public void test0800() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0800"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1,0,0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,0,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0801() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0801"); java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray0); java.lang.Class<?>[] wildcardClassArray2 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray1); java.lang.Class<?>[] wildcardClassArray3 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray2); org.junit.Assert.assertNotNull(longArray0); org.junit.Assert.assertNotNull(wildcardClassArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); }
public void test0802() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0802"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray19 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[]) classArray19; java.lang.Class[] classArray22 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray19, wildcardClassArray23, false); java.lang.Class[] classArray27 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27; java.lang.Class[] classArray30 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray27, wildcardClassArray31, false); boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray23, wildcardClassArray31); java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray39); java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray39); int[] intArray44 = new int[] { (byte) 0, 10 }; int[] intArray47 = org.apache.commons.lang3.ArrayUtils.subarray(intArray44, (int) ' ', (int) '#'); int[] intArray49 = org.apache.commons.lang3.ArrayUtils.add(intArray47, (int) (byte) 0); java.lang.Class<?> wildcardClass50 = intArray49.getClass(); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray39, (java.lang.Object) wildcardClass50, 100); java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(classArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(classArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[0, 10]"); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]"); org.junit.Assert.assertNotNull(intArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[0]"); org.junit.Assert.assertNotNull(wildcardClass50); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray53); }
public void test0803() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0803"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{false}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0804() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0804"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10.0}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}}}" + "'", str1, "0}}}"); }
public void test0805() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0805"); java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY; double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0); int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray1, (double) 'a'); java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] { intArray4, intArray5, intArray6 }; java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray11 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10 }; java.lang.Integer[][] intArray12 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray14 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray15 = new java.lang.Integer[][][] { intArray12, intArray13, intArray14 }; java.lang.Integer[][][][] intArray16 = new java.lang.Integer[][][][] { intArray7, intArray11, intArray15 }; java.lang.Integer[][] intArray17 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray18 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray19 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray20 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray21 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray22 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray23 = new java.lang.Integer[][][] { intArray17, intArray18, intArray19, intArray20, intArray21, intArray22 }; java.lang.Integer[] intArray30 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray37 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray52 = new java.lang.Integer[][] { intArray30, intArray37, intArray44, intArray51 }; java.lang.Integer[][] intArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray52, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray55 = org.apache.commons.lang3.ArrayUtils.add(intArray23, intArray52); java.lang.Integer[][][][] intArray56 = org.apache.commons.lang3.ArrayUtils.add(intArray16, intArray23); double[] doubleArray59 = new double[] { 10L, 0 }; double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray59, 0, (int) 'a'); int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray59, (double) (-1L), 10); int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray59, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray59); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray59, (double) 10); java.lang.String str74 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray59, "hi!"); double[] doubleArray77 = new double[] { 10L, 0 }; double[] doubleArray80 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray77, 0, (int) 'a'); boolean boolean81 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray59, doubleArray77); int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray23, (java.lang.Object) doubleArray59, 4); double[] doubleArray86 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray59, (int) (byte) 1, (-1)); double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray59); boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray59); org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]"); org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1)); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1)); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1); org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false); org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0); org.junit.Assert.assertEquals("'" + str74 + "' != '" + "double[]" + "'", str74, "double[]"); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true); org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1)); org.junit.Assert.assertNotNull(doubleArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]"); org.junit.Assert.assertNotNull(doubleArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false); }
public void test0806() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0806"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 10); short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) 0); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray2, "Character"); java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[10, 0]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "java.lang" + "'", str9, "java.lang"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertNotNull(shortArray11); }
public void test0807() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0807"); long[] longArray5 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray6); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray6, "Short"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertNotNull(objArray7); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "java.lang" + "'", str9, "java.lang"); }
public void test0808() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0808"); double[] doubleArray2 = new double[] { 10L, (byte) 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 100); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 100, "hi!"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); }
public void test0809() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0809"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("#"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0810() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0810"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("#"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: #"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0811() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0811"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("#"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0812() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0812"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{true,true,false,false,true,false}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,true,false,false,true,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0813() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0813"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0814() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0814"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); byte[] byteArray4 = new byte[] {}; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray4); java.lang.Object[] objArray6 = new java.lang.Object[] { boolean5 }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray2, objArray6); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) objArray6, "hi!"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true); org.junit.Assert.assertNotNull(objArray6); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[true]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[true]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Object[]" + "'", str9, "Object[]"); }
public void test0815() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0815"); java.lang.Cloneable[][] cloneableArray0 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray1 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray2 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray3 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray4 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][][] cloneableArray5 = new java.lang.Cloneable[][][] { cloneableArray0, cloneableArray1, cloneableArray2, cloneableArray3, cloneableArray4 }; java.lang.Cloneable[][] cloneableArray6 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray7 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray8 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray9 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray10 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][][] cloneableArray11 = new java.lang.Cloneable[][][] { cloneableArray6, cloneableArray7, cloneableArray8, cloneableArray9, cloneableArray10 }; java.lang.Cloneable[][] cloneableArray12 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray13 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray14 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray15 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray16 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][][] cloneableArray17 = new java.lang.Cloneable[][][] { cloneableArray12, cloneableArray13, cloneableArray14, cloneableArray15, cloneableArray16 }; java.lang.Cloneable[][] cloneableArray18 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray19 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray20 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray21 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray22 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][][] cloneableArray23 = new java.lang.Cloneable[][][] { cloneableArray18, cloneableArray19, cloneableArray20, cloneableArray21, cloneableArray22 }; java.lang.Cloneable[][] cloneableArray24 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray25 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray26 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray27 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray28 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][][] cloneableArray29 = new java.lang.Cloneable[][][] { cloneableArray24, cloneableArray25, cloneableArray26, cloneableArray27, cloneableArray28 }; java.lang.Cloneable[][] cloneableArray30 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray31 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray32 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray33 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][] cloneableArray34 = new java.lang.Cloneable[][] {}; java.lang.Cloneable[][][] cloneableArray35 = new java.lang.Cloneable[][][] { cloneableArray30, cloneableArray31, cloneableArray32, cloneableArray33, cloneableArray34 }; java.lang.Cloneable[][][][] cloneableArray36 = new java.lang.Cloneable[][][][] { cloneableArray5, cloneableArray11, cloneableArray17, cloneableArray23, cloneableArray29, cloneableArray35 }; java.lang.Float[] floatArray39 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray39); java.lang.Float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray40); java.lang.Cloneable[] cloneableArray42 = new java.lang.Cloneable[] { floatArray40 }; java.lang.Cloneable[][] cloneableArray43 = new java.lang.Cloneable[][] { cloneableArray42 }; java.lang.Float[] floatArray46 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray46); java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray47); java.lang.Cloneable[] cloneableArray49 = new java.lang.Cloneable[] { floatArray47 }; java.lang.Cloneable[][] cloneableArray50 = new java.lang.Cloneable[][] { cloneableArray49 }; java.lang.Float[] floatArray53 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray54 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray53); java.lang.Float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray54); java.lang.Cloneable[] cloneableArray56 = new java.lang.Cloneable[] { floatArray54 }; java.lang.Cloneable[][] cloneableArray57 = new java.lang.Cloneable[][] { cloneableArray56 }; java.lang.Float[] floatArray60 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray61 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray60); java.lang.Float[] floatArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray61); java.lang.Cloneable[] cloneableArray63 = new java.lang.Cloneable[] { floatArray61 }; java.lang.Cloneable[][] cloneableArray64 = new java.lang.Cloneable[][] { cloneableArray63 }; java.lang.Cloneable[][][] cloneableArray65 = new java.lang.Cloneable[][][] { cloneableArray43, cloneableArray50, cloneableArray57, cloneableArray64 }; java.lang.Float[] floatArray68 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray69 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray68); java.lang.Float[] floatArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray69); java.lang.Cloneable[] cloneableArray71 = new java.lang.Cloneable[] { floatArray69 }; java.lang.Cloneable[][] cloneableArray72 = new java.lang.Cloneable[][] { cloneableArray71 }; java.lang.Float[] floatArray75 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray75); java.lang.Float[] floatArray77 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray76); java.lang.Cloneable[] cloneableArray78 = new java.lang.Cloneable[] { floatArray76 }; java.lang.Cloneable[][] cloneableArray79 = new java.lang.Cloneable[][] { cloneableArray78 }; java.lang.Float[] floatArray82 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray83 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray82); java.lang.Float[] floatArray84 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray83); java.lang.Cloneable[] cloneableArray85 = new java.lang.Cloneable[] { floatArray83 }; java.lang.Cloneable[][] cloneableArray86 = new java.lang.Cloneable[][] { cloneableArray85 }; java.lang.Float[] floatArray89 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray90 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray89); java.lang.Float[] floatArray91 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray90); java.lang.Cloneable[] cloneableArray92 = new java.lang.Cloneable[] { floatArray90 }; java.lang.Cloneable[][] cloneableArray93 = new java.lang.Cloneable[][] { cloneableArray92 }; java.lang.Cloneable[][][] cloneableArray94 = new java.lang.Cloneable[][][] { cloneableArray72, cloneableArray79, cloneableArray86, cloneableArray93 }; java.lang.Cloneable[][][][] cloneableArray95 = new java.lang.Cloneable[][][][] { cloneableArray65, cloneableArray94 }; java.lang.Cloneable[][][][] cloneableArray96 = org.apache.commons.lang3.ArrayUtils.addAll(cloneableArray36, cloneableArray95); java.lang.String str98 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) cloneableArray36, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(cloneableArray0); org.junit.Assert.assertNotNull(cloneableArray1); org.junit.Assert.assertNotNull(cloneableArray2); org.junit.Assert.assertNotNull(cloneableArray3); org.junit.Assert.assertNotNull(cloneableArray4); org.junit.Assert.assertNotNull(cloneableArray5); org.junit.Assert.assertNotNull(cloneableArray6); org.junit.Assert.assertNotNull(cloneableArray7); org.junit.Assert.assertNotNull(cloneableArray8); org.junit.Assert.assertNotNull(cloneableArray9); org.junit.Assert.assertNotNull(cloneableArray10); org.junit.Assert.assertNotNull(cloneableArray11); org.junit.Assert.assertNotNull(cloneableArray12); org.junit.Assert.assertNotNull(cloneableArray13); org.junit.Assert.assertNotNull(cloneableArray14); org.junit.Assert.assertNotNull(cloneableArray15); org.junit.Assert.assertNotNull(cloneableArray16); org.junit.Assert.assertNotNull(cloneableArray17); org.junit.Assert.assertNotNull(cloneableArray18); org.junit.Assert.assertNotNull(cloneableArray19); org.junit.Assert.assertNotNull(cloneableArray20); org.junit.Assert.assertNotNull(cloneableArray21); org.junit.Assert.assertNotNull(cloneableArray22); org.junit.Assert.assertNotNull(cloneableArray23); org.junit.Assert.assertNotNull(cloneableArray24); org.junit.Assert.assertNotNull(cloneableArray25); org.junit.Assert.assertNotNull(cloneableArray26); org.junit.Assert.assertNotNull(cloneableArray27); org.junit.Assert.assertNotNull(cloneableArray28); org.junit.Assert.assertNotNull(cloneableArray29); org.junit.Assert.assertNotNull(cloneableArray30); org.junit.Assert.assertNotNull(cloneableArray31); org.junit.Assert.assertNotNull(cloneableArray32); org.junit.Assert.assertNotNull(cloneableArray33); org.junit.Assert.assertNotNull(cloneableArray34); org.junit.Assert.assertNotNull(cloneableArray35); org.junit.Assert.assertNotNull(cloneableArray36); org.junit.Assert.assertNotNull(floatArray39); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertNotNull(floatArray41); org.junit.Assert.assertNotNull(cloneableArray42); org.junit.Assert.assertNotNull(cloneableArray43); org.junit.Assert.assertNotNull(floatArray46); org.junit.Assert.assertNotNull(floatArray47); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertNotNull(cloneableArray49); org.junit.Assert.assertNotNull(cloneableArray50); org.junit.Assert.assertNotNull(floatArray53); org.junit.Assert.assertNotNull(floatArray54); org.junit.Assert.assertNotNull(floatArray55); org.junit.Assert.assertNotNull(cloneableArray56); org.junit.Assert.assertNotNull(cloneableArray57); org.junit.Assert.assertNotNull(floatArray60); org.junit.Assert.assertNotNull(floatArray61); org.junit.Assert.assertNotNull(floatArray62); org.junit.Assert.assertNotNull(cloneableArray63); org.junit.Assert.assertNotNull(cloneableArray64); org.junit.Assert.assertNotNull(cloneableArray65); org.junit.Assert.assertNotNull(floatArray68); org.junit.Assert.assertNotNull(floatArray69); org.junit.Assert.assertNotNull(floatArray70); org.junit.Assert.assertNotNull(cloneableArray71); org.junit.Assert.assertNotNull(cloneableArray72); org.junit.Assert.assertNotNull(floatArray75); org.junit.Assert.assertNotNull(floatArray76); org.junit.Assert.assertNotNull(floatArray77); org.junit.Assert.assertNotNull(cloneableArray78); org.junit.Assert.assertNotNull(cloneableArray79); org.junit.Assert.assertNotNull(floatArray82); org.junit.Assert.assertNotNull(floatArray83); org.junit.Assert.assertNotNull(floatArray84); org.junit.Assert.assertNotNull(cloneableArray85); org.junit.Assert.assertNotNull(cloneableArray86); org.junit.Assert.assertNotNull(floatArray89); org.junit.Assert.assertNotNull(floatArray90); org.junit.Assert.assertNotNull(floatArray91); org.junit.Assert.assertNotNull(cloneableArray92); org.junit.Assert.assertNotNull(cloneableArray93); org.junit.Assert.assertNotNull(cloneableArray94); org.junit.Assert.assertNotNull(cloneableArray95); org.junit.Assert.assertNotNull(cloneableArray96); org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Cloneable[][][][]" + "'", str98, "Cloneable[][][][]"); }
public void test0816() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0816"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("float[][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "float[][][]" + "'", str1, "float[][][]"); }
public void test0817() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0817"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{true,true,false,false,true,false}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{true,true,false,false,true,false}" + "'", str1, "{true,true,false,false,true,false}"); }
public void test0818() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0818"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); }
public void test0819() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0819"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{1.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0820() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0820"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}}}}}" + "'", str1, "0}}}}}"); }
public void test0821() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0821"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "#"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: #"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0822() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0822"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "hi!"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: hi!"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0823() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0823"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{true,false,false,false,false,false}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{true,false,false,false,false,false}" + "'", str1, "{true,false,false,false,false,false}"); }
public void test0824() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0824"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{true,false,false,false,false,false}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0825() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0825"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); int[] intArray10 = new int[] { '#', (short) 1 }; int[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10); int[] intArray14 = new int[] { '#', (short) 1 }; int[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray11, intArray15); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, (int) (byte) 10); int[] intArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray18, 0); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, (java.lang.Object) 0, (int) (byte) 100); char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) ' ', "{-1,1}"); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, , , #]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[35, 1]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[35, 1]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 1]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 1]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, , , #]"); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Character" + "'", str26, "Character"); }
public void test0826() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0826"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("float[][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0827() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0827"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{true,false,false,false,false,false}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,false,false,false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0828() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0828"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test0829() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0829"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{true,false,false,false,false,false}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,false,false,false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0830() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0830"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{true,true,false,false,true,false}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,true,false,false,true,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0831() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0831"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); }
public void test0832() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0832"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("0}}}}}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0833() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0833"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0834() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0834"); double[] doubleArray4 = new double[] { (-1.0d), (byte) 100, (short) 100, (byte) 10 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray4, "{1.0}"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "double[]" + "'", str7, "double[]"); }
public void test0835() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0835"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{-1,1}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0836() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0836"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{0.0,0.0,0.0,100.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0.0,0.0,0.0,100" + "'", str1, "{0.0,0.0,0.0,100"); }
public void test0837() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0837"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) 100, (int) (short) 100); org.apache.commons.lang3.ArrayUtils.reverse(byteArray5); org.apache.commons.lang3.ArrayUtils.reverse(byteArray5); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) byteArray5, "{10.0,100.0}"); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "byte[]" + "'", str9, "byte[]"); }
public void test0838() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0838"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0.0,0.0,100.0}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0.0,0.0,100.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0839() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0839"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{a, , ,#}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {a,,,#}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0840() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0840"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{a, , ,#}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {a,,,#}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0841() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0841"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0.0,0.0,100"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0.0,0.0,100"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0842() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0842"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) 100, (int) (short) 100); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 10, (int) (byte) 0); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray1, "#"); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 10); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); }
public void test0843() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0843"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{true,false,false,false,false,false}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,false,false,false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0844() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0844"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{1.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1" + "'", str1, "{1"); }
public void test0845() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0845"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{0.0,0.0,0.0,100"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0.0,0.0,0" + "'", str1, "{0.0,0.0,0"); }
public void test0846() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0846"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Cloneable[][][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Cloneable[][][][]" + "'", str1, "Cloneable[][][][]"); }
public void test0847() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0847"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{100,10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0848() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0848"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) ' '); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) ' ', 0); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray10, "Object[]"); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray10, true, 1); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, ""); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); }
public void test0849() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0849"); java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]"); org.junit.Assert.assertNotNull(wildcardClass1); }
public void test0850() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0850"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("Object[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0851() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0851"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray11 = null; boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray10, byteArray11); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(byteArray11, (byte) 100); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); }
public void test0852() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0852"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray10, (double) 'a'); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 'a', (java.lang.Object) 100); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); }
public void test0853() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0853"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{100,10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{100,10,0}" + "'", str1, "{100,10,0}"); }
public void test0854() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0854"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10.0,100.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10/0,100/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0855() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0855"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{a, , ,#}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0856() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0856"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1.0}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0857() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0857"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray4); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) objArray7, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(objArray7); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "java.lang" + "'", str9, "java.lang"); }
public void test0858() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0858"); java.lang.Object[] objArray1 = new java.lang.Object[] { (byte) 1 }; int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(objArray1, (java.lang.Object) 1.0f); java.lang.String str5 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 1.0f, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(objArray1); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[1]"); org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1)); org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Float" + "'", str5, "Float"); }
public void test0859() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0859"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray4 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) shortArray6); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 10); java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray10); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap12 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) shortArray10); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '0', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); }
public void test0860() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0860"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1" + "'", str1, "{1"); }
public void test0861() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0861"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0.0,0"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0.0,0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0862() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0862"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray4 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) shortArray6); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray6, (short) 10); java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray10); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap12 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray11); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, 'class java.lang.Short', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); }
public void test0863() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0863"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0.0,0.0,100.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0.0,0.0,100.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0864() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0864"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1,1}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0865() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0865"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{-1,1}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0866() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0866"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); java.lang.String[] strArray59 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>(); boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59); java.util.List<java.lang.Class<?>> wildcardClassList62 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList60); java.util.ArrayList<java.lang.String>[] strListArray63 = org.apache.commons.lang3.ArrayUtils.add(strListArray54, strList60); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap64 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) strListArray63); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertNotNull(strArray59); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertNotNull(wildcardClassList62); org.junit.Assert.assertNotNull(strListArray63); }
public void test0867() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0867"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (short) 1, 1); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray14, (short) 0); // The following exception was thrown during execution in test generation try { short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (int) (byte) 10, (short) 0); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]"); }
public void test0868() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0868"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{-1,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1,1}" + "'", str1, "{-1,1}"); }
public void test0869() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0869"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray5); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test0870() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0870"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{-1.0,100.0,100.0,10.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1.0,100.0,100.0,10.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0871() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0871"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10.0,100.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10/0,100/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0872() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0872"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{100,10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{100,10,0}" + "'", str1, "{100,10,0}"); }
public void test0873() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0873"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 }; org.apache.commons.lang3.ArrayUtils arrayUtils2 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils2 }; org.apache.commons.lang3.ArrayUtils arrayUtils4 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils4 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray1, arrayUtilsArray3, arrayUtilsArray5 }; org.apache.commons.lang3.ArrayUtils arrayUtils7 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils7 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray9 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray6, arrayUtilsArray8); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray9); double[] doubleArray14 = new double[] { 10L, (byte) 100 }; int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 100); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 1.0d, 1); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 0, (int) (byte) 10); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, (int) (short) -1, 0); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, 1.0d, (double) (short) 0); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29); // The following exception was thrown during execution in test generation try { java.lang.Object[] objArray31 = org.apache.commons.lang3.ArrayUtils.add((java.lang.Object[]) wildcardClassArray10, (int) (short) -1, (java.lang.Object) doubleArray29); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]"); }
public void test0874() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0874"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, (int) (short) -1, (int) (short) 0); boolean[] booleanArray15 = new boolean[] { true, true, false, false, true, false }; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15); boolean[] booleanArray20 = new boolean[] { false, false, true }; boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray20); java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray20); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray22, false); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray24); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray15, booleanArray24); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray15); int int30 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false, 0); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) int30, ""); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[true, false, false]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "java.lang" + "'", str32, "java.lang"); }
public void test0875() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0875"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); java.lang.Object[] objArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(objArray17); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[null, null]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[null, null]"); }
public void test0876() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0876"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0.0,0.0,100.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0.0,0.0,100.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0877() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0877"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, "Cloneable[][][][]"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cloneable[][][][]" + "'", str2, "Cloneable[][][][]"); }
public void test0878() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0878"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "float[][][]"); org.junit.Assert.assertNotNull(wildcardClass2); }
public void test0879() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0879"); java.lang.Object[] objArray0 = null; java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ClassUtils.toClass(objArray0); org.junit.Assert.assertNull(wildcardClassArray1); }
public void test0880() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0880"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("Cloneable[][][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0881() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0881"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0882() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0882"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{false,false,true}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{false,false,true}" + "'", str1, "{false,false,true}"); }
public void test0883() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0883"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) 100, (int) (short) 100); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 10, (int) (byte) 0); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray1, "#"); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 10); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 1); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); }
public void test0884() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0884"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray13, 0L); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray15, "{0.0,0.0,0.0,100"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 10, -1, 100]"); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, ""); }
public void test0885() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0885"); float[] floatArray0 = null; float[] floatArray4 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray4); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray4, 0.0f, (int) (short) 10); float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.clone(floatArray4); float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray9); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray0, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{-1.0,100.0,100.0,10.0}" + "'", str12, "{-1.0,100.0,100.0,10.0}"); }
public void test0886() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0886"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test0887() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0887"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0.0,0.0,0.0,100"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0/0,0/0,0/0,100"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0888() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0888"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("#", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: #"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0889() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0889"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test0890() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0890"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1.0,100.0,100.0,10.0}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1/0,100/0,100/0,10/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0891() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0891"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray5, (double) (byte) 0); int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray7, (double) 0, 0); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray7, (int) (short) 1, (int) (byte) 100); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray7, 10.0d, (double) (byte) 10); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 10.0d, "{10.0,100.0}"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 100.0]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Double" + "'", str18, "Double"); }
public void test0892() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0892"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); // The following exception was thrown during execution in test generation try { byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.add(byteArray10, (int) 'a', (byte) 100); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 5"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); }
public void test0893() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0893"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray16 = new boolean[] { true, true, false, false, true, false }; boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray16); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16); java.lang.Boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray16); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray20, false, (int) ' '); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray20, (int) ' ', 0); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray26); boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray26); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.add(booleanArray26, false); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray30, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]"); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false]"); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, ""); }
public void test0894() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0894"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "float[][][]", false); org.junit.Assert.assertNotNull(wildcardClass3); }
public void test0895() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0895"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test0896() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0896"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{0.0,0.0,0.0,100"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0,100" + "'", str1, "0,100"); }
public void test0897() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0897"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{100,10,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100,10,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0898() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0898"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Cloneable[][][][]", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [[[[LCloneable;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0899() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0899"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 }; org.apache.commons.lang3.ArrayUtils arrayUtils2 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils2 }; org.apache.commons.lang3.ArrayUtils arrayUtils4 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils4 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray1, arrayUtilsArray3, arrayUtilsArray5 }; org.apache.commons.lang3.ArrayUtils arrayUtils7 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils7 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray9 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray6, arrayUtilsArray8); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(arrayUtilsArray9); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); }
public void test0900() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0900"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "hi!", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: hi!"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0901() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0901"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("0}}}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}}}}}" + "'", str1, "0}}}}}"); }
public void test0902() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0902"); java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray4 = new java.lang.Boolean[][] { booleanArray3 }; java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray9 = new java.lang.Boolean[][] { booleanArray8 }; java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray14 = new java.lang.Boolean[][] { booleanArray13 }; java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray19 = new java.lang.Boolean[][] { booleanArray18 }; java.lang.Boolean[] booleanArray23 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray24 = new java.lang.Boolean[][] { booleanArray23 }; java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray29 = new java.lang.Boolean[][] { booleanArray28 }; java.lang.Boolean[][][] booleanArray30 = new java.lang.Boolean[][][] { booleanArray4, booleanArray9, booleanArray14, booleanArray19, booleanArray24, booleanArray29 }; java.lang.Boolean[] booleanArray34 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray35 = new java.lang.Boolean[][] { booleanArray34 }; java.lang.Boolean[] booleanArray39 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray40 = new java.lang.Boolean[][] { booleanArray39 }; java.lang.Boolean[] booleanArray44 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray45 = new java.lang.Boolean[][] { booleanArray44 }; java.lang.Boolean[] booleanArray49 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray50 = new java.lang.Boolean[][] { booleanArray49 }; java.lang.Boolean[] booleanArray54 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray55 = new java.lang.Boolean[][] { booleanArray54 }; java.lang.Boolean[] booleanArray59 = new java.lang.Boolean[] { true, false, true }; java.lang.Boolean[][] booleanArray60 = new java.lang.Boolean[][] { booleanArray59 }; java.lang.Boolean[][][] booleanArray61 = new java.lang.Boolean[][][] { booleanArray35, booleanArray40, booleanArray45, booleanArray50, booleanArray55, booleanArray60 }; java.lang.Boolean[][][][] booleanArray62 = new java.lang.Boolean[][][][] { booleanArray30, booleanArray61 }; java.lang.Boolean[][] booleanArray63 = new java.lang.Boolean[][] {}; java.lang.Boolean[][] booleanArray64 = new java.lang.Boolean[][] {}; java.lang.Boolean[][] booleanArray65 = new java.lang.Boolean[][] {}; java.lang.Boolean[][] booleanArray66 = new java.lang.Boolean[][] {}; java.lang.Boolean[][][] booleanArray67 = new java.lang.Boolean[][][] { booleanArray63, booleanArray64, booleanArray65, booleanArray66 }; java.lang.Boolean[][][][] booleanArray68 = new java.lang.Boolean[][][][] { booleanArray67 }; java.lang.Boolean[][][][] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray62, booleanArray68); java.lang.String str71 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray62, "0,100"); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertNotNull(booleanArray35); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertNotNull(booleanArray44); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertNotNull(booleanArray49); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertNotNull(booleanArray54); org.junit.Assert.assertNotNull(booleanArray55); org.junit.Assert.assertNotNull(booleanArray59); org.junit.Assert.assertNotNull(booleanArray60); org.junit.Assert.assertNotNull(booleanArray61); org.junit.Assert.assertNotNull(booleanArray62); org.junit.Assert.assertNotNull(booleanArray63); org.junit.Assert.assertNotNull(booleanArray64); org.junit.Assert.assertNotNull(booleanArray65); org.junit.Assert.assertNotNull(booleanArray66); org.junit.Assert.assertNotNull(booleanArray67); org.junit.Assert.assertNotNull(booleanArray68); org.junit.Assert.assertNotNull(booleanArray69); org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Boolean[][][][]" + "'", str71, "Boolean[][][][]"); }
public void test0903() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0903"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{true,true,false,false,true,false}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,true,false,false,true,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0904() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0904"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); }
public void test0905() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0905"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray6); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); }
public void test0906() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0906"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{0.0,0.0,0.0,100"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0.0,0.0,0" + "'", str1, "{0.0,0.0,0"); }
public void test0907() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0907"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray9); }
public void test0908() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0908"); double[] doubleArray6 = new double[] { 1.0d, (byte) 10, 1, 0.0f, (short) 100, (short) 1 }; double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray6, (int) (short) 100, (int) (short) 100); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, 0.0d, (double) (short) 0); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) (byte) 0); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray6, "0}}}}}"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 10.0, 1.0, 100.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); }
public void test0909() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0909"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100/0,10/0,52/0,1/0,-1/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0910() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0910"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{-1.0,100.0,100.0,10.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1.0,100.0,100.0,10.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0911() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0911"); double[] doubleArray4 = new double[] { (-1.0d), (byte) 100, (short) 100, (byte) 10 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean6, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); }
public void test0912() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0912"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); java.lang.Long[] longArray16 = org.apache.commons.lang3.ArrayUtils.toObject(longArray4); java.lang.Long[] longArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray16, "{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "java.lang" + "'", str19, "java.lang"); }
public void test0913() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0913"); long[] longArray4 = new long[] { (short) 100, 1, '4', 1L }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, (int) (byte) 1); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray7, (long) (byte) -1, (int) (short) 0); java.lang.Class<?> wildcardClass13 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass16 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray18 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18; wildcardClassArray19[0] = wildcardClass13; wildcardClassArray19[1] = wildcardClass16; java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray19); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray19); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray25); long[] longArray31 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.add(longArray31, 100L); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.subarray(longArray31, (int) (short) -1, (int) (short) 1); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray31); long[] longArray39 = org.apache.commons.lang3.ArrayUtils.remove(longArray31, 0); long[] longArray42 = org.apache.commons.lang3.ArrayUtils.subarray(longArray31, (int) (short) 10, (int) (byte) 0); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray42); int int45 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray25, (java.lang.Object) longArray42, (int) (short) 10); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) (short) 0, (java.lang.Object) (short) 10); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[100, 1, 52, 1]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[100, 52, 1]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 52, 1]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(wildcardClass13); org.junit.Assert.assertNotNull(wildcardClass16); org.junit.Assert.assertNotNull(classArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); }
public void test0914() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0914"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0.0,0", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0.0,0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0915() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0915"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) ' '); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) ' ', 0); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray10, "Object[]"); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, true); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, ""); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 4 + "'", int22 == 4); }
public void test0916() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0916"); long[] longArray2 = new long[] { 100, 1 }; long[] longArray5 = new long[] { 100, 1 }; long[][] longArray6 = new long[][] { longArray2, longArray5 }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray6); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray6); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[100, 1]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 1]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test0917() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0917"); byte[] byteArray0 = new byte[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0); byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, 0, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray4, (int) (short) 10, 100); java.lang.Byte[] byteArray13 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray13); byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100); byte[] byteArray19 = null; boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray18, byteArray19); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray7, byteArray18); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); }
public void test0918() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0918"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{1", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0919() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0919"); int[] intArray6 = new int[] { (short) 10, '4', (short) 10, (byte) 1, 10, (short) 10 }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray6); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray6, (int) 'a'); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 'a', "#"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 52, 10, 1, 10, 10]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.lang" + "'", str11, "java.lang"); }
public void test0920() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0920"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0921() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0921"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{0.0,0.0,0"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0.0,0" + "'", str1, "{0.0,0"); }
public void test0922() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0922"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("#"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "#" + "'", str1, "#"); }
public void test0923() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0923"); char[] charArray0 = new char[] {}; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) 'a', (int) (byte) 0); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray3, ' ', (int) '4'); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray3, ' '); char[] charArray9 = null; boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray8, charArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray8, 'a', (int) '4'); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) 'a', "{false,true,true}"); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Character" + "'", str15, "Character"); }
public void test0924() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0924"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClassArray17); }
public void test0925() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0925"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0926() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0926"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{-1,10,-1,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,10,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0927() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0927"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); java.lang.Boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray3); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false); java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray8); java.io.Serializable[] serializableArray11 = org.apache.commons.lang3.ArrayUtils.clone((java.io.Serializable[]) booleanArray8); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) serializableArray11, "{0.0,0.0,0.0,100.0}"); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true]"); org.junit.Assert.assertNotNull(serializableArray11); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Boolean[]" + "'", str13, "Boolean[]"); }
public void test0928() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0928"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, "{false,false,true}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{false,false,true}" + "'", str2, "{false,false,true}"); }
public void test0929() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0929"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray7); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7); byte[] byteArray14 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 1, (-1)); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 1, 0); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 0, 10); byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray14); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(byteArray14, (byte) 0); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray14, "{0.0,0.0,0.0,100"); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.contains(byteArray14, (byte) 100); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100, 100]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); }
public void test0930() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0930"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10,100,-1,-1,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,100,-1,-1,1}" + "'", str1, "{10,100,-1,-1,1}"); }
public void test0931() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0931"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray6 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, 0, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray12); java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray12); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) -1); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) -1); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray21, "{100,10,0}"); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 10, (int) (short) 1); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray26, (byte) 0); byte[] byteArray30 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray30); int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 0); byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.add(byteArray30, 0, (byte) -1); byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray26, byteArray30); int int40 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray30, (byte) 0, (int) (short) 100); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]"); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]"); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100]"); org.junit.Assert.assertNotNull(byteArray31); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertNotNull(byteArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]"); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); }
public void test0932() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0932"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{1.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test0933() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0933"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray6, (short) (byte) 10); java.lang.Short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray11, "{0.0,0"); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "java.lang" + "'", str13, "java.lang"); }
public void test0934() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0934"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1.0,100.0,100.0,10.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1/0,100/0,100/0,10/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0935() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0935"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray10, (double) 'a'); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray10, (double) 10.0f); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 0.0, 100.0]"); }
public void test0936() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0936"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0.0,0.0,0.0,100.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0/0,0/0,0/0,100/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0937() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0937"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) 1.0f, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Float" + "'", str2, "Float"); }
public void test0938() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0938"); double[][] doubleArray0 = null; double[] doubleArray3 = new double[] { 0.0d, 1.0d }; boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) 0L, 1.0d); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) 1, (int) (short) 0); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray3); double[][] doubleArray12 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, doubleArray3); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray0, "{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{100.0,10.0,52.0,1.0,-1.0}" + "'", str14, "{100.0,10.0,52.0,1.0,-1.0}"); }
public void test0939() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0939"); java.lang.Long[] longArray4 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, 0L); long[] longArray8 = null; long[] longArray9 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray8); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '4'); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.subarray(longArray9, (int) (byte) 100, (int) (byte) 10); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray14, "{-1}"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 10, 0]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 10, 0, 0, 52]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "long[]" + "'", str16, "long[]"); }
public void test0940() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0940"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{true,false,false,false,false,false}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,false,false,false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0941() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0941"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray9, ""); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.lang" + "'", str11, "java.lang"); }
public void test0942() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0942"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 }; org.apache.commons.lang3.ArrayUtils arrayUtils2 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils2 }; org.apache.commons.lang3.ArrayUtils arrayUtils4 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils4 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray1, arrayUtilsArray3, arrayUtilsArray5 }; org.apache.commons.lang3.ArrayUtils arrayUtils7 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils7 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray9 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray6, arrayUtilsArray8); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray9); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray12 = new org.apache.commons.lang3.ArrayUtils[] {}; // The following exception was thrown during execution in test generation try { org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray13 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray9, (int) (short) 100, arrayUtilsArray12); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(arrayUtilsArray12); }
public void test0943() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0943"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) ' '); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) ' ', 0); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray10, "Object[]"); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, ""); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[true, true, false, false, true, false]"); }
public void test0944() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0944"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray13, (byte) 1); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4); }
public void test0945() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0945"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("#"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "#" + "'", str1, "#"); }
public void test0946() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0946"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray19); java.lang.Object obj21 = null; int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray19, obj21, (int) (byte) 10); java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray19); boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray16, wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); }
public void test0947() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0947"); float[] floatArray5 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray9 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, 10.0f); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray5); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray5, "{0.0,0.0,0.0,100"); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (float) 0); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, ""); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); }
public void test0948() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0948"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("Cloneable[][][][]", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Cloneable"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0949() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0949"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{false,true,true}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{false,true,true}" + "'", str1, "{false,true,true}"); }
public void test0950() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0950"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0.0,0.0,0"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0/0,0/0,0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0951() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0951"); boolean[] booleanArray0 = null; boolean[] booleanArray4 = new boolean[] { false, false, true }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray4); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true); boolean[] booleanArray12 = new boolean[] { false, false, true }; boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12); java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray12); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14, false); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray16); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray16); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) booleanArray0, "{-1,1}"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{-1,1}" + "'", str20, "{-1,1}"); }
public void test0952() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0952"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{0.0,0.0,0"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0,0" + "'", str1, "0,0"); }
public void test0953() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0953"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray0, (int) (short) 1, (int) '4'); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(shortArray4, (short) 0); java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray4, "{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); }
public void test0954() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0954"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0.0,0.0,100", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0.0,0.0,100"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0955() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0955"); java.lang.Long[] longArray5 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 'a'); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, 100L); java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray10, "0}}}}}"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.lang" + "'", str12, "java.lang"); }
public void test0956() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0956"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{false,true,true}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {false,true,true}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0957() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0957"); java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[][] shortArray21 = new java.lang.Short[][] { shortArray6, shortArray13, shortArray20 }; java.lang.Short[][] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray21); float[] floatArray24 = new float[] {}; float[] floatArray25 = new float[] {}; float[][] floatArray26 = new float[][] { floatArray24, floatArray25 }; float[][][] floatArray27 = new float[][][] { floatArray26 }; float[] floatArray30 = new float[] { (short) 1, 0L }; float[][] floatArray31 = new float[][] { floatArray30 }; float[] floatArray34 = new float[] { (short) 1, 0L }; float[][] floatArray35 = new float[][] { floatArray34 }; float[] floatArray38 = new float[] { (short) 1, 0L }; float[][] floatArray39 = new float[][] { floatArray38 }; float[] floatArray42 = new float[] { (short) 1, 0L }; float[][] floatArray43 = new float[][] { floatArray42 }; float[] floatArray46 = new float[] { (short) 1, 0L }; float[][] floatArray47 = new float[][] { floatArray46 }; float[][][] floatArray48 = new float[][][] { floatArray31, floatArray35, floatArray39, floatArray43, floatArray47 }; float[][][] floatArray49 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray27, floatArray48); boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray21, (java.lang.Object[]) floatArray49); java.util.Map<java.lang.Object, java.lang.Object> objMap51 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) shortArray21); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(floatArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[]"); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertNotNull(floatArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray30), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray31); org.junit.Assert.assertNotNull(floatArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray34), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray35); org.junit.Assert.assertNotNull(floatArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray39); org.junit.Assert.assertNotNull(floatArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray43); org.junit.Assert.assertNotNull(floatArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray46), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray47); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertNotNull(floatArray49); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false); org.junit.Assert.assertNotNull(objMap51); }
public void test0958() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0958"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (short) 1, 1); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray14, (short) 1); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); }
public void test0959() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0959"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?> wildcardClass16 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass19 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray21 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; wildcardClassArray22[0] = wildcardClass16; wildcardClassArray22[1] = wildcardClass19; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray22); java.lang.Class<?> wildcardClass30 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass33 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray35 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35; wildcardClassArray36[0] = wildcardClass30; wildcardClassArray36[1] = wildcardClass33; java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray36); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray36, false); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray36); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray44); boolean[] booleanArray49 = new boolean[] { false, false, true }; boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray49); java.lang.Boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray49); boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray51, false); boolean[] booleanArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray51, true); boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray55); int int57 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray13, (java.lang.Object) booleanArray56); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClass16); org.junit.Assert.assertNotNull(wildcardClass19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(wildcardClass30); org.junit.Assert.assertNotNull(wildcardClass33); org.junit.Assert.assertNotNull(classArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertNotNull(booleanArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false); org.junit.Assert.assertNotNull(booleanArray51); org.junit.Assert.assertNotNull(booleanArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray55), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, true]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1)); }
public void test0960() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0960"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{10.0,100.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10.0,100.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0961() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0961"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{0.0,0"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0.0,0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0962() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0962"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray7); java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray8); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray9); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray9); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); }
public void test0963() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0963"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{10,100,-1,-1,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0964() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0964"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); }
public void test0965() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0965"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); }
public void test0966() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0966"); short[] shortArray1 = new short[] { (byte) 0 }; int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray1, (short) (byte) 0); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray1, (short) (byte) 100, 0); java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray1); java.lang.Class<?> wildcardClass8 = shortArray7.getClass(); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray7, "{1"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[0]"); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertNotNull(wildcardClass8); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.lang" + "'", str10, "java.lang"); }
public void test0967() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0967"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("0}}}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0968() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0968"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{-1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0969() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0969"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{-1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0970() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0970"); java.lang.reflect.Type[][][][] typeArray0 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray1 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray2 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][][] typeArray3 = new java.lang.reflect.Type[][][][][] { typeArray0, typeArray1, typeArray2 }; java.lang.reflect.Type[][][][] typeArray4 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray5 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray6 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][][] typeArray7 = new java.lang.reflect.Type[][][][][] { typeArray4, typeArray5, typeArray6 }; java.lang.reflect.Type[][][][] typeArray8 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray9 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray10 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][][] typeArray11 = new java.lang.reflect.Type[][][][][] { typeArray8, typeArray9, typeArray10 }; java.lang.reflect.Type[][][][] typeArray12 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray13 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray14 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][][] typeArray15 = new java.lang.reflect.Type[][][][][] { typeArray12, typeArray13, typeArray14 }; java.lang.reflect.Type[][][][] typeArray16 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray17 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray18 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][][] typeArray19 = new java.lang.reflect.Type[][][][][] { typeArray16, typeArray17, typeArray18 }; java.lang.reflect.Type[][][][] typeArray20 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray21 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][] typeArray22 = new java.lang.reflect.Type[][][][] {}; java.lang.reflect.Type[][][][][] typeArray23 = new java.lang.reflect.Type[][][][][] { typeArray20, typeArray21, typeArray22 }; java.lang.reflect.Type[][][][][][] typeArray24 = new java.lang.reflect.Type[][][][][][] { typeArray3, typeArray7, typeArray11, typeArray15, typeArray19, typeArray23 }; java.lang.reflect.Type[][][][][][] typeArray27 = org.apache.commons.lang3.ArrayUtils.subarray(typeArray24, (int) (byte) -1, 0); java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) typeArray27); org.junit.Assert.assertNotNull(typeArray0); org.junit.Assert.assertNotNull(typeArray1); org.junit.Assert.assertNotNull(typeArray2); org.junit.Assert.assertNotNull(typeArray3); org.junit.Assert.assertNotNull(typeArray4); org.junit.Assert.assertNotNull(typeArray5); org.junit.Assert.assertNotNull(typeArray6); org.junit.Assert.assertNotNull(typeArray7); org.junit.Assert.assertNotNull(typeArray8); org.junit.Assert.assertNotNull(typeArray9); org.junit.Assert.assertNotNull(typeArray10); org.junit.Assert.assertNotNull(typeArray11); org.junit.Assert.assertNotNull(typeArray12); org.junit.Assert.assertNotNull(typeArray13); org.junit.Assert.assertNotNull(typeArray14); org.junit.Assert.assertNotNull(typeArray15); org.junit.Assert.assertNotNull(typeArray16); org.junit.Assert.assertNotNull(typeArray17); org.junit.Assert.assertNotNull(typeArray18); org.junit.Assert.assertNotNull(typeArray19); org.junit.Assert.assertNotNull(typeArray20); org.junit.Assert.assertNotNull(typeArray21); org.junit.Assert.assertNotNull(typeArray22); org.junit.Assert.assertNotNull(typeArray23); org.junit.Assert.assertNotNull(typeArray24); org.junit.Assert.assertNotNull(typeArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); }
public void test0971() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0971"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) 0); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.add(shortArray10, (short) 0); int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) (byte) 1, (int) (short) 1); java.lang.Short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray10); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray10, (int) (short) 100, (int) (short) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (short) 10, "{100}"); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1, 0, 0]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java.lang" + "'", str21, "java.lang"); }
public void test0972() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0972"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{true,false,false,false,false,false}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,false,false,false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0973() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0973"); java.lang.Long[] longArray4 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4); java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.Object[]) longArray4, (int) (byte) 10, 0); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (-1L)); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) (short) 10); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray13, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) (short) -1, (int) '#'); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100, 10, 0, 0]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, ""); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); }
public void test0974() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0974"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, 0, (int) (short) 100); java.lang.Long[] longArray18 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray18); long[] longArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray19, 0L); java.lang.String str23 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) longArray21, "0}}}}}"); long[] longArray24 = org.apache.commons.lang3.ArrayUtils.addAll(longArray13, longArray21); long[] longArray29 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray31 = org.apache.commons.lang3.ArrayUtils.add(longArray29, 100L); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.subarray(longArray29, (int) (short) -1, (int) (short) 1); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray29); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.remove(longArray29, 0); long[] longArray40 = org.apache.commons.lang3.ArrayUtils.subarray(longArray29, (int) (short) 10, (int) (byte) 0); java.lang.Long[] longArray41 = org.apache.commons.lang3.ArrayUtils.toObject(longArray29); long[] longArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray41); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray13, longArray42); java.lang.String str45 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray13, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray18); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[100, 10, 0]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{100,10,0}" + "'", str23, "{100,10,0}"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1, 10, -1, 100, 100, 10, 0]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]"); org.junit.Assert.assertNotNull(longArray41); org.junit.Assert.assertNotNull(longArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[-1, 10, -1, 100]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, ""); }
public void test0975() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0975"); short[] shortArray1 = new short[] { (byte) 0 }; int int3 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray1, (short) (byte) 0); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray1, (short) (byte) 100, 0); java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray1); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray1); java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8); double[] doubleArray12 = new double[] { 0.0d, 1.0d }; boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray12, (double) 0L, 1.0d); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray12, (double) (short) 1, (int) (short) 100); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) 10); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray8, (java.lang.Object) doubleArray12, (int) (short) 100); int[] intArray25 = new int[] { '#', (short) 1 }; int[] intArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray25); int[] intArray29 = new int[] { '#', (short) 1 }; int[] intArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray29); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray26, intArray30); int[] intArray32 = org.apache.commons.lang3.ArrayUtils.clone(intArray26); int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray32); java.lang.Integer[] intArray34 = org.apache.commons.lang3.ArrayUtils.toObject(intArray32); int[] intArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray34, (int) (short) 1); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray8, (java.lang.Object) intArray36); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) int37, "{a, , ,#}"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[0]"); org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 1.0, 10.0]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[35, 1]"); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[35, 1]"); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[35, 1]"); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[35, 1]"); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[35, 1]"); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[35, 1]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "java.lang" + "'", str39, "java.lang"); }
public void test0976() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0976"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "4"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 4"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0977() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0977"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); boolean[] booleanArray15 = new boolean[] { true, true, false, false, true, false }; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15); java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, (int) ' '); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) ' ', 0); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray19, "Object[]"); boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray19); int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, ""); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5); }
public void test0978() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0978"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); java.lang.String[] strArray59 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>(); boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59); java.util.List<java.lang.Class<?>> wildcardClassList62 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList60); java.util.ArrayList<java.lang.String>[] strListArray63 = org.apache.commons.lang3.ArrayUtils.add(strListArray54, strList60); java.lang.String[] strArray86 = new java.lang.String[] { "", "{false,false,true}", "{0.0,0.0,0.0,100.0}", "{-1,1}", "{a, , ,#}", "{100.0,10.0,52.0,1.0,-1.0}", "{100,10,0}", "#", "{10.0,100.0}", "float[][][]", "{1", "{10.0,100.0}", "Cloneable[][][][]", "{1", "Object[]", "#", "{true,true,false,false,true,false}", "{1.0}", "{true,true,false,false,true,false}", "{true,true,false,false,true,false}", "{0.0,0.0,0.0,100", "{100.0,10.0,52.0,1.0,-1.0}" }; java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>(); boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86); java.util.List<java.lang.Class<?>> wildcardClassList89 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList87); java.util.ArrayList<java.lang.String>[] strListArray90 = org.apache.commons.lang3.ArrayUtils.add(strListArray63, strList87); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertNotNull(strArray59); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertNotNull(wildcardClassList62); org.junit.Assert.assertNotNull(strListArray63); org.junit.Assert.assertNotNull(strArray86); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertNotNull(wildcardClassList89); org.junit.Assert.assertNotNull(strListArray90); }
public void test0979() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0979"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{-1,10,-1,100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,10,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0980() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0980"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("Boolean[][][][]", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Boolean"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0981() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0981"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Object obj4 = null; int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray3, obj4); java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray3); java.lang.Class<?> wildcardClass9 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass12 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray14 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14; wildcardClassArray15[0] = wildcardClass9; wildcardClassArray15[1] = wildcardClass12; java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray21); long[] longArray27 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray29 = org.apache.commons.lang3.ArrayUtils.add(longArray27, 100L); long[] longArray32 = org.apache.commons.lang3.ArrayUtils.subarray(longArray27, (int) (short) -1, (int) (short) 1); long[] longArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray27); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.remove(longArray27, 0); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.subarray(longArray27, (int) (short) 10, (int) (byte) 0); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray38); int int41 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray21, (java.lang.Object) longArray38, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray42 = null; boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray42, true); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray21); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClass9); org.junit.Assert.assertNotNull(wildcardClass12); org.junit.Assert.assertNotNull(classArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[-1]"); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false); }
public void test0982() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0982"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{-1.0,100.0,100.0,10.0}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1.0,100.0,100.0,10.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0983() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0983"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{false,false,true}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0984() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0984"); int[] intArray2 = new int[] { '#', (short) 1 }; int[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2); int[] intArray6 = new int[] { '#', (short) 1 }; int[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray6); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray7); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray3); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean10, ""); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[35, 1]"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 1]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 1]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Boolean" + "'", str12, "Boolean"); }
public void test0985() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0985"); java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2); float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) ' '); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray5, "{100.0,10.0,52.0,1.0,-1.0}"); int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, (-1.0f)); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, 10.0]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); }
public void test0986() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0986"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray22, 10L); long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray22, (int) (byte) -1, (int) (byte) -1); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) -1, "float[][][]"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "java.lang" + "'", str31, "java.lang"); }
public void test0987() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0987"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Boolean[][][][]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Boolean"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0988() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0988"); char[] charArray4 = new char[] { ' ', '#', '4', ' ' }; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray4, '4', (int) (byte) 1); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.clone(charArray4); char[] charArray13 = new char[] { ' ', '#', '4', ' ' }; int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray13, '4', (int) (byte) 1); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray13, 0, 'a'); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray8, charArray13); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray13); char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray13); char[] charArray23 = new char[] {}; char[] charArray26 = org.apache.commons.lang3.ArrayUtils.subarray(charArray23, (int) 'a', (int) (byte) 0); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', (int) '4'); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', (int) (short) 100); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray26); java.lang.String str35 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray33, "Cloneable[][][][]"); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, , #, 4, ]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertNotNull(charArray22); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]"); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , #, 4, ]"); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, ""); }
public void test0989() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0989"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("false"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: false"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0990() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0990"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1.0,100.0,100.0,10" + "'", str1, "{-1.0,100.0,100.0,10"); }
public void test0991() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0991"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 100, (byte) 10, (byte) 0, (byte) -1, (byte) -1 }; java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 100, (byte) 10, (byte) 0, (byte) -1, (byte) -1 }; java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) 100, (byte) 10, (byte) 0, (byte) -1, (byte) -1 }; java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 100, (byte) 10, (byte) 0, (byte) -1, (byte) -1 }; java.lang.Byte[][] byteArray24 = new java.lang.Byte[][] { byteArray5, byteArray11, byteArray17, byteArray23 }; java.lang.Byte[] byteArray25 = new java.lang.Byte[] {}; java.lang.Byte[] byteArray26 = new java.lang.Byte[] {}; java.lang.Byte[] byteArray27 = new java.lang.Byte[] {}; java.lang.Byte[][] byteArray28 = new java.lang.Byte[][] { byteArray25, byteArray26, byteArray27 }; java.lang.Byte[][] byteArray29 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray24, byteArray28); byte[] byteArray32 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray32); byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray32, (int) (byte) 100, (int) (short) 100); int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 10, (int) (byte) 0); java.lang.String str41 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray32, "#"); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains(byteArray32, (byte) 10); int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 0); java.lang.Byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray32); // The following exception was thrown during execution in test generation try { java.lang.Byte[][] byteArray47 = org.apache.commons.lang3.ArrayUtils.add(byteArray28, 10, byteArray46); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertNotNull(byteArray23); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertNotNull(byteArray29); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]"); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertNotNull(byteArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]"); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, ""); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertNotNull(byteArray46); }
public void test0992() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0992"); java.lang.Integer[] intArray4 = new java.lang.Integer[] { 1, (-1), 10, 0 }; java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4); java.lang.Integer[] intArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) intArray4, "{100}"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Integer[]" + "'", str8, "Integer[]"); }
public void test0993() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0993"); short[] shortArray2 = new short[] { (byte) 1, (short) -1 }; short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray2); boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray2); short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray2, (short) (byte) 1); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (byte) 1, "{1,-1,10,0}"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1, -1]"); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[1, -1]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[-1]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Byte" + "'", str9, "Byte"); }
public void test0994() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0994"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray7); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7); byte[] byteArray14 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 1, (-1)); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 1, 0); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 0, 10); byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray14); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(byteArray14, (byte) 0); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray14, "{0.0,0.0,0.0,100"); byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.clone(byteArray14); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray14); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100, 100]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); }
public void test0995() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0995"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); java.lang.Object[] objArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) strListArray54); java.util.AbstractList<java.lang.String>[] strListArray56 = org.apache.commons.lang3.ArrayUtils.clone((java.util.AbstractList<java.lang.String>[]) strListArray54); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.util.RandomAccess[]) strListArray54); java.util.ArrayList<java.lang.String>[] strListArray58 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray54); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertNotNull(objArray55); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]]"); org.junit.Assert.assertNotNull(strListArray56); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertNotNull(strListArray58); }
public void test0996() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0996"); double[] doubleArray2 = new double[] { 10L, (byte) 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 100); int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, 1.0d, 1); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray8, "{0.0,0.0,0"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 100.0]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "double[]" + "'", str10, "double[]"); }
public void test0997() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0997"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "4", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 4"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0998() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0998"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray13, 0L); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray13, "{0.0,0.0,0.0,100"); int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) '4', 0); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(longArray13, 100L); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 10, -1, 100]"); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, ""); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); } @Test public void test0999() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0999"); char[] charArray4 = new char[] { ' ', '#', '4', ' ' }; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray4, '4', (int) (byte) 1); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray4, 0, 'a'); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray4, (int) (byte) 0, '4'); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) (byte) 0, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, , #, 4, ]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, , #, 4, ]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.lang" + "'", str16, "java.lang"); } @Test public void test1000() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test1000"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray6 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, 0, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray12); java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray12); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) -1); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) -1); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray21, "{100,10,0}"); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 10, (int) (short) 1); // The following exception was thrown during execution in test generation try { byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray21, (int) (short) 100, (byte) 1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]"); } }
public void test0999() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test0999"); char[] charArray4 = new char[] { ' ', '#', '4', ' ' }; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray4, '4', (int) (byte) 1); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.add(charArray4, 0, 'a'); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray4, (int) (byte) 0, '4'); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) (byte) 0, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, , #, 4, ]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "4 #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "4 #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[4, , #, 4, ]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.lang" + "'", str16, "java.lang"); }
public void test1000() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest1.test1000"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray6 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, 0, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray12); java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray12); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) -1); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) -1); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray21, "{100,10,0}"); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 10, (int) (short) 1); // The following exception was thrown during execution in test generation try { byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.add(byteArray21, (int) (short) 100, (byte) 1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]"); }
public void test1001() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1001"); java.lang.Long[] longArray5 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 'a'); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, 100L); java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray10); java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 1); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray17); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray17, (byte) 100); byte[] byteArray23 = null; boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray23); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray10, (java.lang.Object) byteArray23); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); }
public void test1002() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1002"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); java.lang.String[] strArray59 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>(); boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59); java.util.List<java.lang.Class<?>> wildcardClassList62 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList60); java.util.ArrayList<java.lang.String>[] strListArray63 = org.apache.commons.lang3.ArrayUtils.add(strListArray54, strList60); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.util.AbstractList<java.lang.String>[]) strListArray63); char[] charArray69 = new char[] { ' ', '#', '4', ' ' }; int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray69, '4', (int) (byte) 1); char[] charArray73 = org.apache.commons.lang3.ArrayUtils.clone(charArray69); char[] charArray78 = new char[] { ' ', '#', '4', ' ' }; int int81 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray78, '4', (int) (byte) 1); char[] charArray84 = org.apache.commons.lang3.ArrayUtils.add(charArray78, 0, 'a'); boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray73, charArray78); boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray78); int int88 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray78, 'a'); java.util.ArrayList<java.lang.String>[] strListArray89 = org.apache.commons.lang3.ArrayUtils.removeElement(strListArray63, (java.lang.Object) int88); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertNotNull(strArray59); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertNotNull(wildcardClassList62); org.junit.Assert.assertNotNull(strListArray63); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false); org.junit.Assert.assertNotNull(charArray69); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertNotNull(charArray73); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray78); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray78), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray78), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray78), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1)); org.junit.Assert.assertNotNull(charArray84); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), "a #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), "a #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[a, , #, 4, ]"); org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true); org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1)); org.junit.Assert.assertNotNull(strListArray89); }
public void test1003() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1003"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.util.AbstractCollection<java.lang.String>[]) strListArray54); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); }
public void test1004() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1004"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 0); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray12, (byte) 10); byte[] byteArray18 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray18); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray18, 10, 10); byte[] byteArray24 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray24, (byte) 0); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray28); java.lang.Byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray28); byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray28); byte[] byteArray33 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray33); int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) 0); byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray33); byte[] byteArray38 = org.apache.commons.lang3.ArrayUtils.clone(byteArray37); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray28, byteArray38); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]"); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]"); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertNotNull(byteArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 100, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[100]"); org.junit.Assert.assertNotNull(byteArray34); org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1)); org.junit.Assert.assertNotNull(byteArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[100]"); org.junit.Assert.assertNotNull(byteArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[100]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); }
public void test1005() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1005"); java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2); float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) ' '); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray5, "{100.0,10.0,52.0,1.0,-1.0}"); float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.add(floatArray5, (float) 100); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, 10.0]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[10.0, 10.0, 100.0]"); }
public void test1006() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1006"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "Cloneable[][][][]"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Cloneable[][][][]" + "'", str2, "Cloneable[][][][]"); }
public void test1007() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1007"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{-1.0,100.0,100.0,10", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1.0,100.0,100.0,10"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1008() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1008"); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray0 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray4 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray0, arrayUtilsArray1, arrayUtilsArray2, arrayUtilsArray3, arrayUtilsArray4 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray7 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray10 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray11 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray6, arrayUtilsArray7, arrayUtilsArray8, arrayUtilsArray9, arrayUtilsArray10 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray12 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray13 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray15 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray16 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray17 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray12, arrayUtilsArray13, arrayUtilsArray14, arrayUtilsArray15, arrayUtilsArray16 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray18 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray19 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray20 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray21 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray22 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray23 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray18, arrayUtilsArray19, arrayUtilsArray20, arrayUtilsArray21, arrayUtilsArray22 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray24 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray25 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray26 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray27 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray28 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray29 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray24, arrayUtilsArray25, arrayUtilsArray26, arrayUtilsArray27, arrayUtilsArray28 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray30 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray5, arrayUtilsArray11, arrayUtilsArray17, arrayUtilsArray23, arrayUtilsArray29 }; boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(arrayUtilsArray30); org.apache.commons.lang3.ArrayUtils arrayUtils32 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray33 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils32 }; org.apache.commons.lang3.ArrayUtils arrayUtils34 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray35 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils34 }; org.apache.commons.lang3.ArrayUtils arrayUtils36 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray37 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils36 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray38 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray33, arrayUtilsArray35, arrayUtilsArray37 }; org.apache.commons.lang3.ArrayUtils arrayUtils39 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray40 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils39 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray41 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray38, arrayUtilsArray40); java.lang.Class<?>[] wildcardClassArray42 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray41); org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray43 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray30, arrayUtilsArray41); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) arrayUtilsArray43); org.junit.Assert.assertNotNull(arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray4); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray7); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(arrayUtilsArray10); org.junit.Assert.assertNotNull(arrayUtilsArray11); org.junit.Assert.assertNotNull(arrayUtilsArray12); org.junit.Assert.assertNotNull(arrayUtilsArray13); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertNotNull(arrayUtilsArray15); org.junit.Assert.assertNotNull(arrayUtilsArray16); org.junit.Assert.assertNotNull(arrayUtilsArray17); org.junit.Assert.assertNotNull(arrayUtilsArray18); org.junit.Assert.assertNotNull(arrayUtilsArray19); org.junit.Assert.assertNotNull(arrayUtilsArray20); org.junit.Assert.assertNotNull(arrayUtilsArray21); org.junit.Assert.assertNotNull(arrayUtilsArray22); org.junit.Assert.assertNotNull(arrayUtilsArray23); org.junit.Assert.assertNotNull(arrayUtilsArray24); org.junit.Assert.assertNotNull(arrayUtilsArray25); org.junit.Assert.assertNotNull(arrayUtilsArray26); org.junit.Assert.assertNotNull(arrayUtilsArray27); org.junit.Assert.assertNotNull(arrayUtilsArray28); org.junit.Assert.assertNotNull(arrayUtilsArray29); org.junit.Assert.assertNotNull(arrayUtilsArray30); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(arrayUtilsArray33); org.junit.Assert.assertNotNull(arrayUtilsArray35); org.junit.Assert.assertNotNull(arrayUtilsArray37); org.junit.Assert.assertNotNull(arrayUtilsArray38); org.junit.Assert.assertNotNull(arrayUtilsArray40); org.junit.Assert.assertNotNull(arrayUtilsArray41); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertNotNull(arrayUtilsArray43); }
public void test1009() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1009"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("0}}}}}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1010() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1010"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "{100}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{100}" + "'", str2, "{100}"); }
public void test1011() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1011"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0.0,0.0,0", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0/0,0/0,0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1012() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1012"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.remove(byteArray7, 0); java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 1); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray16); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 100); byte[] byteArray22 = null; boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray21, byteArray22); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray7, byteArray21); // The following exception was thrown during execution in test generation try { byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.remove(byteArray7, (int) (short) -1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); }
public void test1013() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1013"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray22); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); }
public void test1014() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1014"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) wildcardClassArray14, "float[][][]"); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Class[]" + "'", str16, "Class[]"); }
public void test1015() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1015"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8); // The following exception was thrown during execution in test generation try { short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.remove(shortArray12, (int) ' '); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); }
public void test1016() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1016"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1017() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1017"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); boolean[] booleanArray15 = new boolean[] { true, true, false, false, true, false }; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15); java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, (int) ' '); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) ' ', 0); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray19, "Object[]"); boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray19); boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, ""); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true, false, false, true, false]"); }
public void test1018() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1018"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (short) 1, "hi!"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Short" + "'", str2, "Short"); }
public void test1019() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1019"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{a, , ,#}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {a,,,#}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1020() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1020"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(wildcardClassList8); }
public void test1021() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1021"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Object obj4 = null; int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray3, obj4); java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray3); java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[0]"); }
public void test1022() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1022"); float[] floatArray5 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray9 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, 10.0f); float[] floatArray17 = new float[] { 10L, 10L, 100L }; boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray17); float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(floatArray20, (float) 10); float[] floatArray28 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray32 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray32); boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray32); int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray28, 10.0f); float[] floatArray40 = new float[] { 10L, 10L, 100L }; boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray40); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray28, floatArray40); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray40, (float) 0); boolean boolean45 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray20, floatArray40); java.lang.String str47 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) floatArray20, ""); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[10.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(floatArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray28), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[10.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false); org.junit.Assert.assertEquals("'" + str47 + "' != '" + "float[]" + "'", str47, "float[]"); }
public void test1023() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1023"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1024() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1024"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?> wildcardClass16 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass19 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray21 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; wildcardClassArray22[0] = wildcardClass16; wildcardClassArray22[1] = wildcardClass19; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray22); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray22, false); java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray31); java.lang.Short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray32); java.lang.Short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray32); java.lang.Short[] shortArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray34); java.lang.Short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray35); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray13, (java.lang.Object) shortArray35, (int) (short) 0); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClass16); org.junit.Assert.assertNotNull(wildcardClass19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertNotNull(shortArray35); org.junit.Assert.assertNotNull(shortArray36); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); }
public void test1025() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1025"); java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2); java.lang.Float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray4, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); }
public void test1026() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1026"); char[] charArray4 = new char[] { ' ', '#', '4', ' ' }; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray4, '4', (int) (byte) 1); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.clone(charArray4); char[] charArray13 = new char[] { ' ', '#', '4', ' ' }; int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray13, '4', (int) (byte) 1); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray13, 0, 'a'); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray8, charArray13); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray13); char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray13); char[] charArray23 = new char[] {}; char[] charArray26 = org.apache.commons.lang3.ArrayUtils.subarray(charArray23, (int) 'a', (int) (byte) 0); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', (int) '4'); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', (int) (short) 100); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray26); java.lang.Character[] charArray34 = org.apache.commons.lang3.ArrayUtils.toObject(charArray13); java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray34); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, , #, 4, ]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertNotNull(charArray22); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]"); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray34); org.junit.Assert.assertNotNull(wildcardClassArray35); }
public void test1027() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1027"); short[] shortArray2 = new short[] { (byte) 1, (short) -1 }; short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); org.apache.commons.lang3.ArrayUtils.reverse(shortArray3); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray3, (short) (byte) 1); short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray3, "{false,false,true}"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[-1, 1]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); }
public void test1028() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1028"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{100}" + "'", str1, "{100}"); }
public void test1029() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1029"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?> wildcardClass16 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass19 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray21 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; wildcardClassArray22[0] = wildcardClass16; wildcardClassArray22[1] = wildcardClass19; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray22); java.lang.Class<?> wildcardClass30 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass33 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray35 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35; wildcardClassArray36[0] = wildcardClass30; wildcardClassArray36[1] = wildcardClass33; java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray36); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray36, false); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray36); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray44); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray44); java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClass16); org.junit.Assert.assertNotNull(wildcardClass19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(wildcardClass30); org.junit.Assert.assertNotNull(wildcardClass33); org.junit.Assert.assertNotNull(classArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); }
public void test1030() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1030"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) ' ', "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.lang" + "'", str2, "java.lang"); }
public void test1031() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1031"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{100.0,10.0,52.0,1.0,-1" + "'", str1, "{100.0,10.0,52.0,1.0,-1"); }
public void test1032() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1032"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("false"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "false" + "'", str1, "false"); }
public void test1033() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1033"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (-1.0d)); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap12 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) doubleArray6); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, '0.0', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1034() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1034"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); // The following exception was thrown during execution in test generation try { long[] longArray39 = org.apache.commons.lang3.ArrayUtils.add(longArray36, (int) 'a', (long) (short) 1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 9"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); }
public void test1035() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1035"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); java.lang.reflect.AnnotatedElement[] annotatedElementArray17 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.reflect.AnnotatedElement[]) wildcardClassArray13, 1, (int) (byte) -1); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(annotatedElementArray17); }
public void test1036() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1036"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,-1,10,0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,-1,10,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1037() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1037"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{true,false,false,false,false,false}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{true,false,false,false,false,false}" + "'", str1, "{true,false,false,false,false,false}"); }
public void test1038() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1038"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray7); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7); byte[] byteArray14 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray14); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 1, (-1)); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 1, 0); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray14, (byte) 0, 10); byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray7, byteArray14); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(byteArray14, (byte) 0); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray14, "{0.0,0.0,0.0,100"); // The following exception was thrown during execution in test generation try { byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.remove(byteArray14, 1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100, 100]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); }
public void test1039() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1039"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray10, (double) 'a'); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) 0.0f); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 0); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 0.0, 100.0, 0.0]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); }
public void test1040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1040"); boolean[] booleanArray6 = new boolean[] { true, false, false, false, false, false }; java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray7, false); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray7); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray7, "Object[]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[true, false, false, false, false, false]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Boolean[]" + "'", str12, "Boolean[]"); }
public void test1041() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1041"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Cloneable[][][][]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [[[[LCloneable;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1042() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1042"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("0,100", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0,100"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1043() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1043"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(obj0, "{a, , ,#}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{a, , ,#}" + "'", str2, "{a, , ,#}"); }
public void test1044() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1044"); java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[][] shortArray21 = new java.lang.Short[][] { shortArray6, shortArray13, shortArray20 }; java.lang.Short[][] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray21); float[] floatArray29 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray33 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray33); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray29, floatArray33); java.lang.Float[] floatArray36 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29); java.lang.Float[] floatArray37 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29); java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray29); int int40 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray23, (java.lang.Object) floatArray38, (int) '4'); float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray38, (float) 'a'); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(floatArray36); org.junit.Assert.assertNotNull(floatArray37); org.junit.Assert.assertNotNull(floatArray38); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); org.junit.Assert.assertNotNull(floatArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[100.0, 10.0, 52.0, 1.0, -1.0]"); }
public void test1045() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1045"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray12); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) 1); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4); }
public void test1046() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1046"); byte[] byteArray0 = new byte[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0); int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 100); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) 'a', (int) (byte) 0); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, (int) (short) 100, (int) (short) 0); java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray9); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray9, "{100.0,10.0,52.0,1.0,-1.0}"); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true); org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, ""); }
public void test1047() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1047"); java.lang.Long[] longArray4 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) (short) -1); java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.toObject(longArray7); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray7, "{1.0}"); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray7); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray7, (long) (short) 1); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100, 10, 0, 0]"); }
public void test1048() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1048"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.String str4 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClass2, "hi!"); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertEquals("'" + str4 + "' != '" + "class [[[F" + "'", str4, "class [[[F"); }
public void test1049() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1049"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(obj0, "{10.0,100.0}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{10.0,100.0}" + "'", str2, "{10.0,100.0}"); }
public void test1050() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1050"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{10.0,100.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10.0,100" + "'", str1, "{10.0,100"); }
public void test1051() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1051"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); long[] longArray14 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray16 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 100L); long[] longArray19 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, (int) (short) -1, (int) (short) 1); long[] longArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray14); long[] longArray22 = org.apache.commons.lang3.ArrayUtils.remove(longArray14, 0); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, (int) (short) 10, (int) (byte) 0); long[] longArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray25, (long) (short) -1); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) strList5, (java.lang.Object) longArray25); java.util.List<java.lang.Class<?>> wildcardClassList29 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.List<java.lang.Class<?>> wildcardClassList30 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(wildcardClassList8); org.junit.Assert.assertNotNull(wildcardClassList9); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[-1]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[]"); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(wildcardClassList29); org.junit.Assert.assertNotNull(wildcardClassList30); }
public void test1052() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1052"); java.lang.Long[] longArray4 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4, (long) (short) -1); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.remove(longArray7, 0); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.subarray(longArray9, (int) '4', 10); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray9, 10L); long[] longArray19 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray19, 100L); long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray19, (int) (short) -1, (int) (short) 1); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray19); long[] longArray27 = org.apache.commons.lang3.ArrayUtils.remove(longArray19, 0); long[] longArray30 = org.apache.commons.lang3.ArrayUtils.subarray(longArray19, (int) (short) 10, (int) (byte) 0); long[] longArray35 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray35, 100L); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.addAll(longArray30, longArray37); java.lang.Long[] longArray39 = org.apache.commons.lang3.ArrayUtils.toObject(longArray37); long[] longArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray37); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray37, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray47 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray47); int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray48, (long) (byte) 10); long[] longArray51 = org.apache.commons.lang3.ArrayUtils.addAll(longArray37, longArray48); long[] longArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray48, 1L); long[] longArray54 = org.apache.commons.lang3.ArrayUtils.addAll(longArray14, longArray48); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[10, 0, 0]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[0, 0]"); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray39); org.junit.Assert.assertNotNull(longArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "long[]" + "'", str42, "long[]"); org.junit.Assert.assertNotNull(longArray47); org.junit.Assert.assertNotNull(longArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1); org.junit.Assert.assertNotNull(longArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray53), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, 0, 100, 10, 0, 0]"); }
public void test1053() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1053"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("org.apache.commons.lang3", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: org.apache.commons.lang3"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1054() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1054"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{-1,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1,1}" + "'", str1, "{-1,1}"); }
public void test1055() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1055"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (byte) 10, (int) (byte) 10); short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.add(shortArray8, (short) 0); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]"); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 0]"); }
public void test1056() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1056"); java.lang.String[] strArray2 = new java.lang.String[] { "Object[]", "{true,true,false,false,true,false}" }; java.lang.String[] strArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray2); java.lang.String[] strArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray3); java.lang.String[] strArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray3); java.lang.String[] strArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5); java.lang.String[] strArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5); java.lang.String[] strArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray5); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) strArray8, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(strArray2); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertNotNull(strArray6); org.junit.Assert.assertNotNull(strArray7); org.junit.Assert.assertNotNull(strArray8); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.lang" + "'", str10, "java.lang"); }
public void test1057() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1057"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{100,100,10,0,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{100,100,10,0,0}" + "'", str1, "{100,100,10,0,0}"); }
public void test1058() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1058"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "#", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: #"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1059() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1059"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{100.0,10.0,52.0,1.0,-1", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100/0,10/0,52/0,1/0,-1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1060() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1060"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 0); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.add(byteArray14, 0, (byte) 10); byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 100, -1, -1, 1]"); }
public void test1061() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1061"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("4"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 4"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1062() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1062"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) ' '); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) ' ', 0); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray10, "Object[]"); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, true, (int) (byte) 1); boolean[] booleanArray24 = null; boolean[] booleanArray28 = new boolean[] { false, false, true }; boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray28); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray28); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray24, booleanArray30); boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.add(booleanArray30, false); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray30, true); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray10, booleanArray30); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, ""); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertNotNull(booleanArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); }
public void test1063() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1063"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{-1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1}" + "'", str1, "{-1}"); }
public void test1064() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1064"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10.0,100"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0,100" + "'", str1, "0,100"); }
public void test1065() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1065"); short[] shortArray2 = new short[] { (byte) 1, (short) -1 }; short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); org.apache.commons.lang3.ArrayUtils.reverse(shortArray3); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray3, (short) (byte) 100); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 10, 100); java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6); int int11 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) shortArray6); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray6, (int) (short) 10, 100); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray6, (short) 0, (int) '#'); short[] shortArray18 = null; short[] shortArray21 = new short[] { (byte) 1, (short) -1 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray21); org.apache.commons.lang3.ArrayUtils.reverse(shortArray22); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray22); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.remove(shortArray24, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray26); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray26, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray6, shortArray26); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains(shortArray6, (short) 10); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[-1]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, ""); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); }
public void test1066() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1066"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray11 = null; boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray10, byteArray11); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray11); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); }
public void test1067() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1067"); java.lang.String[] strArray2 = new java.lang.String[] { "Object[]", "{true,true,false,false,true,false}" }; java.lang.String[] strArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray2); java.lang.Class<?>[] wildcardClassArray4 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) strArray2); java.lang.Class<?>[] wildcardClassArray5 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray4); org.junit.Assert.assertNotNull(strArray2); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); }
public void test1068() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1068"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); org.apache.commons.lang3.ArrayUtils.reverse(shortArray0); short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0); short[] shortArray4 = null; short[] shortArray7 = new short[] { (byte) 1, (short) -1 }; short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray7); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray8); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.remove(shortArray10, (int) (byte) 1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) 100); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray10, (short) (byte) 1); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray3, shortArray16); short[] shortArray18 = null; short[] shortArray21 = new short[] { (byte) 1, (short) -1 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray21); org.apache.commons.lang3.ArrayUtils.reverse(shortArray22); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray22); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.remove(shortArray24, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray26); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray26, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (short) 1, 1); short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) 0); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray16, shortArray32); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray32, (short) -1, (int) 'a'); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[-1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[-1]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, ""); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); }
public void test1069() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1069"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 0); boolean[] booleanArray18 = new boolean[] { false, false, true }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray18); java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray18); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray5, (java.lang.Object) booleanArray18); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray18, false); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray25, ""); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, ""); }
public void test1070() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1070"); java.lang.Long[] longArray4 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray5, 0L); long[] longArray8 = null; long[] longArray9 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray8); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.add(longArray9, (long) '4'); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray11, (long) ' ', (int) (short) 10); java.lang.Long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toObject(longArray11); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) longArray11, "float[][][]"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 10, 0]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 10, 0, 0, 52]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "long[]" + "'", str17, "long[]"); }
public void test1071() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1071"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray4); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray4, "{10.0,100.0}"); java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray4); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(objArray7); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Double[]" + "'", str11, "Double[]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); }
public void test1072() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1072"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (short) 1, 1); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray14, (short) 0); org.apache.commons.lang3.ArrayUtils.reverse(shortArray14); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]"); }
public void test1073() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1073"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); int[] intArray10 = new int[] { '#', (short) 1 }; int[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10); int[] intArray14 = new int[] { '#', (short) 1 }; int[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray11, intArray15); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, (int) (byte) 10); int[] intArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray18, 0); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, (java.lang.Object) 0, (int) (byte) 100); char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); char[] charArray29 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29); char[] charArray31 = new char[] {}; char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray31, (int) 'a', (int) (byte) 0); char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray31); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray31); java.lang.String str38 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray31, "{-1}"); char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray31); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray24); char[] charArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray24); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, , , #]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[35, 1]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[35, 1]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 1]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 1]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]"); org.junit.Assert.assertNotNull(charArray34); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]"); org.junit.Assert.assertNotNull(charArray35); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]"); org.junit.Assert.assertEquals("'" + str38 + "' != '" + "char[]" + "'", str38, "char[]"); org.junit.Assert.assertNotNull(charArray39); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, , , #]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertNotNull(charArray41); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray41), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray41), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray41), "[a, , , #]"); }
public void test1074() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1074"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("4"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "4" + "'", str1, "4"); }
public void test1075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1075"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?> wildcardClass16 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass19 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray21 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; wildcardClassArray22[0] = wildcardClass16; wildcardClassArray22[1] = wildcardClass19; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray22); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray22, false); java.lang.Class<?>[] wildcardClassArray30 = null; boolean boolean32 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray22, wildcardClassArray30, true); java.lang.Class<?>[] wildcardClassArray33 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray30); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClass16); org.junit.Assert.assertNotNull(wildcardClass19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); org.junit.Assert.assertNull(wildcardClassArray33); }
public void test1076() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1076"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray0, (short) 100); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.clone(shortArray3); java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4); int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray4, (short) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) shortArray4, "false"); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "short[]" + "'", str9, "short[]"); }
public void test1077() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1077"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray33, 1L); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray38, (long) 0, 0); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); }
public void test1078() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1078"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, "{1"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{1" + "'", str2, "{1"); }
public void test1079() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1079"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray7, (byte) 1); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 1); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 1, "{35,1}"); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "java.lang" + "'", str14, "java.lang"); }
public void test1080() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1080"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("0,100"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0,100" + "'", str1, "0,100"); }
public void test1081() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1081"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{1,-1,10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,-1,10,0}" + "'", str1, "{1,-1,10,0}"); }
public void test1082() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1082"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10.0,100"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10/0,100"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1083() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1083"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 }; org.apache.commons.lang3.ArrayUtils arrayUtils2 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils2 }; org.apache.commons.lang3.ArrayUtils arrayUtils4 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils4 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray1, arrayUtilsArray3, arrayUtilsArray5 }; org.apache.commons.lang3.ArrayUtils arrayUtils7 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils7 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray9 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray6, arrayUtilsArray8); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray9); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClassArray12); }
public void test1084() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1084"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("Object[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1085() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1085"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{true,false,false,false,false,false}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {true,false,false,false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1086() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1086"); double[] doubleArray6 = new double[] { 1.0d, (byte) 10, 1, 0.0f, (short) 100, (short) 1 }; double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray6, (int) (short) 100, (int) (short) 100); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray9, (double) 0.0f); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) (byte) 100); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (byte) 100, 0.0d); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 1L, (double) (byte) 0); double[] doubleArray24 = new double[] { (-1.0d), (byte) 100, (short) 100, (byte) 10 }; double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray24); int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (-1.0f), 0, (double) (-1.0f)); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray25); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray25, "Cloneable[][][][]"); boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray25); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 100.0, 100.0, -1.0]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 100.0, 100.0, -1.0]"); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, ""); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false); }
public void test1087() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1087"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{-1,10,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1088() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1088"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("0,100", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0,100"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1089() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1089"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (-1.0d)); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) '#'); // The following exception was thrown during execution in test generation try { double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (int) '4', 0.0d); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1090() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1090"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5); java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5); char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, '4'); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray5); java.lang.Object[] objArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray5); java.lang.Class<?>[] wildcardClassArray12 = org.apache.commons.lang3.ClassUtils.toClass(objArray11); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, , , #]"); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(objArray11); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[a, , , #]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[a, , , #]"); org.junit.Assert.assertNotNull(wildcardClassArray12); }
public void test1091() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1091"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1.0,100.0,100.0,10"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1/0,100/0,100/0,10"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1092() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1092"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("org.apache.commons.lang3"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "lang3" + "'", str1, "lang3"); }
public void test1093() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1093"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray8, (short) 0); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); }
public void test1094() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1094"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray12 = null; short[] shortArray15 = new short[] { (byte) 1, (short) -1 }; short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15); org.apache.commons.lang3.ArrayUtils.reverse(shortArray16); short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray16); short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.remove(shortArray18, (int) (byte) 1); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray18, (short) (byte) 10); java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray23); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) str11, (java.lang.Object) shortArray23); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[-1]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[-1, 1]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); }
public void test1095() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1095"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 0); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray12, (byte) 10); java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray17); }
public void test1096() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1096"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Object obj4 = null; int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray2, obj4, (int) (byte) 10); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray2); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) wildcardClassArray7, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Class[]" + "'", str9, "Class[]"); }
public void test1097() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1097"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) byteArray13, "{false,true,true}"); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Byte[]" + "'", str15, "Byte[]"); }
public void test1098() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1098"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{100,100,10,0,0}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100,100,10,0,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1099() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1099"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, true); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray7, true); java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray7); java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { false, false, true, true, false, false }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray18); boolean[] booleanArray26 = new boolean[] { true, true, false, false, true, false }; boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray26); boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray26); boolean[] booleanArray35 = new boolean[] { true, true, false, false, true, false }; boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray35); boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35); java.lang.Boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray35); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38); int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray39, false, (int) ' '); boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray39, (int) ' ', 0); java.lang.Boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39); java.lang.String str48 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray39, "Object[]"); boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray39); boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray28, booleanArray39); boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray50); boolean[] booleanArray58 = new boolean[] { true, true, false, false, true, false }; boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray58); boolean[] booleanArray60 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray58); java.lang.String str61 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray58); boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray58); boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray50, booleanArray62); int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray50, true); boolean[] booleanArray72 = new boolean[] { true, true, false, false, true, false }; boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray72); boolean[] booleanArray74 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray72); java.lang.String str75 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray72); boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray72); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray50, booleanArray76); boolean[] booleanArray78 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray18, booleanArray76); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, true, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, true, false, false, true, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertNotNull(booleanArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[]"); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, ""); org.junit.Assert.assertNotNull(booleanArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertNotNull(booleanArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[true, true, false, false, true, false]"); org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{true,true,false,false,true,false}" + "'", str61, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(booleanArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[true, true, false, false, true, false, true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10); org.junit.Assert.assertNotNull(booleanArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertNotNull(booleanArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray74), "[true, true, false, false, true, false]"); org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{true,true,false,false,true,false}" + "'", str75, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(booleanArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertNotNull(booleanArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray78), "[false, false, true, true, false, false, true, true, false, false, true, false]"); }
public void test1100() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1100"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{100.0,10.0,52.0,1.0,-1"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100/0,10/0,52/0,1/0,-1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1101() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1101"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(" "); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1102() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1102"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray2, (byte) 100); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) byteArray4, "false"); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[100]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "byte[]" + "'", str6, "byte[]"); }
public void test1103() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1103"); double[] doubleArray2 = new double[] { 0.0d, 1.0d }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 0L, 1.0d); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 1, (int) (short) 0); double[] doubleArray11 = new double[] { 10L, (byte) 100 }; int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 100); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, 100.0d, (double) (byte) 0); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray11); int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (byte) 10, 0.0d); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (byte) 0, (double) (-1)); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray24, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 1.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 1.0]"); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); }
public void test1104() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1104"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); java.lang.Class<?> wildcardClass18 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass21 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray23 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass18; wildcardClassArray24[1] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?> wildcardClass32 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass35 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray37 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; wildcardClassArray38[0] = wildcardClass32; wildcardClassArray38[1] = wildcardClass35; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); java.lang.Class<?> wildcardClass46 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass49 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray51 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; wildcardClassArray52[0] = wildcardClass46; wildcardClassArray52[1] = wildcardClass49; java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray52); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray52, false); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray52); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, wildcardClassArray60); java.lang.Class<?>[] wildcardClassArray62 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray60); boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray62); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass18); org.junit.Assert.assertNotNull(wildcardClass21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClass32); org.junit.Assert.assertNotNull(wildcardClass35); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClass46); org.junit.Assert.assertNotNull(wildcardClass49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true); }
public void test1105() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1105"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("class [[[F"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "class[[[F" + "'", str1, "class[[[F"); }
public void test1106() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1106"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); java.lang.Boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray3); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray3, true); boolean[] booleanArray8 = null; boolean[] booleanArray12 = new boolean[] { false, false, true }; boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray12); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray14); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray14, false); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray17, false); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray17); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray17, true); boolean[] booleanArray29 = new boolean[] { true, true, false, false, true, false }; boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray29); boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray29); java.lang.Boolean[] booleanArray32 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29); boolean[] booleanArray39 = new boolean[] { true, true, false, false, true, false }; boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray39); boolean[] booleanArray41 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray39); java.lang.Boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray39); boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray42); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray43, false, (int) ' '); boolean[] booleanArray49 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray43, (int) ' ', 0); boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray49); boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray29, booleanArray49); boolean[] booleanArray53 = org.apache.commons.lang3.ArrayUtils.add(booleanArray49, false); boolean[] booleanArray60 = new boolean[] { true, false, false, false, false, false }; java.lang.Boolean[] booleanArray61 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray60); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray60); int int65 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray60, false, (int) 'a'); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray60); boolean boolean67 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray53, booleanArray60); boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray53); boolean[] booleanArray69 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray17, booleanArray53); java.lang.String str71 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray17, "{100.0,10.0,52.0,1.0,-1"); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray32); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertNotNull(booleanArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5); org.junit.Assert.assertNotNull(booleanArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[]"); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]"); org.junit.Assert.assertNotNull(booleanArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray53), "[false]"); org.junit.Assert.assertNotNull(booleanArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray60), "[true, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray61); org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false); org.junit.Assert.assertNotNull(booleanArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray69), "[false, false, true, false, false]"); org.junit.Assert.assertEquals("'" + str71 + "' != '" + "boolean[]" + "'", str71, "boolean[]"); }
public void test1107() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1107"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("0,100"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1108() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1108"); boolean[] booleanArray2 = new boolean[] { false, true }; boolean[] booleanArray5 = new boolean[] { false, true }; boolean[] booleanArray8 = new boolean[] { false, true }; boolean[][] booleanArray9 = new boolean[][] { booleanArray2, booleanArray5, booleanArray8 }; boolean[] booleanArray12 = new boolean[] { false, true }; boolean[] booleanArray15 = new boolean[] { false, true }; boolean[] booleanArray18 = new boolean[] { false, true }; boolean[][] booleanArray19 = new boolean[][] { booleanArray12, booleanArray15, booleanArray18 }; boolean[] booleanArray22 = new boolean[] { false, true }; boolean[] booleanArray25 = new boolean[] { false, true }; boolean[] booleanArray28 = new boolean[] { false, true }; boolean[][] booleanArray29 = new boolean[][] { booleanArray22, booleanArray25, booleanArray28 }; boolean[] booleanArray32 = new boolean[] { false, true }; boolean[] booleanArray35 = new boolean[] { false, true }; boolean[] booleanArray38 = new boolean[] { false, true }; boolean[][] booleanArray39 = new boolean[][] { booleanArray32, booleanArray35, booleanArray38 }; boolean[][][] booleanArray40 = new boolean[][][] { booleanArray9, booleanArray19, booleanArray29, booleanArray39 }; double[] doubleArray47 = new double[] { 1.0d, (byte) 10, 1, 0.0f, (short) 100, (short) 1 }; double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, (int) (short) 100, (int) (short) 100); int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, 0.0d, (double) (short) 0); boolean[][][] booleanArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray40, (java.lang.Object) (short) 0); java.lang.Class<?>[] wildcardClassArray55 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray54); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertNotNull(booleanArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray32), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3); org.junit.Assert.assertNotNull(booleanArray54); org.junit.Assert.assertNotNull(wildcardClassArray55); }
public void test1109() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1109"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("Object[]", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Object"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1110() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1110"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray0, (int) (short) 1, (int) '4'); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(shortArray4, (short) 0); java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4); short[] shortArray8 = null; short[] shortArray11 = new short[] { (byte) 1, (short) -1 }; short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray11); org.apache.commons.lang3.ArrayUtils.reverse(shortArray12); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray12); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.remove(shortArray14, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray16); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray16, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, (int) (short) 1, 1); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) 0); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray24); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray24, (short) 1, (int) (byte) 10); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, ""); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); }
public void test1111() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1111"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10" + "'", str1, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10"); }
public void test1112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1112"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); byte[] byteArray13 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray13); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray13, (byte) 0); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.add(byteArray13, 0, (byte) -1); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray19, (byte) 10); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray19); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray19); byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray19); byte[] byteArray26 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray26); int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray26, (byte) 0); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray26, (byte) 1, (-1)); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray26, (byte) 1, 0); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray26, (byte) 0, 10); byte[] byteArray39 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray19, byteArray26); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray26, (byte) -1); byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray26); java.lang.Byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray26); byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray11, byteArray26); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100]"); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(byteArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, 100, 100]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertNotNull(byteArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[100]"); org.junit.Assert.assertNotNull(byteArray43); org.junit.Assert.assertNotNull(byteArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 100, -1, -1, 1, 100]"); }
public void test1113() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1113"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{0.0,0.0,0.0,100.0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}" + "'", str1, "0}"); }
public void test1114() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1114"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 10); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray13); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray17); }
public void test1115() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1115"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "0,100", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0,100"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1116() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1116"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); short[] shortArray17 = new short[] { (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray17, (short) (byte) 0); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray17, (short) (byte) 100, 0); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray17, (short) (byte) 10); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(shortArray17, (short) (byte) -1); float[] floatArray33 = new float[] { (-1L), 1L, 1.0f, ' ', (byte) 100, (-1L) }; java.lang.Float[] floatArray34 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) boolean26, (java.lang.Object) floatArray34); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray5, (java.lang.Object) floatArray34); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(floatArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[-1.0, 1.0, 1.0, 32.0, 100.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray34); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); }
public void test1117() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1117"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8); java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray8); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray10, "{10,100,-1,-1,1}"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Boolean[]" + "'", str12, "Boolean[]"); }
public void test1118() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1118"); double[] doubleArray6 = new double[] { 1.0d, (byte) 10, 1, 0.0f, (short) 100, (short) 1 }; double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray6, (int) (short) 100, (int) (short) 100); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) (byte) 0, (double) (byte) 10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray6, (double) 10.0f, (double) (-1)); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray6, 0); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray17); double[] doubleArray21 = new double[] { 0.0d, 1.0d }; boolean boolean24 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray21, (double) 0L, 1.0d); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray21, (double) (byte) 0); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) 1.0f, 100.0d); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray18, doubleArray21); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) (-1.0f)); java.lang.String str34 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray32, "#"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 1.0, -1.0]"); org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, ""); }
public void test1119() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1119"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,-1,10,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,-1,10,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1120() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1120"); float[] floatArray0 = new float[] {}; float[] floatArray1 = new float[] {}; float[][] floatArray2 = new float[][] { floatArray0, floatArray1 }; float[][][] floatArray3 = new float[][][] { floatArray2 }; float[] floatArray6 = new float[] { (short) 1, 0L }; float[][] floatArray7 = new float[][] { floatArray6 }; float[] floatArray10 = new float[] { (short) 1, 0L }; float[][] floatArray11 = new float[][] { floatArray10 }; float[] floatArray14 = new float[] { (short) 1, 0L }; float[][] floatArray15 = new float[][] { floatArray14 }; float[] floatArray18 = new float[] { (short) 1, 0L }; float[][] floatArray19 = new float[][] { floatArray18 }; float[] floatArray22 = new float[] { (short) 1, 0L }; float[][] floatArray23 = new float[][] { floatArray22 }; float[][][] floatArray24 = new float[][][] { floatArray7, floatArray11, floatArray15, floatArray19, floatArray23 }; float[][][] floatArray25 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray3, floatArray24); float[] floatArray26 = new float[] {}; float[] floatArray27 = new float[] {}; float[][] floatArray28 = new float[][] { floatArray26, floatArray27 }; float[][][] floatArray29 = new float[][][] { floatArray28 }; float[] floatArray32 = new float[] { (short) 1, 0L }; float[][] floatArray33 = new float[][] { floatArray32 }; float[] floatArray36 = new float[] { (short) 1, 0L }; float[][] floatArray37 = new float[][] { floatArray36 }; float[] floatArray40 = new float[] { (short) 1, 0L }; float[][] floatArray41 = new float[][] { floatArray40 }; float[] floatArray44 = new float[] { (short) 1, 0L }; float[][] floatArray45 = new float[][] { floatArray44 }; float[] floatArray48 = new float[] { (short) 1, 0L }; float[][] floatArray49 = new float[][] { floatArray48 }; float[][][] floatArray50 = new float[][][] { floatArray33, floatArray37, floatArray41, floatArray45, floatArray49 }; float[][][] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray50); java.lang.String str53 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) floatArray50, ""); float[][][] floatArray54 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray25, floatArray50); java.lang.String str56 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray54, "{10.0,100.0}"); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray1), "[]"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertNotNull(floatArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray19); org.junit.Assert.assertNotNull(floatArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray23); org.junit.Assert.assertNotNull(floatArray24); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[]"); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[]"); org.junit.Assert.assertNotNull(floatArray28); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertNotNull(floatArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray32), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray33); org.junit.Assert.assertNotNull(floatArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray37); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray41); org.junit.Assert.assertNotNull(floatArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray45); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray49); org.junit.Assert.assertNotNull(floatArray50); org.junit.Assert.assertNotNull(floatArray51); org.junit.Assert.assertEquals("'" + str53 + "' != '" + "float[][][]" + "'", str53, "float[][][]"); org.junit.Assert.assertNotNull(floatArray54); org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, ""); }
public void test1121() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1121"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1122() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1122"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass6 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray8 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray9 = (java.lang.Class<?>[]) classArray8; wildcardClassArray9[0] = wildcardClass3; wildcardClassArray9[1] = wildcardClass6; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray9); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray9); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray15); java.lang.Class<?> wildcardClass19 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass22 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray24 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray25 = (java.lang.Class<?>[]) classArray24; wildcardClassArray25[0] = wildcardClass19; wildcardClassArray25[1] = wildcardClass22; java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray25); java.lang.Class<?> wildcardClass33 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass36 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray38 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; wildcardClassArray39[0] = wildcardClass33; wildcardClassArray39[1] = wildcardClass36; java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Class<?> wildcardClass47 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass50 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray52 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52; wildcardClassArray53[0] = wildcardClass47; wildcardClassArray53[1] = wildcardClass50; java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray53); boolean boolean60 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray44, wildcardClassArray53, false); java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray53); boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray61); boolean boolean64 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray16, wildcardClassArray30, true); java.lang.Class<?>[] wildcardClassArray65 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray16); boolean boolean66 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray16); java.lang.Class<?>[] wildcardClassArray67 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray0); org.junit.Assert.assertNotNull(wildcardClass3); org.junit.Assert.assertNotNull(wildcardClass6); org.junit.Assert.assertNotNull(classArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClass19); org.junit.Assert.assertNotNull(wildcardClass22); org.junit.Assert.assertNotNull(classArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(wildcardClass33); org.junit.Assert.assertNotNull(wildcardClass36); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertNotNull(wildcardClass47); org.junit.Assert.assertNotNull(wildcardClass50); org.junit.Assert.assertNotNull(classArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false); org.junit.Assert.assertNotNull(wildcardClassArray65); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertNull(wildcardClassArray67); }
public void test1123() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1123"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Integer[]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [LInteger;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1124() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1124"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) -1, (short) 10 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) 0); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray4, (short) -1); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray6); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray6); int[] intArray11 = new int[] { '#', (short) 1 }; int[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray11); int[] intArray15 = new int[] { '#', (short) 1 }; int[] intArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray15); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray12, intArray16); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray12); int[] intArray21 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, (int) (byte) -1, 100); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray8, (java.lang.Object) intArray21, (int) (byte) -1); java.lang.Short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray8); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray8); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 0); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 10]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[35, 1]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[35, 1]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[35, 1]"); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, 1]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[10]"); }
public void test1125() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1125"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); java.lang.Byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); long[] longArray19 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray21 = org.apache.commons.lang3.ArrayUtils.add(longArray19, 100L); long[] longArray24 = org.apache.commons.lang3.ArrayUtils.subarray(longArray19, (int) (short) -1, (int) (short) 1); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray19); long[] longArray27 = org.apache.commons.lang3.ArrayUtils.remove(longArray19, 0); long[] longArray30 = org.apache.commons.lang3.ArrayUtils.subarray(longArray19, (int) (short) 10, (int) (byte) 0); java.lang.Long[] longArray31 = org.apache.commons.lang3.ArrayUtils.toObject(longArray19); java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray31); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32, (long) (short) 100); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray5, (java.lang.Object) (short) 100); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray21), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1, 10, -1, 100]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); }
public void test1126() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1126"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) '#', (int) (byte) 10); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) (byte) 10, "{10.0,100.0}"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "java.lang" + "'", str16, "java.lang"); }
public void test1127() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1127"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); java.lang.Long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray37); }
public void test1128() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1128"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); java.lang.Object[] objArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) strListArray54); java.util.AbstractList<java.lang.String>[] strListArray56 = org.apache.commons.lang3.ArrayUtils.clone((java.util.AbstractList<java.lang.String>[]) strListArray54); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.util.RandomAccess[]) strListArray54); java.lang.String[] strArray62 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>(); boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62); java.util.List<java.lang.Class<?>> wildcardClassList65 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList63); java.util.List<java.lang.Class<?>> wildcardClassList66 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList63); java.util.List<java.lang.Class<?>> wildcardClassList67 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList63); long[] longArray72 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray74 = org.apache.commons.lang3.ArrayUtils.add(longArray72, 100L); long[] longArray77 = org.apache.commons.lang3.ArrayUtils.subarray(longArray72, (int) (short) -1, (int) (short) 1); long[] longArray78 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray72); long[] longArray80 = org.apache.commons.lang3.ArrayUtils.remove(longArray72, 0); long[] longArray83 = org.apache.commons.lang3.ArrayUtils.subarray(longArray72, (int) (short) 10, (int) (byte) 0); long[] longArray85 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray83, (long) (short) -1); boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) strList63, (java.lang.Object) longArray83); java.util.ArrayList<java.lang.String>[] strListArray87 = org.apache.commons.lang3.ArrayUtils.add(strListArray54, strList63); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertNotNull(objArray55); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]]"); org.junit.Assert.assertNotNull(strListArray56); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertNotNull(strArray62); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(wildcardClassList65); org.junit.Assert.assertNotNull(wildcardClassList66); org.junit.Assert.assertNotNull(wildcardClassList67); org.junit.Assert.assertNotNull(longArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray74), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray77), "[-1]"); org.junit.Assert.assertNotNull(longArray78); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray78), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray83), "[]"); org.junit.Assert.assertNotNull(longArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray85), "[]"); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false); org.junit.Assert.assertNotNull(strListArray87); }
public void test1129() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1129"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); org.apache.commons.lang3.ArrayUtils.reverse(shortArray0); short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0); short[] shortArray4 = null; short[] shortArray7 = new short[] { (byte) 1, (short) -1 }; short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray7); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray8); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.remove(shortArray10, (int) (byte) 1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) 100); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray10, (short) (byte) 1); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray3, shortArray16); short[] shortArray18 = null; short[] shortArray21 = new short[] { (byte) 1, (short) -1 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray21); org.apache.commons.lang3.ArrayUtils.reverse(shortArray22); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray22); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.remove(shortArray24, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray26); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray26, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (short) 1, 1); short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) 0); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray16, shortArray32); short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 1); short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray32); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[-1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[-1]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, ""); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]"); org.junit.Assert.assertNotNull(shortArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]"); }
public void test1130() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1130"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); }
public void test1131() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1131"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray7, (int) (byte) 10, (int) (short) 100); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray7); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray7, (double) (-1.0f)); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray7, "{100,100,10,0,0}"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double[]" + "'", str15, "double[]"); }
public void test1132() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1132"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Object obj4 = null; int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray2, obj4, (int) (byte) 10); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray2); java.lang.Byte[] byteArray13 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray13); byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) -1); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 0); byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.add(byteArray22, 0, (byte) 10); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray2, (java.lang.Object) byteArray25, 8); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray25); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); }
public void test1133() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1133"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray12); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 0, 10); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); }
public void test1134() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1134"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray4 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) shortArray6); java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray6); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) shortArray6, "{100,10,0}"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Short[]" + "'", str10, "Short[]"); }
public void test1135() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1135"); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray0 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray4 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray0, arrayUtilsArray1, arrayUtilsArray2, arrayUtilsArray3, arrayUtilsArray4 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray7 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray10 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray11 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray6, arrayUtilsArray7, arrayUtilsArray8, arrayUtilsArray9, arrayUtilsArray10 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray12 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray13 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray15 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray16 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray17 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray12, arrayUtilsArray13, arrayUtilsArray14, arrayUtilsArray15, arrayUtilsArray16 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray18 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray19 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray20 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray21 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray22 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray23 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray18, arrayUtilsArray19, arrayUtilsArray20, arrayUtilsArray21, arrayUtilsArray22 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray24 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray25 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray26 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray27 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray28 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray29 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray24, arrayUtilsArray25, arrayUtilsArray26, arrayUtilsArray27, arrayUtilsArray28 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray30 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray5, arrayUtilsArray11, arrayUtilsArray17, arrayUtilsArray23, arrayUtilsArray29 }; boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(arrayUtilsArray30); org.apache.commons.lang3.ArrayUtils arrayUtils32 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray33 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils32 }; org.apache.commons.lang3.ArrayUtils arrayUtils34 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray35 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils34 }; org.apache.commons.lang3.ArrayUtils arrayUtils36 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray37 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils36 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray38 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray33, arrayUtilsArray35, arrayUtilsArray37 }; org.apache.commons.lang3.ArrayUtils arrayUtils39 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray40 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils39 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray41 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray38, arrayUtilsArray40); java.lang.Class<?>[] wildcardClassArray42 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray41); org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray43 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray30, arrayUtilsArray41); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(arrayUtilsArray30); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray45 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray46 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray47 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray48 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray49 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray50 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray45, arrayUtilsArray46, arrayUtilsArray47, arrayUtilsArray48, arrayUtilsArray49 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray51 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray52 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray53 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray54 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray55 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray56 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray51, arrayUtilsArray52, arrayUtilsArray53, arrayUtilsArray54, arrayUtilsArray55 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray57 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray58 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray59 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray60 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray61 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray62 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray57, arrayUtilsArray58, arrayUtilsArray59, arrayUtilsArray60, arrayUtilsArray61 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray63 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray64 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray65 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray66 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray67 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray68 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray63, arrayUtilsArray64, arrayUtilsArray65, arrayUtilsArray66, arrayUtilsArray67 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray69 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray70 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray71 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray72 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray73 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray74 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray69, arrayUtilsArray70, arrayUtilsArray71, arrayUtilsArray72, arrayUtilsArray73 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray75 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray50, arrayUtilsArray56, arrayUtilsArray62, arrayUtilsArray68, arrayUtilsArray74 }; boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(arrayUtilsArray75); org.apache.commons.lang3.ArrayUtils arrayUtils77 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray78 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils77 }; org.apache.commons.lang3.ArrayUtils arrayUtils79 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray80 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils79 }; org.apache.commons.lang3.ArrayUtils arrayUtils81 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray82 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils81 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray83 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray78, arrayUtilsArray80, arrayUtilsArray82 }; org.apache.commons.lang3.ArrayUtils arrayUtils84 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray85 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils84 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray86 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray83, arrayUtilsArray85); java.lang.Class<?>[] wildcardClassArray87 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray86); org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray88 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray75, arrayUtilsArray86); org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray89 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray30, arrayUtilsArray86); org.junit.Assert.assertNotNull(arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray4); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray7); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(arrayUtilsArray10); org.junit.Assert.assertNotNull(arrayUtilsArray11); org.junit.Assert.assertNotNull(arrayUtilsArray12); org.junit.Assert.assertNotNull(arrayUtilsArray13); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertNotNull(arrayUtilsArray15); org.junit.Assert.assertNotNull(arrayUtilsArray16); org.junit.Assert.assertNotNull(arrayUtilsArray17); org.junit.Assert.assertNotNull(arrayUtilsArray18); org.junit.Assert.assertNotNull(arrayUtilsArray19); org.junit.Assert.assertNotNull(arrayUtilsArray20); org.junit.Assert.assertNotNull(arrayUtilsArray21); org.junit.Assert.assertNotNull(arrayUtilsArray22); org.junit.Assert.assertNotNull(arrayUtilsArray23); org.junit.Assert.assertNotNull(arrayUtilsArray24); org.junit.Assert.assertNotNull(arrayUtilsArray25); org.junit.Assert.assertNotNull(arrayUtilsArray26); org.junit.Assert.assertNotNull(arrayUtilsArray27); org.junit.Assert.assertNotNull(arrayUtilsArray28); org.junit.Assert.assertNotNull(arrayUtilsArray29); org.junit.Assert.assertNotNull(arrayUtilsArray30); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(arrayUtilsArray33); org.junit.Assert.assertNotNull(arrayUtilsArray35); org.junit.Assert.assertNotNull(arrayUtilsArray37); org.junit.Assert.assertNotNull(arrayUtilsArray38); org.junit.Assert.assertNotNull(arrayUtilsArray40); org.junit.Assert.assertNotNull(arrayUtilsArray41); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertNotNull(arrayUtilsArray43); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertNotNull(arrayUtilsArray45); org.junit.Assert.assertNotNull(arrayUtilsArray46); org.junit.Assert.assertNotNull(arrayUtilsArray47); org.junit.Assert.assertNotNull(arrayUtilsArray48); org.junit.Assert.assertNotNull(arrayUtilsArray49); org.junit.Assert.assertNotNull(arrayUtilsArray50); org.junit.Assert.assertNotNull(arrayUtilsArray51); org.junit.Assert.assertNotNull(arrayUtilsArray52); org.junit.Assert.assertNotNull(arrayUtilsArray53); org.junit.Assert.assertNotNull(arrayUtilsArray54); org.junit.Assert.assertNotNull(arrayUtilsArray55); org.junit.Assert.assertNotNull(arrayUtilsArray56); org.junit.Assert.assertNotNull(arrayUtilsArray57); org.junit.Assert.assertNotNull(arrayUtilsArray58); org.junit.Assert.assertNotNull(arrayUtilsArray59); org.junit.Assert.assertNotNull(arrayUtilsArray60); org.junit.Assert.assertNotNull(arrayUtilsArray61); org.junit.Assert.assertNotNull(arrayUtilsArray62); org.junit.Assert.assertNotNull(arrayUtilsArray63); org.junit.Assert.assertNotNull(arrayUtilsArray64); org.junit.Assert.assertNotNull(arrayUtilsArray65); org.junit.Assert.assertNotNull(arrayUtilsArray66); org.junit.Assert.assertNotNull(arrayUtilsArray67); org.junit.Assert.assertNotNull(arrayUtilsArray68); org.junit.Assert.assertNotNull(arrayUtilsArray69); org.junit.Assert.assertNotNull(arrayUtilsArray70); org.junit.Assert.assertNotNull(arrayUtilsArray71); org.junit.Assert.assertNotNull(arrayUtilsArray72); org.junit.Assert.assertNotNull(arrayUtilsArray73); org.junit.Assert.assertNotNull(arrayUtilsArray74); org.junit.Assert.assertNotNull(arrayUtilsArray75); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true); org.junit.Assert.assertNotNull(arrayUtilsArray78); org.junit.Assert.assertNotNull(arrayUtilsArray80); org.junit.Assert.assertNotNull(arrayUtilsArray82); org.junit.Assert.assertNotNull(arrayUtilsArray83); org.junit.Assert.assertNotNull(arrayUtilsArray85); org.junit.Assert.assertNotNull(arrayUtilsArray86); org.junit.Assert.assertNotNull(wildcardClassArray87); org.junit.Assert.assertNotNull(arrayUtilsArray88); org.junit.Assert.assertNotNull(arrayUtilsArray89); }
public void test1136() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1136"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?> wildcardClass18 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass21 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray23 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass18; wildcardClassArray24[1] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?> wildcardClass32 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass35 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray37 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; wildcardClassArray38[0] = wildcardClass32; wildcardClassArray38[1] = wildcardClass35; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); java.lang.Class<?> wildcardClass46 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass49 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray51 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; wildcardClassArray52[0] = wildcardClass46; wildcardClassArray52[1] = wildcardClass49; java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray52); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray52, false); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray52); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, wildcardClassArray60); boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray29, true); java.lang.Class<?>[] wildcardClassArray64 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap65 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray64); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, 'null', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass18); org.junit.Assert.assertNotNull(wildcardClass21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClass32); org.junit.Assert.assertNotNull(wildcardClass35); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClass46); org.junit.Assert.assertNotNull(wildcardClass49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertNotNull(wildcardClassArray64); }
public void test1137() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1137"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10" + "'", str1, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10"); }
public void test1138() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1138"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("0,0"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0,0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1139() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1139"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Object[]", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [LObject;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1140() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1140"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?> wildcardClass16 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass19 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray21 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; wildcardClassArray22[0] = wildcardClass16; wildcardClassArray22[1] = wildcardClass19; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray22); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray22, false); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray32 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray33 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClass16); org.junit.Assert.assertNotNull(wildcardClass19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); }
public void test1141() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1141"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{35,1}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {35,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1142() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1142"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{a,4, , ,#}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {a,4,,,#}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1143() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1143"); byte[] byteArray0 = new byte[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0); int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 100); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) 'a', (int) (byte) 0); byte[] byteArray8 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8); int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 0); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, 0, (byte) -1); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 10); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray14); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray14); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray19); java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray0); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray21); java.lang.Byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray21); java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray21); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true); org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertNotNull(byteArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); }
public void test1144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1144"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); short[] shortArray15 = null; short[] shortArray18 = new short[] { (byte) 1, (short) -1 }; short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18); org.apache.commons.lang3.ArrayUtils.reverse(shortArray19); short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray19); short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.remove(shortArray21, (int) (byte) 1); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) 100); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray21, (short) (byte) 1); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) wildcardClassArray14, (java.lang.Object) (byte) 1); java.lang.String str30 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (byte) 1, "{100.0,10.0,52.0,1.0,-1"); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[-1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[-1]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Byte" + "'", str30, "Byte"); }
public void test1145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1145"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10.0,100"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0,100" + "'", str1, "0,100"); }
public void test1146() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1146"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray6 = new char[] {}; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) 'a', (int) (byte) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray4, charArray6); char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray6, "{-1}"); char[] charArray14 = org.apache.commons.lang3.ArrayUtils.clone(charArray6); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray6, ' ', (int) (short) 10); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "char[]" + "'", str13, "char[]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); }
public void test1147() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1147"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass6 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray8 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray9 = (java.lang.Class<?>[]) classArray8; wildcardClassArray9[0] = wildcardClass3; wildcardClassArray9[1] = wildcardClass6; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray9); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray9); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray15); java.lang.Class<?> wildcardClass19 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass22 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray24 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray25 = (java.lang.Class<?>[]) classArray24; wildcardClassArray25[0] = wildcardClass19; wildcardClassArray25[1] = wildcardClass22; java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray25); java.lang.Class<?> wildcardClass33 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass36 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray38 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; wildcardClassArray39[0] = wildcardClass33; wildcardClassArray39[1] = wildcardClass36; java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Class<?> wildcardClass47 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass50 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray52 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52; wildcardClassArray53[0] = wildcardClass47; wildcardClassArray53[1] = wildcardClass50; java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray53); boolean boolean60 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray44, wildcardClassArray53, false); java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray53); boolean boolean62 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray61); boolean boolean64 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray16, wildcardClassArray30, true); java.lang.Class<?>[] wildcardClassArray65 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray16); boolean boolean66 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray16); java.lang.Class<?>[] wildcardClassArray67 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClass3); org.junit.Assert.assertNotNull(wildcardClass6); org.junit.Assert.assertNotNull(classArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClass19); org.junit.Assert.assertNotNull(wildcardClass22); org.junit.Assert.assertNotNull(classArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(wildcardClass33); org.junit.Assert.assertNotNull(wildcardClass36); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertNotNull(wildcardClass47); org.junit.Assert.assertNotNull(wildcardClass50); org.junit.Assert.assertNotNull(classArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false); org.junit.Assert.assertNotNull(wildcardClassArray65); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertNotNull(wildcardClassArray67); }
public void test1148() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1148"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (short) 1, 1); short[] shortArray15 = null; short[] shortArray18 = new short[] { (byte) 1, (short) -1 }; short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18); org.apache.commons.lang3.ArrayUtils.reverse(shortArray19); short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray19); short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.remove(shortArray21, (int) (byte) 1); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray23, (short) (byte) 100); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray14, shortArray23); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[]"); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[-1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[-1]"); }
public void test1149() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1149"); double[] doubleArray4 = new double[] { (-1.0d), (byte) 100, (short) 100, (byte) 10 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray5); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray5, 0.0d, (int) (short) 1, (-1.0d)); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) (byte) -1, 0.0d); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray11, (double) ' '); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray11, ""); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0, 100.0, 10.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, ""); }
public void test1150() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1150"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("lang3", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: lang3"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1151() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1151"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("org.apache.commons.lang3"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: org.apache.commons.lang3"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1152() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1152"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass6 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray8 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray9 = (java.lang.Class<?>[]) classArray8; wildcardClassArray9[0] = wildcardClass3; wildcardClassArray9[1] = wildcardClass6; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray9); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray9); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray16); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17); boolean boolean19 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClass3); org.junit.Assert.assertNotNull(wildcardClass6); org.junit.Assert.assertNotNull(classArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); }
public void test1153() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1153"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) -1, (int) (short) 1); long[] longArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray20); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.remove(longArray20, 0); long[] longArray31 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 10, (int) (byte) 0); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray31); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray14, (java.lang.Object) longArray31, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray35 = null; boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray35, true); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray35); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1]"); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); org.junit.Assert.assertNull(wildcardClassArray38); }
public void test1154() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1154"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) -1, (short) 10 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) 0); java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 1); java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray10); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 100); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray2, (java.lang.Object[]) byteArray10); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 10]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[-1, 10]"); }
public void test1155() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1155"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); java.lang.Boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray3); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false); java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8); java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9); java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, false); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray10); java.lang.Boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, true]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, true]"); }
public void test1156() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1156"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray7); org.apache.commons.lang3.ArrayUtils.reverse(byteArray7); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray7, (byte) 1); byte[] byteArray16 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray16); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray16, (byte) 0); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.add(byteArray16, 0, (byte) -1); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray22, (byte) 10); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray22); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray22); byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray22); byte[] byteArray29 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray29); int int32 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray29, (byte) 0); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray29, (byte) 1, (-1)); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray29, (byte) 1, 0); int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray29, (byte) 0, 10); byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray22, byteArray29); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(byteArray29, (byte) 0); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray29, "{0.0,0.0,0.0,100"); byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.clone(byteArray29); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray7, byteArray47); // The following exception was thrown during execution in test generation try { byte[] byteArray51 = org.apache.commons.lang3.ArrayUtils.add(byteArray47, (int) (byte) 10, (byte) 10); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, -1]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[100, -1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[100]"); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertNotNull(byteArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, 100, 100]"); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, ""); org.junit.Assert.assertNotNull(byteArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100]"); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); }
public void test1157() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1157"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (-1.0d)); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) '#'); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1158() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1158"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("Short[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1159() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1159"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1160() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1160"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(" ", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: "); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1161() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1161"); java.lang.Byte[][] byteArray0 = new java.lang.Byte[][] {}; short[] shortArray2 = new short[] { (byte) 0 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray2, (short) (byte) 0); int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) (byte) 100, 0); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray2); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) (byte) -1); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray2, (short) (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray2, (short) 100); java.lang.Byte[][] byteArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray0, (java.lang.Object) int14); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray0, "class[[[F"); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "java.lang" + "'", str17, "java.lang"); }
public void test1162() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1162"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{100,10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1163() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1163"); float[] floatArray5 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray9 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray5, 10.0f); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray5, "Cloneable[][][][]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, ""); }
public void test1164() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1164"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 100, -1, -1, 1]"); }
public void test1165() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1165"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,100,-1,-1,1}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,-1,-1,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1166() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1166"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.add(booleanArray5, true); boolean[] booleanArray11 = new boolean[] { false, false, true }; boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray11); java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13, false); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray5, booleanArray15); boolean[] booleanArray23 = new boolean[] { true, true, false, false, true, false }; boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray23); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray23); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray23); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray5, booleanArray23); boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5); java.lang.String str30 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) booleanArray28, "{100.0,10.0,52.0,1.0,-1.0}"); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray28); // The following exception was thrown during execution in test generation try { boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray28, 100); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, false]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true, true]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true, false, false]"); org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, ""); }
public void test1167() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1167"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0.0,0"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0/0,0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1168() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1168"); java.lang.Class<?>[] wildcardClassArray0 = null; char[] charArray5 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.toObject(charArray5); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6); java.lang.Character[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6, '4'); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray6); java.lang.Class<?> wildcardClass14 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass17 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray19 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[]) classArray19; wildcardClassArray20[0] = wildcardClass14; wildcardClassArray20[1] = wildcardClass17; java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20); java.lang.Class<?> wildcardClass28 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass31 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray33 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; wildcardClassArray34[0] = wildcardClass28; wildcardClassArray34[1] = wildcardClass31; java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray34); java.lang.Class<?> wildcardClass42 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass45 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray47 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47; wildcardClassArray48[0] = wildcardClass42; wildcardClassArray48[1] = wildcardClass45; java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray48); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray39, wildcardClassArray48, false); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray48); boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray25, wildcardClassArray56); java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray56); java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray56); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray59); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray11, wildcardClassArray60); boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray11, true); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, , , #]"); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClass14); org.junit.Assert.assertNotNull(wildcardClass17); org.junit.Assert.assertNotNull(classArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClass28); org.junit.Assert.assertNotNull(wildcardClass31); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClass42); org.junit.Assert.assertNotNull(wildcardClass45); org.junit.Assert.assertNotNull(classArray47); org.junit.Assert.assertNotNull(wildcardClassArray48); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); }
public void test1169() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1169"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); org.apache.commons.lang3.ArrayUtils.reverse(longArray13); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.clone(longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray15, 0L); long[] longArray20 = org.apache.commons.lang3.ArrayUtils.subarray(longArray17, 1, 1); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, 1, (int) 'a'); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 1, "{1,-1,10,0}"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[100, -1, 10, -1]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[100, -1, 10, -1]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100, -1, 10, -1]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[100, -1, 10, -1]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[100, -1, 10, -1, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[]"); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "java.lang" + "'", str25, "java.lang"); }
public void test1170() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1170"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("class[[[F"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "class[[[F" + "'", str1, "class[[[F"); }
public void test1171() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1171"); char[] charArray4 = new char[] { ' ', '#', '4', ' ' }; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray4, '4', (int) (byte) 1); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.clone(charArray4); char[] charArray13 = new char[] { ' ', '#', '4', ' ' }; int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray13, '4', (int) (byte) 1); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray13, 0, 'a'); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray8, charArray13); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray13); char[] charArray22 = org.apache.commons.lang3.ArrayUtils.clone(charArray13); char[] charArray23 = new char[] {}; char[] charArray26 = org.apache.commons.lang3.ArrayUtils.subarray(charArray23, (int) 'a', (int) (byte) 0); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', (int) '4'); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray26, ' ', (int) (short) 100); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray26); java.lang.Character[] charArray34 = org.apache.commons.lang3.ArrayUtils.toObject(charArray26); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray34, 'a'); java.lang.String str38 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) charArray36, ""); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[ , #, 4, ]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, , #, 4, ]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertNotNull(charArray22); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]"); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), " #4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), " #4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[ , #, 4, ]"); org.junit.Assert.assertNotNull(charArray34); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]"); org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, ""); }
public void test1172() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1172"); java.lang.Integer[] intArray4 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] { intArray4, intArray9 }; java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[][] intArray21 = new java.lang.Integer[][] { intArray15, intArray20 }; java.lang.Integer[] intArray26 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[] intArray31 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[][] intArray32 = new java.lang.Integer[][] { intArray26, intArray31 }; java.lang.Integer[] intArray37 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[] intArray42 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[][] intArray43 = new java.lang.Integer[][] { intArray37, intArray42 }; java.lang.Integer[] intArray48 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[] intArray53 = new java.lang.Integer[] { 1, (-1), 100, (-1) }; java.lang.Integer[][] intArray54 = new java.lang.Integer[][] { intArray48, intArray53 }; java.lang.Integer[][][] intArray55 = new java.lang.Integer[][][] { intArray10, intArray21, intArray32, intArray43, intArray54 }; java.lang.Integer[][][] intArray56 = org.apache.commons.lang3.ArrayUtils.toArray(intArray55); java.lang.String str58 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray56, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray53); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals("'" + str58 + "' != '" + "java.lang" + "'", str58, "java.lang"); }
public void test1173() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1173"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?> wildcardClass18 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass21 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray23 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass18; wildcardClassArray24[1] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?> wildcardClass32 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass35 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray37 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; wildcardClassArray38[0] = wildcardClass32; wildcardClassArray38[1] = wildcardClass35; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); java.lang.Class<?> wildcardClass46 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass49 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray51 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; wildcardClassArray52[0] = wildcardClass46; wildcardClassArray52[1] = wildcardClass49; java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray52); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray52, false); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray52); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, wildcardClassArray60); boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray29, true); java.lang.Class<?>[] wildcardClassArray64 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray65 = null; boolean boolean67 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray64, wildcardClassArray65, true); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass18); org.junit.Assert.assertNotNull(wildcardClass21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClass32); org.junit.Assert.assertNotNull(wildcardClass35); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClass46); org.junit.Assert.assertNotNull(wildcardClass49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertNotNull(wildcardClassArray64); org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false); }
public void test1174() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1174"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray33, 1L); int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray33, (long) (short) 10, (int) (short) 100); long[] longArray42 = null; long[] longArray43 = org.apache.commons.lang3.ArrayUtils.addAll(longArray33, longArray42); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertNotNull(longArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[100, 10, 0, 0]"); }
public void test1175() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1175"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, ""); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, ""); }
public void test1176() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1176"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{{},{},{}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1177() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1177"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 0); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); }
public void test1178() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1178"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Integer[]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Integer"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1179() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1179"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{-1,10,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1,10,-1,100}" + "'", str1, "{-1,10,-1,100}"); }
public void test1180() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1180"); java.lang.Character[][] charArray0 = null; char[] charArray6 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.toObject(charArray6); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (-1), 1); char[] charArray11 = new char[] {}; char[] charArray14 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, (int) 'a', (int) (byte) 0); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray14, ' ', (int) '4'); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' '); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray19); java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray19); char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '4'); java.lang.Character[][] charArray24 = org.apache.commons.lang3.ArrayUtils.add(charArray0, (int) (short) 0, charArray21); java.util.Map<java.lang.Object, java.lang.Object> objMap25 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray21); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray21); java.lang.Object[] objArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray26); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]"); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]"); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertNotNull(objMap25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(objArray27); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]"); }
public void test1181() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1181"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray10, (double) 'a'); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray13, (double) 0.0f); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 0.0, 100.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); }
public void test1182() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1182"); long[] longArray1 = new long[] { (byte) 0 }; long[] longArray2 = org.apache.commons.lang3.ArrayUtils.clone(longArray1); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass8 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray10 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10; wildcardClassArray11[0] = wildcardClass5; wildcardClassArray11[1] = wildcardClass8; java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17); long[] longArray23 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray25 = org.apache.commons.lang3.ArrayUtils.add(longArray23, 100L); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.subarray(longArray23, (int) (short) -1, (int) (short) 1); long[] longArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray23); long[] longArray31 = org.apache.commons.lang3.ArrayUtils.remove(longArray23, 0); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.subarray(longArray23, (int) (short) 10, (int) (byte) 0); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray34); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) longArray34, (int) (short) 10); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.clone(longArray34); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray1, longArray38); org.apache.commons.lang3.ArrayUtils.reverse(longArray38); org.junit.Assert.assertNotNull(longArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[0]"); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[0]"); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(wildcardClass8); org.junit.Assert.assertNotNull(classArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); }
public void test1183() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1183"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) 100, (int) (short) 100); int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 1); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray1); java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) 1); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray14); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) 100); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) -1); byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) 0); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray23); byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray23); byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.remove(byteArray25, 1); java.lang.Byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray27); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray28); }
public void test1184() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1184"); java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2); float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) ' '); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3); float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) (short) 100); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) int9, "{0.0,0.0,0"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[10.0, 10.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.lang" + "'", str11, "java.lang"); }
public void test1185() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1185"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" + "'", str2, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); }
public void test1186() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1186"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{10.0,100.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10.0,100.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1187() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1187"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{false,false,true}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1188() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1188"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 }; org.apache.commons.lang3.ArrayUtils arrayUtils2 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils2 }; org.apache.commons.lang3.ArrayUtils arrayUtils4 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils4 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray1, arrayUtilsArray3, arrayUtilsArray5 }; org.apache.commons.lang3.ArrayUtils arrayUtils7 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils7 }; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray9 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray6, arrayUtilsArray8); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray9); java.lang.Short[] shortArray17 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray31 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[][] shortArray32 = new java.lang.Short[][] { shortArray17, shortArray24, shortArray31 }; java.lang.Short[][] shortArray33 = org.apache.commons.lang3.ArrayUtils.clone(shortArray32); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray32); float[] floatArray40 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray44 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray44); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray40, floatArray44); java.lang.Float[] floatArray47 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40); java.lang.Float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40); java.lang.Float[] floatArray49 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray40); int int51 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray34, (java.lang.Object) floatArray49, (int) '4'); boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray10, wildcardClassArray34, false); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertNotNull(floatArray47); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertNotNull(floatArray49); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); }
public void test1189() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1189"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1/0,100/0,100/0,10/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1190() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1190"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6); boolean[] booleanArray17 = new boolean[] { true, true, false, false, true, false }; boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray17); java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray17); boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, false, (int) ' '); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray21, (int) ' ', 0); java.lang.Boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray21); java.lang.String str30 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray21, "Object[]"); boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray21); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{true,true,false,false,true,false}" + "'", str9, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, ""); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true, false, false, true, false, true, true, false, false, true, false]"); }
public void test1191() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1191"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Object[] objArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) doubleArray4); java.lang.Double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray4, "{10.0,100.0}"); java.lang.Double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray4, (double) 8); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(objArray7); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Double[]" + "'", str11, "Double[]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1192() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1192"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (-1.0d)); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) 100); // The following exception was thrown during execution in test generation try { double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray13, (int) (byte) -1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1193() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1193"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 0); boolean[] booleanArray18 = new boolean[] { false, false, true }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray18); java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray18); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray5, (java.lang.Object) booleanArray18); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray18, false); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray25); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, true]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); }
public void test1194() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1194"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{{},{},{},{},{}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1195() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1195"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "{true,true,false,false,true,false}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{true,true,false,false,true,false}" + "'", str2, "{true,true,false,false,true,false}"); }
public void test1196() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1196"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray16); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) wildcardClassArray17, "{1,-1,10,0}"); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Class[]" + "'", str19, "Class[]"); }
public void test1197() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1197"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 10); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.clone(byteArray16); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray16, (byte) 0); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); }
public void test1198() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1198"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Integer[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Integer[]" + "'", str1, "Integer[]"); }
public void test1199() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1199"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1200() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1200"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) 100, (int) (short) 100); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 10, (int) (byte) 0); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray1, "#"); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 10); java.lang.String str14 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) boolean12, ""); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "false" + "'", str14, "false"); }
public void test1201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1201"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); java.lang.Long[] longArray16 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16); long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray11, (java.lang.Object[]) longArray16); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray16); java.lang.Long[] longArray26 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray26, (long) 'a'); boolean[] booleanArray35 = new boolean[] { true, true, false, false, true, false }; boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray35); boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35); java.lang.Boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray35); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray38); int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray39, false, (int) ' '); boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray39, (int) ' ', 0); boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray45); int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray46, false); int int50 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray26, (java.lang.Object) int48, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray26); boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray20, wildcardClassArray51); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(booleanArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertNotNull(booleanArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 5 + "'", int42 == 5); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[]"); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false); }
public void test1202() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1202"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (-1.0d)); java.lang.Long[] longArray17 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, (long) 'a'); java.lang.Long[] longArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17); java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray20); java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray20); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray6, (java.lang.Object[]) longArray22); java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray24, (java.lang.Object) "false", (int) (byte) -1); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray24); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1203() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1203"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) -1, (short) 10 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) 0); short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); short[] shortArray6 = new short[] {}; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray6); org.apache.commons.lang3.ArrayUtils.reverse(shortArray6); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray2, (java.lang.Object) shortArray6, (-1)); short[] shortArray12 = null; short[] shortArray15 = new short[] { (byte) 1, (short) -1 }; short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15); org.apache.commons.lang3.ArrayUtils.reverse(shortArray16); short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray12, shortArray16); short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.remove(shortArray18, (int) (byte) 1); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray18, (short) 100); java.lang.Short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray18); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray18, (short) (byte) 100, (int) '4'); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray6, shortArray18); short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18); java.lang.String str30 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray28, "class [[[F"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 10]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[-1, 10]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[-1]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[-1, 1]"); org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, ""); }
public void test1204() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1204"); java.lang.Long[] longArray5 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 'a'); java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray5); java.lang.Long[] longArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); java.lang.Long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); java.lang.Long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, 0L); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) (byte) 100); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray11); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(wildcardClassArray16); }
public void test1205() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1205"); double[] doubleArray6 = new double[] { 1.0d, (byte) 10, 1, 0.0f, (short) 100, (short) 1 }; double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray6, (int) (short) 100, (int) (short) 100); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, 0.0d, (double) (short) 0); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) (byte) 0); double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.add(doubleArray6, 10.0d); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray22 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray22); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray23, (double) (byte) 0); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (double) 100.0f, (double) 0.0f); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray17, doubleArray25); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray17, "{-1.0,100.0,100.0,10.0}"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[1.0, 10.0, 1.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 10.0, 1.0, 0.0, 100.0, 1.0, 0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "double[]" + "'", str31, "double[]"); }
public void test1206() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1206"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); java.lang.Boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray3); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false); java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8); java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9); java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, false); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray10); int[] intArray17 = new int[] { '#', (short) 1 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray17); int[] intArray21 = new int[] { '#', (short) 1 }; int[] intArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray21); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray22); int[] intArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, (int) (byte) 10); int[] intArray26 = org.apache.commons.lang3.ArrayUtils.clone(intArray22); int[] intArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray22, 0); int[] intArray31 = new int[] { '#', (short) 1 }; int[] intArray32 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray31); int[] intArray35 = new int[] { '#', (short) 1 }; int[] intArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray35); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray32, intArray36); int[] intArray38 = org.apache.commons.lang3.ArrayUtils.clone(intArray32); int[] intArray41 = new int[] { '#', (short) 1 }; int[] intArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray41); int[] intArray43 = org.apache.commons.lang3.ArrayUtils.addAll(intArray32, intArray42); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray28, intArray43); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray10, (java.lang.Object) intArray43, (int) '4'); java.lang.Integer[] intArray51 = new java.lang.Integer[] { 1, (-1), 10, 0 }; java.lang.Integer[] intArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray51); int[] intArray54 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray52, 0); int[] intArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray52); int[] intArray56 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray52); int[] intArray59 = new int[] { '#', (short) 1 }; int[] intArray60 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray59); int[] intArray63 = new int[] { '#', (short) 1 }; int[] intArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray63); boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray60, intArray64); boolean boolean66 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray64); int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray64, (int) (short) 0, 0); boolean boolean70 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray56, intArray64); int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray56, (int) '#', 10); int[] intArray76 = org.apache.commons.lang3.ArrayUtils.subarray(intArray56, (int) (short) 10, (int) (byte) 100); org.apache.commons.lang3.ArrayUtils.reverse(intArray56); boolean boolean78 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) intArray43, (java.lang.Object) intArray56); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, true]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[35, 1]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 1]"); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[35, 1]"); org.junit.Assert.assertNotNull(intArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(intArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[35, 1]"); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[35, 1]"); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[35, 1]"); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[35, 1]"); org.junit.Assert.assertNotNull(intArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[35, 1]"); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[35, 1]"); org.junit.Assert.assertNotNull(intArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[35, 1]"); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[35, 1]"); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[35, 1]"); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[35, 1, 35, 1]"); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(intArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1, -1, 10, 0]"); org.junit.Assert.assertNotNull(intArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, -1, 10, 0]"); org.junit.Assert.assertNotNull(intArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, -1, 1]"); org.junit.Assert.assertNotNull(intArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[35, 1]"); org.junit.Assert.assertNotNull(intArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[35, 1]"); org.junit.Assert.assertNotNull(intArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[35, 1]"); org.junit.Assert.assertNotNull(intArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1)); org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false); org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1)); org.junit.Assert.assertNotNull(intArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]"); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); }
public void test1207() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1207"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.clone(byteArray5); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.clone(byteArray5); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.add(byteArray7, (byte) 10); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (byte) 10, "{{},{},{}}"); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[100]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100, 10]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Byte" + "'", str12, "Byte"); }
public void test1208() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1208"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, (byte) 100); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray10, "{-1,1}"); byte[] byteArray13 = null; boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray10, byteArray13); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100, 100]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, ""); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); }
public void test1209() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1209"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray7, (byte) 10); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray7); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray7, "{0.0,0.0,0.0,100.0}"); // The following exception was thrown during execution in test generation try { byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.remove(byteArray7, (int) (byte) -1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); }
public void test1210() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1210"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray6 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, 0, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray12); java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray12); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) -1); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) -1); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray21, "{100,10,0}"); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 10, (int) (short) 1); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray26, (byte) 0); byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray26, (byte) 0); byte[] byteArray31 = new byte[] {}; boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray31); byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray31); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray33, (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(byteArray33); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray26, byteArray33); // The following exception was thrown during execution in test generation try { byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.add(byteArray26, (int) '#', (byte) 0); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]"); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]"); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]"); org.junit.Assert.assertNotNull(byteArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); }
public void test1211() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1211"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{100.0,10.0,52.0,1.0,-1.0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100/0,10/0,52/0,1/0,-1/0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1212() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1212"); java.lang.Integer[] intArray4 = new java.lang.Integer[] { 1, (-1), 10, 0 }; java.lang.Integer[] intArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4); int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5, 0); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray5); java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray5); java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray5); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray10); java.lang.Integer[] intArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10); int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray12, (int) (short) 100); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[1, -1, 10, 0]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1, -1, 10, 0]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[1, -1, 10, 0]"); }
public void test1213() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1213"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{-1}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1214() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1214"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) ' '); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) ' ', 0); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray16); boolean[] booleanArray21 = new boolean[] { false, false, true }; boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray21); boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.add(booleanArray23, true); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray26, false); boolean[] booleanArray35 = new boolean[] { true, true, false, false, true, false }; boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray35); boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray35); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray37); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray26, booleanArray38); boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray38); boolean[] booleanArray47 = new boolean[] { true, false, false, false, false, false }; java.lang.Boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray47); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray47); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray47, false, (int) 'a'); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray47); boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray40, booleanArray47); java.lang.String str56 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) booleanArray47, ""); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[false, false, true, true]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, true]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1); org.junit.Assert.assertNotNull(booleanArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertNotNull(booleanArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, true, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray48); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true); org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, ""); }
public void test1215() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1215"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray9); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) ' '); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) ' ', 0); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray10, "Object[]"); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray20); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true, false, false, true, true]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, ""); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, true, false, false, true, true]"); }
public void test1216() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1216"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.add(longArray33, 0L); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[100, 10, 0, 0, 0]"); }
public void test1217() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1217"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Short[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Short[]" + "'", str1, "Short[]"); }
public void test1218() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1218"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) 100, (int) (short) 100); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 10, (int) (byte) 0); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray1, "#"); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 10); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 0); java.lang.Byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray15); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertNotNull(byteArray16); }
public void test1219() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1219"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); float[] floatArray21 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray25 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray25); int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray21, 10.0f); float[] floatArray33 = new float[] { 10L, 10L, 100L }; boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray33); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray21, floatArray33); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray33, (float) 0); java.lang.Float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray33); float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray38, (float) (-1)); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray40, ""); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray14, (java.lang.Object) floatArray40); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray40); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1); org.junit.Assert.assertNotNull(floatArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[10.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertNotNull(floatArray38); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[10.0, 10.0, 100.0]"); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "float[]" + "'", str42, "float[]"); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); }
public void test1220() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1220"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?> wildcardClass18 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass21 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray23 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass18; wildcardClassArray24[1] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?> wildcardClass32 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass35 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray37 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; wildcardClassArray38[0] = wildcardClass32; wildcardClassArray38[1] = wildcardClass35; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); java.lang.Class<?> wildcardClass46 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass49 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray51 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; wildcardClassArray52[0] = wildcardClass46; wildcardClassArray52[1] = wildcardClass49; java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray52); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray52, false); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray52); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, wildcardClassArray60); boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray29, true); java.lang.Class<?>[] wildcardClassArray64 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass18); org.junit.Assert.assertNotNull(wildcardClass21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClass32); org.junit.Assert.assertNotNull(wildcardClass35); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClass46); org.junit.Assert.assertNotNull(wildcardClass49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertNotNull(wildcardClassArray64); }
public void test1221() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1221"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) 'a', (int) (byte) 0); long[] longArray18 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray20 = org.apache.commons.lang3.ArrayUtils.add(longArray18, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray18, (int) (short) -1, (int) (short) 1); long[] longArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray18); long[] longArray26 = org.apache.commons.lang3.ArrayUtils.remove(longArray18, 0); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray13, longArray26); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray26); long[] longArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray26, (long) 10); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray26); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray26, "{false,false,true}"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[]"); org.junit.Assert.assertNotNull(longArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray24), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, -1, 100]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1, 100]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, ""); }
public void test1222() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1222"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); boolean[] booleanArray15 = new boolean[] { true, true, false, false, true, false }; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15); java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, (int) ' '); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) ' ', 0); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray19, "Object[]"); boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray19); boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray30); boolean[] booleanArray38 = new boolean[] { true, true, false, false, true, false }; boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38); boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray38); java.lang.String str41 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray30, booleanArray42); int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray30, true); boolean[] booleanArray52 = new boolean[] { true, true, false, false, true, false }; boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray52); boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray52); java.lang.String str55 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray52); boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray52); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray30, booleanArray56); boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray30); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, ""); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[true, true, false, false, true, false]"); org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{true,true,false,false,true,false}" + "'", str41, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true, true, false, false, true, false, true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10); org.junit.Assert.assertNotNull(booleanArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(booleanArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[true, true, false, false, true, false]"); org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{true,true,false,false,true,false}" + "'", str55, "{true,true,false,false,true,false}"); org.junit.Assert.assertNotNull(booleanArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); }
public void test1223() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1223"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray36); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); }
public void test1224() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1224"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{100,100,10,0,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {100,100,10,0,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1225() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1225"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, "{false,true,true}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{false,true,true}" + "'", str2, "{false,true,true}"); }
public void test1226() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1226"); java.lang.Float[] floatArray2 = new java.lang.Float[] { 10.0f, 10.0f }; java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray2); float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) ' '); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.clone(floatArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray5, "{100.0,10.0,52.0,1.0,-1.0}"); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray5, (float) 0L); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, 10.0]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); }
public void test1227() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1227"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray4 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray4); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) shortArray1, (java.lang.Object[]) shortArray6); java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) shortArray6); java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6); java.lang.Short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray6); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray6, "#"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "java.lang" + "'", str12, "java.lang"); }
public void test1228() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1228"); float[] floatArray5 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray9 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray9); float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, 0.0f); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray9); float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.clone(floatArray9); float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray9); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray16, (float) (byte) 100, (int) (byte) 1); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray16, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertNotNull(floatArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); }
public void test1229() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1229"); char[] charArray0 = new char[] {}; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) 'a', (int) (byte) 0); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray3, ' ', (int) '4'); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray3, ' ', (int) (short) 100); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) boolean11, "{35,1}"); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "java.lang" + "'", str13, "java.lang"); }
public void test1230() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1230"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 10); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 0); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 10); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); }
public void test1231() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1231"); char[] charArray4 = new char[] { ' ', '#', '#', '#' }; char[][] charArray5 = new char[][] { charArray4 }; char[] charArray10 = new char[] { ' ', '#', '#', '#' }; char[][] charArray11 = new char[][] { charArray10 }; char[][][] charArray12 = new char[][][] { charArray5, charArray11 }; char[] charArray16 = new char[] { ' ', '4', 'a' }; char[] charArray20 = new char[] { ' ', '4', 'a' }; char[] charArray24 = new char[] { ' ', '4', 'a' }; char[][] charArray25 = new char[][] { charArray16, charArray20, charArray24 }; char[][][] charArray26 = org.apache.commons.lang3.ArrayUtils.add(charArray12, charArray25); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "{true,true,false,false,true,false}" }; java.lang.String[] strArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray29); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) strArray29); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray25, (java.lang.Object) strArray29); java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray38, (byte) 1); java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray38); byte[] byteArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray38, (byte) 100); byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray38, (byte) -1); byte[] byteArray46 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray38); java.lang.Byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray38); byte[] byteArray49 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray47, (byte) 0); boolean boolean50 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) strArray29, (java.lang.Object) byteArray49); boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(byteArray49, (byte) 1); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " ###"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " ###"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , #, #, #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), " ###"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), " ###"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[ , #, #, #]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray12); org.junit.Assert.assertNotNull(charArray16); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), " 4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), " 4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[ , 4, a]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), " 4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), " 4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[ , 4, a]"); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), " 4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), " 4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[ , 4, a]"); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertNotNull(strArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); org.junit.Assert.assertNotNull(byteArray38); org.junit.Assert.assertNotNull(byteArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertNotNull(byteArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray47); org.junit.Assert.assertNotNull(byteArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true); }
public void test1232() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1232"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); double[] doubleArray6 = new double[] { 10L, (byte) 100 }; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray6, (double) 100); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, 100.0d, (double) (byte) 0); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray2, (java.lang.Object) int11, (int) '#'); java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray14); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14); java.lang.String str18 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray14, "{{},{},{}}"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0]"); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{0}" + "'", str18, "{0}"); }
public void test1233() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1233"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray6 = new char[] {}; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) 'a', (int) (byte) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray4, charArray6); char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray6, "{-1}"); char[] charArray14 = org.apache.commons.lang3.ArrayUtils.clone(charArray6); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, '4', 1); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "char[]" + "'", str13, "char[]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); }
public void test1234() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1234"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray13, 0L); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray13, "{0.0,0.0,0.0,100"); int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray13, (long) '4', 0); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray13); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[-1, 10, -1, 100]"); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, ""); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); }
public void test1235() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1235"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); java.lang.String str56 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strListArray43, "Short[]"); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}],[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}],[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}],[Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]],[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]}" + "'", str56, "{[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}],[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}],[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}],[Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]],[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]}"); }
public void test1236() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1236"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); org.apache.commons.lang3.ArrayUtils.reverse(shortArray0); short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray0); short[] shortArray4 = null; short[] shortArray7 = new short[] { (byte) 1, (short) -1 }; short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray7); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray4, shortArray8); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.remove(shortArray10, (int) (byte) 1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray10, (short) 100); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray10, (short) (byte) 1); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray3, shortArray16); short[] shortArray18 = null; short[] shortArray21 = new short[] { (byte) 1, (short) -1 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray21); org.apache.commons.lang3.ArrayUtils.reverse(shortArray22); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray18, shortArray22); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.remove(shortArray24, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray26); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray26, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray26, (int) (short) 1, 1); short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (short) 0); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray16, shortArray32); short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.add(shortArray32, (short) (byte) 1); short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray37, (short) -1); short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.clone(shortArray37); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[-1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[-1]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, ""); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[1]"); org.junit.Assert.assertNotNull(shortArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[1]"); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[1]"); }
public void test1237() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1237"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); java.lang.Byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); boolean[] booleanArray18 = new boolean[] { false, false, true }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray18); java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray18); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray20, false); java.lang.Boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20); java.lang.Boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray23); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray14, (java.lang.Object) booleanArray24); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray24, false); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, true]"); }
public void test1238() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1238"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{-1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1}" + "'", str1, "{-1}"); }
public void test1239() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1239"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) 10L); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray11); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray12); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray12, (double) (byte) 1); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 0.0, 0.0, 100.0, 1.0]"); }
public void test1240() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1240"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray6 = new char[] {}; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) 'a', (int) (byte) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray4, charArray6); char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray6, "{-1}"); char[] charArray15 = org.apache.commons.lang3.ArrayUtils.add(charArray6, 'a'); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray15); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "char[]" + "'", str13, "char[]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); }
public void test1241() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1241"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 10); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray13); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray17); }
public void test1242() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1242"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 10); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); org.apache.commons.lang3.ArrayUtils.reverse(byteArray16); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray16, (int) (byte) 1, (int) (byte) 10); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[1, -1, -1, 100, 10]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -1, 100, 10]"); }
public void test1243() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1243"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); java.lang.Byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray14, (byte) 0); java.lang.Byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray17); }
public void test1244() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1244"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5); java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5); java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray7); java.lang.Character[] charArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7); char[] charArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray9, ' '); java.lang.Integer[] intArray16 = new java.lang.Integer[] { 1, (-1), 10, 0 }; java.lang.Integer[] intArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray16); java.lang.Integer[] intArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray16); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray9, (java.lang.Object) intArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray9); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[a, , , #]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, , , #]"); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(wildcardClassArray20); }
public void test1245() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1245"); long[] longArray4 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray6 = org.apache.commons.lang3.ArrayUtils.add(longArray4, 100L); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) -1, (int) (short) 1); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray4); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.remove(longArray4, 0); long[] longArray15 = org.apache.commons.lang3.ArrayUtils.subarray(longArray4, (int) (short) 10, (int) (byte) 0); long[] longArray20 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.add(longArray20, 100L); long[] longArray23 = org.apache.commons.lang3.ArrayUtils.addAll(longArray15, longArray22); java.lang.Long[] longArray24 = org.apache.commons.lang3.ArrayUtils.toObject(longArray22); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray22); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) longArray22, "{-1.0,100.0,100.0,10.0}"); java.lang.Long[] longArray32 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray33, (long) (byte) 10); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray33); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray33, 1L); java.lang.Long[] longArray43 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray43); java.lang.Long[] longArray49 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray50 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray49); long[] longArray52 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray50, 0L); long[] longArray54 = org.apache.commons.lang3.ArrayUtils.remove(longArray52, (int) (short) 0); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.contains(longArray52, (long) 0); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray44, longArray52); boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray33, longArray52); long[] longArray59 = org.apache.commons.lang3.ArrayUtils.clone(longArray33); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[10, -1, 100]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertNotNull(longArray24); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "long[]" + "'", str27, "long[]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, -1, 100, 100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray43); org.junit.Assert.assertNotNull(longArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray49); org.junit.Assert.assertNotNull(longArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[100, 10, 0]"); org.junit.Assert.assertNotNull(longArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[10, 0]"); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); org.junit.Assert.assertNotNull(longArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray59), "[100, 10, 0, 0]"); }
public void test1246() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1246"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray5); java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12, (byte) 1); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray12); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12, (byte) 100); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray12, (byte) -1); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray6, (java.lang.Object[]) byteArray12); java.lang.Byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray12); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(byteArray21); }
public void test1247() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1247"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); boolean[] booleanArray15 = new boolean[] { true, true, false, false, true, false }; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15); java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, (int) ' '); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) ' ', 0); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray19, "Object[]"); boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray19); java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, false, false, true }; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray35); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray36); boolean[] booleanArray41 = new boolean[] { false, false, true }; boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray41); boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray41); boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.add(booleanArray43, true); boolean[] booleanArray49 = new boolean[] { false, false, true }; boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray49); boolean[] booleanArray51 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray49); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray51, true); int int56 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray51, false, (int) '4'); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray45, booleanArray51); boolean boolean58 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray45); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray36, booleanArray45); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, ""); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray35); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[true, false, false, true]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); org.junit.Assert.assertNotNull(booleanArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray41), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, true, true]"); org.junit.Assert.assertNotNull(booleanArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray49), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false); org.junit.Assert.assertNotNull(booleanArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray51), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); }
public void test1248() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1248"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Object obj4 = null; int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray3, obj4); java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray3); java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray3); java.lang.Short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray8); short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray9, (short) 10); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[0]"); }
public void test1249() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1249"); java.lang.Boolean[] booleanArray4 = new java.lang.Boolean[] { true, false, false, true }; boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray5, true); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray7); int int10 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray7, true); boolean[] booleanArray17 = new boolean[] { true, true, false, false, true, false }; boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray17); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray17); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray17, "{10,100,-1,-1,1}"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, true, true, true, false, false, true, false]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); }
public void test1250() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1250"); java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) -1, (short) -1, (short) 1, (short) 1, (short) 10 }; java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) -1, (short) -1, (short) 1, (short) 1, (short) 10 }; java.lang.Short[][] shortArray12 = new java.lang.Short[][] { shortArray5, shortArray11 }; java.lang.Short[] shortArray18 = new java.lang.Short[] { (short) -1, (short) -1, (short) 1, (short) 1, (short) 10 }; java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) -1, (short) -1, (short) 1, (short) 1, (short) 10 }; java.lang.Short[][] shortArray25 = new java.lang.Short[][] { shortArray18, shortArray24 }; java.lang.Short[][][] shortArray26 = new java.lang.Short[][][] { shortArray12, shortArray25 }; java.lang.Short[][][] shortArray27 = org.apache.commons.lang3.ArrayUtils.clone(shortArray26); java.lang.Short[][][] shortArray28 = org.apache.commons.lang3.ArrayUtils.toArray(shortArray27); java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray27); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); }
public void test1251() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1251"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (byte) 10, (int) (byte) 10); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, (int) (short) 10, (int) (short) 100); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]"); }
public void test1252() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1252"); int[] intArray2 = new int[] { '#', (short) 1 }; int[] intArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray2); int[] intArray6 = new int[] { '#', (short) 1 }; int[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray6); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray3, intArray7); int[] intArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray7, (int) (byte) 10); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray7, (int) (short) -1, (int) (byte) 0); int[] intArray15 = org.apache.commons.lang3.ArrayUtils.add(intArray7, (int) 'a'); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) intArray15, "{0.0,0.0,0"); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[35, 1]"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[35, 1]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 1]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35, 1]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[35, 1, 97]"); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "int[]" + "'", str17, "int[]"); }
public void test1253() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1253"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, (int) (byte) 100, (int) (short) 100); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray1, (byte) 10, (int) (byte) 0); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray1, "#"); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[100]"); }
public void test1254() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1254"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); java.lang.Long[] longArray16 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16); long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray11, (java.lang.Object[]) longArray16); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray11, (double) 0); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1255() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1255"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); double[] doubleArray6 = new double[] { 10L, (byte) 100 }; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray6, (double) 100); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, 100.0d, (double) (byte) 0); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray2, (java.lang.Object) int11, (int) '#'); java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray14); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray14); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[0]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[0]"); }
public void test1256() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1256"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (-1.0d)); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (double) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 0.0, 100.0]"); }
public void test1257() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1257"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.remove(byteArray7, 0); java.lang.Byte[] byteArray16 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 1); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray16); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray16, (byte) 100); byte[] byteArray22 = null; boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray21, byteArray22); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray21); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray7, byteArray21); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray7); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray7, (byte) -1); byte[] byteArray29 = null; boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray7, byteArray29); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); }
public void test1258() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1258"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Cloneable[][][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Cloneable[][][][]" + "'", str1, "Cloneable[][][][]"); }
public void test1259() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1259"); java.lang.Byte[] byteArray3 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 0 }; java.lang.Byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray3); boolean[] booleanArray8 = new boolean[] { false, false, true }; boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray8); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray8); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, true); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, true); boolean[] booleanArray18 = new boolean[] { false, false, true }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray18); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray18); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray20, true); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray20, false, (int) (short) 10); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray20); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray4, (java.lang.Object) booleanArray26); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray26, "{false,false,true}"); org.junit.Assert.assertNotNull(byteArray3); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true, true]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, true, true]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, true, true, false, false, true]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, ""); }
public void test1260() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1260"); short[] shortArray0 = null; short[] shortArray3 = new short[] { (byte) 1, (short) -1 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray3); org.apache.commons.lang3.ArrayUtils.reverse(shortArray4); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray4); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.remove(shortArray6, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray8, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.clone(shortArray8); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray8, (int) (byte) 10, (int) (byte) 10); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17, (short) (byte) 0); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray19, (short) (byte) 1, 8); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[-1]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); }
public void test1261() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1261"); float[] floatArray5 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray9 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray9); java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5); float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray12, (float) (short) 0); java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) floatArray12); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); }
public void test1262() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1262"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("org.apache.commons.lang3"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.commons" + "'", str1, "org.apache.commons"); }
public void test1263() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1263"); java.lang.Long[] longArray5 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 'a'); boolean[] booleanArray14 = new boolean[] { true, true, false, false, true, false }; boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray18, false, (int) ' '); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray18, (int) ' ', 0); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray25, false); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray5, (java.lang.Object) int27, (int) (short) 10); long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray5); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(wildcardClassArray31); }
public void test1264() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1264"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray0, (int) (short) 1, (int) '4'); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(shortArray4, (short) 0); java.lang.Short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray4); short[] shortArray8 = null; short[] shortArray11 = new short[] { (byte) 1, (short) -1 }; short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray11); org.apache.commons.lang3.ArrayUtils.reverse(shortArray12); short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray8, shortArray12); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.remove(shortArray14, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray16); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray16, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray16, (int) (short) 1, 1); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray22, (short) 0); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray4, shortArray24); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray24, (short) (byte) 100); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, ""); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); }
public void test1265() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1265"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray6 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, 0, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray12); java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray12); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) -1); java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25, (byte) 1); java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray25); byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25, (byte) 100); byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25, (byte) -1); byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25, (byte) 0); boolean[] booleanArray38 = new boolean[] { false, false, true }; boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray38); java.lang.Boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray38); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray38); int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray25, (java.lang.Object) booleanArray38); java.lang.Object[] objArray43 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray25); byte[] byteArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25, (byte) 10); byte[] byteArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray25, (byte) 0); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray12, byteArray47); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertNotNull(objArray43); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); }
public void test1266() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1266"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("class [[[F"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: class[[[F"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1267() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1267"); boolean[] booleanArray6 = new boolean[] { true, true, false, false, true, false }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray6); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray6); boolean[] booleanArray15 = new boolean[] { true, true, false, false, true, false }; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray15); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray15); java.lang.Boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray15); boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray19, false, (int) ' '); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray19, (int) ' ', 0); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray19); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) booleanArray19, "Object[]"); boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray19); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray8, booleanArray19); boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray30); int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray30, true); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, ""); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[true, true, false, false, true, false, true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); }
public void test1268() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1268"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("4"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "4" + "'", str1, "4"); }
public void test1269() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1269"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray6 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, 0, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray12); java.lang.Byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray1, byteArray12); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray12, (byte) -1); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray12, (byte) -1); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray21, "{100,10,0}"); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray21, (int) (byte) 10, (int) (short) 1); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray26, (byte) 0); byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray26, (byte) 0); byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray30, (int) (byte) 100, (int) (byte) 100); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]"); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]"); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]"); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]"); }
public void test1270() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1270"); char[] charArray0 = new char[] {}; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) 'a', (int) (byte) 0); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray3, ' ', (int) '4'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray3, ' ', (int) (short) 100); char[] charArray10 = new char[] {}; char[] charArray13 = org.apache.commons.lang3.ArrayUtils.subarray(charArray10, (int) 'a', (int) (byte) 0); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray13, ' ', (int) '4'); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray13, ' ', (int) (short) 100); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray13); char[] charArray22 = org.apache.commons.lang3.ArrayUtils.add(charArray13, 'a'); char[] charArray23 = org.apache.commons.lang3.ArrayUtils.addAll(charArray3, charArray22); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray3, "Short[]"); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(charArray22); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[a]"); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[a]"); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "char[]" + "'", str25, "char[]"); }
public void test1271() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1271"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray11, (byte) 10, 0); org.apache.commons.lang3.ArrayUtils.reverse(byteArray11); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[1, -1, -1, 100, 10]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0); }
public void test1272() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1272"); float[] floatArray5 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray9 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray9); java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5); long[] longArray17 = new long[] { (-1L), 10L, (byte) -1, (byte) 100 }; long[] longArray19 = org.apache.commons.lang3.ArrayUtils.add(longArray17, 100L); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) floatArray12, (java.lang.Object) longArray17); java.lang.Float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray12); long[] longArray27 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray33 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray39 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray45 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray51 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray57 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[][] longArray58 = new long[][] { longArray27, longArray33, longArray39, longArray45, longArray51, longArray57 }; java.lang.Long[] longArray64 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray65 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray64); int int67 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray65, (long) 0); long[][] longArray68 = org.apache.commons.lang3.ArrayUtils.add(longArray58, (int) (short) 0, longArray65); java.lang.Class<?>[] wildcardClassArray69 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray68); int int71 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) floatArray21, (java.lang.Object) wildcardClassArray69, (int) (byte) 100); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1, 10, -1, 100]"); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[-1, 10, -1, 100, 100]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray58); org.junit.Assert.assertNotNull(longArray64); org.junit.Assert.assertNotNull(longArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray65), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2); org.junit.Assert.assertNotNull(longArray68); org.junit.Assert.assertNotNull(wildcardClassArray69); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); }
public void test1273() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1273"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); boolean[] booleanArray20 = new boolean[] { false, false, true }; boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray20); java.lang.Boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray20); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray22, false); java.lang.Boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray22); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray25); java.lang.Boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray26); java.lang.Class<?>[] wildcardClassArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(wildcardClassArray15, (java.lang.Object) booleanArray27); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); }
public void test1274() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1274"); java.lang.Long[] longArray4 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray4); java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.subarray((java.lang.Object[]) longArray4, (int) (byte) 10, 0); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.toClass(objArray8); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray9); }
public void test1275() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1275"); java.lang.Long[] longArray5 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 'a'); boolean[] booleanArray14 = new boolean[] { true, true, false, false, true, false }; boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray14); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray14); java.lang.Boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray14); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray17); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray18, false, (int) ' '); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray18, (int) ' ', 0); boolean[] booleanArray25 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray24); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray25, false); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray5, (java.lang.Object) int27, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray5); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray30); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[true, true, false, false, true, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, false, false, true, false]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[]"); org.junit.Assert.assertNotNull(booleanArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray25), "[]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); }
public void test1276() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1276"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 0); byte[] byteArray15 = new byte[] {}; boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray15); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray15, (byte) 100); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.clone(byteArray15); byte[] byteArray21 = org.apache.commons.lang3.ArrayUtils.add(byteArray19, (byte) 0); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray14, byteArray19); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]"); org.junit.Assert.assertNotNull(byteArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); }
public void test1277() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1277"); float[] floatArray5 = new float[] { 100, 10L, '4', 1.0f, (byte) -1 }; float[] floatArray9 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray9); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray9); java.lang.Float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray5); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray5); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) floatArray5, "{0.0,0.0,0"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[100.0, 10.0, 52.0, 1.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 1.0]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "float[]" + "'", str15, "float[]"); }
public void test1278() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1278"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}}},{{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}},{{{10/0,10/0}}}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1279() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1279"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray0, (int) (short) 1, (int) '4'); short[] shortArray5 = new short[] {}; boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray5); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, (int) (short) 1, (int) '4'); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray9, (short) 0); java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9); short[] shortArray13 = null; short[] shortArray16 = new short[] { (byte) 1, (short) -1 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray16); org.apache.commons.lang3.ArrayUtils.reverse(shortArray17); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray13, shortArray17); short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.remove(shortArray19, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray21); java.lang.String str24 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray21, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray21, (int) (short) 1, 1); short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray27, (short) 0); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray9, shortArray29); short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray9); short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray9, (int) (byte) 10, (int) (short) 1); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1]"); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, ""); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]"); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[]"); }
public void test1280() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1280"); short[] shortArray0 = new short[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray0); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray0, (int) (short) 1, (int) '4'); short[] shortArray5 = new short[] {}; boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray5); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray5, (int) (short) 1, (int) '4'); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(shortArray9, (short) 0); java.lang.Short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray9); short[] shortArray13 = null; short[] shortArray16 = new short[] { (byte) 1, (short) -1 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray16); org.apache.commons.lang3.ArrayUtils.reverse(shortArray17); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray13, shortArray17); short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.remove(shortArray19, (int) (byte) 1); org.apache.commons.lang3.ArrayUtils.reverse(shortArray21); java.lang.String str24 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) shortArray21, "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}"); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray21, (int) (short) 1, 1); short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray27, (short) 0); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray9, shortArray29); short[] shortArray31 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray0, shortArray9); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray9); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1]"); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, ""); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[]"); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); }
public void test1281() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1281"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); }
public void test1282() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1282"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) shortArray5, "{false,false,true}"); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray5); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Short[]" + "'", str7, "Short[]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[0]"); }
public void test1283() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1283"); java.lang.String[] strArray4 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.lang.String[] strArray12 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>(); boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12); java.util.List<java.lang.Class<?>> wildcardClassList15 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList13); java.lang.String[] strArray20 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String[] strArray29 = new java.lang.String[] { "Object[]", "", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}", "Object[]" }; java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>(); boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29); java.util.List<java.lang.Class<?>> wildcardClassList32 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList30); java.lang.String[] strArray37 = new java.lang.String[] { "Object[]", "Cloneable[][][][]", "Object[]", "{{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.ArrayList[] arrayListArray42 = new java.util.ArrayList[5]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray43 = (java.util.ArrayList<java.lang.String>[]) arrayListArray42; strListArray43[0] = strList5; strListArray43[1] = strList13; strListArray43[2] = strList21; strListArray43[3] = strList30; strListArray43[4] = strList38; java.util.ArrayList<java.lang.String>[] strListArray54 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray43); java.lang.Object[] objArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) strListArray54); java.util.AbstractList<java.lang.String>[] strListArray56 = org.apache.commons.lang3.ArrayUtils.clone((java.util.AbstractList<java.lang.String>[]) strListArray54); java.util.ArrayList<java.lang.String>[] strListArray58 = org.apache.commons.lang3.ArrayUtils.remove(strListArray54, 0); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertNotNull(wildcardClassList15); org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(strArray29); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertNotNull(wildcardClassList32); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(arrayListArray42); org.junit.Assert.assertNotNull(strListArray43); org.junit.Assert.assertNotNull(strListArray54); org.junit.Assert.assertNotNull(objArray55); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[[Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}], [Object[], , {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}, Object[]], [Object[], Cloneable[][][][], Object[], {{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{},{},{},{},{}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}},{{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}},{{{10.0,10.0}}}}}]]"); org.junit.Assert.assertNotNull(strListArray56); org.junit.Assert.assertNotNull(strListArray58); }
public void test1284() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1284"); byte[] byteArray0 = new byte[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0); int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 100); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) 'a', (int) (byte) 0); byte[] byteArray8 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray8); int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray8, (byte) 0); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.add(byteArray8, 0, (byte) -1); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray14, (byte) 10); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray14); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray14); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray19); byte[] byteArray23 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray20, (int) (byte) 1, (int) (byte) 0); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray20, ""); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray20, (byte) 100); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true); org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[100]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 100]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, 100]"); org.junit.Assert.assertNotNull(byteArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]"); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, ""); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1); }
public void test1285() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1285"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6, (-1.0d)); java.lang.Long[] longArray17 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray17, (long) 'a'); java.lang.Long[] longArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray17); java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray20); java.lang.Long[] longArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray20); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray6, (java.lang.Object[]) longArray22); java.lang.Object[] objArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray22); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertNotNull(longArray21); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(objArray24); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[100, 100, 10, 0, 0]"); }
public void test1286() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1286"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray6, "{1.0}"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); java.lang.Long[] longArray16 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16); long[] longArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray16); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) doubleArray11, (java.lang.Object[]) longArray16); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray16); java.lang.Long[] longArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray16); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray18), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(longArray21); }
public void test1287() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1287"); boolean[] booleanArray0 = null; boolean[] booleanArray4 = new boolean[] { false, false, true }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray4); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray4); boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true); boolean[] booleanArray12 = new boolean[] { false, false, true }; boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray12); java.lang.Boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray12); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray14, false); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray6, booleanArray16); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray16); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray18); java.lang.Boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray18); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray20); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, true, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, false, false]"); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); }
public void test1288() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1288"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1}" + "'", str1, "{1}"); }
public void test1289() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1289"); byte[] byteArray0 = new byte[] {}; boolean boolean1 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray0); int int3 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray0, (byte) 100); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray0, (int) 'a', (int) (byte) 0); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray6, (int) (short) 100, (int) (short) 0); java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray9); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10); java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray13); java.lang.Short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray14); java.lang.Object obj16 = null; int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray15, obj16); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray15); java.lang.Short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray15); short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray19); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray10, (java.lang.Object) shortArray20, 0); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]"); org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true); org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); }
public void test1290() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1290"); boolean[] booleanArray3 = new boolean[] { false, false, true }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray3); java.lang.Boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray3); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray5, false); java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5); java.lang.Boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray8); java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray9); java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10, false); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray10); java.lang.Boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, true]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, true]"); }
public void test1291() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1291"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,-1}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,-1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1292() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1292"); java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 0 }; java.lang.Short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray1); java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); java.lang.Object obj4 = null; int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray2, obj4, (int) (byte) 10); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray2); java.lang.Byte[] byteArray13 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1); java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray13); byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 100); byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) -1); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 0); byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.add(byteArray22, 0, (byte) 10); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray2, (java.lang.Object) byteArray25, 8); short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0]"); }
public void test1293() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1293"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 1); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray11); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) 100); byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11, (byte) -1); byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray11); java.lang.Byte[] byteArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray11); boolean[] booleanArray24 = new boolean[] { false, false, true }; boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray24); java.lang.Boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray24); boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray26, false); java.lang.Boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray26); java.lang.Boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray29); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray20, (java.lang.Object) booleanArray30); int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray5, (java.lang.Object) booleanArray30, 0); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray20); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, true]"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); }
public void test1294() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1294"); java.lang.Long[] longArray5 = new java.lang.Long[] { 100L, 100L, 10L, 0L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 'a'); long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray7); byte[] byteArray9 = new byte[] {}; boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray9); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 100); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray9, (int) 'a', (int) (byte) 0); byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray15, (int) (short) 100, (int) (short) 0); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray7, (java.lang.Object) byteArray15); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.contains(byteArray15, (byte) -1); byte[] byteArray22 = new byte[] {}; boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray22); byte[] byteArray26 = org.apache.commons.lang3.ArrayUtils.add(byteArray22, 0, (byte) 0); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray22, (byte) 10); byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray15, byteArray22); java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) 1); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray35); byte[] byteArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) 100); byte[] byteArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) -1); byte[] byteArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) 0); boolean[] booleanArray48 = new boolean[] { false, false, true }; boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray48); java.lang.Boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray48); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray48); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray35, (java.lang.Object) booleanArray48); java.lang.Object[] objArray53 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) byteArray35); byte[] byteArray55 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray35, (byte) 10); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray29, byteArray55); boolean boolean57 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray55); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[100, 100, 10, 0, 0]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]"); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(byteArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); org.junit.Assert.assertNotNull(byteArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]"); org.junit.Assert.assertNotNull(byteArray35); org.junit.Assert.assertNotNull(byteArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(byteArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(booleanArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, true]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(objArray53); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); }
public void test1295() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1295"); java.lang.Double[] doubleArray4 = new java.lang.Double[] { 0.0d, 0.0d, 0.0d, 100.0d }; java.lang.Double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray4); double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray5, (double) (byte) 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray7, (double) 100.0f, (double) 1); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray7, (int) (short) 1); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray7); double[] doubleArray16 = new double[] { 10L, (byte) 100 }; int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, (double) 100); int int21 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, 1.0d, 1); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray16); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) 1L); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray13, doubleArray16); java.lang.String str27 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray25, "{10.0,100"); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray28, 100.0d); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 0.0, 0.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 100.0, 10.0, 100.0]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, ""); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 100.0, 10.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 10.0, 100.0]"); }
public void test1296() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1296"); float[] floatArray3 = new float[] { 1, (short) -1, (byte) 10 }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray3); org.apache.commons.lang3.ArrayUtils.reverse(floatArray3); float[] floatArray7 = new float[] { 1L }; float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.add(floatArray7, (float) (-1L)); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray7); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, 10.0f); org.apache.commons.lang3.ArrayUtils.reverse(floatArray7); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray7); java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray7); java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray29 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray36 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[][] shortArray37 = new java.lang.Short[][] { shortArray22, shortArray29, shortArray36 }; java.lang.Short[][] shortArray38 = org.apache.commons.lang3.ArrayUtils.clone(shortArray37); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray37); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray15, (java.lang.Object[]) wildcardClassArray39); float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray15); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[1.0, -1.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[1.0]"); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[1.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertNotNull(shortArray36); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertNotNull(shortArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertNotNull(floatArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[1.0]"); }
public void test1297() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1297"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); short[] shortArray15 = null; short[] shortArray18 = new short[] { (byte) 1, (short) -1 }; short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray18); org.apache.commons.lang3.ArrayUtils.reverse(shortArray19); short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray15, shortArray19); short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.remove(shortArray21, (int) (byte) 1); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray21, (short) 100); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray21, (short) (byte) 1); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) wildcardClassArray14, (java.lang.Object) (byte) 1); java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[-1, 1]"); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[-1]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[-1]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(wildcardClassArray29); }
public void test1298() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1298"); double[] doubleArray2 = new double[] { 10L, (byte) 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) 100); int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, 1.0d, 1); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) 1L); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) (short) 1, (int) (short) 0); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray14, "float[][][]"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[10.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 100.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double[]" + "'", str16, "double[]"); }
public void test1299() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1299"); long[] longArray5 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray11 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray17 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray23 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray29 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[] longArray35 = new long[] { (short) -1, (byte) 100, 100, (byte) 100, (-1) }; long[][] longArray36 = new long[][] { longArray5, longArray11, longArray17, longArray23, longArray29, longArray35 }; java.lang.Long[] longArray42 = new java.lang.Long[] { 100L, 10L, 0L, 0L }; long[] longArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray42); int int45 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray43, (long) 0); long[][] longArray46 = org.apache.commons.lang3.ArrayUtils.add(longArray36, (int) (short) 0, longArray43); java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) longArray46); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray46); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 100, 100, 100, -1]"); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertNotNull(longArray42); org.junit.Assert.assertNotNull(longArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[100, 10, 0, 0]"); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2); org.junit.Assert.assertNotNull(longArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); }
public void test1300() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1300"); int[] intArray6 = new int[] { '#', 1, '#', (-1), (short) 0, (short) 1 }; int[] intArray13 = new int[] { '#', 1, '#', (-1), (short) 0, (short) 1 }; int[] intArray20 = new int[] { '#', 1, '#', (-1), (short) 0, (short) 1 }; int[][] intArray21 = new int[][] { intArray6, intArray13, intArray20 }; boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray21); int[][] intArray23 = org.apache.commons.lang3.ArrayUtils.clone(intArray21); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) intArray21, "{-1,1}"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[35, 1, 35, -1, 0, 1]"); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[35, 1, 35, -1, 0, 1]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 1, 35, -1, 0, 1]"); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "int[][]" + "'", str25, "int[][]"); }
public void test1301() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1301"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); }
public void test1302() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1302"); byte[] byteArray1 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray1); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray1, (byte) 0); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.add(byteArray1, 0, (byte) -1); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray7); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.remove(byteArray7, 0); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray10, ""); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray10); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[100]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, 100]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, ""); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); }
public void test1303() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1303"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{-1.0,100.0,100.0,10"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0,10" + "'", str1, "0,10"); } @Test public void test1304() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1304"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{},{},{}}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{},{},{}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1305() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1305"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?> wildcardClass18 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass21 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray23 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass18; wildcardClassArray24[1] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?> wildcardClass32 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass35 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray37 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; wildcardClassArray38[0] = wildcardClass32; wildcardClassArray38[1] = wildcardClass35; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); java.lang.Class<?> wildcardClass46 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass49 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray51 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; wildcardClassArray52[0] = wildcardClass46; wildcardClassArray52[1] = wildcardClass49; java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray52); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray52, false); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray52); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, wildcardClassArray60); boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray29, true); java.lang.Class<?> wildcardClass66 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass69 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray71 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray72 = (java.lang.Class<?>[]) classArray71; wildcardClassArray72[0] = wildcardClass66; wildcardClassArray72[1] = wildcardClass69; java.lang.Class<?>[] wildcardClassArray77 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray72); java.lang.Class<?>[] wildcardClassArray78 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray72); java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray78); boolean boolean81 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray78, true); java.lang.Class<?>[] wildcardClassArray82 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray83 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass18); org.junit.Assert.assertNotNull(wildcardClass21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClass32); org.junit.Assert.assertNotNull(wildcardClass35); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClass46); org.junit.Assert.assertNotNull(wildcardClass49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertNotNull(wildcardClass66); org.junit.Assert.assertNotNull(wildcardClass69); org.junit.Assert.assertNotNull(classArray71); org.junit.Assert.assertNotNull(wildcardClassArray72); org.junit.Assert.assertNotNull(wildcardClassArray77); org.junit.Assert.assertNotNull(wildcardClassArray78); org.junit.Assert.assertNotNull(wildcardClassArray79); org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false); org.junit.Assert.assertNotNull(wildcardClassArray82); org.junit.Assert.assertNotNull(wildcardClassArray83); } @Test public void test1306() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1306"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{Object[],{true,true,false,false,true,false}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1307() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1307"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 0); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray12, (byte) 10); byte[] byteArray18 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray18); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray18, 10, 10); byte[] byteArray24 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray24, (byte) 0); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray28); java.lang.Byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray28); byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray28); byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.clone(byteArray28); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 10, (int) (short) 100); byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.clone(byteArray32); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]"); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]"); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertNotNull(byteArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 100, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertNotNull(byteArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]"); } @Test public void test1308() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1308"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); int[] intArray10 = new int[] { '#', (short) 1 }; int[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10); int[] intArray14 = new int[] { '#', (short) 1 }; int[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray11, intArray15); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, (int) (byte) 10); int[] intArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray18, 0); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, (java.lang.Object) 0, (int) (byte) 100); char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); char[] charArray29 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29); char[] charArray31 = new char[] {}; char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray31, (int) 'a', (int) (byte) 0); char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray31); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray31); java.lang.String str38 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray31, "{-1}"); char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray31); char[] charArray40 = org.apache.commons.lang3.ArrayUtils.clone(charArray24); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, , , #]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[35, 1]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[35, 1]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 1]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 1]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]"); org.junit.Assert.assertNotNull(charArray34); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]"); org.junit.Assert.assertNotNull(charArray35); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]"); org.junit.Assert.assertEquals("'" + str38 + "' != '" + "char[]" + "'", str38, "char[]"); org.junit.Assert.assertNotNull(charArray39); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray40); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, , , #]"); } @Test public void test1309() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1309"); java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[][] shortArray21 = new java.lang.Short[][] { shortArray6, shortArray13, shortArray20 }; java.lang.Short[][] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray21); java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); } @Test public void test1310() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1310"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 10); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); } @Test public void test1311() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1311"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1,-1,10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,-1,10,0}" + "'", str1, "{1,-1,10,0}"); } @Test public void test1312() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1312"); java.lang.Character[][] charArray0 = null; char[] charArray6 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.toObject(charArray6); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (-1), 1); char[] charArray11 = new char[] {}; char[] charArray14 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, (int) 'a', (int) (byte) 0); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray14, ' ', (int) '4'); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' '); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray19); java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray19); char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '4'); java.lang.Character[][] charArray24 = org.apache.commons.lang3.ArrayUtils.add(charArray0, (int) (short) 0, charArray21); java.util.Map<java.lang.Object, java.lang.Object> objMap25 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray21); java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray26, "{-1}"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]"); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]"); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertNotNull(objMap25); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Character[]" + "'", str28, "Character[]"); } @Test public void test1313() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1313"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "4"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4" + "'", str2, "4"); } @Test public void test1314() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1314"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 10); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 100, -1, -1, 1]"); } @Test public void test1315() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1315"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) (byte) 10, (int) '#'); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) '#', ""); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Character" + "'", str11, "Character"); } @Test public void test1316() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1316"); float[] floatArray2 = new float[] { 10L, 10 }; float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, (int) (byte) 1); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 1, "{<null>}"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[10.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); } @Test public void test1317() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1317"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1318() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1318"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{<null>}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {<null>}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1319() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1319"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{1,0,-1,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1320() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1320"); java.lang.Long[] longArray5 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 1); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray5, (java.lang.Object) false, (int) (byte) 0); int[] intArray14 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray5, (java.lang.Object[]) intArray15); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (int) '#'); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) '#', ""); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 100, 10]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java.lang" + "'", str20, "java.lang"); } @Test public void test1321() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1321"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?> wildcardClass7 = wildcardClassArray6.getClass(); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClass7); } @Test public void test1322() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1322"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,0,-1,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1323() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1323"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,0,-1,100}" + "'", str1, "{1,0,-1,100}"); } @Test public void test1324() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1324"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,0,-1,100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1325() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1325"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0,100,10}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1326() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1326"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("hi!", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: hi!"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1327() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1327"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1328() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1328"); java.lang.String[] strArray5 = new java.lang.String[] { "{0,100,10}", "hi!", "", "hi!", "hi!" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); } @Test public void test1329() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1329"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,0,-1,100}" + "'", str1, "{1,0,-1,100}"); } @Test public void test1330() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1330"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0,100,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1331() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1331"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{<null>}" + "'", str1, "{<null>}"); } @Test public void test1332() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1332"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray4, "hi!"); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1); int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray9, (short) (byte) 1); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) (byte) 1, "{10,10}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{1,0,-1,100}" + "'", str7, "{1,0,-1,100}"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 0, -1, 100, -1]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Byte" + "'", str13, "Byte"); } @Test public void test1333() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1333"); float[] floatArray5 = new float[] { ' ', 0, 100L, '4', 0 }; float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, (int) (short) 10); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 1, ""); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[32.0, 0.0, 100.0, 52.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[0.0, 100.0, 52.0, 0.0]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.lang" + "'", str10, "java.lang"); } @Test public void test1334() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1334"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{<null>}" + "'", str1, "{<null>}"); } @Test public void test1335() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1335"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{<null>}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {<null>}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1336() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1336"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{10,10,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1337() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1337"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); org.apache.commons.lang3.ArrayUtils.reverse(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.remove(shortArray8, (int) (byte) 0); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) (byte) 0, "{10,10}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 1]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Byte" + "'", str12, "Byte"); } @Test public void test1338() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1338"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1339() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1339"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{0,100,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0,100,10}" + "'", str1, "{0,100,10}"); } @Test public void test1340() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1340"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10,10,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10,100}" + "'", str1, "{10,10,100}"); } @Test public void test1341() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1341"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10}" + "'", str1, "{10,10}"); } @Test public void test1342() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1342"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1343() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1343"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) (byte) 0, (long) (short) 100); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray8, "hi!"); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray8, (long) (short) 100, (int) (byte) 1); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); } @Test public void test1344() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1344"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(obj0, "hi!"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!"); } @Test public void test1345() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1345"); int[] intArray3 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3); int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) intArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray4, "{<null>}"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); } @Test public void test1346() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1346"); double[] doubleArray2 = new double[] { (byte) 100, (short) 100 }; double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 10.0d, (int) (byte) 100, (double) (short) 100); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 0, 0); java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, 0, 10, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray15); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0, (java.lang.Object) intArray15); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[100.0, 100.0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 0, 10, 100]"); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); } @Test public void test1347() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1347"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); } @Test public void test1348() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1348"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{1,0,-1,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1349() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1349"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{0,100,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0,100,10}" + "'", str1, "{0,100,10}"); } @Test public void test1350() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1350"); int[] intArray3 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3); int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (byte) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 10, "{10,10}"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 100, 10]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); } @Test public void test1351() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1351"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10,10,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10,100}" + "'", str1, "{10,10,100}"); } @Test public void test1352() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1352"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{<null>}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {<null>}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1353() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1353"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{10,10,100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1354() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1354"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{0,100,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1355() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1355"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1356() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1356"); float[] floatArray3 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) 0); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray5, "{1,0,-1,100}"); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, 0.0f); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, -1.0]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "float[]" + "'", str8, "float[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); } @Test public void test1357() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1357"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (short) -1, "{10,10,100}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Short" + "'", str2, "Short"); } @Test public void test1358() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1358"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(wildcardClassArray8); } @Test public void test1359() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1359"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1360() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1360"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10}" + "'", str1, "{10,10}"); } @Test public void test1361() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1361"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,0,-1,100,1}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1362() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1362"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) (byte) 0, (long) (short) 100); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray8, "hi!"); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); // The following exception was thrown during execution in test generation try { long[] longArray14 = org.apache.commons.lang3.ArrayUtils.add(longArray11, 10, 0L); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 10, 10]"); } @Test public void test1363() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1363"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0,100,10}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1364() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1364"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) 100, "{<null>}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.lang" + "'", str2, "java.lang"); } @Test public void test1365() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1365"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); float[] floatArray9 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, (float) 0); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray11); java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11); float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13); java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14); float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray15, (float) (byte) 100); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray17, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[10.0, -1.0]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "float[]" + "'", str19, "float[]"); } @Test public void test1366() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1366"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,100,0}" + "'", str1, "{10,100,0}"); } @Test public void test1367() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1367"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass37 = null; java.lang.Class[] classArray39 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; wildcardClassArray40[0] = wildcardClass37; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray40); java.lang.Object obj44 = null; int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray43, obj44); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43); boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray36, wildcardClassArray43, false); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); } @Test public void test1368() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1368"); float[] floatArray6 = new float[] { (short) 100, '#', ' ', 10L, 10, 100L }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray6, (float) (short) 1); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray6); float[] floatArray17 = new float[] { (short) 100, '#', ' ', 10L, 10, 100L }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray17); float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.remove(floatArray17, 0); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray21, "{10,10}"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); } @Test public void test1369() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1369"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1370() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1370"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,100,0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1371() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1371"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1,1,0,100,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,1,0,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1372() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1372"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1373() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1373"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, "{0,100,10}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{0,100,10}" + "'", str2, "{0,100,10}"); } @Test public void test1374() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1374"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0,100,10}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1375() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1375"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{-1,1,0,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1376() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1376"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); java.lang.reflect.Type[][][][][][] typeArray28 = null; short[] shortArray33 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.clone(shortArray33); short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.add(shortArray33, (short) (byte) 1); java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36); java.lang.reflect.Type[][][][][][] typeArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray28, (java.lang.Object) shortArray37); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray26, (java.lang.Object[]) shortArray37); java.lang.Class<?> wildcardClass40 = null; java.lang.Class[] classArray42 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; wildcardClassArray43[0] = wildcardClass40; java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray43); java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray46); boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray46); java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray52); boolean[] booleanArray54 = new boolean[] {}; boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.add(booleanArray54, false); boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.add(booleanArray54, true); boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray58); boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.add(booleanArray59, 0, false); boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray52, (java.lang.Object) booleanArray59); int int64 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray46, (java.lang.Object) byteArray52); boolean boolean66 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray46, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertNull(typeArray38); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{<null>}" + "'", str47, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); org.junit.Assert.assertNotNull(byteArray52); org.junit.Assert.assertNotNull(byteArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[]"); org.junit.Assert.assertNotNull(booleanArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false]"); org.junit.Assert.assertNotNull(booleanArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[true]"); org.junit.Assert.assertNotNull(booleanArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[true]"); org.junit.Assert.assertNotNull(booleanArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); } @Test public void test1377() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1377"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) wildcardClassArray2, "{1,0,-1,100}"); char[] charArray49 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray52 = org.apache.commons.lang3.ArrayUtils.subarray(charArray49, (int) (short) 1, (int) (short) 0); char[] charArray53 = org.apache.commons.lang3.ArrayUtils.clone(charArray52); int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray53, '#', (int) (short) 0); int int58 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray2, (java.lang.Object) charArray53, (int) ' '); char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray53); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Class[]" + "'", str42, "Class[]"); org.junit.Assert.assertNotNull(charArray49); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray52); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]"); org.junit.Assert.assertNotNull(charArray53); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1)); org.junit.Assert.assertNotNull(charArray59); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]"); } @Test public void test1378() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1378"); int[] intArray3 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3); int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) intArray4); java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) intArray4, "hi!"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Integer[]" + "'", str9, "Integer[]"); } @Test public void test1379() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1379"); java.lang.String[] strArray5 = new java.lang.String[] { "{10,100,0}", "{<null>}", "{-1,1,0,100,0}", "", "{10,10,100}" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.RandomAccess[] randomAccessArray10 = new java.util.RandomAccess[] { strList6 }; java.lang.String[] strArray16 = new java.lang.String[] { "{10,100,0}", "{<null>}", "{-1,1,0,100,0}", "", "{10,10,100}" }; java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>(); boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16); java.util.List<java.lang.Class<?>> wildcardClassList19 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList17); java.util.List<java.lang.Class<?>> wildcardClassList20 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList17); java.util.RandomAccess[] randomAccessArray21 = new java.util.RandomAccess[] { strList17 }; java.util.RandomAccess[][] randomAccessArray22 = new java.util.RandomAccess[][] { randomAccessArray10, randomAccessArray21 }; // The following exception was thrown during execution in test generation try { java.util.RandomAccess[][] randomAccessArray24 = org.apache.commons.lang3.ArrayUtils.remove(randomAccessArray22, (int) (short) 10); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); org.junit.Assert.assertNotNull(wildcardClassList9); org.junit.Assert.assertNotNull(randomAccessArray10); org.junit.Assert.assertNotNull(strArray16); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertNotNull(wildcardClassList19); org.junit.Assert.assertNotNull(wildcardClassList20); org.junit.Assert.assertNotNull(randomAccessArray21); org.junit.Assert.assertNotNull(randomAccessArray22); } @Test public void test1380() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1380"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{10,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1381() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1381"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{1,0,-1,100,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1382() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1382"); double[] doubleArray2 = new double[] { 100.0f, (short) 100 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, 0); double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) '4', (double) (-1)); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray2); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray10, "{10,10,100}"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Double[]" + "'", str13, "Double[]"); } @Test public void test1383() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1383"); java.lang.String[] strArray1 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>(); boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1); java.util.List<java.lang.Class<?>> wildcardClassList4 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList2); java.util.List<java.lang.Class<?>> wildcardClassList5 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList2); java.util.List<java.lang.Class<?>> wildcardClassList6 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList2); org.junit.Assert.assertNotNull(strArray1); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertNotNull(wildcardClassList4); org.junit.Assert.assertNotNull(wildcardClassList5); org.junit.Assert.assertNotNull(wildcardClassList6); } @Test public void test1384() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1384"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10,100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1385() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1385"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{10,100,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1386() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1386"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray2, "{0,100,10}"); // The following exception was thrown during execution in test generation try { long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) ' ', (long) '#'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); } @Test public void test1387() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1387"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 10.0f, ""); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.lang" + "'", str2, "java.lang"); } @Test public void test1388() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1388"); java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] { true }; boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray1, true); java.lang.Class<?>[] wildcardClassArray4 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray1); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray1); boolean[] booleanArray6 = new boolean[] {}; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray8); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray5, booleanArray8); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray8, 0, (int) (byte) -1); org.junit.Assert.assertNotNull(booleanArray1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true]"); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, false]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[]"); } @Test public void test1389() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1389"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = new double[] { 100L }; boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray11); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray9, doubleArray11); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray13); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, ""); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double[]" + "'", str16, "double[]"); } @Test public void test1390() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1390"); double[] doubleArray2 = new double[] { 100.0f, (short) 100 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, 0); double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) '4', (int) '#'); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray2, (double) 100); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray2, "{10,10,100}"); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, 100.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); } @Test public void test1391() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1391"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.Class<?> wildcardClass8 = null; java.lang.Class[] classArray10 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10; wildcardClassArray11[0] = wildcardClass8; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11); java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray14); java.lang.reflect.Type[][][][][][] typeArray16 = null; short[] shortArray21 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) (byte) 1); java.lang.Short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray24); java.lang.reflect.Type[][][][][][] typeArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray16, (java.lang.Object) shortArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray14, (java.lang.Object[]) shortArray25); java.lang.Class<?> wildcardClass28 = null; java.lang.Class[] classArray30 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; wildcardClassArray31[0] = wildcardClass28; java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray31); java.lang.String str35 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray34); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray34); java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40); boolean[] booleanArray42 = new boolean[] {}; boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, false); boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, true); boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray46); boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.add(booleanArray47, 0, false); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray40, (java.lang.Object) booleanArray47); int int52 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray34, (java.lang.Object) byteArray40); byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40); boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray7, (java.lang.Object) byteArray53); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertNotNull(classArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{<null>}" + "'", str15, "{<null>}"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertNull(typeArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{<null>}" + "'", str35, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertNotNull(byteArray40); org.junit.Assert.assertNotNull(byteArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[]"); org.junit.Assert.assertNotNull(booleanArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false]"); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[true]"); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true]"); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(byteArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 0, 10]"); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false); } @Test public void test1392() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1392"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); int[] intArray16 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.remove(intArray16, (int) (short) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) (short) 0, (int) (byte) 1); char[] charArray27 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray30 = org.apache.commons.lang3.ArrayUtils.subarray(charArray27, (int) (short) 1, (int) (short) 0); char[] charArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray27, 'a', (int) (byte) -1); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, ' '); java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.toObject(charArray27); java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) charArray37); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray68 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray75 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[][] shortArray76 = new java.lang.Short[][] { shortArray47, shortArray54, shortArray61, shortArray68, shortArray75 }; java.lang.Short[][] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray76, (int) ' ', (int) (short) -1); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray76); java.lang.Class<?>[] wildcardClassArray81 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray76); boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray81, false); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]"); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4, a, #, #]"); org.junit.Assert.assertNotNull(charArray37); org.junit.Assert.assertNotNull(charArray38); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(shortArray47); org.junit.Assert.assertNotNull(shortArray54); org.junit.Assert.assertNotNull(shortArray61); org.junit.Assert.assertNotNull(shortArray68); org.junit.Assert.assertNotNull(shortArray75); org.junit.Assert.assertNotNull(shortArray76); org.junit.Assert.assertNotNull(shortArray79); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true); org.junit.Assert.assertNotNull(wildcardClassArray81); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false); } @Test public void test1393() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1393"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); // The following exception was thrown during execution in test generation try { java.util.ArrayList<java.lang.String>[] strListArray10 = org.apache.commons.lang3.ArrayUtils.remove(strListArray8, (int) '#'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); } @Test public void test1394() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1394"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{-1,1,0,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1395() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1395"); java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { true, true, true, true, false }; java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray5); java.lang.Class<?> wildcardClass8 = null; java.lang.Class[] classArray10 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10; wildcardClassArray11[0] = wildcardClass8; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11); java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray14); java.lang.reflect.Type[][][][][][] typeArray16 = null; short[] shortArray21 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) (byte) 1); java.lang.Short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray24); java.lang.reflect.Type[][][][][][] typeArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray16, (java.lang.Object) shortArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray14, (java.lang.Object[]) shortArray25); java.lang.Class<?> wildcardClass28 = null; java.lang.Class[] classArray30 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; wildcardClassArray31[0] = wildcardClass28; java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray31); java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray31); java.lang.Short[] shortArray36 = new java.lang.Short[] {}; short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36); short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray36); boolean boolean41 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray35, wildcardClassArray39, true); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray35, true); java.lang.Class<?> wildcardClass44 = null; java.lang.Class[] classArray46 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46; wildcardClassArray47[0] = wildcardClass44; java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray47); java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray47); boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray47, true); java.lang.Class[] classArray55 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55; java.lang.Class<?> wildcardClass57 = null; java.lang.Class[] classArray59 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59; wildcardClassArray60[0] = wildcardClass57; java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray60); java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray63); java.lang.reflect.Type[][][][][][] typeArray65 = null; short[] shortArray70 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70); short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.add(shortArray70, (short) (byte) 1); java.lang.Short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73); java.lang.reflect.Type[][][][][][] typeArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray65, (java.lang.Object) shortArray74); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray63, (java.lang.Object[]) shortArray74); java.lang.Class<?> wildcardClass77 = null; java.lang.Class[] classArray79 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79; wildcardClassArray80[0] = wildcardClass77; java.lang.Class<?>[] wildcardClassArray83 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray80); java.lang.Class<?>[] wildcardClassArray84 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray80); java.lang.Short[] shortArray85 = new java.lang.Short[] {}; short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85); short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85); java.lang.Class<?>[] wildcardClassArray88 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray85); boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray84, wildcardClassArray88, true); boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray63, wildcardClassArray84, true); boolean boolean94 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray56, wildcardClassArray63, false); boolean boolean95 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray56); java.lang.Object[] objArray96 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray56); int int98 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray5, (java.lang.Object) wildcardClassArray56, 0); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertNotNull(classArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{<null>}" + "'", str15, "{<null>}"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertNull(typeArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertNotNull(shortArray36); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]"); org.junit.Assert.assertNotNull(shortArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(classArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(classArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertNotNull(classArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray63); org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{<null>}" + "'", str64, "{<null>}"); org.junit.Assert.assertNotNull(shortArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray74); org.junit.Assert.assertNull(typeArray75); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertNotNull(classArray79); org.junit.Assert.assertNotNull(wildcardClassArray80); org.junit.Assert.assertNotNull(wildcardClassArray83); org.junit.Assert.assertNotNull(wildcardClassArray84); org.junit.Assert.assertNotNull(shortArray85); org.junit.Assert.assertNotNull(shortArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]"); org.junit.Assert.assertNotNull(shortArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray88); org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false); org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false); org.junit.Assert.assertNotNull(objArray96); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]"); org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1)); } @Test public void test1396() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1396"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); double[] doubleArray19 = new double[] { 100.0f, (short) 100 }; double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 0); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray21); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 10.0, 100.0]"); } @Test public void test1397() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1397"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{10,10,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1398() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1398"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, "{0,100,10}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{0,100,10}" + "'", str2, "{0,100,10}"); } @Test public void test1399() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1399"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, "{10,10}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{10,10}" + "'", str2, "{10,10}"); } @Test public void test1400() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1400"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1401() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1401"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap11 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray6); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, 'null', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); } @Test public void test1402() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1402"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 10, (short) 100, (short) 100, (short) 10 }; short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) -1); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray27, (java.lang.Object[]) shortArray40); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray27); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertNotNull(shortArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[10, 100, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(wildcardClassArray44); } @Test public void test1403() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1403"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?> wildcardClass10 = null; java.lang.Class[] classArray12 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; wildcardClassArray13[0] = wildcardClass10; java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray16); java.lang.reflect.Type[][][][][][] typeArray18 = null; short[] shortArray23 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) (byte) 1); java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26); java.lang.reflect.Type[][][][][][] typeArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray18, (java.lang.Object) shortArray27); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray16, (java.lang.Object[]) shortArray27); java.lang.Class<?> wildcardClass30 = null; java.lang.Class[] classArray32 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; wildcardClassArray33[0] = wildcardClass30; java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray33); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33); java.lang.Short[] shortArray38 = new java.lang.Short[] {}; short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38); short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38); java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray38); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, wildcardClassArray41, true); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray16, wildcardClassArray37, true); java.lang.String str47 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) wildcardClassArray16, "{0,100,10}"); double[] doubleArray50 = new double[] { 100.0f, (short) 100 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray50, 0); double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray52, (int) (short) 1, 0); int int56 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray16, (java.lang.Object) (short) 1); boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray16); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{<null>}" + "'", str17, "{<null>}"); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertNull(typeArray28); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(shortArray38); org.junit.Assert.assertNotNull(shortArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]"); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false); org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Class[]" + "'", str47, "Class[]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); } @Test public void test1404() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1404"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray4, "{10,100,0}"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[true]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean[]" + "'", str7, "boolean[]"); } @Test public void test1405() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1405"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{1,0,-1,100,1}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1406() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1406"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); java.lang.Class<?>[] wildcardClassArray45 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(wildcardClassArray46); } @Test public void test1407() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1407"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); int[] intArray16 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.remove(intArray16, (int) (short) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) (short) 0, (int) (byte) 1); char[] charArray27 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray30 = org.apache.commons.lang3.ArrayUtils.subarray(charArray27, (int) (short) 1, (int) (short) 0); char[] charArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray27, 'a', (int) (byte) -1); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, ' '); java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.toObject(charArray27); java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) charArray37); java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { true }; boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41, true); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray41); boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray45); int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray37, (java.lang.Object) booleanArray45, (int) (byte) 1); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]"); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4, a, #, #]"); org.junit.Assert.assertNotNull(charArray37); org.junit.Assert.assertNotNull(charArray38); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); org.junit.Assert.assertNotNull(booleanArray41); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true]"); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[true]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); } @Test public void test1408() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1408"); java.lang.Integer[] intArray4 = new java.lang.Integer[] { 100, 0, 10, 100 }; int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray4); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 10, 100]"); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); } @Test public void test1409() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1409"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,100,0}" + "'", str1, "{10,100,0}"); } @Test public void test1410() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1410"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) (byte) 0, (long) (short) 100); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray8, "hi!"); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); long[] longArray14 = new long[] { 10L, (byte) 10 }; long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, (int) (short) 0, (int) ' '); java.lang.Long[] longArray23 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray23, (long) 1); long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray17, longArray25); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.add(longArray25, 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray11, longArray28); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1, 1, 0, 100, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); } @Test public void test1411() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1411"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 'a', (int) (byte) -1, (double) 100); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, 1, (double) 0L); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 10.0]"); } @Test public void test1412() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1412"); java.lang.String[] strArray5 = new java.lang.String[] { "{1,0,-1,100}", "hi!", "{<null>}", "{<null>}", "" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList10 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); org.junit.Assert.assertNotNull(wildcardClassList9); org.junit.Assert.assertNotNull(wildcardClassList10); } @Test public void test1413() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1413"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) wildcardClassArray2, "{1,0,-1,100}"); java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Class[]" + "'", str42, "Class[]"); org.junit.Assert.assertNotNull(wildcardClassArray43); } @Test public void test1414() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1414"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean40, ""); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Boolean" + "'", str42, "Boolean"); } @Test public void test1415() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1415"); java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10, 1 }; int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 1); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 1, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 1]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); } @Test public void test1416() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1416"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "1", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1417() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1417"); org.apache.commons.lang3.ClassUtils[] classUtilsArray0 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray1 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray2 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray3 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray4 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray5 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray0, classUtilsArray1, classUtilsArray2, classUtilsArray3, classUtilsArray4 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray6 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray7 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray8 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray9 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray10 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray11 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray6, classUtilsArray7, classUtilsArray8, classUtilsArray9, classUtilsArray10 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray12 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray13 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray14 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray15 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray16 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray17 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray12, classUtilsArray13, classUtilsArray14, classUtilsArray15, classUtilsArray16 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray18 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray19 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray20 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray21 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray22 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray23 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray18, classUtilsArray19, classUtilsArray20, classUtilsArray21, classUtilsArray22 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray24 = new org.apache.commons.lang3.ClassUtils[][][] { classUtilsArray5, classUtilsArray11, classUtilsArray17, classUtilsArray23 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray25 = new org.apache.commons.lang3.ClassUtils[][][] {}; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray26 = org.apache.commons.lang3.ArrayUtils.addAll(classUtilsArray24, classUtilsArray25); org.apache.commons.lang3.ClassUtils[][][] classUtilsArray27 = org.apache.commons.lang3.ArrayUtils.clone(classUtilsArray26); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) classUtilsArray27, "{10,10,100}"); org.junit.Assert.assertNotNull(classUtilsArray0); org.junit.Assert.assertNotNull(classUtilsArray1); org.junit.Assert.assertNotNull(classUtilsArray2); org.junit.Assert.assertNotNull(classUtilsArray3); org.junit.Assert.assertNotNull(classUtilsArray4); org.junit.Assert.assertNotNull(classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray6); org.junit.Assert.assertNotNull(classUtilsArray7); org.junit.Assert.assertNotNull(classUtilsArray8); org.junit.Assert.assertNotNull(classUtilsArray9); org.junit.Assert.assertNotNull(classUtilsArray10); org.junit.Assert.assertNotNull(classUtilsArray11); org.junit.Assert.assertNotNull(classUtilsArray12); org.junit.Assert.assertNotNull(classUtilsArray13); org.junit.Assert.assertNotNull(classUtilsArray14); org.junit.Assert.assertNotNull(classUtilsArray15); org.junit.Assert.assertNotNull(classUtilsArray16); org.junit.Assert.assertNotNull(classUtilsArray17); org.junit.Assert.assertNotNull(classUtilsArray18); org.junit.Assert.assertNotNull(classUtilsArray19); org.junit.Assert.assertNotNull(classUtilsArray20); org.junit.Assert.assertNotNull(classUtilsArray21); org.junit.Assert.assertNotNull(classUtilsArray22); org.junit.Assert.assertNotNull(classUtilsArray23); org.junit.Assert.assertNotNull(classUtilsArray24); org.junit.Assert.assertNotNull(classUtilsArray25); org.junit.Assert.assertNotNull(classUtilsArray26); org.junit.Assert.assertNotNull(classUtilsArray27); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassUtils[][][]" + "'", str29, "ClassUtils[][][]"); } @Test public void test1418() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1418"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 10, (short) 100, (short) 100, (short) 10 }; short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) -1); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray27, (java.lang.Object[]) shortArray40); java.lang.String str45 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean43, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertNotNull(shortArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[10, 100, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertEquals("'" + str45 + "' != '" + "java.lang" + "'", str45, "java.lang"); } @Test public void test1419() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1419"); java.lang.String[] strArray13 = new java.lang.String[] { "{0,100,10}", "{10,10,100}", "{10,100,0}", "{<null>}", "{10,10}", "{0,100,10}", "{0,100,10}", "{-1,1,0,100,0}", "1", "ClassUtils[][][]", "{-1,1,0,100,0}", "{1,0,-1,100,1}", "" }; java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>(); boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13); java.util.List<java.lang.Class<?>> wildcardClassList16 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList14); org.junit.Assert.assertNotNull(strArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(wildcardClassList16); } @Test public void test1420() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1420"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1421() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1421"); short[] shortArray2 = new short[] { (byte) 0, (byte) 1 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray2, (short) 0); short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray2); java.lang.Class<?> wildcardClass7 = null; java.lang.Class[] classArray9 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; wildcardClassArray10[0] = wildcardClass7; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray6, (java.lang.Object) wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray17 = null; boolean boolean19 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray17, false); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0, 1]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[0, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); } @Test public void test1422() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1422"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray9 = null; boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray8, wildcardClassArray9); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); } @Test public void test1423() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1423"); org.apache.commons.lang3.ClassUtils[] classUtilsArray0 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray1 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray2 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray3 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray4 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray5 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray0, classUtilsArray1, classUtilsArray2, classUtilsArray3, classUtilsArray4 }; org.apache.commons.lang3.ClassUtils[][] classUtilsArray6 = org.apache.commons.lang3.ArrayUtils.toArray(classUtilsArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray0); org.junit.Assert.assertNotNull(classUtilsArray1); org.junit.Assert.assertNotNull(classUtilsArray2); org.junit.Assert.assertNotNull(classUtilsArray3); org.junit.Assert.assertNotNull(classUtilsArray4); org.junit.Assert.assertNotNull(classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); } @Test public void test1424() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1424"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray4, (int) (byte) 0); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0]"); } @Test public void test1425() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1425"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(obj0, "ClassUtils[][][]"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassUtils[][][]" + "'", str2, "ClassUtils[][][]"); } @Test public void test1426() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1426"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray2, "{0,100,10}"); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray2, (-1L), (int) 'a'); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); } @Test public void test1427() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1427"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass11 = null; java.lang.Class[] classArray13 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13; wildcardClassArray14[0] = wildcardClass11; java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.String str18 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray17); java.lang.reflect.Type[][][][][][] typeArray19 = null; short[] shortArray24 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.clone(shortArray24); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray24, (short) (byte) 1); java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray27); java.lang.reflect.Type[][][][][][] typeArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray19, (java.lang.Object) shortArray28); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray17, (java.lang.Object[]) shortArray28); java.lang.Class<?> wildcardClass31 = null; java.lang.Class[] classArray33 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; wildcardClassArray34[0] = wildcardClass31; java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray34); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray34); java.lang.Short[] shortArray39 = new java.lang.Short[] {}; short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39); short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39); java.lang.Class<?>[] wildcardClassArray42 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray39); boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray38, wildcardClassArray42, true); boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray38, true); java.lang.Class<?> wildcardClass47 = null; java.lang.Class[] classArray49 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49; wildcardClassArray50[0] = wildcardClass47; java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray50); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray50); boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray50, true); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray50, false); java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); byte[] byteArray64 = new byte[] { (byte) 0, (byte) 0, (byte) 10, (byte) 0 }; byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.add(byteArray64, (byte) 10); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) byteArray64, (int) (byte) 0); int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray64, (byte) 1, (int) 'a'); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{<null>}" + "'", str18, "{<null>}"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNull(typeArray29); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(shortArray39); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]"); org.junit.Assert.assertNotNull(shortArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertNotNull(classArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(byteArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 10, 0]"); org.junit.Assert.assertNotNull(byteArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 10, 0, 10]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); } @Test public void test1428() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1428"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "ClassUtils[][][]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [[[LClassUtils;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1429() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1429"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); java.lang.String[] strArray18 = new java.lang.String[] { "{10,10}", "{<null>}", "{0,100,10}", "{10,100,0}", "{<null>}", "{10,10,100}", "{-1,1,0,100,0}", "{10,10}" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList22 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); // The following exception was thrown during execution in test generation try { java.util.RandomAccess[] randomAccessArray23 = org.apache.commons.lang3.ArrayUtils.add((java.util.RandomAccess[]) strListArray8, (int) '4', (java.util.RandomAccess) strList19); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(wildcardClassList22); } @Test public void test1430() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1430"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.util.ArrayList[] arrayListArray4 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray5 = (java.util.ArrayList<java.lang.String>[]) arrayListArray4; java.util.ArrayList[] arrayListArray7 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray8 = (java.util.ArrayList<java.lang.String>[]) arrayListArray7; java.util.ArrayList[] arrayListArray10 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray11 = (java.util.ArrayList<java.lang.String>[]) arrayListArray10; java.util.ArrayList[] arrayListArray13 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray14 = (java.util.ArrayList<java.lang.String>[]) arrayListArray13; java.util.ArrayList[] arrayListArray16 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray17 = (java.util.ArrayList<java.lang.String>[]) arrayListArray16; java.util.ArrayList[][] arrayListArray19 = new java.util.ArrayList[6][]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[][] strListArray20 = (java.util.ArrayList<java.lang.String>[][]) arrayListArray19; strListArray20[0] = arrayListArray1; strListArray20[1] = strListArray5; strListArray20[2] = arrayListArray7; strListArray20[3] = arrayListArray10; strListArray20[4] = arrayListArray13; strListArray20[5] = arrayListArray16; java.util.ArrayList<java.lang.String>[][] strListArray35 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray20, 100, 0); java.lang.String[] strArray37 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.List<java.lang.Class<?>> wildcardClassList41 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.RandomAccess[] randomAccessArray42 = new java.util.RandomAccess[] { strList38 }; java.util.RandomAccess[] randomAccessArray43 = org.apache.commons.lang3.ArrayUtils.toArray(randomAccessArray42); int int46 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) randomAccessArray43, (java.lang.Object) 1.0f, 10); // The following exception was thrown during execution in test generation try { java.util.RandomAccess[][] randomAccessArray47 = org.apache.commons.lang3.ArrayUtils.add((java.util.RandomAccess[][]) strListArray35, randomAccessArray43); org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: [Ljava.util.RandomAccess;"); } catch (java.lang.ArrayStoreException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(arrayListArray4); org.junit.Assert.assertNotNull(strListArray5); org.junit.Assert.assertNotNull(arrayListArray7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(arrayListArray10); org.junit.Assert.assertNotNull(strListArray11); org.junit.Assert.assertNotNull(arrayListArray13); org.junit.Assert.assertNotNull(strListArray14); org.junit.Assert.assertNotNull(arrayListArray16); org.junit.Assert.assertNotNull(strListArray17); org.junit.Assert.assertNotNull(arrayListArray19); org.junit.Assert.assertNotNull(strListArray20); org.junit.Assert.assertNotNull(strListArray35); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(wildcardClassList41); org.junit.Assert.assertNotNull(randomAccessArray42); org.junit.Assert.assertNotNull(randomAccessArray43); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); } @Test public void test1431() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1431"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray3); java.lang.Short[] shortArray8 = new java.lang.Short[] {}; short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray8); boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray11, true); java.lang.Class<?> wildcardClass14 = null; java.lang.Class[] classArray16 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16; wildcardClassArray17[0] = wildcardClass14; java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); java.lang.Short[] shortArray22 = new java.lang.Short[] {}; short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray22); boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray25, true); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray21); java.lang.reflect.GenericDeclaration[] genericDeclarationArray30 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.reflect.GenericDeclaration[]) wildcardClassArray7, (int) (short) 0); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertNotNull(classArray16); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(genericDeclarationArray30); } @Test public void test1432() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1432"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,100,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1433() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1433"); java.lang.String[] strArray5 = new java.lang.String[] { "{10,100,0}", "{<null>}", "{-1,1,0,100,0}", "", "{10,10,100}" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList10 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); org.junit.Assert.assertNotNull(wildcardClassList9); org.junit.Assert.assertNotNull(wildcardClassList10); } @Test public void test1434() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1434"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { true, true, true, true }; boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray11); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray12); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true, (int) (byte) 0); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) true, "{10,100,0}"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, true, true, true]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.lang" + "'", str18, "java.lang"); } @Test public void test1435() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1435"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 10, (int) (byte) 100); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 0, (int) '4', 100.0d); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, 0.0d); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) 100); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); } @Test public void test1436() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1436"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); int[] intArray16 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.remove(intArray16, (int) (short) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) (short) 0, (int) (byte) 1); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21, 10.0d); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) 1L, (int) (byte) 100, (double) 1.0f); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray23, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "double[]" + "'", str29, "double[]"); } @Test public void test1437() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1437"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean[] booleanArray3 = null; boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray3); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray0, (int) '4', (int) 'a'); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) booleanArray0, "1"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); } @Test public void test1438() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1438"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); java.lang.Class<?>[] wildcardClassArray45 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Class<?> wildcardClass46 = null; java.lang.Class[] classArray48 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray49 = (java.lang.Class<?>[]) classArray48; wildcardClassArray49[0] = wildcardClass46; java.lang.Class<?>[] wildcardClassArray52 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray49); java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray49); boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray45, wildcardClassArray53); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(classArray48); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false); } @Test public void test1439() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1439"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) (byte) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); } @Test public void test1440() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1440"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?> wildcardClass1 = null; java.lang.Class[] classArray3 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray4 = (java.lang.Class<?>[]) classArray3; wildcardClassArray4[0] = wildcardClass1; java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray4); java.lang.String str8 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray7); boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray7, true); java.lang.Class<?> wildcardClass11 = null; java.lang.Class[] classArray13 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13; wildcardClassArray14[0] = wildcardClass11; java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.String str18 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray17); java.lang.reflect.Type[][][][][][] typeArray19 = null; short[] shortArray24 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.clone(shortArray24); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray24, (short) (byte) 1); java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray27); java.lang.reflect.Type[][][][][][] typeArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray19, (java.lang.Object) shortArray28); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray17, (java.lang.Object[]) shortArray28); java.lang.Class<?> wildcardClass31 = null; java.lang.Class[] classArray33 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; wildcardClassArray34[0] = wildcardClass31; java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray34); java.lang.String str38 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray37); boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray37); boolean boolean41 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray37, false); org.junit.Assert.assertNotNull(classArray3); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{<null>}" + "'", str8, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(classArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{<null>}" + "'", str18, "{<null>}"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNull(typeArray29); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{<null>}" + "'", str38, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); } @Test public void test1441() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1441"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); float[] floatArray9 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, (float) 0); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray11); java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11); float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, 100.0f, (int) (short) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 100.0f, "{10,10}"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java.lang" + "'", str21, "java.lang"); } @Test public void test1442() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1442"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("ClassUtils[][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1443() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1443"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 0, 0L); long[] longArray20 = new long[] { 10L, (byte) 10 }; long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 0, (int) ' '); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray23); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray23); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, (long) (byte) 0); long[] longArray29 = org.apache.commons.lang3.ArrayUtils.add(longArray25, (long) '4'); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) longArray29, ""); java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray29); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, 10, 52]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "long[]" + "'", str31, "long[]"); org.junit.Assert.assertNotNull(longArray32); } @Test public void test1444() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1444"); java.lang.Double[][][][] doubleArray0 = new java.lang.Double[][][][] {}; java.lang.Short[] shortArray2 = new java.lang.Short[] {}; short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); java.lang.Class<?>[] wildcardClassArray5 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray2); java.lang.Double[] doubleArray12 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[] doubleArray19 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray12, doubleArray19 }; java.lang.Double[][][] doubleArray21 = new java.lang.Double[][][] { doubleArray20 }; java.lang.Double[] doubleArray24 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray27 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray30 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray33 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray36 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray39 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[][] doubleArray40 = new java.lang.Double[][] { doubleArray24, doubleArray27, doubleArray30, doubleArray33, doubleArray36, doubleArray39 }; java.lang.Double[][][] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, doubleArray40); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray5, (java.lang.Object[]) doubleArray21); // The following exception was thrown during execution in test generation try { java.lang.Double[][][][] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, (int) '#', doubleArray21); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); } @Test public void test1445() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1445"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray4, (double) (short) -1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 10.0]"); } @Test public void test1446() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1446"); byte[] byteArray1 = new byte[] { (byte) 10 }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 1); boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); byte[] byteArray6 = new byte[] { (byte) 10 }; boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 1); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray6); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray11); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1); java.lang.Class<?> wildcardClass16 = null; java.lang.Class[] classArray18 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18; wildcardClassArray19[0] = wildcardClass16; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray19); java.lang.Object obj23 = null; int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray22, obj23); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray13, (java.lang.Object[]) wildcardClassArray25); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[10]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 10]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 0]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 0]"); org.junit.Assert.assertNotNull(classArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); } @Test public void test1447() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1447"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray1, (double) 0); double[] doubleArray9 = new double[] { 100.0f, (short) 100 }; double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray9, 0); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9); double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray9, (int) '4', (int) '#'); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray9, (double) 100); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray9, "{10,10,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray9); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray1, doubleArray9); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]"); } @Test public void test1448() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1448"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Float[] floatArray10 = new java.lang.Float[] { 100.0f }; java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray12); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) floatArray12); float[] floatArray18 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray18, (float) 0); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (-1.0f), (int) (byte) 10); float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray18, 1); float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray12, floatArray25); float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.clone(floatArray26); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(floatArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 10.0, 0.0]"); } @Test public void test1449() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1449"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{-1,1,0,100,0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,1,0,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1450() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1450"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray9); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, 0.0d); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); } @Test public void test1451() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1451"); float[] floatArray3 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) 0); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray3); float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.add(floatArray3, (float) 0L); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 0L, "{10,100,0}"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[10.0, -1.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Long" + "'", str10, "Long"); } @Test public void test1452() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1452"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 10, (int) (byte) 100); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) 1L, (int) (byte) 100, (double) '#'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); } @Test public void test1453() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1453"); double[][][] doubleArray0 = new double[][][] {}; double[][][] doubleArray1 = new double[][][] {}; double[][][][] doubleArray2 = new double[][][][] { doubleArray0, doubleArray1 }; double[][][][][] doubleArray3 = new double[][][][][] { doubleArray2 }; double[] doubleArray4 = new double[] {}; double[] doubleArray5 = new double[] {}; double[][] doubleArray6 = new double[][] { doubleArray4, doubleArray5 }; double[] doubleArray7 = new double[] {}; double[] doubleArray8 = new double[] {}; double[][] doubleArray9 = new double[][] { doubleArray7, doubleArray8 }; double[] doubleArray10 = new double[] {}; double[] doubleArray11 = new double[] {}; double[][] doubleArray12 = new double[][] { doubleArray10, doubleArray11 }; double[] doubleArray13 = new double[] {}; double[] doubleArray14 = new double[] {}; double[][] doubleArray15 = new double[][] { doubleArray13, doubleArray14 }; double[] doubleArray16 = new double[] {}; double[] doubleArray17 = new double[] {}; double[][] doubleArray18 = new double[][] { doubleArray16, doubleArray17 }; double[] doubleArray19 = new double[] {}; double[] doubleArray20 = new double[] {}; double[][] doubleArray21 = new double[][] { doubleArray19, doubleArray20 }; double[][][] doubleArray22 = new double[][][] { doubleArray6, doubleArray9, doubleArray12, doubleArray15, doubleArray18, doubleArray21 }; double[] doubleArray23 = new double[] {}; double[] doubleArray24 = new double[] {}; double[][] doubleArray25 = new double[][] { doubleArray23, doubleArray24 }; double[] doubleArray26 = new double[] {}; double[] doubleArray27 = new double[] {}; double[][] doubleArray28 = new double[][] { doubleArray26, doubleArray27 }; double[] doubleArray29 = new double[] {}; double[] doubleArray30 = new double[] {}; double[][] doubleArray31 = new double[][] { doubleArray29, doubleArray30 }; double[] doubleArray32 = new double[] {}; double[] doubleArray33 = new double[] {}; double[][] doubleArray34 = new double[][] { doubleArray32, doubleArray33 }; double[] doubleArray35 = new double[] {}; double[] doubleArray36 = new double[] {}; double[][] doubleArray37 = new double[][] { doubleArray35, doubleArray36 }; double[] doubleArray38 = new double[] {}; double[] doubleArray39 = new double[] {}; double[][] doubleArray40 = new double[][] { doubleArray38, doubleArray39 }; double[][][] doubleArray41 = new double[][][] { doubleArray25, doubleArray28, doubleArray31, doubleArray34, doubleArray37, doubleArray40 }; double[] doubleArray42 = new double[] {}; double[] doubleArray43 = new double[] {}; double[][] doubleArray44 = new double[][] { doubleArray42, doubleArray43 }; double[] doubleArray45 = new double[] {}; double[] doubleArray46 = new double[] {}; double[][] doubleArray47 = new double[][] { doubleArray45, doubleArray46 }; double[] doubleArray48 = new double[] {}; double[] doubleArray49 = new double[] {}; double[][] doubleArray50 = new double[][] { doubleArray48, doubleArray49 }; double[] doubleArray51 = new double[] {}; double[] doubleArray52 = new double[] {}; double[][] doubleArray53 = new double[][] { doubleArray51, doubleArray52 }; double[] doubleArray54 = new double[] {}; double[] doubleArray55 = new double[] {}; double[][] doubleArray56 = new double[][] { doubleArray54, doubleArray55 }; double[] doubleArray57 = new double[] {}; double[] doubleArray58 = new double[] {}; double[][] doubleArray59 = new double[][] { doubleArray57, doubleArray58 }; double[][][] doubleArray60 = new double[][][] { doubleArray44, doubleArray47, doubleArray50, doubleArray53, doubleArray56, doubleArray59 }; double[] doubleArray61 = new double[] {}; double[] doubleArray62 = new double[] {}; double[][] doubleArray63 = new double[][] { doubleArray61, doubleArray62 }; double[] doubleArray64 = new double[] {}; double[] doubleArray65 = new double[] {}; double[][] doubleArray66 = new double[][] { doubleArray64, doubleArray65 }; double[] doubleArray67 = new double[] {}; double[] doubleArray68 = new double[] {}; double[][] doubleArray69 = new double[][] { doubleArray67, doubleArray68 }; double[] doubleArray70 = new double[] {}; double[] doubleArray71 = new double[] {}; double[][] doubleArray72 = new double[][] { doubleArray70, doubleArray71 }; double[] doubleArray73 = new double[] {}; double[] doubleArray74 = new double[] {}; double[][] doubleArray75 = new double[][] { doubleArray73, doubleArray74 }; double[] doubleArray76 = new double[] {}; double[] doubleArray77 = new double[] {}; double[][] doubleArray78 = new double[][] { doubleArray76, doubleArray77 }; double[][][] doubleArray79 = new double[][][] { doubleArray63, doubleArray66, doubleArray69, doubleArray72, doubleArray75, doubleArray78 }; double[][][][] doubleArray80 = new double[][][][] { doubleArray22, doubleArray41, doubleArray60, doubleArray79 }; double[][][][][] doubleArray81 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, doubleArray80); java.lang.String str83 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray80, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]"); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertNotNull(doubleArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]"); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]"); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]"); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals("'" + str83 + "' != '" + "double[][][][]" + "'", str83, "double[][][][]"); } @Test public void test1454() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1454"); char[] charArray6 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (short) 1, (int) (short) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray6, 'a', (int) (byte) -1); char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' '); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(charArray6, ' '); java.lang.Character[] charArray20 = new java.lang.Character[] { ' ', 'a' }; char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, '4'); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray20); java.lang.Character[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20); char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20); char[] charArray32 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray35 = org.apache.commons.lang3.ArrayUtils.subarray(charArray32, (int) (short) 1, (int) (short) 0); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray32); char[] charArray39 = org.apache.commons.lang3.ArrayUtils.add(charArray32, '4'); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray39, '4', 0); java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.toObject(charArray39); char[] charArray44 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray39); char[] charArray47 = org.apache.commons.lang3.ArrayUtils.add(charArray25, 0, '#'); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray25, 'a'); char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray25); java.lang.String str52 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray25, "{<null>}"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a, 4, a, #, #]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertNotNull(charArray22); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , a]"); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, ]"); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray35); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]"); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(charArray39); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4, a, , #, #, 4]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1); org.junit.Assert.assertNotNull(charArray43); org.junit.Assert.assertNotNull(charArray44); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, , a, 4, a, , #, #, 4]"); org.junit.Assert.assertNotNull(charArray47); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, ]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertNotNull(charArray50); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4a ##a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4a ##a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4, a, , #, #, a, ]"); org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, ""); } @Test public void test1455() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1455"); java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray2, (byte) 100); java.lang.Byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray2); java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6); short[] shortArray12 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.clone(shortArray12); java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray12, "hi!"); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.add(shortArray12, (short) -1); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray17, (short) (byte) 1); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray17, (short) 0, (-1)); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray6, (java.lang.Object) (-1)); long[] longArray26 = new long[] { 10L, (byte) 10 }; long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, (int) (short) 0, (int) ' '); java.lang.Long[] longArray35 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray35, (long) 1); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray37); long[] longArray41 = new long[] { 10L, (byte) 10 }; long[] longArray44 = org.apache.commons.lang3.ArrayUtils.subarray(longArray41, (int) (short) 0, (int) ' '); long[] longArray45 = org.apache.commons.lang3.ArrayUtils.addAll(longArray37, longArray41); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray6, (java.lang.Object) longArray45); java.lang.String str48 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean46, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]"); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{1,0,-1,100}" + "'", str15, "{1,0,-1,100}"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100, -1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, 10]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, 10]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, 10]"); org.junit.Assert.assertNotNull(longArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, 10]"); org.junit.Assert.assertNotNull(longArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertEquals("'" + str48 + "' != '" + "java.lang" + "'", str48, "java.lang"); } @Test public void test1456() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1456"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{-1,1,0,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1,1,0,100,0}" + "'", str1, "{-1,1,0,100,0}"); } @Test public void test1457() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1457"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,100,0}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1458() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1458"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); java.lang.Class<?>[] wildcardClassArray45 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Short[] shortArray46 = new java.lang.Short[] {}; short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46); short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46); java.lang.Class<?>[] wildcardClassArray49 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray46); java.lang.Double[] doubleArray56 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[] doubleArray63 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[][] doubleArray64 = new java.lang.Double[][] { doubleArray56, doubleArray63 }; java.lang.Double[][][] doubleArray65 = new java.lang.Double[][][] { doubleArray64 }; java.lang.Double[] doubleArray68 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray71 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray74 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray77 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray80 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray83 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[][] doubleArray84 = new java.lang.Double[][] { doubleArray68, doubleArray71, doubleArray74, doubleArray77, doubleArray80, doubleArray83 }; java.lang.Double[][][] doubleArray85 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, doubleArray84); boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray49, (java.lang.Object[]) doubleArray65); boolean boolean87 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray45, wildcardClassArray49); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(shortArray46); org.junit.Assert.assertNotNull(shortArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]"); org.junit.Assert.assertNotNull(shortArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertNotNull(doubleArray83); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertNotNull(doubleArray85); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false); org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false); } @Test public void test1459() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1459"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("double[][][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double[][][][]" + "'", str1, "double[][][][]"); } @Test public void test1460() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1460"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1,0,-1,100,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,0,-1,100,1}" + "'", str1, "{1,0,-1,100,1}"); } @Test public void test1461() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1461"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); } @Test public void test1462() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1462"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); int[] intArray10 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.toObject(intArray10); int[] intArray18 = new int[] { (short) -1, 'a', (byte) -1, 1, (short) 0, (-1) }; int[] intArray19 = org.apache.commons.lang3.ArrayUtils.addAll(intArray10, intArray18); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) str6, (java.lang.Object) intArray19); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray19, 0); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 100, 10, -1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); } @Test public void test1463() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1463"); char[] charArray6 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (short) 1, (int) (short) 0); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, ' ', (int) (byte) -1); char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray6, 'a'); char[] charArray15 = null; char[] charArray16 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray15); char[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) charArray6, ""); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4a ##a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4a ##a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4, a, , #, #, a]"); org.junit.Assert.assertNotNull(charArray16); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray17); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4, a, , #, #]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "char[]" + "'", str19, "char[]"); } @Test public void test1464() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1464"); char[] charArray6 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (short) 1, (int) (short) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9); char[] charArray11 = org.apache.commons.lang3.ArrayUtils.clone(charArray9); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, ' ', (int) '4'); char[] charArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, '#'); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray16, ""); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(charArray16); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]"); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "char[]" + "'", str18, "char[]"); } @Test public void test1465() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1465"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); java.util.ArrayList<java.lang.String>[] strListArray9 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray2); java.util.ArrayList<java.lang.String>[] strListArray10 = org.apache.commons.lang3.ArrayUtils.clone(strListArray2); java.util.ArrayList[] arrayListArray13 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray14 = (java.util.ArrayList<java.lang.String>[]) arrayListArray13; java.lang.String[] strArray16 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>(); boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16); java.util.List<java.lang.Class<?>> wildcardClassList19 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList17); java.util.ArrayList<java.lang.String>[] strListArray20 = org.apache.commons.lang3.ArrayUtils.add(strListArray14, strList17); // The following exception was thrown during execution in test generation try { java.util.ArrayList<java.lang.String>[] strListArray21 = org.apache.commons.lang3.ArrayUtils.add(strListArray10, (int) ' ', strList17); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(strListArray9); org.junit.Assert.assertNotNull(strListArray10); org.junit.Assert.assertNotNull(arrayListArray13); org.junit.Assert.assertNotNull(strListArray14); org.junit.Assert.assertNotNull(strArray16); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertNotNull(wildcardClassList19); org.junit.Assert.assertNotNull(strListArray20); } @Test public void test1466() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1466"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); } @Test public void test1467() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1467"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); long[] longArray10 = new long[] { 10L, (byte) 10 }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.subarray(longArray10, (int) (short) 0, (int) ' '); long[] longArray16 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) 0, (long) (short) 100); long[] longArray19 = new long[] { 10L, (byte) 10 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.subarray(longArray19, (int) (short) 0, (int) ' '); java.lang.Long[] longArray28 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray28, (long) 1); long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray30); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray30); long[] longArray33 = org.apache.commons.lang3.ArrayUtils.addAll(longArray10, longArray30); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.add(longArray30, (long) (byte) 1); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray35, (long) '#', 0); long[] longArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray35, (long) 1); long[] longArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) longArray40); java.lang.Class<?> wildcardClass43 = null; java.lang.Class[] classArray45 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45; wildcardClassArray46[0] = wildcardClass43; java.lang.Class<?>[] wildcardClassArray49 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray46); java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46); java.lang.Short[] shortArray51 = new java.lang.Short[] {}; short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray51); short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray51); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray51); boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray50, wildcardClassArray54, true); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray50, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[10, 10]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[10, 10]"); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[10, 10]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[10, 10]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(longArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertNotNull(longArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertNotNull(classArray45); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(shortArray51); org.junit.Assert.assertNotNull(shortArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]"); org.junit.Assert.assertNotNull(shortArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); } @Test public void test1468() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1468"); int[] intArray5 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray7 = org.apache.commons.lang3.ArrayUtils.remove(intArray5, (int) (short) 0); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray5); int[] intArray12 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray13 = org.apache.commons.lang3.ArrayUtils.toObject(intArray12); int[] intArray16 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, (int) (byte) 1, 0); int[] intArray17 = org.apache.commons.lang3.ArrayUtils.clone(intArray12); int[] intArray21 = new int[] { 1, '4', (byte) 0 }; boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray21); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, (-1), 100); int[] intArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray21, 0); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray21); int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray21, 0); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray30); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean31, "double[][][][]"); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1, 52, 0]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 52]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1, 52]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java.lang" + "'", str33, "java.lang"); } @Test public void test1469() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1469"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1470() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1470"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("ClassUtils[][][]", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: ClassUtils"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test1471() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1471"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); java.lang.Object obj6 = null; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray5, obj6); java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5); float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray5, "{0,100,10}"); float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) '4'); // The following exception was thrown during execution in test generation try { float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.add(floatArray13, (int) (short) 100, 100.0f); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.lang" + "'", str11, "java.lang"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[97.0, 10.0, 1.0, 100.0]"); } @Test public void test1472() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1472"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray4); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 0.0]"); } @Test public void test1473() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1473"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0); int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray0, true); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray0, "{97.0,10.0,1.0,100.0}"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "boolean[]" + "'", str9, "boolean[]"); } @Test public void test1474() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1474"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) (byte) 1); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 100); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray8); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray11); } @Test public void test1475() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1475"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17); java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray17); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray21); } @Test public void test1476() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1476"); java.lang.Long[] longArray5 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 1); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray5, (java.lang.Object) false, (int) (byte) 0); int[] intArray14 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray5, (java.lang.Object[]) intArray15); float[] floatArray20 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 0); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray15, (java.lang.Object) 0, (int) (byte) -1); java.lang.Long[] longArray30 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray30, (long) 1); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray15, (java.lang.Object[]) longArray30); int[] intArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (int) 'a'); int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, 100); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray15, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 100, 10]"); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "java.lang" + "'", str39, "java.lang"); } @Test public void test1477() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1477"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Short[] shortArray11 = new java.lang.Short[] {}; short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11); short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray11); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); boolean boolean17 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray14, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); } @Test public void test1478() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1478"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass21 = null; java.lang.Class[] classArray23 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, false); org.apache.commons.lang3.ClassUtils[] classUtilsArray30 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray31 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray32 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray33 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray34 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray35 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray30, classUtilsArray31, classUtilsArray32, classUtilsArray33, classUtilsArray34 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray36 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray37 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray38 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray39 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray40 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray41 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray36, classUtilsArray37, classUtilsArray38, classUtilsArray39, classUtilsArray40 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray42 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray43 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray44 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray45 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray46 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray47 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray42, classUtilsArray43, classUtilsArray44, classUtilsArray45, classUtilsArray46 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray48 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray49 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray50 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray51 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray52 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray53 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray48, classUtilsArray49, classUtilsArray50, classUtilsArray51, classUtilsArray52 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray54 = new org.apache.commons.lang3.ClassUtils[][][] { classUtilsArray35, classUtilsArray41, classUtilsArray47, classUtilsArray53 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray55 = new org.apache.commons.lang3.ClassUtils[][][] {}; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray56 = org.apache.commons.lang3.ArrayUtils.addAll(classUtilsArray54, classUtilsArray55); org.apache.commons.lang3.ClassUtils[][][] classUtilsArray57 = org.apache.commons.lang3.ArrayUtils.clone(classUtilsArray56); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray27, (java.lang.Object) classUtilsArray57, 10); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray27); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(classUtilsArray30); org.junit.Assert.assertNotNull(classUtilsArray31); org.junit.Assert.assertNotNull(classUtilsArray32); org.junit.Assert.assertNotNull(classUtilsArray33); org.junit.Assert.assertNotNull(classUtilsArray34); org.junit.Assert.assertNotNull(classUtilsArray35); org.junit.Assert.assertNotNull(classUtilsArray36); org.junit.Assert.assertNotNull(classUtilsArray37); org.junit.Assert.assertNotNull(classUtilsArray38); org.junit.Assert.assertNotNull(classUtilsArray39); org.junit.Assert.assertNotNull(classUtilsArray40); org.junit.Assert.assertNotNull(classUtilsArray41); org.junit.Assert.assertNotNull(classUtilsArray42); org.junit.Assert.assertNotNull(classUtilsArray43); org.junit.Assert.assertNotNull(classUtilsArray44); org.junit.Assert.assertNotNull(classUtilsArray45); org.junit.Assert.assertNotNull(classUtilsArray46); org.junit.Assert.assertNotNull(classUtilsArray47); org.junit.Assert.assertNotNull(classUtilsArray48); org.junit.Assert.assertNotNull(classUtilsArray49); org.junit.Assert.assertNotNull(classUtilsArray50); org.junit.Assert.assertNotNull(classUtilsArray51); org.junit.Assert.assertNotNull(classUtilsArray52); org.junit.Assert.assertNotNull(classUtilsArray53); org.junit.Assert.assertNotNull(classUtilsArray54); org.junit.Assert.assertNotNull(classUtilsArray55); org.junit.Assert.assertNotNull(classUtilsArray56); org.junit.Assert.assertNotNull(classUtilsArray57); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray60); } @Test public void test1479() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1479"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (-1L), (int) (short) -1, (double) (-1L)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); } @Test public void test1480() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1480"); java.lang.Boolean[] booleanArray4 = new java.lang.Boolean[] { true, true, true, true }; boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4); java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray7); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray9, "{-1,1,0,100,0}"); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray9, true); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[true, true, true, true]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean[]" + "'", str11, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, true, true, true, true]"); } @Test public void test1481() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1481"); short[] shortArray2 = new short[] { (byte) 0, (byte) 1 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray2, (short) 0); short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray2); java.lang.Class<?> wildcardClass7 = null; java.lang.Class[] classArray9 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; wildcardClassArray10[0] = wildcardClass7; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray6, (java.lang.Object) wildcardClassArray15); java.lang.Class<?> wildcardClass17 = null; java.lang.Class[] classArray19 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[]) classArray19; wildcardClassArray20[0] = wildcardClass17; java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20); java.lang.String str24 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray23); long[] longArray27 = new long[] { 10L, (byte) 10 }; long[] longArray30 = org.apache.commons.lang3.ArrayUtils.subarray(longArray27, (int) (short) 0, (int) ' '); long[] longArray33 = org.apache.commons.lang3.ArrayUtils.add(longArray27, (int) (byte) 0, (long) (short) 100); long[] longArray36 = new long[] { 10L, (byte) 10 }; long[] longArray39 = org.apache.commons.lang3.ArrayUtils.subarray(longArray36, (int) (short) 0, (int) ' '); java.lang.Long[] longArray45 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45, (long) 1); long[] longArray48 = org.apache.commons.lang3.ArrayUtils.addAll(longArray39, longArray47); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray47); long[] longArray50 = org.apache.commons.lang3.ArrayUtils.addAll(longArray27, longArray47); long[] longArray52 = org.apache.commons.lang3.ArrayUtils.add(longArray47, (long) (byte) 1); int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray52, (long) '#', 0); long[] longArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, (long) 1); long[] longArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray57); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray23, (java.lang.Object) longArray57); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray23, true); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0, 1]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[0, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(classArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{<null>}" + "'", str24, "{<null>}"); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, 10]"); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[10, 10]"); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[10, 10]"); org.junit.Assert.assertNotNull(longArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10, 10]"); org.junit.Assert.assertNotNull(longArray45); org.junit.Assert.assertNotNull(longArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(longArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1, 1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertNotNull(longArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertNotNull(longArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); } @Test public void test1482() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1482"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, (double) (-1L)); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); } @Test public void test1483() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1483"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 'a', (int) (byte) -1, (double) 100); java.lang.Double[] doubleArray27 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray27); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27); double[] doubleArray32 = new double[] { 100L }; boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray32); double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray32); int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 100.0f); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3); } @Test public void test1484() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1484"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 0, 0L); long[] longArray20 = new long[] { 10L, (byte) 10 }; long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 0, (int) ' '); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray23); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray23); long[] longArray28 = new long[] { 10L, (byte) 10 }; long[] longArray31 = org.apache.commons.lang3.ArrayUtils.subarray(longArray28, (int) (short) 0, (int) ' '); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.add(longArray28, (int) (byte) 0, (long) (short) 100); java.lang.String str36 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray34, "hi!"); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34); boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray23, longArray37); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[10, 10]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10, 10]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, 10]"); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, ""); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[100, 10, 10]"); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); } @Test public void test1485() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1485"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass37 = null; java.lang.Class[] classArray39 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; wildcardClassArray40[0] = wildcardClass37; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray40); java.lang.String str44 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray43); java.lang.reflect.Type[][][][][][] typeArray45 = null; short[] shortArray50 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.clone(shortArray50); short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.add(shortArray50, (short) (byte) 1); java.lang.Short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53); java.lang.reflect.Type[][][][][][] typeArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray45, (java.lang.Object) shortArray54); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray43, (java.lang.Object[]) shortArray54); java.lang.Class<?> wildcardClass57 = null; java.lang.Class[] classArray59 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59; wildcardClassArray60[0] = wildcardClass57; java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray60); java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray63); boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63); java.lang.Byte[] byteArray69 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray69); boolean[] booleanArray71 = new boolean[] {}; boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.add(booleanArray71, false); boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.add(booleanArray71, true); boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray75); boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.add(booleanArray76, 0, false); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray69, (java.lang.Object) booleanArray76); int int81 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray63, (java.lang.Object) byteArray69); java.lang.Class<?>[] wildcardClassArray82 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray63); boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray82); boolean[] booleanArray84 = new boolean[] {}; boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.add(booleanArray84, false); boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.add(booleanArray84, false); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray84); boolean[] booleanArray90 = null; boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray84, booleanArray90); boolean boolean92 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) booleanArray91); // The following exception was thrown during execution in test generation try { boolean[] booleanArray95 = org.apache.commons.lang3.ArrayUtils.add(booleanArray91, (int) (short) 100, false); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{<null>}" + "'", str44, "{<null>}"); org.junit.Assert.assertNotNull(shortArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray54); org.junit.Assert.assertNull(typeArray55); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertNotNull(classArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray63); org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{<null>}" + "'", str64, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false); org.junit.Assert.assertNotNull(byteArray69); org.junit.Assert.assertNotNull(byteArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[]"); org.junit.Assert.assertNotNull(booleanArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false]"); org.junit.Assert.assertNotNull(booleanArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[true]"); org.junit.Assert.assertNotNull(booleanArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[true]"); org.junit.Assert.assertNotNull(booleanArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray82); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false); org.junit.Assert.assertNotNull(booleanArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[]"); org.junit.Assert.assertNotNull(booleanArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false]"); org.junit.Assert.assertNotNull(booleanArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[false]"); org.junit.Assert.assertNotNull(booleanArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[]"); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false); } @Test public void test1486() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1486"); java.lang.Character[] charArray2 = new java.lang.Character[] { ' ', 'a' }; char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray2, '4'); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray2); java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray2); char[] charArray14 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray17 = org.apache.commons.lang3.ArrayUtils.subarray(charArray14, (int) (short) 1, (int) (short) 0); char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray14); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray14); char[] charArray21 = org.apache.commons.lang3.ArrayUtils.add(charArray14, '4'); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray21, '4', 0); java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.toObject(charArray21); char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21); char[] charArray29 = org.apache.commons.lang3.ArrayUtils.add(charArray7, 0, '#'); org.apache.commons.lang3.ArrayUtils.reverse(charArray7); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray7, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , a]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , a]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray17); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4, a, , #, #, 4]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, , a, 4, a, , #, #, 4]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, ]"); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, ""); } @Test public void test1487() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1487"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); org.apache.commons.lang3.ArrayUtils.reverse(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray8, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); } @Test public void test1488() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1488"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean24, "{0,100,10}"); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Boolean" + "'", str26, "Boolean"); } @Test public void test1489() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1489"); byte[] byteArray4 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 10 }; int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 0, (int) (byte) -1); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 0, 10); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) int10, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[10, 10, 10, 10]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Integer" + "'", str12, "Integer"); } @Test public void test1490() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1490"); java.lang.Integer[] intArray4 = new java.lang.Integer[] { 100, 0, 10, 100 }; int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray4); java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 10, 100]"); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(intArray8); } @Test public void test1491() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1491"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = org.apache.commons.lang3.ArrayUtils.clone(arrayUtilsArray1); boolean[] booleanArray3 = new boolean[] {}; boolean[] booleanArray7 = new boolean[] { true, true, false }; boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray3, booleanArray7); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, true); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) arrayUtilsArray1, (java.lang.Object) booleanArray3, 10); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) arrayUtilsArray1, "double[][][][]"); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, true, false]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.lang3" + "'", str16, "org.apache.commons.lang3"); } @Test public void test1492() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1492"); java.lang.Byte[] byteArray3 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray3); java.lang.Byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray4); java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); org.junit.Assert.assertNotNull(byteArray3); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[10, 0, 10]"); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); } @Test public void test1493() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1493"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Float[] floatArray10 = new java.lang.Float[] { 100.0f }; java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray12); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) floatArray12); float[] floatArray18 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray18, (float) 0); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (-1.0f), (int) (byte) 10); float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray18, 1); float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray12, floatArray25); float[] floatArray31 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31); float[] floatArray36 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray36, (float) 0); float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray31, floatArray38); java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38); float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray40); java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41); float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray42, (float) (byte) 100); float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray42); int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray45, (float) 1L); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray45); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(floatArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray32); org.junit.Assert.assertNotNull(floatArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertNotNull(floatArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray42); org.junit.Assert.assertNotNull(floatArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); } @Test public void test1494() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1494"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray9); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray9, (double) (-1L)); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) '4'); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); } @Test public void test1495() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1495"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.Class<?>[] wildcardClassArray41 = null; boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray41); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); } @Test public void test1496() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1496"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); float[] floatArray9 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, (float) 0); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray11); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray12); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray12, (float) 100); float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray12); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray12, "10"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(floatArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, ""); } @Test public void test1497() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1497"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); org.apache.commons.lang3.ArrayUtils.reverse(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.remove(shortArray8, (int) (byte) 0); short[] shortArray15 = new short[] { (byte) 0, (short) 1, (short) 0, (short) -1 }; short[] shortArray16 = null; boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray16); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10); short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.clone(shortArray15); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray8, shortArray20); double[] doubleArray24 = new double[] { 100.0f, (short) 100 }; double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray24, 0); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, (int) '4', (int) '#'); double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray24, (double) 100); java.lang.String str35 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray24, "{10,10,100}"); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (-1.0d), (double) 100); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) boolean21, (java.lang.Object) doubleArray24); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[0, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]"); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, ""); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); } @Test public void test1498() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1498"); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray0 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray0, arrayUtilsArray1, arrayUtilsArray2 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray4 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray7 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray4, arrayUtilsArray5, arrayUtilsArray6 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray10 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray11 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray8, arrayUtilsArray9, arrayUtilsArray10 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray12 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray13 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray15 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray12, arrayUtilsArray13, arrayUtilsArray14 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray16 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray3, arrayUtilsArray7, arrayUtilsArray11, arrayUtilsArray15 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray17 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray18 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray17 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray19 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray16, arrayUtilsArray18); char[] charArray26 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray26, (int) (short) 1, (int) (short) 0); char[] charArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.subarray(charArray26, (int) (byte) 0, (int) (short) 0); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(charArray33, '#'); org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray18, (java.lang.Object) '#'); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray18); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) arrayUtilsArray18, "{10,100,0}"); org.junit.Assert.assertNotNull(arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray4); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray7); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(arrayUtilsArray10); org.junit.Assert.assertNotNull(arrayUtilsArray11); org.junit.Assert.assertNotNull(arrayUtilsArray12); org.junit.Assert.assertNotNull(arrayUtilsArray13); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertNotNull(arrayUtilsArray15); org.junit.Assert.assertNotNull(arrayUtilsArray16); org.junit.Assert.assertNotNull(arrayUtilsArray17); org.junit.Assert.assertNotNull(arrayUtilsArray18); org.junit.Assert.assertNotNull(arrayUtilsArray19); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(arrayUtilsArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.lang3" + "'", str39, "org.apache.commons.lang3"); } @Test public void test1499() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1499"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 0, 0L); long[] longArray20 = new long[] { 10L, (byte) 10 }; long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 0, (int) ' '); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray23); java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toObject(longArray17); long[] longArray26 = null; long[] longArray29 = new long[] { 10L, (byte) 10 }; long[] longArray32 = org.apache.commons.lang3.ArrayUtils.subarray(longArray29, (int) (short) 0, (int) ' '); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.add(longArray29, (int) (byte) 0, (long) (short) 100); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray29, (long) 100); char[] charArray44 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray47 = org.apache.commons.lang3.ArrayUtils.subarray(charArray44, (int) (short) 1, (int) (short) 0); char[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44); char[] charArray51 = org.apache.commons.lang3.ArrayUtils.subarray(charArray44, (int) (byte) 0, (int) (short) 0); boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray29, (java.lang.Object) (byte) 0); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray29); long[] longArray54 = org.apache.commons.lang3.ArrayUtils.addAll(longArray17, longArray29); long[] longArray57 = new long[] { 10L, (byte) 10 }; long[] longArray60 = org.apache.commons.lang3.ArrayUtils.subarray(longArray57, (int) (short) 0, (int) ' '); java.lang.Long[] longArray66 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray66, (long) 1); long[] longArray69 = org.apache.commons.lang3.ArrayUtils.addAll(longArray60, longArray68); long[] longArray72 = new long[] { 10L, (byte) 10 }; long[] longArray75 = org.apache.commons.lang3.ArrayUtils.subarray(longArray72, (int) (short) 0, (int) ' '); long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray68, longArray72); long[] longArray79 = org.apache.commons.lang3.ArrayUtils.subarray(longArray68, 0, (int) (byte) 10); long[] longArray80 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray79); java.lang.String str82 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray29, "{0,100,10}"); int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray29, (long) '4', 0); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, 10]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[10, 10]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 10, 100]"); org.junit.Assert.assertNotNull(charArray44); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray47); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]"); org.junit.Assert.assertNotNull(charArray48); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray51); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]"); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(longArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, 10, 10, -1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertNotNull(longArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, 10]"); org.junit.Assert.assertNotNull(longArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10, 10]"); org.junit.Assert.assertNotNull(longArray66); org.junit.Assert.assertNotNull(longArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[10, 10]"); org.junit.Assert.assertNotNull(longArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[10, 10]"); org.junit.Assert.assertNotNull(longArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[-1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertNotNull(longArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, ""); org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1)); } @Test public void test1500() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1500"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 10, (int) (byte) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray4, (double) (byte) 10); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0]"); } }
public void test1304() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1304"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{},{},{}}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{},{},{}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1305() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1305"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass5 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray7 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray8 = (java.lang.Class<?>[]) classArray7; wildcardClassArray8[0] = wildcardClass2; wildcardClassArray8[1] = wildcardClass5; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray8); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.Class<?> wildcardClass18 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass21 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray23 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass18; wildcardClassArray24[1] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?> wildcardClass32 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass35 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray37 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; wildcardClassArray38[0] = wildcardClass32; wildcardClassArray38[1] = wildcardClass35; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray38); java.lang.Class<?> wildcardClass46 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass49 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray51 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; wildcardClassArray52[0] = wildcardClass46; wildcardClassArray52[1] = wildcardClass49; java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray52); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray52, false); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray52); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray29, wildcardClassArray60); boolean boolean63 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray29, true); java.lang.Class<?> wildcardClass66 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class<?> wildcardClass69 = org.apache.commons.lang3.ClassUtils.getClass("float[][][]", false); java.lang.Class[] classArray71 = new java.lang.Class[2]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray72 = (java.lang.Class<?>[]) classArray71; wildcardClassArray72[0] = wildcardClass66; wildcardClassArray72[1] = wildcardClass69; java.lang.Class<?>[] wildcardClassArray77 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray72); java.lang.Class<?>[] wildcardClassArray78 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray72); java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray78); boolean boolean81 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray78, true); java.lang.Class<?>[] wildcardClassArray82 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray83 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass2); org.junit.Assert.assertNotNull(wildcardClass5); org.junit.Assert.assertNotNull(classArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertNotNull(wildcardClass18); org.junit.Assert.assertNotNull(wildcardClass21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClass32); org.junit.Assert.assertNotNull(wildcardClass35); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClass46); org.junit.Assert.assertNotNull(wildcardClass49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertNotNull(wildcardClass66); org.junit.Assert.assertNotNull(wildcardClass69); org.junit.Assert.assertNotNull(classArray71); org.junit.Assert.assertNotNull(wildcardClassArray72); org.junit.Assert.assertNotNull(wildcardClassArray77); org.junit.Assert.assertNotNull(wildcardClassArray78); org.junit.Assert.assertNotNull(wildcardClassArray79); org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false); org.junit.Assert.assertNotNull(wildcardClassArray82); org.junit.Assert.assertNotNull(wildcardClassArray83); }
public void test1306() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1306"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{Object[],{true,true,false,false,true,false}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1307() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1307"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray12, (byte) 0); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.contains(byteArray12, (byte) 10); byte[] byteArray18 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray19 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray18); byte[] byteArray22 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray18, 10, 10); byte[] byteArray24 = new byte[] { (byte) 100 }; java.lang.Byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray24); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray24, (byte) 0); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray24); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray22, byteArray28); java.lang.Byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray28); byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray12, byteArray28); byte[] byteArray32 = org.apache.commons.lang3.ArrayUtils.clone(byteArray28); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray32, (byte) 10, (int) (short) 100); byte[] byteArray36 = org.apache.commons.lang3.ArrayUtils.clone(byteArray32); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100]"); org.junit.Assert.assertNotNull(byteArray19); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]"); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100]"); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertNotNull(byteArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 100, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertNotNull(byteArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100]"); }
public void test1308() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1308"); char[] charArray4 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray5 = org.apache.commons.lang3.ArrayUtils.toObject(charArray4); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); int[] intArray10 = new int[] { '#', (short) 1 }; int[] intArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray10); int[] intArray14 = new int[] { '#', (short) 1 }; int[] intArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray11, intArray15); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray15, (int) (byte) 10); int[] intArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray18, 0); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray5, (java.lang.Object) 0, (int) (byte) 100); char[] charArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray5, ' '); char[] charArray29 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29); char[] charArray31 = new char[] {}; char[] charArray34 = org.apache.commons.lang3.ArrayUtils.subarray(charArray31, (int) 'a', (int) (byte) 0); char[] charArray35 = org.apache.commons.lang3.ArrayUtils.addAll(charArray29, charArray31); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray31); java.lang.String str38 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray31, "{-1}"); char[] charArray39 = org.apache.commons.lang3.ArrayUtils.addAll(charArray24, charArray31); char[] charArray40 = org.apache.commons.lang3.ArrayUtils.clone(charArray24); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, , , #]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[35, 1]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[35, 1]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[35, 1]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[35, 1]"); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 1]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[35, 1]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[]"); org.junit.Assert.assertNotNull(charArray34); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray34), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray34), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray34), "[]"); org.junit.Assert.assertNotNull(charArray35); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[]"); org.junit.Assert.assertEquals("'" + str38 + "' != '" + "char[]" + "'", str38, "char[]"); org.junit.Assert.assertNotNull(charArray39); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray40); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[a, , , #]"); }
public void test1309() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1309"); java.lang.Short[] shortArray6 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray13 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[] shortArray20 = new java.lang.Short[] { (short) 10, (short) 1, (short) 100, (short) 1, (short) 100, (short) 10 }; java.lang.Short[][] shortArray21 = new java.lang.Short[][] { shortArray6, shortArray13, shortArray20 }; java.lang.Short[][] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray21); java.lang.Class<?>[] wildcardClassArray24 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); }
public void test1310() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1310"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 10); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); }
public void test1311() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1311"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1,-1,10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,-1,10,0}" + "'", str1, "{1,-1,10,0}"); }
public void test1312() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1312"); java.lang.Character[][] charArray0 = null; char[] charArray6 = new char[] { 'a', ' ', ' ', '#' }; java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.toObject(charArray6); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (-1), 1); char[] charArray11 = new char[] {}; char[] charArray14 = org.apache.commons.lang3.ArrayUtils.subarray(charArray11, (int) 'a', (int) (byte) 0); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray14, ' ', (int) '4'); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray14, ' '); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray10, charArray19); java.lang.Character[] charArray21 = org.apache.commons.lang3.ArrayUtils.toObject(charArray19); char[] charArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray21, '4'); java.lang.Character[][] charArray24 = org.apache.commons.lang3.ArrayUtils.add(charArray0, (int) (short) 0, charArray21); java.util.Map<java.lang.Object, java.lang.Object> objMap25 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) charArray21); java.lang.Character[] charArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray21); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray26, "{-1}"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a #"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, , , #]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[a]"); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertNotNull(charArray23); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray23), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray23), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray23), "[]"); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertNotNull(objMap25); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Character[]" + "'", str28, "Character[]"); }
public void test1313() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1313"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "4"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "4" + "'", str2, "4"); }
public void test1314() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1314"); java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) 10, (byte) 100, (byte) -1, (byte) -1, (byte) 1 }; byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 1); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) 100); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5, (byte) -1); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 10); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 100, -1, -1, 1]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 100, -1, -1, 1]"); }
public void test1315() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1315"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray5, (short) (byte) 10, (int) '#'); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) '#', ""); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Character" + "'", str11, "Character"); }
public void test1316() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1316"); float[] floatArray2 = new float[] { 10L, 10 }; float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.remove(floatArray2, (int) (byte) 1); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 1, "{<null>}"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[10.0, 10.0]"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); }
public void test1317() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1317"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1318() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1318"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{<null>}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {<null>}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1319() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1319"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{1,0,-1,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1320() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1320"); java.lang.Long[] longArray5 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 1); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray5, (java.lang.Object) false, (int) (byte) 0); int[] intArray14 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray5, (java.lang.Object[]) intArray15); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (int) '#'); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) '#', ""); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[0, 100, 10]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "java.lang" + "'", str20, "java.lang"); }
public void test1321() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1321"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?> wildcardClass7 = wildcardClassArray6.getClass(); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClass7); }
public void test1322() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1322"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,0,-1,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1323() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1323"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,0,-1,100}" + "'", str1, "{1,0,-1,100}"); }
public void test1324() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1324"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,0,-1,100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1325() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1325"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0,100,10}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1326() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1326"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("hi!", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: hi!"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1327() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1327"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1328() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1328"); java.lang.String[] strArray5 = new java.lang.String[] { "{0,100,10}", "hi!", "", "hi!", "hi!" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); }
public void test1329() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1329"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,0,-1,100}" + "'", str1, "{1,0,-1,100}"); }
public void test1330() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1330"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{0,100,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1331() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1331"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{<null>}" + "'", str1, "{<null>}"); }
public void test1332() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1332"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray4, "hi!"); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) -1); int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray9, (short) (byte) 1); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) (byte) 1, "{10,10}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{1,0,-1,100}" + "'", str7, "{1,0,-1,100}"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 0, -1, 100, -1]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Byte" + "'", str13, "Byte"); }
public void test1333() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1333"); float[] floatArray5 = new float[] { ' ', 0, 100L, '4', 0 }; float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray5, (int) (byte) 1, (int) (short) 10); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 1, ""); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[32.0, 0.0, 100.0, 52.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[0.0, 100.0, 52.0, 0.0]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.lang" + "'", str10, "java.lang"); }
public void test1334() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1334"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{<null>}" + "'", str1, "{<null>}"); }
public void test1335() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1335"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{<null>}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {<null>}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1336() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1336"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{10,10,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1337() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1337"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); org.apache.commons.lang3.ArrayUtils.reverse(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.remove(shortArray8, (int) (byte) 0); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) (byte) 0, "{10,10}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 1]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Byte" + "'", str12, "Byte"); }
public void test1338() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1338"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{<null>}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1339() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1339"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{0,100,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0,100,10}" + "'", str1, "{0,100,10}"); }
public void test1340() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1340"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10,10,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10,100}" + "'", str1, "{10,10,100}"); }
public void test1341() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1341"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10}" + "'", str1, "{10,10}"); }
public void test1342() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1342"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1343() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1343"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) (byte) 0, (long) (short) 100); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray8, "hi!"); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray8, (long) (short) 100, (int) (byte) 1); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); }
public void test1344() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1344"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(obj0, "hi!"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!"); }
public void test1345() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1345"); int[] intArray3 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3); int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) intArray4); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray4, "{<null>}"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); }
public void test1346() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1346"); double[] doubleArray2 = new double[] { (byte) 100, (short) 100 }; double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, 10.0d, (int) (byte) 100, (double) (short) 100); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 0, 0); java.lang.Integer[] intArray15 = new java.lang.Integer[] { 100, 0, 10, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray15); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) 0, (java.lang.Object) intArray15); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[100.0, 100.0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100, 0, 10, 100]"); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); }
public void test1347() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1347"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); }
public void test1348() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1348"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{1,0,-1,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1349() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1349"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{0,100,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{0,100,10}" + "'", str1, "{0,100,10}"); }
public void test1350() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1350"); int[] intArray3 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3); int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (byte) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 10, "{10,10}"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 100, 10]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); }
public void test1351() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1351"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10,10,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10,100}" + "'", str1, "{10,10,100}"); }
public void test1352() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1352"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{<null>}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {<null>}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1353() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1353"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{10,10,100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1354() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1354"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{0,100,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1355() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1355"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1356() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1356"); float[] floatArray3 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) 0); float[] floatArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray5, "{1,0,-1,100}"); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.contains(floatArray5, 0.0f); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[10.0, -1.0]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "float[]" + "'", str8, "float[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); }
public void test1357() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1357"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (short) -1, "{10,10,100}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Short" + "'", str2, "Short"); }
public void test1358() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1358"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test1359() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1359"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{1,0,-1,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1360() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1360"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,10}" + "'", str1, "{10,10}"); }
public void test1361() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1361"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{1,0,-1,100,1}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1362() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1362"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) (byte) 0, (long) (short) 100); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray8, "hi!"); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); // The following exception was thrown during execution in test generation try { long[] longArray14 = org.apache.commons.lang3.ArrayUtils.add(longArray11, 10, 0L); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 10, 10]"); }
public void test1363() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1363"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0,100,10}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1364() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1364"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) 100, "{<null>}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.lang" + "'", str2, "java.lang"); }
public void test1365() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1365"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); float[] floatArray9 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, (float) 0); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray11); java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11); float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13); java.lang.Float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray14); float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray15, (float) (byte) 100); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray17, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[10.0, -1.0]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "float[]" + "'", str19, "float[]"); }
public void test1366() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1366"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,100,0}" + "'", str1, "{10,100,0}"); }
public void test1367() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1367"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass37 = null; java.lang.Class[] classArray39 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; wildcardClassArray40[0] = wildcardClass37; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray40); java.lang.Object obj44 = null; int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray43, obj44); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray43); boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray36, wildcardClassArray43, false); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); }
public void test1368() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1368"); float[] floatArray6 = new float[] { (short) 100, '#', ' ', 10L, 10, 100L }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray6); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray6, (float) (short) 1); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray6); float[] floatArray17 = new float[] { (short) 100, '#', ' ', 10L, 10, 100L }; org.apache.commons.lang3.ArrayUtils.reverse(floatArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray6, floatArray17); float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.remove(floatArray17, 0); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray21, "{10,10}"); org.junit.Assert.assertNotNull(floatArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray6), "[100.0, 10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[100.0, 10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[10.0, 10.0, 32.0, 35.0, 100.0]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); }
public void test1369() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1369"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1370() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1370"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,100,0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1371() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1371"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{-1,1,0,100,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,1,0,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1372() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1372"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1373() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1373"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, "{0,100,10}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{0,100,10}" + "'", str2, "{0,100,10}"); }
public void test1374() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1374"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{0,100,10}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {0,100,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1375() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1375"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{-1,1,0,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1376() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1376"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); java.lang.reflect.Type[][][][][][] typeArray28 = null; short[] shortArray33 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray34 = org.apache.commons.lang3.ArrayUtils.clone(shortArray33); short[] shortArray36 = org.apache.commons.lang3.ArrayUtils.add(shortArray33, (short) (byte) 1); java.lang.Short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray36); java.lang.reflect.Type[][][][][][] typeArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray28, (java.lang.Object) shortArray37); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray26, (java.lang.Object[]) shortArray37); java.lang.Class<?> wildcardClass40 = null; java.lang.Class[] classArray42 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; wildcardClassArray43[0] = wildcardClass40; java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray43); java.lang.String str47 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray46); boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray46); java.lang.Byte[] byteArray52 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray52); boolean[] booleanArray54 = new boolean[] {}; boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.add(booleanArray54, false); boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.add(booleanArray54, true); boolean[] booleanArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray58); boolean[] booleanArray62 = org.apache.commons.lang3.ArrayUtils.add(booleanArray59, 0, false); boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray52, (java.lang.Object) booleanArray59); int int64 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray46, (java.lang.Object) byteArray52); boolean boolean66 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray46, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray34), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray36), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertNull(typeArray38); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{<null>}" + "'", str47, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); org.junit.Assert.assertNotNull(byteArray52); org.junit.Assert.assertNotNull(byteArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[]"); org.junit.Assert.assertNotNull(booleanArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false]"); org.junit.Assert.assertNotNull(booleanArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[true]"); org.junit.Assert.assertNotNull(booleanArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray59), "[true]"); org.junit.Assert.assertNotNull(booleanArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray62), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); }
public void test1377() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1377"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) wildcardClassArray2, "{1,0,-1,100}"); char[] charArray49 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray52 = org.apache.commons.lang3.ArrayUtils.subarray(charArray49, (int) (short) 1, (int) (short) 0); char[] charArray53 = org.apache.commons.lang3.ArrayUtils.clone(charArray52); int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray53, '#', (int) (short) 0); int int58 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray2, (java.lang.Object) charArray53, (int) ' '); char[] charArray59 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray53); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Class[]" + "'", str42, "Class[]"); org.junit.Assert.assertNotNull(charArray49); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray49), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray49), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray49), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray52); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray52), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray52), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray52), "[]"); org.junit.Assert.assertNotNull(charArray53); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1)); org.junit.Assert.assertNotNull(charArray59); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray59), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray59), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray59), "[]"); }
public void test1378() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1378"); int[] intArray3 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray4 = org.apache.commons.lang3.ArrayUtils.toObject(intArray3); int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) intArray4); java.lang.Integer[] intArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) intArray4, "hi!"); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Integer[]" + "'", str9, "Integer[]"); }
public void test1379() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1379"); java.lang.String[] strArray5 = new java.lang.String[] { "{10,100,0}", "{<null>}", "{-1,1,0,100,0}", "", "{10,10,100}" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.RandomAccess[] randomAccessArray10 = new java.util.RandomAccess[] { strList6 }; java.lang.String[] strArray16 = new java.lang.String[] { "{10,100,0}", "{<null>}", "{-1,1,0,100,0}", "", "{10,10,100}" }; java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>(); boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16); java.util.List<java.lang.Class<?>> wildcardClassList19 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList17); java.util.List<java.lang.Class<?>> wildcardClassList20 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList17); java.util.RandomAccess[] randomAccessArray21 = new java.util.RandomAccess[] { strList17 }; java.util.RandomAccess[][] randomAccessArray22 = new java.util.RandomAccess[][] { randomAccessArray10, randomAccessArray21 }; // The following exception was thrown during execution in test generation try { java.util.RandomAccess[][] randomAccessArray24 = org.apache.commons.lang3.ArrayUtils.remove(randomAccessArray22, (int) (short) 10); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); org.junit.Assert.assertNotNull(wildcardClassList9); org.junit.Assert.assertNotNull(randomAccessArray10); org.junit.Assert.assertNotNull(strArray16); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertNotNull(wildcardClassList19); org.junit.Assert.assertNotNull(wildcardClassList20); org.junit.Assert.assertNotNull(randomAccessArray21); org.junit.Assert.assertNotNull(randomAccessArray22); }
public void test1380() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1380"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{10,10}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1381() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1381"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{1,0,-1,100,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1382() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1382"); double[] doubleArray2 = new double[] { 100.0f, (short) 100 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, 0); double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) '4', (double) (-1)); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray2); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray10, "{10,10,100}"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Double[]" + "'", str13, "Double[]"); }
public void test1383() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1383"); java.lang.String[] strArray1 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>(); boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1); java.util.List<java.lang.Class<?>> wildcardClassList4 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList2); java.util.List<java.lang.Class<?>> wildcardClassList5 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList2); java.util.List<java.lang.Class<?>> wildcardClassList6 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList2); org.junit.Assert.assertNotNull(strArray1); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertNotNull(wildcardClassList4); org.junit.Assert.assertNotNull(wildcardClassList5); org.junit.Assert.assertNotNull(wildcardClassList6); }
public void test1384() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1384"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10,100}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1385() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1385"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{10,100,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1386() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1386"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray2, "{0,100,10}"); // The following exception was thrown during execution in test generation try { long[] longArray12 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) ' ', (long) '#'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); }
public void test1387() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1387"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 10.0f, ""); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.lang" + "'", str2, "java.lang"); }
public void test1388() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1388"); java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] { true }; boolean[] booleanArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray1, true); java.lang.Class<?>[] wildcardClassArray4 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray1); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray1); boolean[] booleanArray6 = new boolean[] {}; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray8); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray5, booleanArray8); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray8, 0, (int) (byte) -1); org.junit.Assert.assertNotNull(booleanArray1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[true]"); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, false]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[]"); }
public void test1389() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1389"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray11 = new double[] { 100L }; boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray11); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray9, doubleArray11); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray13); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, ""); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "double[]" + "'", str16, "double[]"); }
public void test1390() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1390"); double[] doubleArray2 = new double[] { 100.0f, (short) 100 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, 0); double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) '4', (int) '#'); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray2, (double) 100); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray2, "{10,10,100}"); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, 100.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); }
public void test1391() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1391"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.Class<?> wildcardClass8 = null; java.lang.Class[] classArray10 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10; wildcardClassArray11[0] = wildcardClass8; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11); java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray14); java.lang.reflect.Type[][][][][][] typeArray16 = null; short[] shortArray21 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) (byte) 1); java.lang.Short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray24); java.lang.reflect.Type[][][][][][] typeArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray16, (java.lang.Object) shortArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray14, (java.lang.Object[]) shortArray25); java.lang.Class<?> wildcardClass28 = null; java.lang.Class[] classArray30 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; wildcardClassArray31[0] = wildcardClass28; java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray31); java.lang.String str35 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray34); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray34); java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40); boolean[] booleanArray42 = new boolean[] {}; boolean[] booleanArray44 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, false); boolean[] booleanArray46 = org.apache.commons.lang3.ArrayUtils.add(booleanArray42, true); boolean[] booleanArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray46); boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.add(booleanArray47, 0, false); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray40, (java.lang.Object) booleanArray47); int int52 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray34, (java.lang.Object) byteArray40); byte[] byteArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray40); boolean boolean54 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray7, (java.lang.Object) byteArray53); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertNotNull(classArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{<null>}" + "'", str15, "{<null>}"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertNull(typeArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{<null>}" + "'", str35, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertNotNull(byteArray40); org.junit.Assert.assertNotNull(byteArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[]"); org.junit.Assert.assertNotNull(booleanArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray44), "[false]"); org.junit.Assert.assertNotNull(booleanArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray46), "[true]"); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true]"); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(byteArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 0, 10]"); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false); }
public void test1392() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1392"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); int[] intArray16 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.remove(intArray16, (int) (short) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) (short) 0, (int) (byte) 1); char[] charArray27 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray30 = org.apache.commons.lang3.ArrayUtils.subarray(charArray27, (int) (short) 1, (int) (short) 0); char[] charArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray27, 'a', (int) (byte) -1); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, ' '); java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.toObject(charArray27); java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) charArray37); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Short[] shortArray47 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray54 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray68 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[] shortArray75 = new java.lang.Short[] { (short) 1, (short) 10, (short) 0, (short) 10, (short) 10, (short) 0 }; java.lang.Short[][] shortArray76 = new java.lang.Short[][] { shortArray47, shortArray54, shortArray61, shortArray68, shortArray75 }; java.lang.Short[][] shortArray79 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray76, (int) ' ', (int) (short) -1); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray76); java.lang.Class<?>[] wildcardClassArray81 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray76); boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray81, false); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]"); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4, a, #, #]"); org.junit.Assert.assertNotNull(charArray37); org.junit.Assert.assertNotNull(charArray38); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(shortArray47); org.junit.Assert.assertNotNull(shortArray54); org.junit.Assert.assertNotNull(shortArray61); org.junit.Assert.assertNotNull(shortArray68); org.junit.Assert.assertNotNull(shortArray75); org.junit.Assert.assertNotNull(shortArray76); org.junit.Assert.assertNotNull(shortArray79); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true); org.junit.Assert.assertNotNull(wildcardClassArray81); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false); }
public void test1393() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1393"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); // The following exception was thrown during execution in test generation try { java.util.ArrayList<java.lang.String>[] strListArray10 = org.apache.commons.lang3.ArrayUtils.remove(strListArray8, (int) '#'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); }
public void test1394() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1394"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{-1,1,0,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1395() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1395"); java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { true, true, true, true, false }; java.lang.Boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray5); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) booleanArray5); java.lang.Class<?> wildcardClass8 = null; java.lang.Class[] classArray10 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10; wildcardClassArray11[0] = wildcardClass8; java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray11); java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray14); java.lang.reflect.Type[][][][][][] typeArray16 = null; short[] shortArray21 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray22 = org.apache.commons.lang3.ArrayUtils.clone(shortArray21); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.add(shortArray21, (short) (byte) 1); java.lang.Short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray24); java.lang.reflect.Type[][][][][][] typeArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray16, (java.lang.Object) shortArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray14, (java.lang.Object[]) shortArray25); java.lang.Class<?> wildcardClass28 = null; java.lang.Class[] classArray30 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; wildcardClassArray31[0] = wildcardClass28; java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray31); java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray31); java.lang.Short[] shortArray36 = new java.lang.Short[] {}; short[] shortArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36); short[] shortArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray36); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray36); boolean boolean41 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray35, wildcardClassArray39, true); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray35, true); java.lang.Class<?> wildcardClass44 = null; java.lang.Class[] classArray46 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46; wildcardClassArray47[0] = wildcardClass44; java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray47); java.lang.Class<?>[] wildcardClassArray51 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray47); boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray47, true); java.lang.Class[] classArray55 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55; java.lang.Class<?> wildcardClass57 = null; java.lang.Class[] classArray59 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59; wildcardClassArray60[0] = wildcardClass57; java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray60); java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray63); java.lang.reflect.Type[][][][][][] typeArray65 = null; short[] shortArray70 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray71 = org.apache.commons.lang3.ArrayUtils.clone(shortArray70); short[] shortArray73 = org.apache.commons.lang3.ArrayUtils.add(shortArray70, (short) (byte) 1); java.lang.Short[] shortArray74 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray73); java.lang.reflect.Type[][][][][][] typeArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray65, (java.lang.Object) shortArray74); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray63, (java.lang.Object[]) shortArray74); java.lang.Class<?> wildcardClass77 = null; java.lang.Class[] classArray79 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79; wildcardClassArray80[0] = wildcardClass77; java.lang.Class<?>[] wildcardClassArray83 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray80); java.lang.Class<?>[] wildcardClassArray84 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray80); java.lang.Short[] shortArray85 = new java.lang.Short[] {}; short[] shortArray86 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85); short[] shortArray87 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray85); java.lang.Class<?>[] wildcardClassArray88 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray85); boolean boolean90 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray84, wildcardClassArray88, true); boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray63, wildcardClassArray84, true); boolean boolean94 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray56, wildcardClassArray63, false); boolean boolean95 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray14, wildcardClassArray56); java.lang.Object[] objArray96 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray56); int int98 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray5, (java.lang.Object) wildcardClassArray56, 0); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertNotNull(classArray10); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{<null>}" + "'", str15, "{<null>}"); org.junit.Assert.assertNotNull(shortArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray21), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray22), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertNull(typeArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertNotNull(shortArray36); org.junit.Assert.assertNotNull(shortArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray37), "[]"); org.junit.Assert.assertNotNull(shortArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray38), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(classArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(classArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertNotNull(classArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray63); org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{<null>}" + "'", str64, "{<null>}"); org.junit.Assert.assertNotNull(shortArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray70), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray71), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray73), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray74); org.junit.Assert.assertNull(typeArray75); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertNotNull(classArray79); org.junit.Assert.assertNotNull(wildcardClassArray80); org.junit.Assert.assertNotNull(wildcardClassArray83); org.junit.Assert.assertNotNull(wildcardClassArray84); org.junit.Assert.assertNotNull(shortArray85); org.junit.Assert.assertNotNull(shortArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]"); org.junit.Assert.assertNotNull(shortArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray88); org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false); org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false); org.junit.Assert.assertNotNull(objArray96); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]"); org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1)); }
public void test1396() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1396"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); double[] doubleArray19 = new double[] { 100.0f, (short) 100 }; double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 0); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray12, doubleArray21); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 10.0, 100.0]"); }
public void test1397() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1397"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{10,10,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1398() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1398"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, "{0,100,10}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{0,100,10}" + "'", str2, "{0,100,10}"); }
public void test1399() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1399"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, "{10,10}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{10,10}" + "'", str2, "{10,10}"); }
public void test1400() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1400"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{10,10}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1401() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1401"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); // The following exception was thrown during execution in test generation try { java.util.Map<java.lang.Object, java.lang.Object> objMap11 = org.apache.commons.lang3.ArrayUtils.toMap((java.lang.Object[]) wildcardClassArray6); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Array element 0, 'null', is neither of type Map.Entry nor an Array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); }
public void test1402() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1402"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 10, (short) 100, (short) 100, (short) 10 }; short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) -1); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray27, (java.lang.Object[]) shortArray40); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray27); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertNotNull(shortArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[10, 100, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(wildcardClassArray44); }
public void test1403() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1403"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?> wildcardClass10 = null; java.lang.Class[] classArray12 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; wildcardClassArray13[0] = wildcardClass10; java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); java.lang.String str17 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray16); java.lang.reflect.Type[][][][][][] typeArray18 = null; short[] shortArray23 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.clone(shortArray23); short[] shortArray26 = org.apache.commons.lang3.ArrayUtils.add(shortArray23, (short) (byte) 1); java.lang.Short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray26); java.lang.reflect.Type[][][][][][] typeArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray18, (java.lang.Object) shortArray27); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray16, (java.lang.Object[]) shortArray27); java.lang.Class<?> wildcardClass30 = null; java.lang.Class[] classArray32 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; wildcardClassArray33[0] = wildcardClass30; java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray33); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33); java.lang.Short[] shortArray38 = new java.lang.Short[] {}; short[] shortArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38); short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray38); java.lang.Class<?>[] wildcardClassArray41 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray38); boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, wildcardClassArray41, true); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray16, wildcardClassArray37, true); java.lang.String str47 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) wildcardClassArray16, "{0,100,10}"); double[] doubleArray50 = new double[] { 100.0f, (short) 100 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray50, 0); double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray52, (int) (short) 1, 0); int int56 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray16, (java.lang.Object) (short) 1); boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray16); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray16); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{<null>}" + "'", str17, "{<null>}"); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray26), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertNull(typeArray28); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(shortArray38); org.junit.Assert.assertNotNull(shortArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray39), "[]"); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false); org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Class[]" + "'", str47, "Class[]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false); }
public void test1404() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1404"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray4, "{10,100,0}"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[true]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "boolean[]" + "'", str7, "boolean[]"); }
public void test1405() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1405"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{1,0,-1,100,1}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {1,0,-1,100,1}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1406() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1406"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); java.lang.Class<?>[] wildcardClassArray45 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(wildcardClassArray46); }
public void test1407() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1407"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); int[] intArray16 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.remove(intArray16, (int) (short) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) (short) 0, (int) (byte) 1); char[] charArray27 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray30 = org.apache.commons.lang3.ArrayUtils.subarray(charArray27, (int) (short) 1, (int) (short) 0); char[] charArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray27); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray27, 'a', (int) (byte) -1); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray27, ' '); java.lang.Character[] charArray37 = org.apache.commons.lang3.ArrayUtils.toObject(charArray27); java.lang.Character[] charArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray37); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) charArray37); java.lang.Boolean[] booleanArray41 = new java.lang.Boolean[] { true }; boolean[] booleanArray43 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41, true); java.lang.Class<?>[] wildcardClassArray44 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) booleanArray41); boolean[] booleanArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray41); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray45); int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) charArray37, (java.lang.Object) booleanArray45, (int) (byte) 1); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[]"); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray31), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray31), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4, a, #, #]"); org.junit.Assert.assertNotNull(charArray37); org.junit.Assert.assertNotNull(charArray38); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); org.junit.Assert.assertNotNull(booleanArray41); org.junit.Assert.assertNotNull(booleanArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray43), "[true]"); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[true]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); }
public void test1408() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1408"); java.lang.Integer[] intArray4 = new java.lang.Integer[] { 100, 0, 10, 100 }; int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray4); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 10, 100]"); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test1409() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1409"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{10,100,0}" + "'", str1, "{10,100,0}"); }
public void test1410() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1410"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray2, (int) (byte) 0, (long) (short) 100); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray8, "hi!"); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray8); long[] longArray14 = new long[] { 10L, (byte) 10 }; long[] longArray17 = org.apache.commons.lang3.ArrayUtils.subarray(longArray14, (int) (short) 0, (int) ' '); java.lang.Long[] longArray23 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray23, (long) 1); long[] longArray26 = org.apache.commons.lang3.ArrayUtils.addAll(longArray17, longArray25); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.add(longArray25, 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray11, longArray28); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1, 1, 0, 100, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); }
public void test1411() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1411"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 'a', (int) (byte) -1, (double) 100); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray4, 1, (double) 0L); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 10.0]"); }
public void test1412() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1412"); java.lang.String[] strArray5 = new java.lang.String[] { "{1,0,-1,100}", "hi!", "{<null>}", "{<null>}", "" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList10 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); org.junit.Assert.assertNotNull(wildcardClassList9); org.junit.Assert.assertNotNull(wildcardClassList10); }
public void test1413() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1413"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) wildcardClassArray2, "{1,0,-1,100}"); java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Class[]" + "'", str42, "Class[]"); org.junit.Assert.assertNotNull(wildcardClassArray43); }
public void test1414() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1414"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean40, ""); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Boolean" + "'", str42, "Boolean"); }
public void test1415() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1415"); java.lang.Integer[] intArray2 = new java.lang.Integer[] { 10, 1 }; int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray2, (int) (byte) 1); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (byte) 1, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 1]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); }
public void test1416() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1416"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "1", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1417() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1417"); org.apache.commons.lang3.ClassUtils[] classUtilsArray0 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray1 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray2 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray3 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray4 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray5 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray0, classUtilsArray1, classUtilsArray2, classUtilsArray3, classUtilsArray4 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray6 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray7 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray8 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray9 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray10 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray11 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray6, classUtilsArray7, classUtilsArray8, classUtilsArray9, classUtilsArray10 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray12 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray13 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray14 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray15 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray16 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray17 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray12, classUtilsArray13, classUtilsArray14, classUtilsArray15, classUtilsArray16 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray18 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray19 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray20 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray21 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray22 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray23 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray18, classUtilsArray19, classUtilsArray20, classUtilsArray21, classUtilsArray22 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray24 = new org.apache.commons.lang3.ClassUtils[][][] { classUtilsArray5, classUtilsArray11, classUtilsArray17, classUtilsArray23 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray25 = new org.apache.commons.lang3.ClassUtils[][][] {}; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray26 = org.apache.commons.lang3.ArrayUtils.addAll(classUtilsArray24, classUtilsArray25); org.apache.commons.lang3.ClassUtils[][][] classUtilsArray27 = org.apache.commons.lang3.ArrayUtils.clone(classUtilsArray26); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) classUtilsArray27, "{10,10,100}"); org.junit.Assert.assertNotNull(classUtilsArray0); org.junit.Assert.assertNotNull(classUtilsArray1); org.junit.Assert.assertNotNull(classUtilsArray2); org.junit.Assert.assertNotNull(classUtilsArray3); org.junit.Assert.assertNotNull(classUtilsArray4); org.junit.Assert.assertNotNull(classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray6); org.junit.Assert.assertNotNull(classUtilsArray7); org.junit.Assert.assertNotNull(classUtilsArray8); org.junit.Assert.assertNotNull(classUtilsArray9); org.junit.Assert.assertNotNull(classUtilsArray10); org.junit.Assert.assertNotNull(classUtilsArray11); org.junit.Assert.assertNotNull(classUtilsArray12); org.junit.Assert.assertNotNull(classUtilsArray13); org.junit.Assert.assertNotNull(classUtilsArray14); org.junit.Assert.assertNotNull(classUtilsArray15); org.junit.Assert.assertNotNull(classUtilsArray16); org.junit.Assert.assertNotNull(classUtilsArray17); org.junit.Assert.assertNotNull(classUtilsArray18); org.junit.Assert.assertNotNull(classUtilsArray19); org.junit.Assert.assertNotNull(classUtilsArray20); org.junit.Assert.assertNotNull(classUtilsArray21); org.junit.Assert.assertNotNull(classUtilsArray22); org.junit.Assert.assertNotNull(classUtilsArray23); org.junit.Assert.assertNotNull(classUtilsArray24); org.junit.Assert.assertNotNull(classUtilsArray25); org.junit.Assert.assertNotNull(classUtilsArray26); org.junit.Assert.assertNotNull(classUtilsArray27); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ClassUtils[][][]" + "'", str29, "ClassUtils[][][]"); }
public void test1418() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1418"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 10, (short) 100, (short) 100, (short) 10 }; short[] shortArray42 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray40, (short) -1); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray27, (java.lang.Object[]) shortArray40); java.lang.String str45 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean43, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertNotNull(shortArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[10, 100, 100, 10]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertEquals("'" + str45 + "' != '" + "java.lang" + "'", str45, "java.lang"); }
public void test1419() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1419"); java.lang.String[] strArray13 = new java.lang.String[] { "{0,100,10}", "{10,10,100}", "{10,100,0}", "{<null>}", "{10,10}", "{0,100,10}", "{0,100,10}", "{-1,1,0,100,0}", "1", "ClassUtils[][][]", "{-1,1,0,100,0}", "{1,0,-1,100,1}", "" }; java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>(); boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13); java.util.List<java.lang.Class<?>> wildcardClassList16 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList14); org.junit.Assert.assertNotNull(strArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(wildcardClassList16); }
public void test1420() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1420"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1421() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1421"); short[] shortArray2 = new short[] { (byte) 0, (byte) 1 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray2, (short) 0); short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray2); java.lang.Class<?> wildcardClass7 = null; java.lang.Class[] classArray9 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; wildcardClassArray10[0] = wildcardClass7; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray6, (java.lang.Object) wildcardClassArray15); java.lang.Class<?>[] wildcardClassArray17 = null; boolean boolean19 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray17, false); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0, 1]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[0, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); }
public void test1422() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1422"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray9 = null; boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray8, wildcardClassArray9); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); }
public void test1423() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1423"); org.apache.commons.lang3.ClassUtils[] classUtilsArray0 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray1 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray2 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray3 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray4 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray5 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray0, classUtilsArray1, classUtilsArray2, classUtilsArray3, classUtilsArray4 }; org.apache.commons.lang3.ClassUtils[][] classUtilsArray6 = org.apache.commons.lang3.ArrayUtils.toArray(classUtilsArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray0); org.junit.Assert.assertNotNull(classUtilsArray1); org.junit.Assert.assertNotNull(classUtilsArray2); org.junit.Assert.assertNotNull(classUtilsArray3); org.junit.Assert.assertNotNull(classUtilsArray4); org.junit.Assert.assertNotNull(classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); }
public void test1424() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1424"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray4, (int) (byte) 0); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0]"); }
public void test1425() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1425"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(obj0, "ClassUtils[][][]"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ClassUtils[][][]" + "'", str2, "ClassUtils[][][]"); }
public void test1426() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1426"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray2, (long) (short) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray2, "{0,100,10}"); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray2, (-1L), (int) 'a'); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[10]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); }
public void test1427() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1427"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass11 = null; java.lang.Class[] classArray13 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13; wildcardClassArray14[0] = wildcardClass11; java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.String str18 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray17); java.lang.reflect.Type[][][][][][] typeArray19 = null; short[] shortArray24 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.clone(shortArray24); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray24, (short) (byte) 1); java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray27); java.lang.reflect.Type[][][][][][] typeArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray19, (java.lang.Object) shortArray28); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray17, (java.lang.Object[]) shortArray28); java.lang.Class<?> wildcardClass31 = null; java.lang.Class[] classArray33 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; wildcardClassArray34[0] = wildcardClass31; java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray34); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray34); java.lang.Short[] shortArray39 = new java.lang.Short[] {}; short[] shortArray40 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39); short[] shortArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray39); java.lang.Class<?>[] wildcardClassArray42 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray39); boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray38, wildcardClassArray42, true); boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray38, true); java.lang.Class<?> wildcardClass47 = null; java.lang.Class[] classArray49 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49; wildcardClassArray50[0] = wildcardClass47; java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray50); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray50); boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray50, true); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray50, false); java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); byte[] byteArray64 = new byte[] { (byte) 0, (byte) 0, (byte) 10, (byte) 0 }; byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.add(byteArray64, (byte) 10); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) byteArray64, (int) (byte) 0); int int71 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray64, (byte) 1, (int) 'a'); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{<null>}" + "'", str18, "{<null>}"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNull(typeArray29); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(shortArray39); org.junit.Assert.assertNotNull(shortArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray40), "[]"); org.junit.Assert.assertNotNull(shortArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray41), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertNotNull(classArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(byteArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[0, 0, 10, 0]"); org.junit.Assert.assertNotNull(byteArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[0, 0, 10, 0, 10]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); }
public void test1428() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1428"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "ClassUtils[][][]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [[[LClassUtils;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1429() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1429"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); java.lang.String[] strArray18 = new java.lang.String[] { "{10,10}", "{<null>}", "{0,100,10}", "{10,100,0}", "{<null>}", "{10,10,100}", "{-1,1,0,100,0}", "{10,10}" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList22 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); // The following exception was thrown during execution in test generation try { java.util.RandomAccess[] randomAccessArray23 = org.apache.commons.lang3.ArrayUtils.add((java.util.RandomAccess[]) strListArray8, (int) '4', (java.util.RandomAccess) strList19); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 1"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(wildcardClassList22); }
public void test1430() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1430"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.util.ArrayList[] arrayListArray4 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray5 = (java.util.ArrayList<java.lang.String>[]) arrayListArray4; java.util.ArrayList[] arrayListArray7 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray8 = (java.util.ArrayList<java.lang.String>[]) arrayListArray7; java.util.ArrayList[] arrayListArray10 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray11 = (java.util.ArrayList<java.lang.String>[]) arrayListArray10; java.util.ArrayList[] arrayListArray13 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray14 = (java.util.ArrayList<java.lang.String>[]) arrayListArray13; java.util.ArrayList[] arrayListArray16 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray17 = (java.util.ArrayList<java.lang.String>[]) arrayListArray16; java.util.ArrayList[][] arrayListArray19 = new java.util.ArrayList[6][]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[][] strListArray20 = (java.util.ArrayList<java.lang.String>[][]) arrayListArray19; strListArray20[0] = arrayListArray1; strListArray20[1] = strListArray5; strListArray20[2] = arrayListArray7; strListArray20[3] = arrayListArray10; strListArray20[4] = arrayListArray13; strListArray20[5] = arrayListArray16; java.util.ArrayList<java.lang.String>[][] strListArray35 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray20, 100, 0); java.lang.String[] strArray37 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>(); boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37); java.util.List<java.lang.Class<?>> wildcardClassList40 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.List<java.lang.Class<?>> wildcardClassList41 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList38); java.util.RandomAccess[] randomAccessArray42 = new java.util.RandomAccess[] { strList38 }; java.util.RandomAccess[] randomAccessArray43 = org.apache.commons.lang3.ArrayUtils.toArray(randomAccessArray42); int int46 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) randomAccessArray43, (java.lang.Object) 1.0f, 10); // The following exception was thrown during execution in test generation try { java.util.RandomAccess[][] randomAccessArray47 = org.apache.commons.lang3.ArrayUtils.add((java.util.RandomAccess[][]) strListArray35, randomAccessArray43); org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: [Ljava.util.RandomAccess;"); } catch (java.lang.ArrayStoreException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(arrayListArray4); org.junit.Assert.assertNotNull(strListArray5); org.junit.Assert.assertNotNull(arrayListArray7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(arrayListArray10); org.junit.Assert.assertNotNull(strListArray11); org.junit.Assert.assertNotNull(arrayListArray13); org.junit.Assert.assertNotNull(strListArray14); org.junit.Assert.assertNotNull(arrayListArray16); org.junit.Assert.assertNotNull(strListArray17); org.junit.Assert.assertNotNull(arrayListArray19); org.junit.Assert.assertNotNull(strListArray20); org.junit.Assert.assertNotNull(strListArray35); org.junit.Assert.assertNotNull(strArray37); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertNotNull(wildcardClassList40); org.junit.Assert.assertNotNull(wildcardClassList41); org.junit.Assert.assertNotNull(randomAccessArray42); org.junit.Assert.assertNotNull(randomAccessArray43); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); }
public void test1431() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1431"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray3); java.lang.Short[] shortArray8 = new java.lang.Short[] {}; short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray8); boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray11, true); java.lang.Class<?> wildcardClass14 = null; java.lang.Class[] classArray16 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16; wildcardClassArray17[0] = wildcardClass14; java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray17); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); java.lang.Short[] shortArray22 = new java.lang.Short[] {}; short[] shortArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22); short[] shortArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray22); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray22); boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray25, true); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray21); java.lang.reflect.GenericDeclaration[] genericDeclarationArray30 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.reflect.GenericDeclaration[]) wildcardClassArray7, (int) (short) 0); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertNotNull(classArray16); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(shortArray22); org.junit.Assert.assertNotNull(shortArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray23), "[]"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(genericDeclarationArray30); }
public void test1432() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1432"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,100,0}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1433() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1433"); java.lang.String[] strArray5 = new java.lang.String[] { "{10,100,0}", "{<null>}", "{-1,1,0,100,0}", "", "{10,10,100}" }; java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>(); boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5); java.util.List<java.lang.Class<?>> wildcardClassList8 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList9 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); java.util.List<java.lang.Class<?>> wildcardClassList10 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList6); org.junit.Assert.assertNotNull(strArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassList8); org.junit.Assert.assertNotNull(wildcardClassList9); org.junit.Assert.assertNotNull(wildcardClassList10); }
public void test1434() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1434"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0); boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { true, true, true, true }; boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray10); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray11); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray12); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true, (int) (byte) 0); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) true, "{10,100,0}"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, true, true, true]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.lang" + "'", str18, "java.lang"); }
public void test1435() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1435"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 10, (int) (byte) 100); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 0, (int) '4', 100.0d); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, 0.0d); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) 100); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); }
public void test1436() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1436"); java.lang.Double[] doubleArray6 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray6); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); int[] intArray16 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray18 = org.apache.commons.lang3.ArrayUtils.remove(intArray16, (int) (short) 0); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) doubleArray6, (java.lang.Object) (short) 0, (int) (byte) 1); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray6); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21, 10.0d); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) 1L, (int) (byte) 100, (double) 1.0f); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray23, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[35, 32, 100, 100]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "double[]" + "'", str29, "double[]"); }
public void test1437() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1437"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean[] booleanArray3 = null; boolean[] booleanArray4 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray3); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray0, (int) '4', (int) 'a'); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) booleanArray0, "1"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); }
public void test1438() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1438"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); java.lang.Class<?>[] wildcardClassArray45 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Class<?> wildcardClass46 = null; java.lang.Class[] classArray48 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray49 = (java.lang.Class<?>[]) classArray48; wildcardClassArray49[0] = wildcardClass46; java.lang.Class<?>[] wildcardClassArray52 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray49); java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray49); boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray45, wildcardClassArray53); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(classArray48); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false); }
public void test1439() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1439"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, (double) (byte) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); }
public void test1440() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1440"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?> wildcardClass1 = null; java.lang.Class[] classArray3 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray4 = (java.lang.Class<?>[]) classArray3; wildcardClassArray4[0] = wildcardClass1; java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray4); java.lang.String str8 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray7); boolean boolean10 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray7, true); java.lang.Class<?> wildcardClass11 = null; java.lang.Class[] classArray13 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13; wildcardClassArray14[0] = wildcardClass11; java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); java.lang.String str18 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray17); java.lang.reflect.Type[][][][][][] typeArray19 = null; short[] shortArray24 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray25 = org.apache.commons.lang3.ArrayUtils.clone(shortArray24); short[] shortArray27 = org.apache.commons.lang3.ArrayUtils.add(shortArray24, (short) (byte) 1); java.lang.Short[] shortArray28 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray27); java.lang.reflect.Type[][][][][][] typeArray29 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray19, (java.lang.Object) shortArray28); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray17, (java.lang.Object[]) shortArray28); java.lang.Class<?> wildcardClass31 = null; java.lang.Class[] classArray33 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; wildcardClassArray34[0] = wildcardClass31; java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray34); java.lang.String str38 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray37); boolean boolean39 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray37); boolean boolean41 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray7, wildcardClassArray37, false); org.junit.Assert.assertNotNull(classArray3); org.junit.Assert.assertNotNull(wildcardClassArray4); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{<null>}" + "'", str8, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertNotNull(classArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{<null>}" + "'", str18, "{<null>}"); org.junit.Assert.assertNotNull(shortArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray24), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray25), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNull(typeArray29); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{<null>}" + "'", str38, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); }
public void test1441() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1441"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); float[] floatArray9 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, (float) 0); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray11); java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray11); float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray14); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray14, 100.0f, (int) (short) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) 100.0f, "{10,10}"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "java.lang" + "'", str21, "java.lang"); }
public void test1442() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1442"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("ClassUtils[][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1443() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1443"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 0, 0L); long[] longArray20 = new long[] { 10L, (byte) 10 }; long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 0, (int) ' '); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray23); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray23); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(longArray25, (long) (byte) 0); long[] longArray29 = org.apache.commons.lang3.ArrayUtils.add(longArray25, (long) '4'); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) longArray29, ""); java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray29); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, 10, 52]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "long[]" + "'", str31, "long[]"); org.junit.Assert.assertNotNull(longArray32); }
public void test1444() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1444"); java.lang.Double[][][][] doubleArray0 = new java.lang.Double[][][][] {}; java.lang.Short[] shortArray2 = new java.lang.Short[] {}; short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); java.lang.Class<?>[] wildcardClassArray5 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray2); java.lang.Double[] doubleArray12 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[] doubleArray19 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray12, doubleArray19 }; java.lang.Double[][][] doubleArray21 = new java.lang.Double[][][] { doubleArray20 }; java.lang.Double[] doubleArray24 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray27 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray30 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray33 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray36 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray39 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[][] doubleArray40 = new java.lang.Double[][] { doubleArray24, doubleArray27, doubleArray30, doubleArray33, doubleArray36, doubleArray39 }; java.lang.Double[][][] doubleArray41 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, doubleArray40); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray5, (java.lang.Object[]) doubleArray21); // The following exception was thrown during execution in test generation try { java.lang.Double[][][][] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, (int) '#', doubleArray21); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray3), "[]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); }
public void test1445() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1445"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray4, (double) (short) -1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 10.0]"); }
public void test1446() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1446"); byte[] byteArray1 = new byte[] { (byte) 10 }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(byteArray1, (byte) 1); boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isEmpty(byteArray1); byte[] byteArray6 = new byte[] { (byte) 10 }; boolean boolean8 = org.apache.commons.lang3.ArrayUtils.contains(byteArray6, (byte) 1); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray1, byteArray6); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.add(byteArray6, (byte) 0); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.clone(byteArray11); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray12); byte[] byteArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray13, (byte) 1); java.lang.Class<?> wildcardClass16 = null; java.lang.Class[] classArray18 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray19 = (java.lang.Class<?>[]) classArray18; wildcardClassArray19[0] = wildcardClass16; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray19); java.lang.Object obj23 = null; int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray22, obj23); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray25); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) byteArray13, (java.lang.Object[]) wildcardClassArray25); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[10]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 10]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 0]"); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 0]"); org.junit.Assert.assertNotNull(classArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); }
public void test1447() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1447"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray1, (double) 0); double[] doubleArray9 = new double[] { 100.0f, (short) 100 }; double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray9, 0); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray9); double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray9, (int) '4', (int) '#'); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray9, (double) 100); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray9, "{10,10,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray9); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray1, doubleArray9); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 100.0, 100.0]"); }
public void test1448() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1448"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Float[] floatArray10 = new java.lang.Float[] { 100.0f }; java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray12); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) floatArray12); float[] floatArray18 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray18, (float) 0); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (-1.0f), (int) (byte) 10); float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray18, 1); float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray12, floatArray25); float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.clone(floatArray26); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(floatArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[100.0, 10.0, 0.0]"); }
public void test1449() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1449"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{-1,1,0,100,0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {-1,1,0,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1450() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1450"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray9); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, 0.0d); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); }
public void test1451() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1451"); float[] floatArray3 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) 0); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray3); float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.add(floatArray3, (float) 0L); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 0L, "{10,100,0}"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[10.0, -1.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Long" + "'", str10, "Long"); }
public void test1452() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1452"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 10, (int) (byte) 100); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) 1L, (int) (byte) 100, (double) '#'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); }
public void test1453() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1453"); double[][][] doubleArray0 = new double[][][] {}; double[][][] doubleArray1 = new double[][][] {}; double[][][][] doubleArray2 = new double[][][][] { doubleArray0, doubleArray1 }; double[][][][][] doubleArray3 = new double[][][][][] { doubleArray2 }; double[] doubleArray4 = new double[] {}; double[] doubleArray5 = new double[] {}; double[][] doubleArray6 = new double[][] { doubleArray4, doubleArray5 }; double[] doubleArray7 = new double[] {}; double[] doubleArray8 = new double[] {}; double[][] doubleArray9 = new double[][] { doubleArray7, doubleArray8 }; double[] doubleArray10 = new double[] {}; double[] doubleArray11 = new double[] {}; double[][] doubleArray12 = new double[][] { doubleArray10, doubleArray11 }; double[] doubleArray13 = new double[] {}; double[] doubleArray14 = new double[] {}; double[][] doubleArray15 = new double[][] { doubleArray13, doubleArray14 }; double[] doubleArray16 = new double[] {}; double[] doubleArray17 = new double[] {}; double[][] doubleArray18 = new double[][] { doubleArray16, doubleArray17 }; double[] doubleArray19 = new double[] {}; double[] doubleArray20 = new double[] {}; double[][] doubleArray21 = new double[][] { doubleArray19, doubleArray20 }; double[][][] doubleArray22 = new double[][][] { doubleArray6, doubleArray9, doubleArray12, doubleArray15, doubleArray18, doubleArray21 }; double[] doubleArray23 = new double[] {}; double[] doubleArray24 = new double[] {}; double[][] doubleArray25 = new double[][] { doubleArray23, doubleArray24 }; double[] doubleArray26 = new double[] {}; double[] doubleArray27 = new double[] {}; double[][] doubleArray28 = new double[][] { doubleArray26, doubleArray27 }; double[] doubleArray29 = new double[] {}; double[] doubleArray30 = new double[] {}; double[][] doubleArray31 = new double[][] { doubleArray29, doubleArray30 }; double[] doubleArray32 = new double[] {}; double[] doubleArray33 = new double[] {}; double[][] doubleArray34 = new double[][] { doubleArray32, doubleArray33 }; double[] doubleArray35 = new double[] {}; double[] doubleArray36 = new double[] {}; double[][] doubleArray37 = new double[][] { doubleArray35, doubleArray36 }; double[] doubleArray38 = new double[] {}; double[] doubleArray39 = new double[] {}; double[][] doubleArray40 = new double[][] { doubleArray38, doubleArray39 }; double[][][] doubleArray41 = new double[][][] { doubleArray25, doubleArray28, doubleArray31, doubleArray34, doubleArray37, doubleArray40 }; double[] doubleArray42 = new double[] {}; double[] doubleArray43 = new double[] {}; double[][] doubleArray44 = new double[][] { doubleArray42, doubleArray43 }; double[] doubleArray45 = new double[] {}; double[] doubleArray46 = new double[] {}; double[][] doubleArray47 = new double[][] { doubleArray45, doubleArray46 }; double[] doubleArray48 = new double[] {}; double[] doubleArray49 = new double[] {}; double[][] doubleArray50 = new double[][] { doubleArray48, doubleArray49 }; double[] doubleArray51 = new double[] {}; double[] doubleArray52 = new double[] {}; double[][] doubleArray53 = new double[][] { doubleArray51, doubleArray52 }; double[] doubleArray54 = new double[] {}; double[] doubleArray55 = new double[] {}; double[][] doubleArray56 = new double[][] { doubleArray54, doubleArray55 }; double[] doubleArray57 = new double[] {}; double[] doubleArray58 = new double[] {}; double[][] doubleArray59 = new double[][] { doubleArray57, doubleArray58 }; double[][][] doubleArray60 = new double[][][] { doubleArray44, doubleArray47, doubleArray50, doubleArray53, doubleArray56, doubleArray59 }; double[] doubleArray61 = new double[] {}; double[] doubleArray62 = new double[] {}; double[][] doubleArray63 = new double[][] { doubleArray61, doubleArray62 }; double[] doubleArray64 = new double[] {}; double[] doubleArray65 = new double[] {}; double[][] doubleArray66 = new double[][] { doubleArray64, doubleArray65 }; double[] doubleArray67 = new double[] {}; double[] doubleArray68 = new double[] {}; double[][] doubleArray69 = new double[][] { doubleArray67, doubleArray68 }; double[] doubleArray70 = new double[] {}; double[] doubleArray71 = new double[] {}; double[][] doubleArray72 = new double[][] { doubleArray70, doubleArray71 }; double[] doubleArray73 = new double[] {}; double[] doubleArray74 = new double[] {}; double[][] doubleArray75 = new double[][] { doubleArray73, doubleArray74 }; double[] doubleArray76 = new double[] {}; double[] doubleArray77 = new double[] {}; double[][] doubleArray78 = new double[][] { doubleArray76, doubleArray77 }; double[][][] doubleArray79 = new double[][][] { doubleArray63, doubleArray66, doubleArray69, doubleArray72, doubleArray75, doubleArray78 }; double[][][][] doubleArray80 = new double[][][][] { doubleArray22, doubleArray41, doubleArray60, doubleArray79 }; double[][][][][] doubleArray81 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, doubleArray80); java.lang.String str83 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray80, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]"); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]"); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[]"); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertNotNull(doubleArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[]"); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]"); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[]"); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[]"); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals("'" + str83 + "' != '" + "double[][][][]" + "'", str83, "double[][][][]"); }
public void test1454() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1454"); char[] charArray6 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (short) 1, (int) (short) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray6, 'a', (int) (byte) -1); char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray6, ' '); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(charArray6, ' '); java.lang.Character[] charArray20 = new java.lang.Character[] { ' ', 'a' }; char[] charArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20, '4'); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray20); java.lang.Character[] charArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20); char[] charArray25 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray20); char[] charArray32 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray35 = org.apache.commons.lang3.ArrayUtils.subarray(charArray32, (int) (short) 1, (int) (short) 0); char[] charArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray32); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray32); char[] charArray39 = org.apache.commons.lang3.ArrayUtils.add(charArray32, '4'); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray39, '4', 0); java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.toObject(charArray39); char[] charArray44 = org.apache.commons.lang3.ArrayUtils.addAll(charArray25, charArray39); char[] charArray47 = org.apache.commons.lang3.ArrayUtils.add(charArray25, 0, '#'); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray25, 'a'); char[] charArray50 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray25); java.lang.String str52 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray25, "{<null>}"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "a4a##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "a4a##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[a, 4, a, #, #]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertNotNull(charArray22); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray22), " a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray22), " a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray22), "[ , a]"); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray25), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray25), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray25), "[a, ]"); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray35); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray35), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray35), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray35), "[]"); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(charArray39); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a, 4, a, , #, #, 4]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1); org.junit.Assert.assertNotNull(charArray43); org.junit.Assert.assertNotNull(charArray44); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, , a, 4, a, , #, #, 4]"); org.junit.Assert.assertNotNull(charArray47); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), "#a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), "#a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[#, a, ]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0); org.junit.Assert.assertNotNull(charArray50); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray50), "a4a ##a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray50), "a4a ##a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray50), "[a, 4, a, , #, #, a, ]"); org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, ""); }
public void test1455() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1455"); java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) 1 }; java.lang.Byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray2, (byte) 100); java.lang.Byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray2); java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray5); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray6); short[] shortArray12 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.clone(shortArray12); java.lang.String str15 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) shortArray12, "hi!"); short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.add(shortArray12, (short) -1); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray17, (short) (byte) 1); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray17, (short) 0, (-1)); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) byteArray6, (java.lang.Object) (-1)); long[] longArray26 = new long[] { 10L, (byte) 10 }; long[] longArray29 = org.apache.commons.lang3.ArrayUtils.subarray(longArray26, (int) (short) 0, (int) ' '); java.lang.Long[] longArray35 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray35, (long) 1); long[] longArray38 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray37); long[] longArray41 = new long[] { 10L, (byte) 10 }; long[] longArray44 = org.apache.commons.lang3.ArrayUtils.subarray(longArray41, (int) (short) 0, (int) ' '); long[] longArray45 = org.apache.commons.lang3.ArrayUtils.addAll(longArray37, longArray41); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray6, (java.lang.Object) longArray45); java.lang.String str48 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean46, "{1,0,-1,100,1}"); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[1]"); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[1]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{1,0,-1,100}" + "'", str15, "{1,0,-1,100}"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100, -1]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[10, 10]"); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, 10]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray38), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[10, 10]"); org.junit.Assert.assertNotNull(longArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray44), "[10, 10]"); org.junit.Assert.assertNotNull(longArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray45), "[-1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertEquals("'" + str48 + "' != '" + "java.lang" + "'", str48, "java.lang"); }
public void test1456() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1456"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{-1,1,0,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{-1,1,0,100,0}" + "'", str1, "{-1,1,0,100,0}"); }
public void test1457() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1457"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,100,0}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,100,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1458() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1458"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray26); boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray26); java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray32); boolean[] booleanArray34 = new boolean[] {}; boolean[] booleanArray36 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, false); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.add(booleanArray34, true); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray38); boolean[] booleanArray42 = org.apache.commons.lang3.ArrayUtils.add(booleanArray39, 0, false); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray32, (java.lang.Object) booleanArray39); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray26, (java.lang.Object) byteArray32); java.lang.Class<?>[] wildcardClassArray45 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Short[] shortArray46 = new java.lang.Short[] {}; short[] shortArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46); short[] shortArray48 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray46); java.lang.Class<?>[] wildcardClassArray49 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray46); java.lang.Double[] doubleArray56 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[] doubleArray63 = new java.lang.Double[] { (-1.0d), 1.0d, (-1.0d), 0.0d, 1.0d, (-1.0d) }; java.lang.Double[][] doubleArray64 = new java.lang.Double[][] { doubleArray56, doubleArray63 }; java.lang.Double[][][] doubleArray65 = new java.lang.Double[][][] { doubleArray64 }; java.lang.Double[] doubleArray68 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray71 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray74 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray77 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray80 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[] doubleArray83 = new java.lang.Double[] { 1.0d, 10.0d }; java.lang.Double[][] doubleArray84 = new java.lang.Double[][] { doubleArray68, doubleArray71, doubleArray74, doubleArray77, doubleArray80, doubleArray83 }; java.lang.Double[][][] doubleArray85 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, doubleArray84); boolean boolean86 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray49, (java.lang.Object[]) doubleArray65); boolean boolean87 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray45, wildcardClassArray49); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{<null>}" + "'", str27, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(byteArray32); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[]"); org.junit.Assert.assertNotNull(booleanArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray36), "[false]"); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[true]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[true]"); org.junit.Assert.assertNotNull(booleanArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray42), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(shortArray46); org.junit.Assert.assertNotNull(shortArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray47), "[]"); org.junit.Assert.assertNotNull(shortArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray48), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertNotNull(doubleArray71); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertNotNull(doubleArray80); org.junit.Assert.assertNotNull(doubleArray83); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertNotNull(doubleArray85); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false); org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false); }
public void test1459() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1459"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("double[][][][]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double[][][][]" + "'", str1, "double[][][][]"); }
public void test1460() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1460"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{1,0,-1,100,1}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{1,0,-1,100,1}" + "'", str1, "{1,0,-1,100,1}"); }
public void test1461() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1461"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{10,100,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test1462() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1462"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); int[] intArray10 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray11 = org.apache.commons.lang3.ArrayUtils.toObject(intArray10); int[] intArray18 = new int[] { (short) -1, 'a', (byte) -1, 1, (short) 0, (-1) }; int[] intArray19 = org.apache.commons.lang3.ArrayUtils.addAll(intArray10, intArray18); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) str6, (java.lang.Object) intArray19); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray19, 0); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 100, 10, -1, 97, -1, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); }
public void test1463() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1463"); char[] charArray6 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (short) 1, (int) (short) 0); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray6, ' ', (int) (byte) -1); char[] charArray14 = org.apache.commons.lang3.ArrayUtils.add(charArray6, 'a'); char[] charArray15 = null; char[] charArray16 = org.apache.commons.lang3.ArrayUtils.addAll(charArray6, charArray15); char[] charArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) charArray6, ""); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4a ##a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4a ##a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4, a, , #, #, a]"); org.junit.Assert.assertNotNull(charArray16); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray17); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[a, 4, a, , #, #]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "char[]" + "'", str19, "char[]"); }
public void test1464() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1464"); char[] charArray6 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (short) 1, (int) (short) 0); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.clone(charArray9); char[] charArray11 = org.apache.commons.lang3.ArrayUtils.clone(charArray9); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, ' ', (int) '4'); char[] charArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray11, '#'); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray16, ""); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(charArray16); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[]"); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "char[]" + "'", str18, "char[]"); }
public void test1465() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1465"); java.util.ArrayList[] arrayListArray1 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray2 = (java.util.ArrayList<java.lang.String>[]) arrayListArray1; java.lang.String[] strArray4 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>(); boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4); java.util.List<java.lang.Class<?>> wildcardClassList7 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList5); java.util.ArrayList<java.lang.String>[] strListArray8 = org.apache.commons.lang3.ArrayUtils.add(strListArray2, strList5); java.util.ArrayList<java.lang.String>[] strListArray9 = org.apache.commons.lang3.ArrayUtils.toArray(strListArray2); java.util.ArrayList<java.lang.String>[] strListArray10 = org.apache.commons.lang3.ArrayUtils.clone(strListArray2); java.util.ArrayList[] arrayListArray13 = new java.util.ArrayList[0]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray14 = (java.util.ArrayList<java.lang.String>[]) arrayListArray13; java.lang.String[] strArray16 = new java.lang.String[] { "" }; java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>(); boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16); java.util.List<java.lang.Class<?>> wildcardClassList19 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList17); java.util.ArrayList<java.lang.String>[] strListArray20 = org.apache.commons.lang3.ArrayUtils.add(strListArray14, strList17); // The following exception was thrown during execution in test generation try { java.util.ArrayList<java.lang.String>[] strListArray21 = org.apache.commons.lang3.ArrayUtils.add(strListArray10, (int) ' ', strList17); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(arrayListArray1); org.junit.Assert.assertNotNull(strListArray2); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true); org.junit.Assert.assertNotNull(wildcardClassList7); org.junit.Assert.assertNotNull(strListArray8); org.junit.Assert.assertNotNull(strListArray9); org.junit.Assert.assertNotNull(strListArray10); org.junit.Assert.assertNotNull(arrayListArray13); org.junit.Assert.assertNotNull(strListArray14); org.junit.Assert.assertNotNull(strArray16); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertNotNull(wildcardClassList19); org.junit.Assert.assertNotNull(strListArray20); }
public void test1466() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1466"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); }
public void test1467() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1467"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); long[] longArray10 = new long[] { 10L, (byte) 10 }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.subarray(longArray10, (int) (short) 0, (int) ' '); long[] longArray16 = org.apache.commons.lang3.ArrayUtils.add(longArray10, (int) (byte) 0, (long) (short) 100); long[] longArray19 = new long[] { 10L, (byte) 10 }; long[] longArray22 = org.apache.commons.lang3.ArrayUtils.subarray(longArray19, (int) (short) 0, (int) ' '); java.lang.Long[] longArray28 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray28, (long) 1); long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray30); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray30); long[] longArray33 = org.apache.commons.lang3.ArrayUtils.addAll(longArray10, longArray30); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.add(longArray30, (long) (byte) 1); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray35, (long) '#', 0); long[] longArray40 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray35, (long) 1); long[] longArray41 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray40); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) longArray40); java.lang.Class<?> wildcardClass43 = null; java.lang.Class[] classArray45 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45; wildcardClassArray46[0] = wildcardClass43; java.lang.Class<?>[] wildcardClassArray49 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray46); java.lang.Class<?>[] wildcardClassArray50 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46); java.lang.Short[] shortArray51 = new java.lang.Short[] {}; short[] shortArray52 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray51); short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray51); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray51); boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray50, wildcardClassArray54, true); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray50, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[10, 10]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[10, 10]"); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray19), "[10, 10]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[10, 10]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(longArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertNotNull(longArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertNotNull(classArray45); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertNotNull(shortArray51); org.junit.Assert.assertNotNull(shortArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]"); org.junit.Assert.assertNotNull(shortArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); }
public void test1468() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1468"); int[] intArray5 = new int[] { (short) 0, '#', ' ', 100, 100 }; int[] intArray7 = org.apache.commons.lang3.ArrayUtils.remove(intArray5, (int) (short) 0); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray5); int[] intArray12 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray13 = org.apache.commons.lang3.ArrayUtils.toObject(intArray12); int[] intArray16 = org.apache.commons.lang3.ArrayUtils.subarray(intArray12, (int) (byte) 1, 0); int[] intArray17 = org.apache.commons.lang3.ArrayUtils.clone(intArray12); int[] intArray21 = new int[] { 1, '4', (byte) 0 }; boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray21); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray21, (-1), 100); int[] intArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray21, 0); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray17, intArray21); int[] intArray30 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray21, 0); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray8, intArray30); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean31, "double[][][][]"); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 35, 32, 100, 100]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1, 52, 0]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1, 52]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(intArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1, 52]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "java.lang" + "'", str33, "java.lang"); }
public void test1469() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1469"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,10,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,10,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1470() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1470"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("ClassUtils[][][]", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: ClassUtils"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test1471() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1471"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); java.lang.Object obj6 = null; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray5, obj6); java.lang.Float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray5); float[] floatArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray5, "{0,100,10}"); float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) '4'); // The following exception was thrown during execution in test generation try { float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.add(floatArray13, (int) (short) 100, 100.0f); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.lang" + "'", str11, "java.lang"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[97.0, 10.0, 1.0, 100.0]"); }
public void test1472() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1472"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray4); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0, 0.0]"); }
public void test1473() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1473"); boolean[] booleanArray0 = new boolean[] {}; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, false); boolean boolean3 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray0); int int5 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray0, true); boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray0, "{97.0,10.0,1.0,100.0}"); org.junit.Assert.assertNotNull(booleanArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray0), "[]"); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[false]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "boolean[]" + "'", str9, "boolean[]"); }
public void test1474() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1474"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.add(shortArray4, (short) (byte) 1); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray7); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) (byte) 100); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray8); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(wildcardClassArray11); }
public void test1475() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1475"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray17); java.lang.Short[] shortArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray17); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray21); }
public void test1476() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1476"); java.lang.Long[] longArray5 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray5, (long) 1); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray5, (java.lang.Object) false, (int) (byte) 0); int[] intArray14 = new int[] { 0, (byte) 100, (byte) 10 }; java.lang.Integer[] intArray15 = org.apache.commons.lang3.ArrayUtils.toObject(intArray14); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray5, (java.lang.Object[]) intArray15); float[] floatArray20 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray20, (float) 0); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) intArray15, (java.lang.Object) 0, (int) (byte) -1); java.lang.Long[] longArray30 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray30, (long) 1); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray15, (java.lang.Object[]) longArray30); int[] intArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, (int) 'a'); int[] intArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray15, 100); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray15, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 100, 10]"); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[0, 100, 10]"); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "java.lang" + "'", str39, "java.lang"); }
public void test1477() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1477"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Short[] shortArray11 = new java.lang.Short[] {}; short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11); short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray11); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray11); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray14); boolean boolean17 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray14, true); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[]"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); }
public void test1478() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1478"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass21 = null; java.lang.Class[] classArray23 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; wildcardClassArray24[0] = wildcardClass21; java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); boolean boolean29 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, false); org.apache.commons.lang3.ClassUtils[] classUtilsArray30 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray31 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray32 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray33 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray34 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray35 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray30, classUtilsArray31, classUtilsArray32, classUtilsArray33, classUtilsArray34 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray36 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray37 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray38 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray39 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray40 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray41 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray36, classUtilsArray37, classUtilsArray38, classUtilsArray39, classUtilsArray40 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray42 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray43 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray44 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray45 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray46 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray47 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray42, classUtilsArray43, classUtilsArray44, classUtilsArray45, classUtilsArray46 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray48 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray49 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray50 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray51 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[] classUtilsArray52 = new org.apache.commons.lang3.ClassUtils[] {}; org.apache.commons.lang3.ClassUtils[][] classUtilsArray53 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray48, classUtilsArray49, classUtilsArray50, classUtilsArray51, classUtilsArray52 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray54 = new org.apache.commons.lang3.ClassUtils[][][] { classUtilsArray35, classUtilsArray41, classUtilsArray47, classUtilsArray53 }; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray55 = new org.apache.commons.lang3.ClassUtils[][][] {}; org.apache.commons.lang3.ClassUtils[][][] classUtilsArray56 = org.apache.commons.lang3.ArrayUtils.addAll(classUtilsArray54, classUtilsArray55); org.apache.commons.lang3.ClassUtils[][][] classUtilsArray57 = org.apache.commons.lang3.ArrayUtils.clone(classUtilsArray56); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray27, (java.lang.Object) classUtilsArray57, 10); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray27); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(classUtilsArray30); org.junit.Assert.assertNotNull(classUtilsArray31); org.junit.Assert.assertNotNull(classUtilsArray32); org.junit.Assert.assertNotNull(classUtilsArray33); org.junit.Assert.assertNotNull(classUtilsArray34); org.junit.Assert.assertNotNull(classUtilsArray35); org.junit.Assert.assertNotNull(classUtilsArray36); org.junit.Assert.assertNotNull(classUtilsArray37); org.junit.Assert.assertNotNull(classUtilsArray38); org.junit.Assert.assertNotNull(classUtilsArray39); org.junit.Assert.assertNotNull(classUtilsArray40); org.junit.Assert.assertNotNull(classUtilsArray41); org.junit.Assert.assertNotNull(classUtilsArray42); org.junit.Assert.assertNotNull(classUtilsArray43); org.junit.Assert.assertNotNull(classUtilsArray44); org.junit.Assert.assertNotNull(classUtilsArray45); org.junit.Assert.assertNotNull(classUtilsArray46); org.junit.Assert.assertNotNull(classUtilsArray47); org.junit.Assert.assertNotNull(classUtilsArray48); org.junit.Assert.assertNotNull(classUtilsArray49); org.junit.Assert.assertNotNull(classUtilsArray50); org.junit.Assert.assertNotNull(classUtilsArray51); org.junit.Assert.assertNotNull(classUtilsArray52); org.junit.Assert.assertNotNull(classUtilsArray53); org.junit.Assert.assertNotNull(classUtilsArray54); org.junit.Assert.assertNotNull(classUtilsArray55); org.junit.Assert.assertNotNull(classUtilsArray56); org.junit.Assert.assertNotNull(classUtilsArray57); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray60); }
public void test1479() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1479"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) (-1L), (int) (short) -1, (double) (-1L)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); }
public void test1480() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1480"); java.lang.Boolean[] booleanArray4 = new java.lang.Boolean[] { true, true, true, true }; boolean[] booleanArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray4); java.lang.Boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4); java.lang.Boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray7); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray7); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray9, "{-1,1,0,100,0}"); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray9, true); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true, true, true, true]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[true, true, true, true]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean[]" + "'", str11, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[true, true, true, true, true]"); }
public void test1481() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1481"); short[] shortArray2 = new short[] { (byte) 0, (byte) 1 }; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray2, (short) 0); short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray2); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray2); java.lang.Class<?> wildcardClass7 = null; java.lang.Class[] classArray9 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; wildcardClassArray10[0] = wildcardClass7; java.lang.Class<?>[] wildcardClassArray13 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray10); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray14); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray6, (java.lang.Object) wildcardClassArray15); java.lang.Class<?> wildcardClass17 = null; java.lang.Class[] classArray19 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[]) classArray19; wildcardClassArray20[0] = wildcardClass17; java.lang.Class<?>[] wildcardClassArray23 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20); java.lang.String str24 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray23); long[] longArray27 = new long[] { 10L, (byte) 10 }; long[] longArray30 = org.apache.commons.lang3.ArrayUtils.subarray(longArray27, (int) (short) 0, (int) ' '); long[] longArray33 = org.apache.commons.lang3.ArrayUtils.add(longArray27, (int) (byte) 0, (long) (short) 100); long[] longArray36 = new long[] { 10L, (byte) 10 }; long[] longArray39 = org.apache.commons.lang3.ArrayUtils.subarray(longArray36, (int) (short) 0, (int) ' '); java.lang.Long[] longArray45 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray47 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray45, (long) 1); long[] longArray48 = org.apache.commons.lang3.ArrayUtils.addAll(longArray39, longArray47); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(longArray47); long[] longArray50 = org.apache.commons.lang3.ArrayUtils.addAll(longArray27, longArray47); long[] longArray52 = org.apache.commons.lang3.ArrayUtils.add(longArray47, (long) (byte) 1); int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray52, (long) '#', 0); long[] longArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray52, (long) 1); long[] longArray58 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray57); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray23, (java.lang.Object) longArray57); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray15, wildcardClassArray23, true); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[0, 1]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[0, 1]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(classArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{<null>}" + "'", str24, "{<null>}"); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[10, 10]"); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[10, 10]"); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray33), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[10, 10]"); org.junit.Assert.assertNotNull(longArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[10, 10]"); org.junit.Assert.assertNotNull(longArray45); org.junit.Assert.assertNotNull(longArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(longArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[-1, 1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertNotNull(longArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertNotNull(longArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[-1, 0, 100, 0, 1]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); }
public void test1482() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1482"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, (double) (byte) 100, (double) (-1L)); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); }
public void test1483() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1483"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray4); double[] doubleArray11 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray11); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray12, "{1,0,-1,100}"); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray12); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray4, doubleArray12); int int20 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray4, (double) 'a', (int) (byte) -1, (double) 100); java.lang.Double[] doubleArray27 = new java.lang.Double[] { 1.0d, 0.0d, (-1.0d), 0.0d, 100.0d, 10.0d }; java.lang.Double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray27); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray27); double[] doubleArray32 = new double[] { 100L }; boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray30, doubleArray32); double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray32); int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray35, (double) 100.0f); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 0.0, 10.0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[1.0, 0.0, -1.0, 0.0, 100.0, 10.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 10.0, 100.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3); }
public void test1484() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1484"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 0, 0L); long[] longArray20 = new long[] { 10L, (byte) 10 }; long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 0, (int) ' '); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray23); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray23); long[] longArray28 = new long[] { 10L, (byte) 10 }; long[] longArray31 = org.apache.commons.lang3.ArrayUtils.subarray(longArray28, (int) (short) 0, (int) ' '); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.add(longArray28, (int) (byte) 0, (long) (short) 100); java.lang.String str36 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray34, "hi!"); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray34); boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray23, longArray37); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[10, 10]"); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[10, 10]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[10, 10]"); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[100, 10, 10]"); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, ""); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[100, 10, 10]"); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); }
public void test1485() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1485"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.String str7 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray6); java.lang.reflect.Type[][][][][][] typeArray8 = null; short[] shortArray13 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray14 = org.apache.commons.lang3.ArrayUtils.clone(shortArray13); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.add(shortArray13, (short) (byte) 1); java.lang.Short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray16); java.lang.reflect.Type[][][][][][] typeArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray8, (java.lang.Object) shortArray17); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray6, (java.lang.Object[]) shortArray17); java.lang.Class<?> wildcardClass20 = null; java.lang.Class[] classArray22 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; wildcardClassArray23[0] = wildcardClass20; java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Short[] shortArray28 = new java.lang.Short[] {}; short[] shortArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); short[] shortArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray28); java.lang.Class<?>[] wildcardClassArray31 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray28); boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray31, true); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray27, true); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray6); java.lang.Class<?> wildcardClass37 = null; java.lang.Class[] classArray39 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; wildcardClassArray40[0] = wildcardClass37; java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray40); java.lang.String str44 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray43); java.lang.reflect.Type[][][][][][] typeArray45 = null; short[] shortArray50 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray51 = org.apache.commons.lang3.ArrayUtils.clone(shortArray50); short[] shortArray53 = org.apache.commons.lang3.ArrayUtils.add(shortArray50, (short) (byte) 1); java.lang.Short[] shortArray54 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray53); java.lang.reflect.Type[][][][][][] typeArray55 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray45, (java.lang.Object) shortArray54); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray43, (java.lang.Object[]) shortArray54); java.lang.Class<?> wildcardClass57 = null; java.lang.Class[] classArray59 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59; wildcardClassArray60[0] = wildcardClass57; java.lang.Class<?>[] wildcardClassArray63 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray60); java.lang.String str64 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray63); boolean boolean65 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray63); java.lang.Byte[] byteArray69 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray70 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray69); boolean[] booleanArray71 = new boolean[] {}; boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.add(booleanArray71, false); boolean[] booleanArray75 = org.apache.commons.lang3.ArrayUtils.add(booleanArray71, true); boolean[] booleanArray76 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray75); boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.add(booleanArray76, 0, false); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray69, (java.lang.Object) booleanArray76); int int81 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray63, (java.lang.Object) byteArray69); java.lang.Class<?>[] wildcardClassArray82 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray63); boolean boolean83 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray6, wildcardClassArray82); boolean[] booleanArray84 = new boolean[] {}; boolean[] booleanArray86 = org.apache.commons.lang3.ArrayUtils.add(booleanArray84, false); boolean[] booleanArray88 = org.apache.commons.lang3.ArrayUtils.add(booleanArray84, false); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray84); boolean[] booleanArray90 = null; boolean[] booleanArray91 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray84, booleanArray90); boolean boolean92 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) booleanArray91); // The following exception was thrown during execution in test generation try { boolean[] booleanArray95 = org.apache.commons.lang3.ArrayUtils.add(booleanArray91, (int) (short) 100, false); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{<null>}" + "'", str7, "{<null>}"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray14), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertNull(typeArray18); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{<null>}" + "'", str44, "{<null>}"); org.junit.Assert.assertNotNull(shortArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray50), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray54); org.junit.Assert.assertNull(typeArray55); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false); org.junit.Assert.assertNotNull(classArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray63); org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{<null>}" + "'", str64, "{<null>}"); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false); org.junit.Assert.assertNotNull(byteArray69); org.junit.Assert.assertNotNull(byteArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 0, 10]"); org.junit.Assert.assertNotNull(booleanArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray71), "[]"); org.junit.Assert.assertNotNull(booleanArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false]"); org.junit.Assert.assertNotNull(booleanArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray75), "[true]"); org.junit.Assert.assertNotNull(booleanArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray76), "[true]"); org.junit.Assert.assertNotNull(booleanArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, true]"); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray82); org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false); org.junit.Assert.assertNotNull(booleanArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray84), "[]"); org.junit.Assert.assertNotNull(booleanArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray86), "[false]"); org.junit.Assert.assertNotNull(booleanArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray88), "[false]"); org.junit.Assert.assertNotNull(booleanArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray91), "[]"); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false); }
public void test1486() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1486"); java.lang.Character[] charArray2 = new java.lang.Character[] { ' ', 'a' }; char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray2, '4'); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray2); java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray2); char[] charArray14 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray17 = org.apache.commons.lang3.ArrayUtils.subarray(charArray14, (int) (short) 1, (int) (short) 0); char[] charArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray14); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray14); char[] charArray21 = org.apache.commons.lang3.ArrayUtils.add(charArray14, '4'); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray21, '4', 0); java.lang.Character[] charArray25 = org.apache.commons.lang3.ArrayUtils.toObject(charArray21); char[] charArray26 = org.apache.commons.lang3.ArrayUtils.addAll(charArray7, charArray21); char[] charArray29 = org.apache.commons.lang3.ArrayUtils.add(charArray7, 0, '#'); org.apache.commons.lang3.ArrayUtils.reverse(charArray7); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray7, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), " a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), " a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[ , a]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), " a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), " a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[ , a]"); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray14), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray14), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray14), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray17); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray17), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray17), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray17), "[]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4, a, , #, #]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[a, 4, a, , #, #, 4]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a a4a ##4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a a4a ##4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, , a, 4, a, , #, #, 4]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, a, ]"); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, ""); }
public void test1487() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1487"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); org.apache.commons.lang3.ArrayUtils.reverse(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray8, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); }
public void test1488() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1488"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean24, "{0,100,10}"); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Boolean" + "'", str26, "Boolean"); }
public void test1489() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1489"); byte[] byteArray4 = new byte[] { (byte) 10, (byte) 10, (byte) 10, (byte) 10 }; int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 0, (int) (byte) -1); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray4, (byte) 0, 10); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) int10, "{-1,1,0,100,0}"); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[10, 10, 10, 10]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Integer" + "'", str12, "Integer"); }
public void test1490() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1490"); java.lang.Integer[] intArray4 = new java.lang.Integer[] { 100, 0, 10, 100 }; int[] intArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray4, (int) (short) 10); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray4); java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray4); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[100, 0, 10, 100]"); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(intArray8); }
public void test1491() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1491"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = null; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = org.apache.commons.lang3.ArrayUtils.clone(arrayUtilsArray1); boolean[] booleanArray3 = new boolean[] {}; boolean[] booleanArray7 = new boolean[] { true, true, false }; boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray3, booleanArray7); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, true); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) arrayUtilsArray1, (java.lang.Object) booleanArray3, 10); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) arrayUtilsArray1, "double[][][][]"); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[true, true, false]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.apache.commons.lang3" + "'", str16, "org.apache.commons.lang3"); }
public void test1492() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1492"); java.lang.Byte[] byteArray3 = new java.lang.Byte[] { (byte) 10, (byte) 0, (byte) 10 }; byte[] byteArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray3); java.lang.Byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray4); java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray5); org.junit.Assert.assertNotNull(byteArray3); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[10, 0, 10]"); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); }
public void test1493() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1493"); java.lang.Class<?> wildcardClass0 = null; java.lang.Class[] classArray2 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray3 = (java.lang.Class<?>[]) classArray2; wildcardClassArray3[0] = wildcardClass0; java.lang.Class<?>[] wildcardClassArray6 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray3); java.lang.Object obj7 = null; int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray6, obj7); java.lang.Float[] floatArray10 = new java.lang.Float[] { 100.0f }; java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray10); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray12); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray6, (java.lang.Object) floatArray12); float[] floatArray18 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray18, (float) 0); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray18, (-1.0f), (int) (byte) 10); float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.remove(floatArray18, 1); float[] floatArray26 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray12, floatArray25); float[] floatArray31 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray32 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray31); float[] floatArray36 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray36, (float) 0); float[] floatArray39 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray31, floatArray38); java.lang.Float[] floatArray40 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray38); float[] floatArray41 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray40); java.lang.Float[] floatArray42 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray41); float[] floatArray44 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray42, (float) (byte) 100); float[] floatArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray42); int int47 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray45, (float) 1L); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray45); org.junit.Assert.assertNotNull(classArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(floatArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray18), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[100.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray31), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray32); org.junit.Assert.assertNotNull(floatArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray36), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray38), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray39), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertNotNull(floatArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray41), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray42); org.junit.Assert.assertNotNull(floatArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray44), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[10.0, -1.0]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false); }
public void test1494() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1494"); double[] doubleArray1 = new double[] { 100 }; int int4 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray1, (double) 0L, (double) 1.0f); double[] doubleArray6 = new double[] { 100L }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray6); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray6, (double) 100.0f); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray1, doubleArray9); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray9, (double) (byte) -1, (int) (byte) 0); double[] doubleArray17 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray18, "{1,0,-1,100}"); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray18, 0.0d, (double) 10.0f); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray9, doubleArray18); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray9); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray9, (double) (-1L)); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) '4'); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[100.0]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[100.0]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); }
public void test1495() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1495"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class<?> wildcardClass3 = null; java.lang.Class[] classArray5 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray6 = (java.lang.Class<?>[]) classArray5; wildcardClassArray6[0] = wildcardClass3; java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray6); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) wildcardClassArray9); java.lang.reflect.Type[][][][][][] typeArray11 = null; short[] shortArray16 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray17 = org.apache.commons.lang3.ArrayUtils.clone(shortArray16); short[] shortArray19 = org.apache.commons.lang3.ArrayUtils.add(shortArray16, (short) (byte) 1); java.lang.Short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray19); java.lang.reflect.Type[][][][][][] typeArray21 = org.apache.commons.lang3.ArrayUtils.removeElement(typeArray11, (java.lang.Object) shortArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) wildcardClassArray9, (java.lang.Object[]) shortArray20); java.lang.Class<?> wildcardClass23 = null; java.lang.Class[] classArray25 = new java.lang.Class[1]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; wildcardClassArray26[0] = wildcardClass23; java.lang.Class<?>[] wildcardClassArray29 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray30 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Short[] shortArray31 = new java.lang.Short[] {}; short[] shortArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); short[] shortArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray31); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray31); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray30, wildcardClassArray34, true); boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray9, wildcardClassArray30, true); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray9, false); java.lang.Class<?>[] wildcardClassArray41 = null; boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray41); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray5); org.junit.Assert.assertNotNull(wildcardClassArray6); org.junit.Assert.assertNotNull(wildcardClassArray9); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{<null>}" + "'", str10, "{<null>}"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray17), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray19), "[1, 0, -1, 100, 1]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertNull(typeArray21); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray32), "[]"); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray33), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); }
public void test1496() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1496"); float[] floatArray4 = new float[] { 'a', 10.0f, (byte) 1, 100.0f }; java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray4); float[] floatArray9 = new float[] { (short) 10, (-1L), 0L }; float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray9, (float) 0); float[] floatArray12 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray4, floatArray11); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray12); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains(floatArray12, (float) 100); float[] floatArray16 = org.apache.commons.lang3.ArrayUtils.clone(floatArray12); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray12, "10"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[97.0, 10.0, 1.0, 100.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray9), "[10.0, -1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[10.0, -1.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray12), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(floatArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[97.0, 10.0, 1.0, 100.0, 10.0, -1.0]"); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, ""); }
public void test1497() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1497"); short[] shortArray4 = new short[] { (byte) 1, (short) 0, (byte) -1, (byte) 100 }; short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.clone(shortArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isEmpty(shortArray5); org.apache.commons.lang3.ArrayUtils.reverse(shortArray5); short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.remove(shortArray8, (int) (byte) 0); short[] shortArray15 = new short[] { (byte) 0, (short) 1, (short) 0, (short) -1 }; short[] shortArray16 = null; boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray15, shortArray16); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray15, (short) (byte) 10); short[] shortArray20 = org.apache.commons.lang3.ArrayUtils.clone(shortArray15); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isSameLength(shortArray8, shortArray20); double[] doubleArray24 = new double[] { 100.0f, (short) 100 }; double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray24, 0); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray24); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray24, (int) '4', (int) '#'); double[] doubleArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray24, (double) 100); java.lang.String str35 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray24, "{10,10,100}"); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray24, (-1.0d), (double) 100); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) boolean21, (java.lang.Object) doubleArray24); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[1, 0, -1, 100]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray5), "[100, -1, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray8), "[100, -1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[-1, 0, 1]"); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[0, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 1, 0, -1]"); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 100.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[]"); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0]"); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, ""); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); }
public void test1498() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1498"); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray0 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray1 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray0, arrayUtilsArray1, arrayUtilsArray2 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray4 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray5 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray6 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray7 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray4, arrayUtilsArray5, arrayUtilsArray6 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray8 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray9 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray10 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray11 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray8, arrayUtilsArray9, arrayUtilsArray10 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray12 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray13 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray15 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray12, arrayUtilsArray13, arrayUtilsArray14 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray16 = new org.apache.commons.lang3.ArrayUtils[][][] { arrayUtilsArray3, arrayUtilsArray7, arrayUtilsArray11, arrayUtilsArray15 }; org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray17 = new org.apache.commons.lang3.ArrayUtils[] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray18 = new org.apache.commons.lang3.ArrayUtils[][] { arrayUtilsArray17 }; org.apache.commons.lang3.ArrayUtils[][][] arrayUtilsArray19 = org.apache.commons.lang3.ArrayUtils.add(arrayUtilsArray16, arrayUtilsArray18); char[] charArray26 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray26, (int) (short) 1, (int) (short) 0); char[] charArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray26); char[] charArray33 = org.apache.commons.lang3.ArrayUtils.subarray(charArray26, (int) (byte) 0, (int) (short) 0); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.contains(charArray33, '#'); org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray36 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray18, (java.lang.Object) '#'); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray18); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) arrayUtilsArray18, "{10,100,0}"); org.junit.Assert.assertNotNull(arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(arrayUtilsArray4); org.junit.Assert.assertNotNull(arrayUtilsArray5); org.junit.Assert.assertNotNull(arrayUtilsArray6); org.junit.Assert.assertNotNull(arrayUtilsArray7); org.junit.Assert.assertNotNull(arrayUtilsArray8); org.junit.Assert.assertNotNull(arrayUtilsArray9); org.junit.Assert.assertNotNull(arrayUtilsArray10); org.junit.Assert.assertNotNull(arrayUtilsArray11); org.junit.Assert.assertNotNull(arrayUtilsArray12); org.junit.Assert.assertNotNull(arrayUtilsArray13); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertNotNull(arrayUtilsArray15); org.junit.Assert.assertNotNull(arrayUtilsArray16); org.junit.Assert.assertNotNull(arrayUtilsArray17); org.junit.Assert.assertNotNull(arrayUtilsArray18); org.junit.Assert.assertNotNull(arrayUtilsArray19); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray33); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray33), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray33), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray33), "[]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false); org.junit.Assert.assertNotNull(arrayUtilsArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.commons.lang3" + "'", str39, "org.apache.commons.lang3"); }
public void test1499() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1499"); long[] longArray2 = new long[] { 10L, (byte) 10 }; long[] longArray5 = org.apache.commons.lang3.ArrayUtils.subarray(longArray2, (int) (short) 0, (int) ' '); java.lang.Long[] longArray11 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray11, (long) 1); long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray5, longArray13); long[] longArray17 = org.apache.commons.lang3.ArrayUtils.add(longArray14, 0, 0L); long[] longArray20 = new long[] { 10L, (byte) 10 }; long[] longArray23 = org.apache.commons.lang3.ArrayUtils.subarray(longArray20, (int) (short) 0, (int) ' '); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray17, longArray23); java.lang.Long[] longArray25 = org.apache.commons.lang3.ArrayUtils.toObject(longArray17); long[] longArray26 = null; long[] longArray29 = new long[] { 10L, (byte) 10 }; long[] longArray32 = org.apache.commons.lang3.ArrayUtils.subarray(longArray29, (int) (short) 0, (int) ' '); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.add(longArray29, (int) (byte) 0, (long) (short) 100); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.add(longArray29, (long) 100); char[] charArray44 = new char[] { 'a', '4', 'a', ' ', '#', '#' }; char[] charArray47 = org.apache.commons.lang3.ArrayUtils.subarray(charArray44, (int) (short) 1, (int) (short) 0); char[] charArray48 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray44); char[] charArray51 = org.apache.commons.lang3.ArrayUtils.subarray(charArray44, (int) (byte) 0, (int) (short) 0); boolean boolean52 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray29, (java.lang.Object) (byte) 0); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray26, longArray29); long[] longArray54 = org.apache.commons.lang3.ArrayUtils.addAll(longArray17, longArray29); long[] longArray57 = new long[] { 10L, (byte) 10 }; long[] longArray60 = org.apache.commons.lang3.ArrayUtils.subarray(longArray57, (int) (short) 0, (int) ' '); java.lang.Long[] longArray66 = new java.lang.Long[] { (-1L), 1L, 0L, 100L, 0L }; long[] longArray68 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray66, (long) 1); long[] longArray69 = org.apache.commons.lang3.ArrayUtils.addAll(longArray60, longArray68); long[] longArray72 = new long[] { 10L, (byte) 10 }; long[] longArray75 = org.apache.commons.lang3.ArrayUtils.subarray(longArray72, (int) (short) 0, (int) ' '); long[] longArray76 = org.apache.commons.lang3.ArrayUtils.addAll(longArray68, longArray72); long[] longArray79 = org.apache.commons.lang3.ArrayUtils.subarray(longArray68, 0, (int) (byte) 10); long[] longArray80 = org.apache.commons.lang3.ArrayUtils.addAll(longArray29, longArray79); java.lang.String str82 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray29, "{0,100,10}"); int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray29, (long) '4', 0); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray2), "[10, 10]"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[10, 10]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray17), "[0, 10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[10, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[10, 10]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertNotNull(longArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray29), "[10, 10]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray32), "[10, 10]"); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[100, 10, 10]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[10, 10, 100]"); org.junit.Assert.assertNotNull(charArray44); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray44), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray44), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray44), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray47); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray47), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray47), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray47), "[]"); org.junit.Assert.assertNotNull(charArray48); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray48), "a4a ##"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray48), "a4a ##"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray48), "[a, 4, a, , #, #]"); org.junit.Assert.assertNotNull(charArray51); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray51), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray51), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray51), "[]"); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(longArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray54), "[0, 10, 10, -1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertNotNull(longArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray57), "[10, 10]"); org.junit.Assert.assertNotNull(longArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray60), "[10, 10]"); org.junit.Assert.assertNotNull(longArray66); org.junit.Assert.assertNotNull(longArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray68), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray69), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[10, 10]"); org.junit.Assert.assertNotNull(longArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray75), "[10, 10]"); org.junit.Assert.assertNotNull(longArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray76), "[-1, 1, 0, 100, 0, 10, 10]"); org.junit.Assert.assertNotNull(longArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray79), "[-1, 1, 0, 100, 0]"); org.junit.Assert.assertNotNull(longArray80); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray80), "[10, 10, -1, 1, 0, 100, 0]"); org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, ""); org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1)); }
public void test1500() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest2.test1500"); double[] doubleArray3 = new double[] { (byte) 10, (short) 0, 0 }; double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray4, "{1,0,-1,100}"); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray4, 0.0d, (double) 10.0f); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray4, 10, (int) (byte) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray4, (double) (byte) 10); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, ""); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[]"); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0]"); }
public void test0001() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0001"); java.lang.Object obj0 = null; int int1 = org.apache.commons.lang3.ArrayUtils.getLength(obj0); org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0); }
public void test0002() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0002"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("hi!"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: hi!"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0003() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0003"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("boolean[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "boolean[]" + "'", str1, "boolean[]"); }
public void test0004() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0004"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass(""); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: "); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0005() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0005"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: "); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0006() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0006"); org.apache.commons.lang3.ClassUtils classUtils0 = new org.apache.commons.lang3.ClassUtils(); }
public void test0007() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0007"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(""); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0008() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0008"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) 'a', ""); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.lang" + "'", str2, "java.lang"); }
public void test0009() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0009"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("hi!"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "hi!" + "'", str1, "hi!"); }
public void test0010() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0010"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (byte) -1, ""); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Byte" + "'", str2, "Byte"); }
public void test0011() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0011"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("java.lang"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "java" + "'", str1, "java"); }
public void test0012() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0012"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 100.0d, "java.lang"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Double" + "'", str2, "Double"); }
public void test0013() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0013"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("boolean[]", true); org.junit.Assert.assertNotNull(wildcardClass2); }
public void test0014() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0014"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "hi!", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: hi!"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0015() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0015"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) "Byte", "Byte"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "String" + "'", str2, "String"); }
public void test0016() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0016"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); // The following exception was thrown during execution in test generation try { java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.Class<?>[]) classArray1, (int) (short) 10); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); }
public void test0017() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0017"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Byte", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Byte"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0018() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0018"); java.util.List<java.lang.String> strList0 = null; java.util.List<java.lang.Class<?>> wildcardClassList1 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(strList0); org.junit.Assert.assertNull(wildcardClassList1); }
public void test0019() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0019"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?> wildcardClass17 = wildcardClassArray13.getClass(); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClass17); }
public void test0020() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0020"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray9); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false); }
public void test0021() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0021"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class<?> wildcardClass8 = classArray1.getClass(); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClass8); }
public void test0022() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0022"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("hi!"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0023() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0023"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "boolean[]", false); org.junit.Assert.assertNotNull(wildcardClass3); }
public void test0024() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0024"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "$", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: $"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0025() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0025"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "java.lang", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: java/lang"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0026() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0026"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName(""); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0027() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0027"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); }
public void test0028() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0028"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{false,false,false}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0029() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0029"); short[] shortArray2 = new short[] { (short) 1, (short) 10 }; short[] shortArray6 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray2, shortArray6); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.remove(shortArray7, 4); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray7, (short) 10, 3); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) (short) 10, "java"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 10, -1, 1]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "java.lang" + "'", str14, "java.lang"); }
public void test0030() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0030"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); // The following exception was thrown during execution in test generation try { java.lang.reflect.GenericDeclaration[] genericDeclarationArray19 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.reflect.GenericDeclaration[]) wildcardClassArray5, (int) (short) 0); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); }
public void test0031() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0031"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Byte"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Byte"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0032() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0032"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) ' ', "Byte"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Character" + "'", str2, "Character"); }
public void test0033() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0033"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("String", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: String"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0034() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0034"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{false,false,false}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0035() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0035"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0036() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0036"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {class[Ljava/lang/Class;,class[Z,class[Z,class[Z,class[Z}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0037() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0037"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Double"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Double"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0038() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0038"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Byte"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Byte"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0039() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0039"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("Byte"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0040() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0040"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); boolean boolean21 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray15); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); }
public void test0041() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0041"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0042() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0042"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("true"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "true" + "'", str1, "true"); }
public void test0043() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0043"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "$", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: $"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0044() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0044"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("java.lang", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: java.lang"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0045() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0045"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, ""); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, ""); }
public void test0046() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0046"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("."); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0047() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0047"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("boolean[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0048() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0048"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {class[Ljava/lang/Class;,class[Z,class[Z,class[Z,class[Z}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0049() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0049"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); java.lang.Class<?> wildcardClass25 = doubleArray20.getClass(); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(wildcardClass25); }
public void test0050() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0050"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName(obj0, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}" + "'", str2, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); }
public void test0051() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0051"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) 1.0f, "{32,0,0,100}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Float" + "'", str2, "Float"); }
public void test0052() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0052"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6); byte[] byteArray8 = null; boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(byteArray6, byteArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray8, "java"); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java" + "'", str11, "java"); }
public void test0053() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0053"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Float"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Float"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0054() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0054"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "boolean[]"); org.junit.Assert.assertNotNull(wildcardClass2); }
public void test0055() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0055"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); // The following exception was thrown during execution in test generation try { java.lang.Class<?>[] wildcardClassArray16 = org.apache.commons.lang3.ArrayUtils.remove(wildcardClassArray14, (int) (short) 100); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); }
public void test0056() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0056"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray12, "Double"); // The following exception was thrown during execution in test generation try { boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, (int) (byte) 1, false); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "boolean[]" + "'", str16, "boolean[]"); }
public void test0057() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0057"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Character"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Character" + "'", str1, "Character"); }
public void test0058() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0058"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 1.0f); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); }
public void test0059() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0059"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(".", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: /"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0060() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0060"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Double", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Double"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0061() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0061"); short[] shortArray2 = new short[] { (short) 1, (short) 10 }; short[] shortArray6 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray2, shortArray6); short[] shortArray9 = org.apache.commons.lang3.ArrayUtils.remove(shortArray7, 4); short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.add(shortArray9, (short) (byte) 100); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray11); short[] shortArray13 = org.apache.commons.lang3.ArrayUtils.clone(shortArray11); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(shortArray13, (short) 1, (int) ' '); java.lang.String str18 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) ' ', ""); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray9), "[1, 10, -1, 1]"); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[1, 10, -1, 1, 100]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[1, 10, -1, 1, 100]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertEquals("'" + str18 + "' != '" + "java.lang" + "'", str18, "java.lang"); }
public void test0062() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0062"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("java"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0063() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0063"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray61); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); }
public void test0064() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0064"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 0, "0"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Integer" + "'", str10, "Integer"); }
public void test0065() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0065"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) '.'); double[] doubleArray24 = null; boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray23, doubleArray24); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 46.0]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); }
public void test0066() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0066"); java.lang.Float[] floatArray2 = new java.lang.Float[] { (-1.0f), 0.0f }; float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray2, 0.0f); float[] floatArray5 = new float[] {}; float[] floatArray8 = new float[] { (-1.0f), '#' }; boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray8); float[] floatArray10 = new float[] {}; float[] floatArray13 = new float[] { (-1.0f), '#' }; boolean boolean14 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray10, floatArray13); float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray13, 3, 0); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray8, floatArray13); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray4, floatArray13); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) floatArray4, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[-1.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[]"); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]"); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "float[]" + "'", str21, "float[]"); }
public void test0067() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0067"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Class[]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Class"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0068() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0068"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true, (int) (short) -1); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray3, (-1), (int) (short) 10); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, 3, true); boolean[] booleanArray21 = new boolean[] { false, false, false }; boolean[] booleanArray23 = new boolean[] { true }; boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray21, booleanArray23); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray21, true, (int) (short) -1); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray21, true); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray21); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray3, booleanArray30); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean31, ""); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true]"); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Boolean" + "'", str33, "Boolean"); }
public void test0069() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0069"); java.lang.Short[] shortArray0 = new java.lang.Short[] {}; short[] shortArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray0, (short) 0); java.lang.String str4 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (short) 0, "java"); org.junit.Assert.assertNotNull(shortArray0); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[]"); org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Short" + "'", str4, "Short"); }
public void test0070() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0070"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray11); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); }
public void test0071() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0071"); java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) 'a'); java.lang.Object[] objArray3 = org.apache.commons.lang3.ArrayUtils.EMPTY_OBJECT_ARRAY; int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray0, (java.lang.Object) objArray3); java.lang.Class<?>[] wildcardClassArray5 = org.apache.commons.lang3.ClassUtils.toClass(objArray3); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[]"); org.junit.Assert.assertNotNull(objArray3); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray5); }
public void test0072() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0072"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); // The following exception was thrown during execution in test generation try { boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray3, (int) 'a'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); }
public void test0073() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0073"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, true); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false); // The following exception was thrown during execution in test generation try { boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, (int) '$', true); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 36, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); }
public void test0074() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0074"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray6 = org.apache.commons.lang3.ArrayUtils.subarray(charArray2, 5, (int) (byte) 100); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) (byte) 100, "$"); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); }
public void test0075() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0075"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Character"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Character" + "'", str1, "Character"); }
public void test0076() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0076"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("hi!"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "hi!" + "'", str1, "hi!"); }
public void test0077() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0077"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "boolean[]"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "boolean[]" + "'", str2, "boolean[]"); }
public void test0078() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0078"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "-1"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "-1" + "'", str2, "-1"); }
public void test0079() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0079"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, ""); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, ""); }
public void test0080() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0080"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray19); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); }
public void test0081() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0081"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray63); double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray64, (int) '4', 100); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]"); }
public void test0082() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0082"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) (short) -1, (int) '4'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); }
public void test0083() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0083"); long[] longArray3 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(longArray3, (long) 'a'); int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) '4'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray3, (long) (short) 0); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(longArray3, 0L); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean11, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.assertNotNull(longArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Boolean" + "'", str13, "Boolean"); }
public void test0084() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0084"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "true", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: true"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0085() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0085"); java.lang.Integer[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY; java.lang.Object[] objArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) intArray0); java.lang.Class<?>[] wildcardClassArray2 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray0); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(objArray1); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray2); }
public void test0086() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0086"); java.lang.Iterable[] iterableArray1 = new java.lang.Iterable[0]; @SuppressWarnings("unchecked") java.lang.Iterable<java.lang.Class<?>>[] wildcardClassIterableArray2 = (java.lang.Iterable<java.lang.Class<?>>[]) iterableArray1; java.lang.String[] strArray21 = new java.lang.String[] { "true", "String", "", "", "0", "java.lang", "Double", ".", "$", "hi!", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", "{false,false,false}", "Byte", "{32,0,0,100}", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", "hi!", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}" }; java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>(); boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList22); // The following exception was thrown during execution in test generation try { java.lang.Iterable<java.lang.Class<?>>[] wildcardClassIterableArray25 = org.apache.commons.lang3.ArrayUtils.add(wildcardClassIterableArray2, (int) '4', (java.lang.Iterable<java.lang.Class<?>>) wildcardClassList24); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(iterableArray1); org.junit.Assert.assertNotNull(wildcardClassIterableArray2); org.junit.Assert.assertNotNull(strArray21); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(wildcardClassList24); }
public void test0087() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0087"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , " + "'", str1, "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , "); }
public void test0088() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0088"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "$"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: $"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0089() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0089"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray10); java.lang.Character[] charArray13 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray10, '4'); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) int15, "double[]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Integer" + "'", str17, "Integer"); }
public void test0090() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0090"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a', 0, (double) 0L); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 100L); double[] doubleArray14 = new double[] { 10L, 0 }; double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 0, (int) 'a'); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (-1L), 10); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray14); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) 1L); double[] doubleArray26 = new double[] { 10L, 0 }; double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, 0, (int) 'a'); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) (-1L), 10); int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray26); int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) 10); java.lang.String str41 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray26, "hi!"); double[] doubleArray44 = new double[] { 10L, 0 }; double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray44, 0, (int) 'a'); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray26, doubleArray44); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray23, doubleArray26); int int51 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, 10.0d); int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) (byte) -1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0); org.junit.Assert.assertEquals("'" + str41 + "' != '" + "double[]" + "'", str41, "double[]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); }
public void test0091() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0091"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray10, (int) '#', (int) (byte) 1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[]"); }
public void test0092() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0092"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{}" + "'", str1, "{}"); }
public void test0093() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0093"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray3 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray6 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2, intArray3, intArray4, intArray5 }; java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray35 = new java.lang.Integer[][] { intArray13, intArray20, intArray27, intArray34 }; java.lang.Integer[][] intArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray35, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray6, intArray35); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray38); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Class[] classArray42 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; java.lang.Class[] classArray45 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45; boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray42, wildcardClassArray46, false); java.lang.Class[] classArray50 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50; java.lang.Class[] classArray53 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53; boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray54, false); boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray54); java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46); double[] doubleArray61 = new double[] { 10L, 0 }; double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 0, (int) 'a'); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray61, (double) 'a', 0, (double) 0L); boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray61, (double) 100L); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray58, (java.lang.Object) doubleArray61, (int) '.'); java.lang.Object obj73 = null; int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray58, obj73); boolean boolean75 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray58); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isNotEmpty((java.io.Serializable[]) wildcardClassArray40); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(classArray45); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true); org.junit.Assert.assertNotNull(classArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertNotNull(classArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1)); org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true); }
public void test0094() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0094"); java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) 'a'); float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, 0.0f); java.lang.Float[] floatArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0); float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray5, (float) 1L); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray7, (float) 4); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) int9, "java.lang"); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[]"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[]"); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Integer" + "'", str11, "Integer"); }
public void test0095() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0095"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("-1"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "-1" + "'", str1, "-1"); }
public void test0096() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0096"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray9, (double) (byte) 1, (int) 'a', (double) (short) -1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); }
public void test0097() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0097"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 2, (double) '#'); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); }
public void test0098() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0098"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils arrayUtils1 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0, arrayUtils1 }; boolean[] booleanArray6 = new boolean[] { false, false, false }; boolean[] booleanArray8 = new boolean[] { true }; boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray6, ""); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray2, (java.lang.Object) booleanArray13); java.lang.Class<?>[] wildcardClassArray15 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray14); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean[]" + "'", str11, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, true]"); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertNotNull(wildcardClassArray15); }
public void test0099() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0099"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray58); java.lang.String str61 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean59, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Boolean" + "'", str61, "Boolean"); }
public void test0100() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0100"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); double[] doubleArray35 = new double[] { 'a', 10.0d, (byte) 0 }; int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray35, (double) '.', (double) 10); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray35); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray39, (double) (-1L), (double) 100); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); }
public void test0101() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0101"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("Short", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Short"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0102() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0102"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Byte"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Byte" + "'", str1, "Byte"); }
public void test0103() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0103"); java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) 'a'); float[] floatArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, 0.0f); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray0, ""); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[]"); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray4), "[]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); }
public void test0104() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0104"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("boolean[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0105() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0105"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{32,0,0,100}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0106() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0106"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "-1", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: -1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0107() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0107"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 100L, (double) 0L); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); }
public void test0108() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0108"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class[] classArray22 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; java.lang.Class[] classArray25 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray22, wildcardClassArray26, false); java.lang.Class[] classArray30 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; java.lang.Class[] classArray33 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray30, wildcardClassArray34, false); boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray34); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray26); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray26); boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray40, true); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); }
public void test0109() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0109"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.Double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray3); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray10); }
public void test0110() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0110"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("Integer", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Integer"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0111() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0111"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0112() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0112"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("float[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "float[]" + "'", str1, "float[]"); }
public void test0113() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0113"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0114() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0114"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, 0); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray9, doubleArray13); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray9); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, 97.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0, 10.0, 0.0, 10.0, 0.0]"); }
public void test0115() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0115"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray19); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 97.0, 0.0, 10.0, 97.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); }
public void test0116() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0116"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils arrayUtils1 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0, arrayUtils1 }; boolean[] booleanArray6 = new boolean[] { false, false, false }; boolean[] booleanArray8 = new boolean[] { true }; boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray6, ""); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray2, (java.lang.Object) booleanArray13); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray13, false); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean[]" + "'", str11, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, true]"); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, true]"); }
public void test0117() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0117"); int[] intArray4 = new int[] { '#', (byte) 0, 0, (byte) 1 }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) boolean5, "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , "); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[35, 0, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.lang" + "'", str7, "java.lang"); }
public void test0118() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0118"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray19, (double) 3, 0, (double) 100L); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); }
public void test0119() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0119"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("Float"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0120() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0120"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("java.lang"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: java.lang"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0121() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0121"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 3, (int) 'a'); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray15, "java.lang"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, ""); }
public void test0122() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0122"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); // The following exception was thrown during execution in test generation try { double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.add(doubleArray28, 100, (double) 10); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); }
public void test0123() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0123"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java/lang,0,,/,Character,boolean[],Double,Double]"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0124() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0124"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("-1"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0125() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0125"); char[] charArray1 = new char[] { 'a' }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(charArray1, '4'); char[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray1); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.contains(charArray1, '.'); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray1, 'a', (int) (byte) 10); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) (byte) 10, "{32,0,0,100}"); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.lang" + "'", str11, "java.lang"); }
public void test0126() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0126"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, ""); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: "); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0127() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0127"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Integer"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Integer" + "'", str1, "Integer"); }
public void test0128() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0128"); java.util.RandomAccess[][] randomAccessArray0 = null; java.lang.String[] strArray20 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>(); boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.lang.String str24 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strList21); java.util.List<java.lang.Class<?>> wildcardClassList25 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList21); java.util.RandomAccess[] randomAccessArray26 = new java.util.RandomAccess[] { strList21 }; // The following exception was thrown during execution in test generation try { java.util.RandomAccess[][] randomAccessArray27 = org.apache.commons.lang3.ArrayUtils.add(randomAccessArray0, (int) (byte) 100, randomAccessArray26); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(strArray20); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]" + "'", str24, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertNotNull(wildcardClassList25); org.junit.Assert.assertNotNull(randomAccessArray26); }
public void test0129() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0129"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: "); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0130() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0130"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, (int) (short) 10, (int) (short) 10); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 5, (-1.0d)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); }
public void test0131() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0131"); char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; char[] charArray1 = org.apache.commons.lang3.ArrayUtils.clone(charArray0); boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray1); char[] charArray3 = org.apache.commons.lang3.ArrayUtils.clone(charArray1); char[] charArray5 = new char[] { 'a' }; boolean boolean7 = org.apache.commons.lang3.ArrayUtils.contains(charArray5, '4'); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray3, charArray5); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean9, "Float"); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]"); org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a]"); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "java.lang" + "'", str11, "java.lang"); }
public void test0132() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0132"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("java.lang", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: java.lang"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0133() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0133"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); java.lang.Float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13, (float) 'a'); float[] floatArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray13, 0.0f); java.lang.Float[] floatArray18 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray13); float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) 1L); float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray18, (float) (-1)); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) booleanArray12, (java.lang.Object) floatArray18); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray15), "[]"); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[]"); org.junit.Assert.assertNotNull(floatArray18); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]"); org.junit.Assert.assertNotNull(floatArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); }
public void test0134() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0134"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "true", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: true"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0135() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0135"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); double[] doubleArray38 = new double[] { 10L, 0 }; double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, 0, (int) 'a'); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) (-1L), 10); java.lang.Double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray38); double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) (-1L)); int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 4, (double) 'a'); int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, 100.0d, 0, 10.0d); double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray47); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray47); int int59 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 10L, (double) '$'); boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray47, (double) 1L); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2); org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1)); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); }
public void test0136() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0136"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("Character", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Character"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0137() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0137"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray3); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); }
public void test0138() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0138"); boolean[] booleanArray0 = null; org.apache.commons.lang3.ArrayUtils arrayUtils1 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils arrayUtils2 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray3 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils1, arrayUtils2 }; boolean[] booleanArray7 = new boolean[] { false, false, false }; boolean[] booleanArray9 = new boolean[] { true }; boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray7, booleanArray9); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray7, ""); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray7, true); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray3, (java.lang.Object) booleanArray14); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray0, booleanArray14); org.junit.Assert.assertNotNull(arrayUtilsArray3); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[true]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "boolean[]" + "'", str12, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, true]"); org.junit.Assert.assertNotNull(arrayUtilsArray15); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, true]"); }
public void test0139() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0139"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("String"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: String"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0140() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0140"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: "); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0141() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0141"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 3, (int) 'a'); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 97.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); }
public void test0142() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0142"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Integer"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Integer"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0143() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0143"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray11, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true); }
public void test0144() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0144"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) 10.0f); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 97.0, 10.0, 0.0]"); }
public void test0145() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0145"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{false,false,false}", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {false,false,false}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0146() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0146"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java," + "'", str1, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); }
public void test0147() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0147"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) '.', 10); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray2, (double) 10.0f); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 10.0f, ""); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Float" + "'", str19, "Float"); }
public void test0148() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0148"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {class[Ljava/lang/Class;,class[Z,class[Z,class[Z,class[Z}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0149() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0149"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) (short) -1); java.lang.Double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray40); }
public void test0150() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0150"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray58); double[] doubleArray60 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray58); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); }
public void test0151() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0151"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, 0); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 0); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (byte) 1, (int) (short) 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); }
public void test0152() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0152"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (double) 1L); // The following exception was thrown during execution in test generation try { double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray21, (int) (short) 10); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0, 1.0]"); }
public void test0153() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0153"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); int[] intArray14 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray14, 3, 100); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray14); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) (byte) 100); int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) ' ', 1); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray18); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray18, "-1"); boolean boolean27 = org.apache.commons.lang3.ArrayUtils.isEmpty(intArray18); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false); }
public void test0154() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0154"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray12, "Double"); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray12); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray12, true); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "boolean[]" + "'", str16, "boolean[]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); }
public void test0155() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0155"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray27 = new double[] { 10L, 0 }; double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, 0, (int) 'a'); int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) (-1L), 10); int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray27); int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray27, "hi!"); double[] doubleArray45 = new double[] { 10L, 0 }; double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, 0, (int) 'a'); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray45); double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27); double[] doubleArray53 = new double[] { 10L, 0 }; double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray53, 0, (int) 'a'); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray53, (double) (-1L), 10); int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray53, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray53); int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray53, (double) 10); int int70 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray53, (double) 3, 0, 0.0d); boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray50, doubleArray53); boolean boolean72 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray53); boolean boolean75 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray53, (double) 6, (double) (short) 100); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "double[]" + "'", str42, "double[]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false); org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0); org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1)); org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true); org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true); org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true); }
public void test0156() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0156"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.lang.String str22 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strList19); java.lang.String str24 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) str22, "-1"); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]" + "'", str22, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "String" + "'", str24, "String"); }
public void test0157() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0157"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray12); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); }
public void test0158() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0158"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {class[Ljava/lang/Class;,class[Z,class[Z,class[Z,class[Z}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0159() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0159"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, 10.0d, (double) (short) 1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0); }
public void test0160() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0160"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = new double[] { 10L, 0 }; double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, 0, (int) 'a'); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (-1L), 10); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 10); int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 3, 0, 0.0d); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray28); int int50 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, 0.0d, (int) '#', (double) '4'); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1)); }
public void test0161() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0161"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray21 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21; java.lang.Class[] classArray24 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray25 = (java.lang.Class<?>[]) classArray24; boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray21, wildcardClassArray25, false); java.lang.Class[] classArray29 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29; java.lang.Class[] classArray32 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray33, false); boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray25, wildcardClassArray33); boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray19, wildcardClassArray25); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray25); java.lang.Class[] classArray40 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray41 = (java.lang.Class<?>[]) classArray40; java.lang.Class[] classArray43 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43; boolean boolean46 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray40, wildcardClassArray44, false); java.lang.Class[] classArray48 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray49 = (java.lang.Class<?>[]) classArray48; java.lang.Class[] classArray51 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray48, wildcardClassArray52, false); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray44, wildcardClassArray52); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray44); double[] doubleArray59 = new double[] { 10L, 0 }; double[] doubleArray62 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray59, 0, (int) 'a'); int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray59, (double) 'a', 0, (double) 0L); boolean boolean68 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray59, (double) 100L); int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray56, (java.lang.Object) doubleArray59, (int) '.'); java.lang.Object obj71 = null; int int72 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray56, obj71); java.lang.Class<?>[] wildcardClassArray73 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray56); boolean boolean74 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray25, wildcardClassArray56); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(classArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertNotNull(classArray24); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); org.junit.Assert.assertNotNull(classArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(classArray40); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertNotNull(classArray43); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(classArray48); org.junit.Assert.assertNotNull(wildcardClassArray49); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1)); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false); org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1)); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray73); org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true); }
public void test0162() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0162"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 3, (int) 'a'); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); int int18 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) '$', (double) ' '); char[] charArray24 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray26 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray24, '4'); char[] charArray29 = org.apache.commons.lang3.ArrayUtils.subarray(charArray24, 3, 2); java.lang.Character[] charArray30 = org.apache.commons.lang3.ArrayUtils.toObject(charArray29); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray30, 'a'); boolean boolean33 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) ' ', (java.lang.Object) charArray30); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1); org.junit.Assert.assertNotNull(charArray24); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray24), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray24), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray24), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray26); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray26), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray26), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray26), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray29); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[]"); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[]"); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false); }
public void test0163() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0163"); java.lang.Long[] longArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray0); long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0, (long) ' '); long[] longArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray0); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray0, "Float"); org.junit.Assert.assertNotNull(longArray0); org.junit.Assert.assertNotNull(longArray1); org.junit.Assert.assertNotNull(longArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]"); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray4), "[]"); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); }
public void test0164() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0164"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, "Double"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Double" + "'", str2, "Double"); }
public void test0165() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0165"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false, (int) (short) 10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); }
public void test0166() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0166"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, true); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); }
public void test0167() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0167"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true, (int) (short) -1); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray3, true); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray3); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, "java.lang"); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "boolean[]" + "'", str14, "boolean[]"); }
public void test0168() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0168"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, 0, (double) (byte) 10); double[] doubleArray42 = new double[] { 10L, 0 }; double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, 0, (int) 'a'); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (-1L), 10); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray42); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 10); java.lang.String str57 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray42, "hi!"); double[] doubleArray60 = new double[] { 10L, 0 }; double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, 0, (int) 'a'); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray42, doubleArray60); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, 0, (double) (byte) 10); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray68); int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (short) 1); java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39); boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray39); double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39); double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray74); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray10, doubleArray74); double[] doubleArray79 = org.apache.commons.lang3.ArrayUtils.add(doubleArray10, (int) (short) 1, (double) ' '); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertEquals("'" + str57 + "' != '" + "double[]" + "'", str57, "double[]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertNotNull(doubleArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[10.0, 32.0, 0.0]"); }
public void test0169() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0169"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray19, (double) (short) 10, (double) 'a'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); }
public void test0170() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0170"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, (int) (byte) 1, false); byte[] byteArray17 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 0); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray10, (java.lang.Object) boolean19); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray10, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2); }
public void test0171() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0171"); double[] doubleArray0 = null; double[] doubleArray4 = new double[] { 'a', 10.0d, (byte) 0 }; int int7 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, (double) '.', (double) 10); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray4, "java.lang"); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray4, 0.0d, (int) (short) 100); double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray4, doubleArray16); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray20, 2); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray0, doubleArray20); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, ""); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); }
public void test0172() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0172"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("java.lang"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "lang" + "'", str1, "lang"); }
public void test0173() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0173"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "double[]"); org.junit.Assert.assertNotNull(wildcardClass2); }
public void test0174() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0174"); long[] longArray6 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray6, 0L); long[] longArray13 = new long[] { 10L, '#', (-1), 10L }; long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray8, longArray13); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray14); long[] longArray16 = org.apache.commons.lang3.ArrayUtils.clone(longArray14); long[] longArray23 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray25 = org.apache.commons.lang3.ArrayUtils.add(longArray23, 0L); long[] longArray30 = new long[] { 10L, '#', (-1), 10L }; long[] longArray31 = org.apache.commons.lang3.ArrayUtils.addAll(longArray25, longArray30); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(longArray25, (long) 3, (int) (short) 1); long[] longArray41 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray43 = org.apache.commons.lang3.ArrayUtils.add(longArray41, 0L); long[] longArray48 = new long[] { 10L, '#', (-1), 10L }; long[] longArray49 = org.apache.commons.lang3.ArrayUtils.addAll(longArray43, longArray48); long[] longArray50 = org.apache.commons.lang3.ArrayUtils.addAll(longArray25, longArray43); long[] longArray52 = org.apache.commons.lang3.ArrayUtils.add(longArray43, (long) '.'); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray52, (-1L), 10); java.lang.Long[] longArray56 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray58 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray56, (long) (byte) 10); org.apache.commons.lang3.ArrayUtils.reverse(longArray58); boolean boolean61 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray58, (java.lang.Object) 'a'); long[] longArray62 = org.apache.commons.lang3.ArrayUtils.clone(longArray58); long[] longArray63 = org.apache.commons.lang3.ArrayUtils.clone(longArray58); long[] longArray64 = org.apache.commons.lang3.ArrayUtils.clone(longArray63); java.lang.Long[] longArray65 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray67 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray65, (long) (byte) 10); boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray67); boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray63, longArray67); long[] longArray71 = org.apache.commons.lang3.ArrayUtils.removeElement(longArray63, (long) 10); long[] longArray72 = org.apache.commons.lang3.ArrayUtils.addAll(longArray52, longArray71); boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray14, longArray71); java.lang.String str75 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean73, "Double"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray23), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray30), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertNotNull(longArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray50), "[0, 10, 100, 3, 1, 1, 0, 0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[0, 10, 100, 3, 1, 1, 0, 46]"); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertNotNull(longArray56); org.junit.Assert.assertNotNull(longArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray58), "[]"); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); org.junit.Assert.assertNotNull(longArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray62), "[]"); org.junit.Assert.assertNotNull(longArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray63), "[]"); org.junit.Assert.assertNotNull(longArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray64), "[]"); org.junit.Assert.assertNotNull(longArray65); org.junit.Assert.assertNotNull(longArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray67), "[]"); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true); org.junit.Assert.assertNotNull(longArray71); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray71), "[]"); org.junit.Assert.assertNotNull(longArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray72), "[0, 10, 100, 3, 1, 1, 0, 46]"); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertEquals("'" + str75 + "' != '" + "java.lang" + "'", str75, "java.lang"); }
public void test0175() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0175"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Byte"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Byte" + "'", str1, "Byte"); }
public void test0176() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0176"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Short", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Short"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0177() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0177"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{false,false,false}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0178() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0178"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(obj0, "{false,false,false}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{false,false,false}" + "'", str2, "{false,false,false}"); }
public void test0179() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0179"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "0", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0180() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0180"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, 3, (int) 'a'); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) 0L, (int) (short) 10, (double) '#'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2); }
public void test0181() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0181"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray61, 0); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) '.', 10); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) 0, (int) ' '); boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray66); int int86 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray63, (double) 100L); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1)); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1); org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false); org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1)); }
public void test0182() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0182"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("lang"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: lang"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0183() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0183"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray35); int int37 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) wildcardClassArray36); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4); }
public void test0184() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0184"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (-1.0f), (double) 10.0f); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 0.0f, (int) '$', (double) (byte) 0); int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 1L); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1)); }
public void test0185() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0185"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true, (int) (short) -1); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray3, true); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean11, "java.lang"); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "java.lang" + "'", str13, "java.lang"); }
public void test0186() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0186"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: "); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0187() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0187"); long[] longArray6 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray6, 0L); long[] longArray13 = new long[] { 10L, '#', (-1), 10L }; long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray8, longArray13); long[] longArray20 = new long[] { (byte) -1, (byte) -1, (short) 10, (-1), (byte) 100 }; int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray20, (long) (short) -1); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray20); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0); long[] longArray31 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray31); java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray32); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, 0L); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray35); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.addAll(longArray25, longArray36); char[] charArray39 = new char[] { 'a' }; boolean boolean41 = org.apache.commons.lang3.ArrayUtils.contains(charArray39, '4'); char[] charArray42 = org.apache.commons.lang3.ArrayUtils.clone(charArray39); java.lang.Character[] charArray43 = org.apache.commons.lang3.ArrayUtils.toObject(charArray42); char[] charArray45 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray43, '#'); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray36, (java.lang.Object) charArray45); java.lang.String str48 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) boolean46, ""); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1, 10, -1, 100]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, -1, 10, -1, 100, 0]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, -1, 10, -1, 100, 0, -1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(charArray39); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[a]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertNotNull(charArray42); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a]"); org.junit.Assert.assertNotNull(charArray43); org.junit.Assert.assertNotNull(charArray45); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray45), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray45), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray45), "[a]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Boolean" + "'", str48, "Boolean"); }
public void test0188() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0188"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("Boolean[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0189() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0189"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Boolean"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Boolean" + "'", str1, "Boolean"); }
public void test0190() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0190"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , "); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java" + "'", str1, "{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java"); }
public void test0191() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0191"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, (int) (short) 10, (int) (short) 10); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray22); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, 0.0d); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0, 0.0]"); }
public void test0192() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0192"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray6 = org.apache.commons.lang3.ArrayUtils.clone(charArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray5, ""); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4, ]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4, ]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "char[]" + "'", str8, "char[]"); }
public void test0193() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0193"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("0", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0194() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0194"); char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, ' '); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) ' ', (int) (short) 10); java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY; java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray8, "{32,0,0,100}"); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray8); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(charArray0, 'a'); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1)); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); }
public void test0195() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0195"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(".", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: /"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0196() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0196"); java.lang.Character[] charArray4 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray9 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray14 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[][] charArray15 = new java.lang.Character[][] { charArray4, charArray9, charArray14 }; java.lang.Character[] charArray20 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray25 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray30 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[][] charArray31 = new java.lang.Character[][] { charArray20, charArray25, charArray30 }; java.lang.Character[] charArray36 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray41 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray46 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[][] charArray47 = new java.lang.Character[][] { charArray36, charArray41, charArray46 }; java.lang.Character[] charArray52 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray57 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[] charArray62 = new java.lang.Character[] { '#', ' ', ' ', '#' }; java.lang.Character[][] charArray63 = new java.lang.Character[][] { charArray52, charArray57, charArray62 }; java.lang.Character[][][] charArray64 = new java.lang.Character[][][] { charArray15, charArray31, charArray47, charArray63 }; java.lang.Character[][][] charArray67 = org.apache.commons.lang3.ArrayUtils.subarray(charArray64, (int) ' ', 100); java.lang.Class<?>[] wildcardClassArray68 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray64); boolean boolean69 = org.apache.commons.lang3.ArrayUtils.isEmpty((java.lang.Cloneable[][]) charArray64); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertNotNull(charArray14); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertNotNull(charArray25); org.junit.Assert.assertNotNull(charArray30); org.junit.Assert.assertNotNull(charArray31); org.junit.Assert.assertNotNull(charArray36); org.junit.Assert.assertNotNull(charArray41); org.junit.Assert.assertNotNull(charArray46); org.junit.Assert.assertNotNull(charArray47); org.junit.Assert.assertNotNull(charArray52); org.junit.Assert.assertNotNull(charArray57); org.junit.Assert.assertNotNull(charArray62); org.junit.Assert.assertNotNull(charArray63); org.junit.Assert.assertNotNull(charArray64); org.junit.Assert.assertNotNull(charArray67); org.junit.Assert.assertNotNull(wildcardClassArray68); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false); }
public void test0197() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0197"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, true); java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); }
public void test0198() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0198"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("char[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "char[]" + "'", str1, "char[]"); }
public void test0199() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0199"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + ", Character, boolean[], Double, Double][]" + "'", str1, ", Character, boolean[], Double, Double][]"); }
public void test0200() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0200"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, false, 10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); }
public void test0201() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0201"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) 10.0f, (double) (byte) 1); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, 0.0d, (-1), (double) (short) 10); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray15); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray15, 1.0d, (double) 100L); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true); }
public void test0202() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0202"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray19 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[]) classArray19; java.lang.Class[] classArray22 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray19, wildcardClassArray23, false); java.lang.Class[] classArray27 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27; java.lang.Class[] classArray30 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray27, wildcardClassArray31, false); boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray23, wildcardClassArray31); java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); boolean boolean40 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray39); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) wildcardClassArray17); java.lang.Class[] classArray43 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray44 = (java.lang.Class<?>[]) classArray43; java.lang.Class[] classArray46 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46; boolean boolean49 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray43, wildcardClassArray47, false); java.lang.Class[] classArray51 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray52 = (java.lang.Class<?>[]) classArray51; java.lang.Class[] classArray54 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54; boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray51, wildcardClassArray55, false); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray47, wildcardClassArray55); java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray47); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray47); java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray47); java.lang.Class[] classArray63 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray64 = (java.lang.Class<?>[]) classArray63; java.lang.Class[] classArray66 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66; boolean boolean69 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray63, wildcardClassArray67, false); java.lang.Class[] classArray71 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray72 = (java.lang.Class<?>[]) classArray71; java.lang.Class[] classArray74 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74; boolean boolean77 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray71, wildcardClassArray75, false); boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray67, wildcardClassArray75); boolean boolean79 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray61, wildcardClassArray67); java.lang.Class<?>[] wildcardClassArray80 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray67); boolean boolean82 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray17, wildcardClassArray67, false); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(classArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(classArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); org.junit.Assert.assertNotNull(classArray43); org.junit.Assert.assertNotNull(wildcardClassArray44); org.junit.Assert.assertNotNull(classArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(classArray51); org.junit.Assert.assertNotNull(wildcardClassArray52); org.junit.Assert.assertNotNull(classArray54); org.junit.Assert.assertNotNull(wildcardClassArray55); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertNotNull(classArray63); org.junit.Assert.assertNotNull(wildcardClassArray64); org.junit.Assert.assertNotNull(classArray66); org.junit.Assert.assertNotNull(wildcardClassArray67); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true); org.junit.Assert.assertNotNull(classArray71); org.junit.Assert.assertNotNull(wildcardClassArray72); org.junit.Assert.assertNotNull(classArray74); org.junit.Assert.assertNotNull(wildcardClassArray75); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true); org.junit.Assert.assertNotNull(wildcardClassArray80); org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true); }
public void test0203() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0203"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("hi!"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0204() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0204"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14); java.lang.Class<?> wildcardClass16 = doubleArray14.getClass(); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(wildcardClass16); }
public void test0205() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0205"); short[] shortArray6 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray13 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray20 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray27 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[][] shortArray28 = new short[][] { shortArray6, shortArray13, shortArray20, shortArray27 }; short[] shortArray29 = new short[] {}; short[] shortArray30 = new short[] {}; short[] shortArray31 = new short[] {}; short[][] shortArray32 = new short[][] { shortArray29, shortArray30, shortArray31 }; short[][] shortArray33 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray28, shortArray32); long[] longArray40 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray42 = org.apache.commons.lang3.ArrayUtils.add(longArray40, 0L); long[] longArray47 = new long[] { 10L, '#', (-1), 10L }; long[] longArray48 = org.apache.commons.lang3.ArrayUtils.addAll(longArray42, longArray47); long[] longArray49 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray48); long[] longArray52 = org.apache.commons.lang3.ArrayUtils.add(longArray48, 5, (long) 2); short[][] shortArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(shortArray32, (java.lang.Object) 5); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray32); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray13), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray20), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray27), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertNotNull(shortArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray29), "[]"); org.junit.Assert.assertNotNull(shortArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray30), "[]"); org.junit.Assert.assertNotNull(shortArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray31), "[]"); org.junit.Assert.assertNotNull(shortArray32); org.junit.Assert.assertNotNull(shortArray33); org.junit.Assert.assertNotNull(longArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray42), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray48), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray49), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray52), "[0, 10, 100, 3, 1, 2, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(shortArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); }
public void test0206() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0206"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); java.lang.Class<?>[] wildcardClassArray7 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray6); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray7); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(wildcardClassArray7); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test0207() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0207"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); int int13 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (double) '#', 2, (double) (short) 100); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, (double) (byte) 10); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0, 10.0]"); }
public void test0208() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0208"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 100.0d, (int) (byte) 100, (double) 10.0f); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray3, (-1.0d)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); }
public void test0209() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0209"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); boolean boolean63 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) (byte) 100, (double) 10); boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, (double) 6, (double) (byte) 1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false); }
public void test0210() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0210"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Class[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Class[]" + "'", str1, "Class[]"); }
public void test0211() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0211"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); java.lang.Class[] classArray17 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17; java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray21, false); boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray21); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray13); java.lang.Class[] classArray29 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29; java.lang.Class[] classArray32 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray33, false); java.lang.Class[] classArray37 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; java.lang.Class[] classArray40 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray41 = (java.lang.Class<?>[]) classArray40; boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray37, wildcardClassArray41, false); boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray33, wildcardClassArray41); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray33); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33); boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray33); java.lang.String str49 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) boolean47, "{10.0,0.0}"); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(classArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(classArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(classArray40); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Boolean" + "'", str49, "Boolean"); }
public void test0212() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0212"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("Integer"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Integer" + "'", str1, "Integer"); }
public void test0213() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0213"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{32,0,0,100}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {32,0,0,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0214() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0214"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = new double[] { 10L, 0 }; double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, 0, (int) 'a'); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (-1L), 10); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 10); int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 3, 0, 0.0d); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray28); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray28); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); }
public void test0215() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0215"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true, (int) 'a'); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); }
public void test0216() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0216"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 5, (double) (short) 0); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, 0, (double) 100.0f); // The following exception was thrown during execution in test generation try { double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.add(doubleArray31, (int) '4', 1.0d); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 10.0, 0.0]"); }
public void test0217() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0217"); int[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY; java.lang.Integer[] intArray1 = org.apache.commons.lang3.ArrayUtils.toObject(intArray0); int[] intArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1); int[] intArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1, (int) (byte) -1); int[] intArray5 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray1); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray5, "java"); java.lang.Integer[] intArray8 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray0), "[]"); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[]"); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[]"); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, ""); org.junit.Assert.assertNotNull(intArray8); }
public void test0218() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0218"); org.apache.commons.lang3.ArrayUtils arrayUtils0 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils arrayUtils1 = new org.apache.commons.lang3.ArrayUtils(); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray2 = new org.apache.commons.lang3.ArrayUtils[] { arrayUtils0, arrayUtils1 }; boolean[] booleanArray6 = new boolean[] { false, false, false }; boolean[] booleanArray8 = new boolean[] { true }; boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray6, ""); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, true); org.apache.commons.lang3.ArrayUtils[] arrayUtilsArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(arrayUtilsArray2, (java.lang.Object) booleanArray13); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(arrayUtilsArray14); org.junit.Assert.assertNotNull(arrayUtilsArray2); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "boolean[]" + "'", str11, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false, false, true]"); org.junit.Assert.assertNotNull(arrayUtilsArray14); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); }
public void test0219() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0219"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(wildcardClassArray22); }
public void test0220() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0220"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (-1.0f), (double) 10.0f); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 0.0f, (int) '$', (double) (byte) 0); java.lang.Double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertNotNull(doubleArray39); }
public void test0221() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0221"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false, (int) 'a'); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false, 4); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); }
public void test0222() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0222"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a', 0, (double) 0L); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 100L); double[] doubleArray14 = new double[] { 10L, 0 }; double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 0, (int) 'a'); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (-1L), 10); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray14); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) 1L); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) 4, (double) 100.0f); double[] doubleArray29 = new double[] { 10L, 0 }; double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) 'a'); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (-1L), 10); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray29); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) 10); java.lang.String str44 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray29, "hi!"); double[] doubleArray47 = new double[] { 10L, 0 }; double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, 0, (int) 'a'); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray29, doubleArray47); double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray29); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray23, doubleArray29); double[] doubleArray55 = null; double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray54, doubleArray55); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertEquals("'" + str44 + "' != '" + "double[]" + "'", str44, "double[]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0, 10.0, 0.0, 1.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 0.0, 10.0, 0.0, 1.0, 10.0, 0.0]"); }
public void test0223() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0223"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{}" + "'", str1, "{}"); }
public void test0224() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0224"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{10.0,0.0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10.0,0.0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0225() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0225"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java," + "'", str1, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); }
public void test0226() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0226"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "String", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: String"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0227() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0227"); char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; int int2 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray0, ' '); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.subarray(charArray0, (int) ' ', (int) (short) 10); java.lang.Character[] charArray6 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY; java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray6); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray6); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray8, "{32,0,0,100}"); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray0, charArray8); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.contains(charArray0, '$'); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1)); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, ""); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); }
public void test0228() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0228"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("$"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "." + "'", str1, "."); }
public void test0229() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0229"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, (int) (byte) 1, false); byte[] byteArray17 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 0); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray10, (java.lang.Object) boolean19); boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, 0, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]"); }
public void test0230() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0230"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray21, (double) 3); int int29 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, 0.0d, (int) (byte) 10, (double) '#'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1); }
public void test0231() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0231"); double[] doubleArray0 = null; double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, (double) (-1L)); double[] doubleArray6 = new double[] { 'a', 10.0d, (byte) 0 }; int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, (double) '.', (double) 10); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray6, "java.lang"); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, 0.0d, (int) (short) 100); double[] doubleArray18 = new double[] { 'a', 10.0d, (byte) 0 }; int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) '.', (double) 10); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray18); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray18); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); }
public void test0232() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0232"); byte[] byteArray0 = new byte[] {}; byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 0); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray3); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) (byte) 0, ""); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]"); org.junit.Assert.assertNotNull(byteArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, 1]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Byte" + "'", str11, "Byte"); }
public void test0233() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0233"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "."); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: /"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0234() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0234"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); // The following exception was thrown during execution in test generation try { double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray21, (int) (byte) 100); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 5"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); }
public void test0235() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0235"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) wildcardClassArray5); java.lang.Double[] doubleArray20 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray23 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray26 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray29 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray30 = new java.lang.Double[][] { doubleArray20, doubleArray23, doubleArray26, doubleArray29 }; double[] doubleArray34 = new double[] { 'a', 10.0d, (byte) 0 }; int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, (double) '.', (double) 10); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray34, "java.lang"); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray34, 0.0d, (int) (short) 100); double[] doubleArray46 = new double[] { 'a', 10.0d, (byte) 0 }; int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray46, (double) '.', (double) 10); double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray34, doubleArray46); double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray34, (int) (byte) 0); java.lang.Double[][] doubleArray53 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray30, (java.lang.Object) doubleArray34); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray53); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray54); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, ""); org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1)); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1)); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false); }
public void test0236() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0236"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("."); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: /"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0237() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0237"); java.util.RandomAccess[] randomAccessArray0 = null; boolean[] booleanArray4 = new boolean[] { false, false, false }; boolean[] booleanArray6 = new boolean[] { true }; boolean[] booleanArray7 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray4, booleanArray6); java.lang.String str9 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray4, ""); java.lang.String str10 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray4); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray4); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray4, false, (int) 'a'); java.util.RandomAccess[] randomAccessArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(randomAccessArray0, (java.lang.Object) int14); org.junit.Assert.assertNotNull(booleanArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray4), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[true]"); org.junit.Assert.assertNotNull(booleanArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray7), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "boolean[]" + "'", str9, "boolean[]"); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{false,false,false}" + "'", str10, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNull(randomAccessArray15); }
public void test0238() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0238"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java/lang,0,,"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0239() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0239"); java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("float[]"); org.junit.Assert.assertNotNull(wildcardClass1); }
public void test0240() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0240"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray61, 0); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) '.', 10); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) 0, (int) ' '); boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray66); int int87 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray63, (double) '.', (double) (byte) -1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1)); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1); org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false); org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1)); }
public void test0241() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0241"); java.lang.String[] strArray3 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray4 = org.apache.commons.lang3.ArrayUtils.toArray(strArray3); java.lang.Comparable<java.lang.String>[] strComparableArray5 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Comparable<java.lang.String>[]) strArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) strComparableArray5, "lang"); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertNotNull(strComparableArray5); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "String[]" + "'", str7, "String[]"); }
public void test0242() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0242"); java.lang.Object[] objArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_OBJECT_ARRAY; java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ClassUtils.toClass(objArray0); org.junit.Assert.assertNotNull(objArray0); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray0), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray0), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray1); }
public void test0243() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0243"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a', 0, (double) 0L); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 100L); double[] doubleArray14 = new double[] { 10L, 0 }; double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 0, (int) 'a'); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (-1L), 10); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray14); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) 1L); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) 4, (double) 100.0f); double[] doubleArray29 = new double[] { 10L, 0 }; double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray29, 0, (int) 'a'); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) (-1L), 10); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray29, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray29); int int42 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray29, (double) 10); java.lang.String str44 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray29, "hi!"); double[] doubleArray47 = new double[] { 10L, 0 }; double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray47, 0, (int) 'a'); boolean boolean51 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray29, doubleArray47); double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray29); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray29); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray23, doubleArray29); int int56 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, 0.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0); org.junit.Assert.assertEquals("'" + str44 + "' != '" + "double[]" + "'", str44, "double[]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0, 10.0, 0.0, 1.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int56 + "' != '" + 6 + "'", int56 == 6); }
public void test0244() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0244"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList22 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.lang.Class<?> wildcardClass25 = wildcardClassList24.getClass(); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(wildcardClassList22); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(wildcardClass25); }
public void test0245() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0245"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, true); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray3, false); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true); }
public void test0246() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0246"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Short"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Short"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0247() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0247"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) (-1L), "float[]"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.lang" + "'", str10, "java.lang"); }
public void test0248() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0248"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) 10, (int) '$'); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); }
public void test0249() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0249"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0250() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0250"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false); java.lang.Boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray12); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray15, true); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray17); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray17, false); java.lang.String str22 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) false, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[]"); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false]"); org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Boolean" + "'", str22, "Boolean"); }
public void test0251() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0251"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName(""); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0252() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0252"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, (int) (short) -1, 1); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray27, (double) (byte) 100); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0]"); }
public void test0253() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0253"); int[] intArray4 = new int[] { '#', (byte) 0, 0, (byte) 1 }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray4); int[] intArray8 = org.apache.commons.lang3.ArrayUtils.subarray(intArray4, 0, (-1)); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray8); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray8, "short[]"); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray8, 10, (int) '.'); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[35, 0, 0, 1]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); }
public void test0254() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0254"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("lang"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0255() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0255"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) (short) 100, (double) (byte) 0); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray20, 0.0d); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[]"); }
public void test0256() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0256"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); // The following exception was thrown during execution in test generation try { double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 100, (double) 2); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); }
public void test0257() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0257"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false, (int) 'a'); int int15 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); }
public void test0258() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0258"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean3 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray1, true); java.lang.Class<?>[] wildcardClassArray4 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray0); org.junit.Assert.assertNotNull(wildcardClassArray1); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); org.junit.Assert.assertNull(wildcardClassArray4); }
public void test0259() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0259"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, 0); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray9, doubleArray13); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray9); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[97.0, 10.0, 0.0]"); }
public void test0260() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0260"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray3 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2 }; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] { intArray4, intArray5, intArray6 }; java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray11 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10 }; java.lang.Integer[][][][] intArray12 = new java.lang.Integer[][][][] { intArray3, intArray7, intArray11 }; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray14 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray15 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray16 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray17 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray18 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray19 = new java.lang.Integer[][][] { intArray13, intArray14, intArray15, intArray16, intArray17, intArray18 }; java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray48 = new java.lang.Integer[][] { intArray26, intArray33, intArray40, intArray47 }; java.lang.Integer[][] intArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray48, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray19, intArray48); java.lang.Integer[][][][] intArray52 = org.apache.commons.lang3.ArrayUtils.add(intArray12, intArray19); double[] doubleArray56 = new double[] { 'a', 10.0d, (byte) 0 }; int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray56, (double) '.', (double) 10); java.lang.String str61 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray56, "java.lang"); int int64 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray56, 0.0d, (int) (short) 100); double[] doubleArray68 = new double[] { 'a', 10.0d, (byte) 0 }; int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray68, (double) '.', (double) 10); double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray56, doubleArray68); java.lang.Double[] doubleArray73 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray68); java.lang.Double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray73); double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray74); double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray75); java.lang.Integer[][][] intArray77 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray19, (java.lang.Object) doubleArray76); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1)); org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, ""); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray73); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(intArray77); }
public void test0261() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0261"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) (-1L)); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 4, (double) 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 10, (double) (byte) 10); double[] doubleArray21 = new double[] { 'a', 10.0d, (byte) 0 }; int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) '.', (double) 10); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray21, "java.lang"); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, 0.0d, (int) (short) 100); double[] doubleArray33 = new double[] { 'a', 10.0d, (byte) 0 }; int int36 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) '.', (double) 10); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray21, doubleArray33); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray21, (int) (byte) 0); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray39); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray39); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray39, (double) 3); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray11, doubleArray39); int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 100, 100, (double) (byte) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1)); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); }
public void test0262() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0262"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?>[] wildcardClassArray1 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray0); org.junit.Assert.assertNull(wildcardClassArray1); }
public void test0263() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0263"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (double) (-1)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0, -1.0]"); }
public void test0264() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0264"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0.0d); java.lang.String str24 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) 0.0d); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0, 10.0, 0.0, 0.0]"); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "0.0" + "'", str24, "0.0"); }
public void test0265() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0265"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); boolean[] booleanArray7 = null; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray7); boolean[] booleanArray12 = new boolean[] { false, false, false }; boolean[] booleanArray14 = new boolean[] { true }; boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray14); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray12, true, (int) (short) -1); boolean[] booleanArray20 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, false); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.add(booleanArray12, false); boolean[] booleanArray26 = new boolean[] { false, false, false }; boolean[] booleanArray28 = new boolean[] { true }; boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray26, booleanArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray26, ""); java.lang.String str32 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray26); boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray26); boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray33); boolean[] booleanArray37 = org.apache.commons.lang3.ArrayUtils.add(booleanArray33, (int) (byte) 1, false); boolean[] booleanArray38 = null; boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray37, booleanArray38); boolean[] booleanArray40 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray39); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray12); boolean[] booleanArray45 = new boolean[] { false, false, false }; boolean[] booleanArray47 = new boolean[] { true }; boolean[] booleanArray48 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray45, booleanArray47); java.lang.String str50 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray45, ""); java.lang.String str51 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray45); boolean[] booleanArray52 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray45); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray52); boolean[] booleanArray56 = org.apache.commons.lang3.ArrayUtils.add(booleanArray52, (int) (byte) 1, false); byte[] byteArray59 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean61 = org.apache.commons.lang3.ArrayUtils.contains(byteArray59, (byte) 0); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray52, (java.lang.Object) boolean61); boolean boolean63 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray8, booleanArray52); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, false, false, true]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[true]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[true]"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "boolean[]" + "'", str31, "boolean[]"); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{false,false,false}" + "'", str32, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(booleanArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray37), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray40), "[false, false, false, false, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertNotNull(booleanArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray45), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true]"); org.junit.Assert.assertNotNull(booleanArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray48), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str50 + "' != '" + "boolean[]" + "'", str50, "boolean[]"); org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{false,false,false}" + "'", str51, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray52), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(booleanArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray56), "[false, false, false, false]"); org.junit.Assert.assertNotNull(byteArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false); }
public void test0266() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0266"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray13); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.add(doubleArray36, 0, (double) (byte) 10); double[] doubleArray42 = new double[] { 10L, 0 }; double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray42, 0, (int) 'a'); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) (-1L), 10); int int52 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray42, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray42); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray42, (double) 10); java.lang.String str57 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray42, "hi!"); double[] doubleArray60 = new double[] { 10L, 0 }; double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray60, 0, (int) 'a'); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray42, doubleArray60); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray42); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.add(doubleArray65, 0, (double) (byte) 10); double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray39, doubleArray68); int int71 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray39, (double) (short) 1); java.lang.Double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray39); boolean boolean73 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray39); double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray39); double[] doubleArray75 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray74); boolean boolean76 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray10, doubleArray74); boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray74, (double) 0.0f); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0); org.junit.Assert.assertEquals("'" + str57 + "' != '" + "double[]" + "'", str57, "double[]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1)); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray75); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); }
public void test0267() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0267"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false); boolean[] booleanArray15 = new boolean[] { false, false, false }; boolean[] booleanArray17 = new boolean[] { true }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray15, ""); java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray15); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray15); boolean[] booleanArray25 = null; boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray3, booleanArray25); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean[]" + "'", str20, "boolean[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{false,false,false}" + "'", str21, "{false,false,false}"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); }
public void test0268() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0268"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java," + "'", str1, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); }
public void test0269() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0269"); org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray0 = new org.apache.commons.lang3.ArrayUtils[][] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray1 = org.apache.commons.lang3.ArrayUtils.toArray(arrayUtilsArray0); java.lang.Class<?>[] wildcardClassArray2 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray0); java.lang.Class<?>[] wildcardClassArray3 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(wildcardClassArray3); }
public void test0270() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0270"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java/lang,0,,/,Character,boolean[],Double,Double]"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0271() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0271"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, 0.0d, (double) 4); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); }
public void test0272() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0272"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{32,0,0,100}", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {32,0,0,100}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0273() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0273"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 1, (-1)); double[] doubleArray32 = new double[] { 10L, 0 }; double[] doubleArray35 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray32, 0, (int) 'a'); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray32, (double) (-1L), 10); int int42 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray32, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray32); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray32); int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) (short) 1, (int) (short) 10); int int49 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray44, (double) ' '); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1)); }
public void test0274() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0274"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0275() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0275"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) (-1L)); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 4, (double) 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 10, (double) (byte) 10); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (short) 0, (double) '#'); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 2); double[] doubleArray25 = new double[] { 10L, 0 }; double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, 0, (int) 'a'); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (-1L), 10); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10); java.lang.String str40 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray25, "hi!"); double[] doubleArray43 = new double[] { 10L, 0 }; double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, 0, (int) 'a'); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray43); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25); double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, 0, (double) (byte) 10); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (-1), 5); int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) (short) 10, (double) 1.0f); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, 0.0d, (int) (short) 1, (double) 'a'); int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) ' ', 10); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray54); double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray65, (double) 3); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double[]" + "'", str40, "double[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, -1.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 0.0, -1.0, 10.0, 10.0, 0.0]"); }
public void test0276() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0276"); char[][] charArray0 = new char[][] {}; char[][] charArray1 = org.apache.commons.lang3.ArrayUtils.clone(charArray0); java.lang.Object obj2 = null; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) charArray1, obj2); char[][] charArray4 = org.apache.commons.lang3.ArrayUtils.toArray(charArray1); char[] charArray5 = null; char[][] charArray6 = org.apache.commons.lang3.ArrayUtils.add(charArray1, charArray5); char[][] charArray9 = org.apache.commons.lang3.ArrayUtils.subarray(charArray6, (int) (byte) 0, (int) (byte) -1); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray6, "float[]"); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); }
public void test0277() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0277"); java.lang.Class<?>[] wildcardClassArray0 = null; java.lang.Class<?>[] wildcardClassArray1 = null; boolean boolean3 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray0, wildcardClassArray1, false); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true); }
public void test0278() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0278"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, false, (int) 'a'); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); }
public void test0279() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0279"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray63, 0, (int) '$'); int int69 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray63, (double) 100.0f, (double) 1L); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1)); }
public void test0280() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0280"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray3 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray6 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2, intArray3, intArray4, intArray5 }; java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray35 = new java.lang.Integer[][] { intArray13, intArray20, intArray27, intArray34 }; java.lang.Integer[][] intArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray35, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray6, intArray35); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray38); java.lang.Object[] objArray40 = org.apache.commons.lang3.ArrayUtils.clone((java.lang.Object[]) intArray38); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(objArray40); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[[], [], [], [], [], [], [[-1, 100, 4, 4, 100, 4], [-1, 100, 4, 4, 100, 4], [-1, 100, 4, 4, 100, 4], [-1, 100, 4, 4, 100, 4]]]"); }
public void test0281() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0281"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray3, '4', 0); java.lang.Character[] charArray7 = org.apache.commons.lang3.ArrayUtils.toObject(charArray3); char[] charArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray7, '4'); java.lang.Class<?>[] wildcardClassArray10 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray7); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertNotNull(charArray9); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray9), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray9), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray9), "[a, 4]"); org.junit.Assert.assertNotNull(wildcardClassArray10); }
public void test0282() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0282"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10.0}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0}}}" + "'", str1, "0}}}"); }
public void test0283() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0283"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (-1.0f), (double) 10.0f); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 1); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); }
public void test0284() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0284"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) (byte) 0, (double) 100L); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) 1.0f); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray2); double[] doubleArray18 = new double[] { 'a', 10.0d, (byte) 0 }; int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) '.', (double) 10); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray18, "java.lang"); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, 0.0d, (int) (short) 100); double[] doubleArray30 = new double[] { 'a', 10.0d, (byte) 0 }; int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray30, (double) '.', (double) 10); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray18, doubleArray30); double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray18, (int) (byte) 0); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray37, (int) (short) 10, (int) (short) 10); boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray40); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 'a', 1.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, ""); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); }
public void test0285() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0285"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) (byte) 0, (double) 100L); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) 1.0f); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray2, ""); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) '#', (int) (short) 0); double[] doubleArray21 = new double[] { 10L, 0 }; double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (-1L), 10); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) 10); java.lang.String str36 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray21, "hi!"); double[] doubleArray39 = new double[] { 10L, 0 }; double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray39, 0, (int) 'a'); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray21, doubleArray39); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, (double) (short) 10); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) 10.0f); double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray46); boolean boolean50 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 1.0]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double[]" + "'", str15, "double[]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "double[]" + "'", str36, "double[]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0, 10.0, 0.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false); }
public void test0286() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0286"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class<?>[] wildcardClassArray8 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(wildcardClassArray8); }
public void test0287() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0287"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , "); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "lang,0,," + "'", str1, "lang,0,,"); }
public void test0288() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0288"); java.lang.ClassLoader classLoader0 = null; java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "float[]", false); org.junit.Assert.assertNotNull(wildcardClass3); }
public void test0289() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0289"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0290() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0290"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{java,.,Class[],{false,false,false}},{java," + "'", str1, "{{java,.,Class[],{false,false,false}},{java,"); }
public void test0291() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0291"); java.lang.Byte[] byteArray0 = new java.lang.Byte[] {}; byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray0); byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray1); byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray1, 1, 1); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) byteArray1, "Character"); byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.clone(byteArray1); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]"); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, ""); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]"); }
public void test0292() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0292"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20); short[] shortArray28 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray35 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray42 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray49 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[][] shortArray50 = new short[][] { shortArray28, shortArray35, shortArray42, shortArray49 }; short[] shortArray51 = new short[] {}; short[] shortArray52 = new short[] {}; short[] shortArray53 = new short[] {}; short[][] shortArray54 = new short[][] { shortArray51, shortArray52, shortArray53 }; short[][] shortArray55 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray50, shortArray54); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray50); java.lang.Class[] classArray58 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58; java.lang.Class[] classArray61 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61; boolean boolean64 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray58, wildcardClassArray62, false); java.lang.Class[] classArray66 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66; java.lang.Class[] classArray69 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray70 = (java.lang.Class<?>[]) classArray69; boolean boolean72 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray66, wildcardClassArray70, false); boolean boolean73 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray62, wildcardClassArray70); java.lang.Class<?>[] wildcardClassArray74 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray62); java.lang.Class<?>[] wildcardClassArray75 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray62); java.lang.Class<?>[] wildcardClassArray76 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray62); boolean boolean77 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray56, wildcardClassArray76); boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray20, wildcardClassArray76); java.lang.Object[] objArray79 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(shortArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray28), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray35), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray42), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray49), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray50); org.junit.Assert.assertNotNull(shortArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray51), "[]"); org.junit.Assert.assertNotNull(shortArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray52), "[]"); org.junit.Assert.assertNotNull(shortArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray53), "[]"); org.junit.Assert.assertNotNull(shortArray54); org.junit.Assert.assertNotNull(shortArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertNotNull(classArray58); org.junit.Assert.assertNotNull(wildcardClassArray59); org.junit.Assert.assertNotNull(classArray61); org.junit.Assert.assertNotNull(wildcardClassArray62); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertNotNull(classArray66); org.junit.Assert.assertNotNull(wildcardClassArray67); org.junit.Assert.assertNotNull(classArray69); org.junit.Assert.assertNotNull(wildcardClassArray70); org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true); org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true); org.junit.Assert.assertNotNull(wildcardClassArray74); org.junit.Assert.assertNotNull(wildcardClassArray75); org.junit.Assert.assertNotNull(wildcardClassArray76); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); org.junit.Assert.assertNotNull(objArray79); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]"); }
public void test0293() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0293"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false); boolean[] booleanArray15 = new boolean[] { false, false, false }; boolean[] booleanArray17 = new boolean[] { true }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray15, ""); java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray15); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray15); boolean[] booleanArray28 = new boolean[] { false, false, false }; boolean[] booleanArray30 = new boolean[] { true }; boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray28, booleanArray30); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray28, true, (int) (short) -1); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray28, true); int int39 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray28, false, 0); int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray28, true); boolean[] booleanArray47 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray50 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray47, 100, 0); int int52 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray50, false); boolean[] booleanArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray50, true); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray50); boolean[] booleanArray57 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray50, false); boolean[] booleanArray58 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray28, booleanArray50); boolean boolean60 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray28, false); boolean[] booleanArray63 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray28, (-1), (-1)); boolean[] booleanArray64 = new boolean[] {}; int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray64, false); boolean[] booleanArray70 = new boolean[] { false, false, false }; boolean[] booleanArray72 = new boolean[] { true }; boolean[] booleanArray73 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray70, booleanArray72); int int76 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray70, true, (int) (short) -1); boolean boolean78 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray70, true); boolean[] booleanArray79 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray70); int int81 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray70, true); boolean[] booleanArray82 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray70); boolean[] booleanArray83 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray64, booleanArray70); boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray28, (java.lang.Object) booleanArray83); boolean[] booleanArray85 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray83); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean[]" + "'", str20, "boolean[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{false,false,false}" + "'", str21, "{false,false,false}"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true]"); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertNotNull(booleanArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray47), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray50), "[]"); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(booleanArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray54), "[]"); org.junit.Assert.assertNotNull(booleanArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray57), "[]"); org.junit.Assert.assertNotNull(booleanArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray58), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true); org.junit.Assert.assertNotNull(booleanArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray63), "[]"); org.junit.Assert.assertNotNull(booleanArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray64), "[]"); org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1)); org.junit.Assert.assertNotNull(booleanArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray70), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray72), "[true]"); org.junit.Assert.assertNotNull(booleanArray73); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray73), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1)); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false); org.junit.Assert.assertNotNull(booleanArray79); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray79), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1)); org.junit.Assert.assertNotNull(booleanArray82); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray82), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray83), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true); org.junit.Assert.assertNotNull(booleanArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray85), "[false, false, false, false, false, false]"); }
public void test0294() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0294"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20); double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray37); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); }
public void test0295() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0295"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28); boolean boolean66 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray28, 0.0d); int int68 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 2); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true); org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); }
public void test0296() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0296"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("short[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "short[]" + "'", str1, "short[]"); }
public void test0297() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0297"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray15, (double) 1L); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray15, (double) '#', (int) (byte) 100); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) (short) 0, (int) 'a'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); }
public void test0298() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0298"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + ",Class[],{false,false,false}}}" + "'", str1, ",Class[],{false,false,false}}}"); }
public void test0299() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0299"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, (int) (byte) 1, false); byte[] byteArray17 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 0); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray10, (java.lang.Object) boolean19); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); }
public void test0300() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0300"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); java.lang.Boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray3); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); }
public void test0301() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0301"); int[] intArray0 = null; int[] intArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0); int int4 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(intArray1, (int) (short) -1, 1); int[] intArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY; java.lang.Integer[] intArray6 = org.apache.commons.lang3.ArrayUtils.toObject(intArray5); int[] intArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) -1); int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) intArray10, "java"); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) (short) -1, (java.lang.Object) intArray10); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray1), "[]"); org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1)); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]"); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[]"); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, ""); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); }
public void test0302() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0302"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9); java.lang.Double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray9); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertNotNull(doubleArray11); }
public void test0303() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0303"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); // The following exception was thrown during execution in test generation try { boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray11, (int) '#'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); }
public void test0304() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0304"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray61, 0); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) '.', 10); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int83 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) 0, (int) ' '); boolean boolean84 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray66); boolean boolean85 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.add(doubleArray66, 0, 100.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1)); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1); org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false); org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false); org.junit.Assert.assertNotNull(doubleArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 10.0, 0.0]"); }
public void test0305() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0305"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, (int) (short) 1); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (byte) 100, (int) (byte) 1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); }
public void test0306() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0306"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11); java.lang.Object[] objArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) charArray11); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertNotNull(objArray16); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]"); }
public void test0307() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0307"); byte[] byteArray2 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(byteArray2, (byte) 0); java.lang.Byte[] byteArray5 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray5); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray6, (byte) 0, 10); byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray2, byteArray6); byte[] byteArray15 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray15, (byte) 10); byte[] byteArray22 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray24 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray22, (byte) 10); byte[] byteArray25 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray17, byteArray24); byte[] byteArray27 = org.apache.commons.lang3.ArrayUtils.remove(byteArray25, 3); byte[] byteArray29 = org.apache.commons.lang3.ArrayUtils.remove(byteArray27, 0); byte[] byteArray30 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray29); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) byteArray29, "hi!"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray5); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 1]"); org.junit.Assert.assertNotNull(byteArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, -1, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, 0, -1, -1, 0, 0]"); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "byte[]" + "'", str32, "byte[]"); }
public void test0308() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0308"); short[] shortArray1 = new short[] { (byte) 0 }; short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray1, (int) 'a', (int) (byte) 10); java.lang.Short[] shortArray5 = org.apache.commons.lang3.ArrayUtils.toObject(shortArray1); java.lang.Short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray5, "float[]"); org.junit.Assert.assertNotNull(shortArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray1), "[0]"); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[]"); org.junit.Assert.assertNotNull(shortArray5); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "java.lang" + "'", str8, "java.lang"); }
public void test0309() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0309"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray3, (double) 4); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); }
public void test0310() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0310"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray22); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); }
public void test0311() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0311"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10.0}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10" + "'", str1, "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10"); }
public void test0312() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0312"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); double[] doubleArray12 = org.apache.commons.lang3.ArrayUtils.add(doubleArray3, 0, (double) (short) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[1.0, 97.0, 10.0, 0.0]"); }
public void test0313() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0313"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray12, "Double"); boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) str16, (java.lang.Object) '$'); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "boolean[]" + "'", str16, "boolean[]"); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); }
public void test0314() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0314"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray10, (int) (byte) 1, false); byte[] byteArray17 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean19 = org.apache.commons.lang3.ArrayUtils.contains(byteArray17, (byte) 0); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) booleanArray10, (java.lang.Object) boolean19); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, false); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray10); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); }
public void test0315() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0315"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.add(doubleArray16, (double) 1L); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) 1L, "{false,false,false}"); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[97.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Long" + "'", str39, "Long"); }
public void test0316() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0316"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } } @Test public void test0317() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0317"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6); java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray8); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); } @Test public void test0318() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0318"); java.lang.Object[] objArray4 = new java.lang.Object[] { (short) -1, 0.0d, ' ', (short) -1 }; java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(objArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) objArray4, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(objArray5); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.lang" + "'", str7, "java.lang"); } @Test public void test0319() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0319"); java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY; double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0); double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0, (double) 1); java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray0, "0"); java.lang.Class<?> wildcardClass7 = doubleArray0.getClass(); org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); org.junit.Assert.assertNotNull(wildcardClass7); } @Test public void test0320() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0320"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) (byte) 1, (double) 100); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 10.0f); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray20, (double) 4); double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray20, 0.0d); int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray45, (double) 1.0f, (int) (byte) 0); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); } @Test public void test0321() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0321"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray13 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, '4'); char[] charArray18 = new char[] { 'a', '4' }; char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '4', 0); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '#', 4); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray27); org.apache.commons.lang3.ArrayUtils.reverse(charArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray28, "hi!"); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray28); org.apache.commons.lang3.ArrayUtils.reverse(charArray5); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), " 4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), " 4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[ , 4, a]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, , a, 4, a, , #, #, 4, 4]"); } @Test public void test0322() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0322"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, ",Class[],{false,false,false}}}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: ,Class[],{false,false,false}}}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0317() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0317"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6); java.lang.Byte[] byteArray8 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray6); java.lang.Class<?>[] wildcardClassArray9 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray8); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray8); org.junit.Assert.assertNotNull(wildcardClassArray9); }
public void test0318() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0318"); java.lang.Object[] objArray4 = new java.lang.Object[] { (short) -1, 0.0d, ' ', (short) -1 }; java.lang.Object[] objArray5 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(objArray4); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) objArray4, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[-1, 0.0, , -1]"); org.junit.Assert.assertNotNull(objArray5); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[-1, 0.0, , -1]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "java.lang" + "'", str7, "java.lang"); }
public void test0319() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0319"); java.lang.Double[] doubleArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY; double[] doubleArray1 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0); double[] doubleArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray0, (double) 1); java.lang.Double[] doubleArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray0); java.lang.String str6 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) doubleArray0, "0"); java.lang.Class<?> wildcardClass7 = doubleArray0.getClass(); org.junit.Assert.assertNotNull(doubleArray0); org.junit.Assert.assertNotNull(doubleArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray1), "[]"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]"); org.junit.Assert.assertNotNull(doubleArray4); org.junit.Assert.assertEquals("'" + str6 + "' != '" + "java.lang" + "'", str6, "java.lang"); org.junit.Assert.assertNotNull(wildcardClass7); }
public void test0320() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0320"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) (byte) 1, (double) 100); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) 10.0f); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray20, (double) 4); double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray20, 0.0d); int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray45, (double) 1.0f, (int) (byte) 0); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); }
public void test0321() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0321"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray13 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray13, '4'); char[] charArray18 = new char[] { 'a', '4' }; char[] charArray19 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray19, '4', 0); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray19, '#', 4); char[] charArray27 = org.apache.commons.lang3.ArrayUtils.add(charArray19, 'a'); char[] charArray28 = org.apache.commons.lang3.ArrayUtils.addAll(charArray13, charArray27); org.apache.commons.lang3.ArrayUtils.reverse(charArray28); java.lang.String str31 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray28, "hi!"); char[] charArray32 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray28); org.apache.commons.lang3.ArrayUtils.reverse(charArray5); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), " 4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), " 4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[ , 4, a]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, ]"); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[a, 4]"); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(charArray27); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray27), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray27), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray28); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), "a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[a, 4, a, , #, #, 4, 4]"); org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, ""); org.junit.Assert.assertNotNull(charArray32); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray32), "a4 a4a ##44"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray32), "[a, 4, , a, 4, a, , #, #, 4, 4]"); }
public void test0322() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0322"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, ",Class[],{false,false,false}}}");
public void test0323() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0323"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray2, (int) (short) 1); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray28); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); }
public void test0324() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0324"); java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("short[]"); org.junit.Assert.assertNotNull(wildcardClass1); }
public void test0325() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0325"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 10, (double) 1.0f); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, 0.0d, (int) (short) 1, (double) 'a'); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) ' ', 10); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 4); int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, 0.0d, 0, (double) 0L); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2); }
public void test0326() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0326"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Float"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Float"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0327() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0327"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("double[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "double[]" + "'", str1, "double[]"); }
public void test0328() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0328"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray5, false); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray5); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray5, "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[true, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[true, true, false, false, false]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "boolean[]" + "'", str13, "boolean[]"); }
public void test0329() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0329"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a', 0, (double) 0L); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 100L); double[] doubleArray14 = new double[] { 10L, 0 }; double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 0, (int) 'a'); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (-1L), 10); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray14); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) 0L, (double) 1); double[] doubleArray27 = new double[] { 10L, 0 }; double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray27, 0, (int) 'a'); int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) (-1L), 10); int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray27, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray27); int int40 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray27, (double) 10); java.lang.String str42 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray27, "hi!"); double[] doubleArray45 = new double[] { 10L, 0 }; double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray45, 0, (int) 'a'); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray27, doubleArray45); double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray27); double[] doubleArray53 = org.apache.commons.lang3.ArrayUtils.add(doubleArray50, 0, (double) (byte) 10); double[] doubleArray56 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray53, (-1), 5); double[] doubleArray60 = new double[] { 'a', 10.0d, (byte) 0 }; int int63 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray60, (double) '.', (double) 10); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray53, doubleArray60); boolean boolean65 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray21, doubleArray60); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray21); double[] doubleArray69 = new double[] { 10L, 0 }; double[] doubleArray72 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray69, 0, (int) 'a'); int int75 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray69, (double) (-1L), 10); int int79 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray69, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray69); int int82 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray69, (double) 10); java.lang.String str84 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray69, "hi!"); double[] doubleArray87 = new double[] { 10L, 0 }; double[] doubleArray90 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray87, 0, (int) 'a'); boolean boolean91 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray69, doubleArray87); double[] doubleArray92 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray69); double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray21, doubleArray69); int int97 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray93, (double) (short) 100, 0, (double) (short) 100); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0); org.junit.Assert.assertEquals("'" + str42 + "' != '" + "double[]" + "'", str42, "double[]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray56); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray60); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1)); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray72); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1)); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0); org.junit.Assert.assertEquals("'" + str84 + "' != '" + "double[]" + "'", str84, "double[]"); org.junit.Assert.assertNotNull(doubleArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray90); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true); org.junit.Assert.assertNotNull(doubleArray92); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[0.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0); }
public void test0330() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0330"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = null; boolean boolean21 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true); }
public void test0331() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0331"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray61, 0); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 10); java.lang.String str81 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray66, "hi!"); double[] doubleArray84 = new double[] { 10L, 0 }; double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray84, 0, (int) 'a'); boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray66, doubleArray84); double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray66); double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.add(doubleArray89, (double) (short) 10); double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.add(doubleArray91, (double) 10.0f); boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray93); int int97 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray63, (double) '$', 0); double[] doubleArray98 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray63); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertEquals("'" + str81 + "' != '" + "double[]" + "'", str81, "double[]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false); org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1)); org.junit.Assert.assertNotNull(doubleArray98); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[0.0]"); }
public void test0332() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0332"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) '.'); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray23, (double) '4', 3); // The following exception was thrown during execution in test generation try { double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray23, (int) '.'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 46, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 46.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); }
public void test0333() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0333"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); double[] doubleArray38 = new double[] { 10L, 0 }; double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, 0, (int) 'a'); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) (-1L), 10); java.lang.Double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray38); double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.add(doubleArray38, (double) (-1L)); int int50 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, (double) 4, (double) 'a'); int int54 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray47, 100.0d, 0, 10.0d); double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray47); boolean boolean56 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray16, doubleArray47); int int59 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) 9, 100.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1)); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2); org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1)); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0); }
public void test0334() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0334"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) (short) -1); // The following exception was thrown during execution in test generation try { int int40 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) (short) -1); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Argument is not an array"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); }
public void test0335() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0335"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray8); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, false); boolean[] booleanArray17 = org.apache.commons.lang3.ArrayUtils.add(booleanArray15, true); java.lang.String str19 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray17, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertEquals("'" + str19 + "' != '" + "boolean[]" + "'", str19, "boolean[]"); }
public void test0336() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0336"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , "); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java" + "'", str1, "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java"); }
public void test0337() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0337"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Boolean[]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [LBoolean;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0338() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0338"); java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) "0}}}", ",Class[],{false,false,false}}}"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "java.lang" + "'", str2, "java.lang"); }
public void test0339() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0339"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "String"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: String"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0340() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0340"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (-1.0d)); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, 0.0d); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray14); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) (short) 100, (int) (short) 0, (double) 3); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); }
public void test0341() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0341"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); java.lang.Object obj32 = null; int int33 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray17, obj32); java.lang.Class<?>[] wildcardClassArray34 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); double[] doubleArray38 = new double[] { 'a', 10.0d, (byte) 0 }; int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, (double) '.', (double) 10); java.lang.String str43 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray38, "java.lang"); int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray38, 0.0d, (int) (short) 100); double[] doubleArray50 = new double[] { 'a', 10.0d, (byte) 0 }; int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray50, (double) '.', (double) 10); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray38, doubleArray50); java.lang.Double[] doubleArray55 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray50); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray55, (double) (-1.0f)); // The following exception was thrown during execution in test generation try { java.lang.Object[] objArray58 = org.apache.commons.lang3.ArrayUtils.addAll((java.lang.Object[]) wildcardClassArray17, (java.lang.Object[]) doubleArray55); org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot store java.lang.Double in an array of java.lang.Class"); } catch (java.lang.IllegalArgumentException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, ""); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray55); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[97.0, 10.0, 0.0]"); }
public void test0342() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0342"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); boolean[] booleanArray16 = new boolean[] { false, false, false }; boolean[] booleanArray18 = new boolean[] { true }; boolean[] booleanArray19 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray16, booleanArray18); int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray16, true, (int) (short) -1); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.add(booleanArray16, false); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray24, false, 2); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray11, booleanArray24); org.apache.commons.lang3.ArrayUtils.reverse(booleanArray11); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray19), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); }
public void test0343() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0343"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray35); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray36); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); }
public void test0344() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0344"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{10,0}"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {10,0}"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0345() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0345"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); int int7 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) byteArray4); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) byteArray9, ""); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -1, 0, 0]"); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "byte[]" + "'", str11, "byte[]"); }
public void test0346() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0346"); java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("float[]", true); org.junit.Assert.assertNotNull(wildcardClass2); }
public void test0347() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0347"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray3 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2 }; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray7 = new java.lang.Integer[][][] { intArray4, intArray5, intArray6 }; java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray11 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10 }; java.lang.Integer[][][][] intArray12 = new java.lang.Integer[][][][] { intArray3, intArray7, intArray11 }; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray14 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray15 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray16 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray17 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray18 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray19 = new java.lang.Integer[][][] { intArray13, intArray14, intArray15, intArray16, intArray17, intArray18 }; java.lang.Integer[] intArray26 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray48 = new java.lang.Integer[][] { intArray26, intArray33, intArray40, intArray47 }; java.lang.Integer[][] intArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray48, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray51 = org.apache.commons.lang3.ArrayUtils.add(intArray19, intArray48); java.lang.Integer[][][][] intArray52 = org.apache.commons.lang3.ArrayUtils.add(intArray12, intArray19); char[] charArray58 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray60 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray58, '4'); char[] charArray63 = org.apache.commons.lang3.ArrayUtils.subarray(charArray58, 3, 2); java.lang.Character[] charArray64 = org.apache.commons.lang3.ArrayUtils.toObject(charArray63); char[] charArray66 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray64, 'a'); java.lang.Class<?>[] wildcardClassArray67 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray64); java.lang.Character[] charArray68 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray64); java.lang.Class<?>[] wildcardClassArray69 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray68); java.lang.Object[] objArray70 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) wildcardClassArray69); boolean boolean71 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray12, (java.lang.Object[]) wildcardClassArray69); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertNotNull(intArray47); org.junit.Assert.assertNotNull(intArray48); org.junit.Assert.assertNotNull(intArray50); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray52); org.junit.Assert.assertNotNull(charArray58); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray60); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray60), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray60), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray60), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray63); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[]"); org.junit.Assert.assertNotNull(charArray64); org.junit.Assert.assertNotNull(charArray66); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray66), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray66), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray66), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray67); org.junit.Assert.assertNotNull(charArray68); org.junit.Assert.assertNotNull(wildcardClassArray69); org.junit.Assert.assertNotNull(objArray70); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]"); org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false); }
public void test0348() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0348"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("0.0", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: 0.0"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0349() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0349"); boolean[] booleanArray0 = null; boolean[] booleanArray2 = org.apache.commons.lang3.ArrayUtils.add(booleanArray0, true); boolean[] booleanArray6 = new boolean[] { false, false, false }; boolean[] booleanArray8 = new boolean[] { true }; boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray8); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray6, true, (int) (short) -1); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false); boolean[] booleanArray16 = org.apache.commons.lang3.ArrayUtils.add(booleanArray6, false); boolean[] booleanArray20 = new boolean[] { false, false, false }; boolean[] booleanArray22 = new boolean[] { true }; boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray20, booleanArray22); java.lang.String str25 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray20, ""); java.lang.String str26 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray20); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray20); boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray27); boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.add(booleanArray27, (int) (byte) 1, false); boolean[] booleanArray32 = null; boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray31, booleanArray32); boolean[] booleanArray34 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray6, booleanArray33); int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray6, true); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray0, booleanArray6); org.junit.Assert.assertNotNull(booleanArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray2), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[true]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray16), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[true]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str25 + "' != '" + "boolean[]" + "'", str25, "boolean[]"); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{false,false,false}" + "'", str26, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray34), "[false, false, false, false, false, false, false]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1)); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); }
public void test0350() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0350"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("long[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "long[]" + "'", str1, "long[]"); }
public void test0351() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0351"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = new char[] { 'a', '4' }; char[] charArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray10); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray11, '4', 0); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray11, '#', 4); char[] charArray19 = org.apache.commons.lang3.ArrayUtils.add(charArray11, 'a'); char[] charArray20 = org.apache.commons.lang3.ArrayUtils.addAll(charArray5, charArray19); char[] charArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray20); java.lang.String str23 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) charArray21, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a, 4]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray11), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray11), "[a, 4]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(charArray19); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray19), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray19), "[a, 4, a]"); org.junit.Assert.assertNotNull(charArray20); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray20), "44## a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray20), "44## a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray20), "[4, 4, #, #, , a, 4, a]"); org.junit.Assert.assertNotNull(charArray21); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray21), "44## a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray21), "44## a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray21), "[4, 4, #, #, , a, 4, a]"); org.junit.Assert.assertEquals("'" + str23 + "' != '" + "char[]" + "'", str23, "char[]"); }
public void test0352() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0352"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) (short) 100, (double) (byte) 0); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (double) 'a'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0]"); }
public void test0353() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0353"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray37); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); }
public void test0354() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0354"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) (short) 100, (double) (byte) 0); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d, (double) 5); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); }
public void test0355() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0355"); java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) (byte) 0); java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray0); java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray6 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray7 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray10 = new java.lang.Integer[][][] { intArray4, intArray5, intArray6, intArray7, intArray8, intArray9 }; java.lang.Integer[] intArray17 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray39 = new java.lang.Integer[][] { intArray17, intArray24, intArray31, intArray38 }; java.lang.Integer[][] intArray41 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray39, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray42 = org.apache.commons.lang3.ArrayUtils.add(intArray10, intArray39); java.lang.Class<?>[] wildcardClassArray43 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray42); long[] longArray47 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean49 = org.apache.commons.lang3.ArrayUtils.contains(longArray47, (long) 'a'); int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray47, (long) '4'); int int52 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray43, (java.lang.Object) '4'); java.lang.Class<?>[] wildcardClassArray53 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray43); int int55 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) floatArray3, (java.lang.Object) wildcardClassArray43, 3); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray7); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertNotNull(intArray31); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(longArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray47), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false); org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1)); org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); }
public void test0356() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0356"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray18); java.lang.Class[] classArray22 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; java.lang.Class[] classArray25 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25; boolean boolean28 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray22, wildcardClassArray26, false); java.lang.Class[] classArray30 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; java.lang.Class[] classArray33 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33; boolean boolean36 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray30, wildcardClassArray34, false); boolean boolean37 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray26, wildcardClassArray34); java.lang.Integer[][] intArray38 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray39 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray40 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray41 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray42 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray43 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray44 = new java.lang.Integer[][][] { intArray38, intArray39, intArray40, intArray41, intArray42, intArray43 }; java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray73 = new java.lang.Integer[][] { intArray51, intArray58, intArray65, intArray72 }; java.lang.Integer[][] intArray75 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray73, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray76 = org.apache.commons.lang3.ArrayUtils.add(intArray44, intArray73); java.lang.Class<?>[] wildcardClassArray77 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray76); boolean boolean79 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray34, wildcardClassArray77, false); boolean boolean80 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray20, wildcardClassArray34); int int81 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) wildcardClassArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertNotNull(classArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertNotNull(classArray33); org.junit.Assert.assertNotNull(wildcardClassArray34); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(intArray39); org.junit.Assert.assertNotNull(intArray40); org.junit.Assert.assertNotNull(intArray41); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertNotNull(intArray44); org.junit.Assert.assertNotNull(intArray51); org.junit.Assert.assertNotNull(intArray58); org.junit.Assert.assertNotNull(intArray65); org.junit.Assert.assertNotNull(intArray72); org.junit.Assert.assertNotNull(intArray73); org.junit.Assert.assertNotNull(intArray75); org.junit.Assert.assertNotNull(intArray76); org.junit.Assert.assertNotNull(wildcardClassArray77); org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true); org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0); }
public void test0357() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0357"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); int int66 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 100.0f, 0, 1.0d); double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray28); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1)); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, 10.0, 0.0]"); }
public void test0358() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0358"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); java.lang.String str16 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) charArray11, "java.lang"); char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, '$'); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}"); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]"); }
public void test0359() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0359"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 10, (double) 1.0f); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray31); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 3, (double) 1); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); }
public void test0360() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0360"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0361() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0361"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) (-1L)); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 4, (double) 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 10, (double) (byte) 10); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (short) 0, (double) '#'); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 2); double[] doubleArray25 = new double[] { 10L, 0 }; double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, 0, (int) 'a'); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (-1L), 10); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10); java.lang.String str40 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray25, "hi!"); double[] doubleArray43 = new double[] { 10L, 0 }; double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, 0, (int) 'a'); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray43); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25); double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, 0, (double) (byte) 10); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (-1), 5); int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) (short) 10, (double) 1.0f); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, 0.0d, (int) (short) 1, (double) 'a'); int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) ' ', 10); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray54); // The following exception was thrown during execution in test generation try { double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray54, (int) (byte) -1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double[]" + "'", str40, "double[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[10.0, 0.0, -1.0, 10.0, 10.0, 0.0]"); }
public void test0362() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0362"); float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY; float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.clone(floatArray0); java.lang.Float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray1); java.lang.String str4 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) floatArray2, ""); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray1), "[]"); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals("'" + str4 + "' != '" + "java.lang" + "'", str4, "java.lang"); }
public void test0363() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0363"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("Double"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0364() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0364"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray3, false); // The following exception was thrown during execution in test generation try { boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray3, 9); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 9, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2); }
public void test0365() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0365"); java.lang.String[] strArray0 = null; java.lang.String[] strArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray0); long[] longArray8 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray10 = org.apache.commons.lang3.ArrayUtils.add(longArray8, 0L); long[] longArray15 = new long[] { 10L, '#', (-1), 10L }; long[] longArray16 = org.apache.commons.lang3.ArrayUtils.addAll(longArray10, longArray15); long[] longArray22 = new long[] { (byte) -1, (byte) -1, (short) 10, (-1), (byte) 100 }; int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray22, (long) (short) -1); boolean boolean25 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray10, longArray22); long[] longArray27 = org.apache.commons.lang3.ArrayUtils.add(longArray22, (long) (short) 0); java.lang.Object obj28 = null; boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEquals((java.lang.Object) longArray22, obj28); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray22, (long) 'a', 0); java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, (long) (byte) 10); org.apache.commons.lang3.ArrayUtils.reverse(longArray35); boolean boolean38 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray35, (java.lang.Object) 'a'); long[] longArray39 = org.apache.commons.lang3.ArrayUtils.clone(longArray35); long[] longArray40 = org.apache.commons.lang3.ArrayUtils.clone(longArray39); long[] longArray41 = org.apache.commons.lang3.ArrayUtils.addAll(longArray22, longArray39); double[] doubleArray45 = new double[] { 'a', 10.0d, (byte) 0 }; int int48 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray45, (double) '.', (double) 10); java.lang.String str50 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray45, "java.lang"); int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray45, 0.0d, (int) (short) 100); double[] doubleArray57 = new double[] { 'a', 10.0d, (byte) 0 }; int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray57, (double) '.', (double) 10); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray45, doubleArray57); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray45, (int) (byte) 0); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray63); double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray64, 3, (int) '#'); boolean boolean68 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray22, (java.lang.Object) doubleArray67); int int70 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray0, (java.lang.Object) longArray22, (int) '$'); org.junit.Assert.assertNotNull(strArray1); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray15), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray16), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray22), "[-1, -1, 10, -1, 100]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray27), "[-1, -1, 10, -1, 100, 0]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[]"); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); org.junit.Assert.assertNotNull(longArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray39), "[]"); org.junit.Assert.assertNotNull(longArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray40), "[]"); org.junit.Assert.assertNotNull(longArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray41), "[-1, -1, 10, -1, 100]"); org.junit.Assert.assertNotNull(doubleArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, ""); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[]"); org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false); org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1)); }
public void test0366() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0366"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("lang,0,,", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: lang,0,,"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0367() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0367"); java.lang.String[] strArray3 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray4 = org.apache.commons.lang3.ArrayUtils.toArray(strArray3); double[] doubleArray8 = new double[] { 'a', 10.0d, (byte) 0 }; int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) '.', (double) 10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray8, "java.lang"); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray8); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray14); double[] doubleArray18 = new double[] { 10L, 0 }; double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray18, 0, (int) 'a'); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) (-1L), 10); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) 10); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray18, "hi!"); double[] doubleArray36 = new double[] { 10L, 0 }; double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray36, 0, (int) 'a'); boolean boolean40 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray18, doubleArray36); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (short) 1, 0); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray14, doubleArray18); int int46 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray3, (java.lang.Object) doubleArray14, (int) (byte) 0); java.lang.String[] strArray47 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(strArray3); byte[] byteArray52 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray54 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray52, (byte) 10); byte[] byteArray59 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray59, (byte) 10); byte[] byteArray62 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray54, byteArray61); byte[] byteArray64 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray54, (byte) 0); byte[] byteArray66 = org.apache.commons.lang3.ArrayUtils.remove(byteArray64, 0); int int67 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) strArray3, (java.lang.Object) 0); org.junit.Assert.assertNotNull(strArray3); org.junit.Assert.assertNotNull(strArray4); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "double[]" + "'", str33, "double[]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); org.junit.Assert.assertNotNull(strArray47); org.junit.Assert.assertNotNull(byteArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-1, -1, 0]"); org.junit.Assert.assertNotNull(byteArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-1, 0]"); org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1)); }
public void test0368() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0368"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass("{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java", false); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0369() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0369"); java.lang.Object obj0 = null; java.lang.String str2 = org.apache.commons.lang3.ClassUtils.getShortClassName(obj0, "{{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertEquals("'" + str2 + "' != '" + "{{java,.,Class[],{false,false,false}},{java," + "'", str2, "{{java,.,Class[],{false,false,false}},{java,"); }
public void test0370() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0370"); java.lang.Boolean[] booleanArray6 = new java.lang.Boolean[] { false, true, false, true, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, false); boolean[] booleanArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6); java.lang.Boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray6); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray6, true); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) booleanArray13, "double[]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[false, true, false, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray9), "[false, true, false, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, true, false, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, true, false, true, false, false]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, ""); }
public void test0371() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0371"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); long[] longArray26 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray27 = org.apache.commons.lang3.ArrayUtils.toObject(longArray26); long[] longArray28 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray27); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray28, (long) (byte) -1, (int) 'a'); java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray28); long[] longArray34 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray32, (long) (short) 1); int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray20, (java.lang.Object) longArray34, (int) '.'); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(longArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray26), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray27); org.junit.Assert.assertNotNull(longArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray28), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray34), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray37); }
public void test0372() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0372"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray63, 0, (int) '$'); int int69 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 6, (double) (byte) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0); }
public void test0373() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0373"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray19, 2); double[] doubleArray22 = null; boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray21, doubleArray22); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); }
public void test0374() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0374"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class[] classArray19 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray20 = (java.lang.Class<?>[]) classArray19; java.lang.Class[] classArray22 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22; boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray19, wildcardClassArray23, false); java.lang.Class[] classArray27 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray28 = (java.lang.Class<?>[]) classArray27; java.lang.Class[] classArray30 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray31 = (java.lang.Class<?>[]) classArray30; boolean boolean33 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray27, wildcardClassArray31, false); boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray23, wildcardClassArray31); java.lang.Class<?>[] wildcardClassArray35 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray23); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray23); java.lang.Class[] classArray39 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray40 = (java.lang.Class<?>[]) classArray39; java.lang.Class[] classArray42 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray39, wildcardClassArray43, false); java.lang.Class[] classArray47 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47; java.lang.Class[] classArray50 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50; boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray47, wildcardClassArray51, false); boolean boolean54 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray43, wildcardClassArray51); boolean boolean55 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, wildcardClassArray43); short[] shortArray62 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray69 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray76 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[] shortArray83 = new short[] { (byte) 0, (byte) 10, (byte) -1, (byte) -1, (short) 1, (short) 100 }; short[][] shortArray84 = new short[][] { shortArray62, shortArray69, shortArray76, shortArray83 }; short[] shortArray85 = new short[] {}; short[] shortArray86 = new short[] {}; short[] shortArray87 = new short[] {}; short[][] shortArray88 = new short[][] { shortArray85, shortArray86, shortArray87 }; short[][] shortArray89 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray84, shortArray88); java.lang.Class<?>[] wildcardClassArray90 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) shortArray84); boolean boolean91 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray37, wildcardClassArray90); boolean boolean92 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray37); java.lang.Class<?>[] wildcardClassArray93 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.String str95 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) wildcardClassArray5, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}}}"); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(classArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(classArray22); org.junit.Assert.assertNotNull(wildcardClassArray23); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertNotNull(classArray27); org.junit.Assert.assertNotNull(wildcardClassArray28); org.junit.Assert.assertNotNull(classArray30); org.junit.Assert.assertNotNull(wildcardClassArray31); org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertNotNull(wildcardClassArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(classArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertNotNull(classArray47); org.junit.Assert.assertNotNull(wildcardClassArray48); org.junit.Assert.assertNotNull(classArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); org.junit.Assert.assertNotNull(shortArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray62), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray69), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray76), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray83); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray83), "[0, 10, -1, -1, 1, 100]"); org.junit.Assert.assertNotNull(shortArray84); org.junit.Assert.assertNotNull(shortArray85); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray85), "[]"); org.junit.Assert.assertNotNull(shortArray86); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray86), "[]"); org.junit.Assert.assertNotNull(shortArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray87), "[]"); org.junit.Assert.assertNotNull(shortArray88); org.junit.Assert.assertNotNull(shortArray89); org.junit.Assert.assertNotNull(wildcardClassArray90); org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false); org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true); org.junit.Assert.assertNotNull(wildcardClassArray93); org.junit.Assert.assertEquals("'" + str95 + "' != '" + "java.lang" + "'", str95, "java.lang"); }
public void test0375() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0375"); char[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; char[] charArray1 = org.apache.commons.lang3.ArrayUtils.clone(charArray0); boolean boolean2 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray1); char[] charArray3 = org.apache.commons.lang3.ArrayUtils.clone(charArray1); char[] charArray4 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY; char[] charArray5 = org.apache.commons.lang3.ArrayUtils.clone(charArray4); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(charArray5); char[] charArray7 = org.apache.commons.lang3.ArrayUtils.clone(charArray5); char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray5); boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isEmpty(charArray5); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.addAll(charArray1, charArray5); int int12 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray1, '$'); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) '$', "{10.0,0.0}"); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray0), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray0), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray0), "[]"); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[]"); org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[]"); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[]"); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1)); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "java.lang" + "'", str14, "java.lang"); }
public void test0376() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0376"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "-1"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: -1"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0377() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0377"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("{10,0}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0378() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0378"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("Boolean[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Boolean[]" + "'", str1, "Boolean[]"); }
public void test0379() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0379"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Class[]"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: [LClass;"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0380() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0380"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray10); boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray10, false); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray13, false); boolean boolean16 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13); boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray13, true); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray13); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray13), "[false, false]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false); }
public void test0381() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0381"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); java.lang.Object[][] objArray36 = org.apache.commons.lang3.ArrayUtils.toArray((java.lang.Object[][]) doubleArray12); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(objArray36); }
public void test0382() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0382"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11); java.lang.Character[] charArray16 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray15); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertNotNull(charArray16); }
public void test0383() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0383"); float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY; float[] floatArray1 = org.apache.commons.lang3.ArrayUtils.clone(floatArray0); java.lang.String str3 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray1, "-1"); boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(floatArray1); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray1), "[]"); org.junit.Assert.assertEquals("'" + str3 + "' != '" + "float[]" + "'", str3, "float[]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); }
public void test0384() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0384"); long[] longArray6 = new long[] { 0, 10L, (short) 100, 3, 1L, 1L }; long[] longArray8 = org.apache.commons.lang3.ArrayUtils.add(longArray6, 0L); long[] longArray13 = new long[] { 10L, '#', (-1), 10L }; long[] longArray14 = org.apache.commons.lang3.ArrayUtils.addAll(longArray8, longArray13); long[] longArray20 = new long[] { (byte) -1, (byte) -1, (short) 10, (-1), (byte) 100 }; int int22 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray20, (long) (short) -1); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isSameLength(longArray8, longArray20); long[] longArray25 = org.apache.commons.lang3.ArrayUtils.add(longArray20, (long) (short) 0); long[] longArray31 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray32 = org.apache.commons.lang3.ArrayUtils.toObject(longArray31); java.lang.Long[] longArray33 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray32); long[] longArray35 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray33, 0L); long[] longArray36 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray35); long[] longArray37 = org.apache.commons.lang3.ArrayUtils.addAll(longArray25, longArray36); java.lang.String str39 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) longArray37, "Boolean[]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray6), "[0, 10, 100, 3, 1, 1]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray8), "[0, 10, 100, 3, 1, 1, 0]"); org.junit.Assert.assertNotNull(longArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray13), "[10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray14), "[0, 10, 100, 3, 1, 1, 0, 10, 35, -1, 10]"); org.junit.Assert.assertNotNull(longArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray20), "[-1, -1, 10, -1, 100]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(longArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray25), "[-1, -1, 10, -1, 100, 0]"); org.junit.Assert.assertNotNull(longArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray31), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray32); org.junit.Assert.assertNotNull(longArray33); org.junit.Assert.assertNotNull(longArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray35), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray36), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray37), "[-1, -1, 10, -1, 100, 0, -1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, ""); }
public void test0385() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0385"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); int int63 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray61, (double) 0); double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray61); // The following exception was thrown during execution in test generation try { double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray64, (-1)); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); }
public void test0386() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0386"); char[] charArray0 = null; char[] charArray3 = new char[] { 'a', '4' }; char[] charArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray3); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.addAll(charArray0, charArray3); char[] charArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray3); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray6, "{}"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[a, 4]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "char[]" + "'", str8, "char[]"); }
public void test0387() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0387"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("lang,0,,"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0388() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0388"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); java.lang.Double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray2); double[] doubleArray11 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) (-1L)); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray11, (double) 4, (double) 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (byte) 10, (double) (byte) 10); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray11, (double) (short) 0, (double) '#'); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray11, 2); double[] doubleArray25 = new double[] { 10L, 0 }; double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray25, 0, (int) 'a'); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) (-1L), 10); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray25, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray25); int int38 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 10); java.lang.String str40 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray25, "hi!"); double[] doubleArray43 = new double[] { 10L, 0 }; double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray43, 0, (int) 'a'); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray43); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray25); double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.add(doubleArray48, 0, (double) (byte) 10); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, (-1), 5); int int57 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) (short) 10, (double) 1.0f); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, 0.0d, (int) (short) 1, (double) 'a'); int int64 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray54, (double) ' ', 10); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray11, doubleArray54); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray65); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[10.0, 0.0, -1.0]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0); org.junit.Assert.assertEquals("'" + str40 + "' != '" + "double[]" + "'", str40, "double[]"); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1); org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1); org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1)); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 10.0, -1.0, 0.0, 10.0]"); }
public void test0389() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0389"); byte[] byteArray4 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray4, (byte) 10); byte[] byteArray11 = new byte[] { (byte) -1, (byte) -1, (byte) 0, (byte) 0 }; byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray11, (byte) 10); byte[] byteArray14 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray6, byteArray13); byte[] byteArray16 = org.apache.commons.lang3.ArrayUtils.remove(byteArray14, 3); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray14); java.lang.Byte[] byteArray18 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray17); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) byteArray18); org.junit.Assert.assertNotNull(byteArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -1, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -1, 0, 0, -1, -1, 0, 0]"); org.junit.Assert.assertNotNull(byteArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); }
public void test0390() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0390"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.lang.String str22 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) strList19); java.lang.String str24 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) strList19, ", Character, boolean[], Double, Double][]"); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]" + "'", str22, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ArrayList" + "'", str24, "ArrayList"); }
public void test0391() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0391"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray11); boolean boolean14 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray11, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false); }
public void test0392() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0392"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray3 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray6 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2, intArray3, intArray4, intArray5 }; java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray35 = new java.lang.Integer[][] { intArray13, intArray20, intArray27, intArray34 }; java.lang.Integer[][] intArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray35, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray6, intArray35); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray38); long[] longArray43 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean45 = org.apache.commons.lang3.ArrayUtils.contains(longArray43, (long) 'a'); int int47 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray43, (long) '4'); int int48 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray39, (java.lang.Object) '4'); java.lang.Class<?>[] wildcardClassArray49 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray39); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(longArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray43), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false); org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1)); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertNotNull(wildcardClassArray49); }
public void test0393() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0393"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false); boolean[] booleanArray15 = new boolean[] { false, false, false }; boolean[] booleanArray17 = new boolean[] { true }; boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray15, booleanArray17); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray15, ""); java.lang.String str21 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray15); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray15, false); boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray15); boolean[] booleanArray28 = new boolean[] { false, false, false }; boolean[] booleanArray30 = new boolean[] { true }; boolean[] booleanArray31 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray28, booleanArray30); java.lang.String str33 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray28, ""); java.lang.String str34 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray28); boolean[] booleanArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray28); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(booleanArray35); boolean[] booleanArray38 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray35, false); boolean[] booleanArray39 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray24, booleanArray35); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray17), "[true]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "boolean[]" + "'", str20, "boolean[]"); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{false,false,false}" + "'", str21, "{false,false,false}"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[true]"); org.junit.Assert.assertNotNull(booleanArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray31), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str33 + "' != '" + "boolean[]" + "'", str33, "boolean[]"); org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{false,false,false}" + "'", str34, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray35), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true); org.junit.Assert.assertNotNull(booleanArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray38), "[false, false]"); org.junit.Assert.assertNotNull(booleanArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray39), "[false, false, false, false, false, false, false, false, false]"); }
public void test0394() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0394"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); double[] doubleArray15 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); java.lang.Double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); }
public void test0395() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0395"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 100.0d, (int) (byte) 100, (double) 10.0f); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray3); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[0.0, 10.0, 97.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); }
public void test0396() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0396"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray36); double[] doubleArray38 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); }
public void test0397() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0397"); java.lang.Double[] doubleArray2 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray5 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray8 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray11 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray12 = new java.lang.Double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 }; double[] doubleArray16 = new double[] { 'a', 10.0d, (byte) 0 }; int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, (double) '.', (double) 10); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray16, "java.lang"); int int24 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray16, 0.0d, (int) (short) 100); double[] doubleArray28 = new double[] { 'a', 10.0d, (byte) 0 }; int int31 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) '.', (double) 10); double[] doubleArray32 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray28); double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray16, (int) (byte) 0); java.lang.Double[][] doubleArray35 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray12, (java.lang.Object) doubleArray16); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) doubleArray35); java.lang.Class<?>[] wildcardClassArray37 = null; boolean boolean38 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray36, wildcardClassArray37); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, ""); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false); }
public void test0398() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0398"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "Boolean"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Boolean"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0399() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0399"); char[] charArray2 = new char[] { 'a', '4' }; char[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray5 = org.apache.commons.lang3.ArrayUtils.add(charArray2, ' '); java.lang.String str7 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) charArray5, ""); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[a, 4]"); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray3), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray3), "[a, 4]"); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "a4 "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[a, 4, ]"); org.junit.Assert.assertEquals("'" + str7 + "' != '" + "char[]" + "'", str7, "char[]"); }
public void test0400() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0400"); char[] charArray5 = new char[] { '4', '4', '#', '#', ' ' }; char[] charArray7 = org.apache.commons.lang3.ArrayUtils.removeElement(charArray5, '4'); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray5, 3, 2); java.lang.Character[] charArray11 = org.apache.commons.lang3.ArrayUtils.toObject(charArray10); char[] charArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray11, 'a'); java.lang.Class<?>[] wildcardClassArray14 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) charArray11); java.lang.Character[] charArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray11); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) charArray15); char[] charArray18 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray15, ' '); org.junit.Assert.assertNotNull(charArray5); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray5), "44## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray5), "[4, 4, #, #, ]"); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "4## "); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[4, #, #, ]"); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[]"); org.junit.Assert.assertNotNull(charArray11); org.junit.Assert.assertNotNull(charArray13); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray13), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray13), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray13), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray14); org.junit.Assert.assertNotNull(charArray15); org.junit.Assert.assertNotNull(charArray18); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray18), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray18), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray18), "[]"); }
public void test0401() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0401"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray23); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray24); }
public void test0402() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0402"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, true); java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[false, false, false]"); }
public void test0403() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0403"); short[] shortArray2 = new short[] { (short) 1, (short) 10 }; short[] shortArray6 = new short[] { (short) -1, (short) 1, (byte) 0 }; short[] shortArray7 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray2, shortArray6); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(shortArray6); short[] shortArray11 = org.apache.commons.lang3.ArrayUtils.subarray(shortArray6, (-1), (int) '$'); java.lang.Boolean[] booleanArray13 = new java.lang.Boolean[] { false }; boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13, false); short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY; int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) booleanArray13, (java.lang.Object) shortArray16); short[] shortArray18 = org.apache.commons.lang3.ArrayUtils.addAll(shortArray6, shortArray16); java.lang.String str20 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray18, "0.0"); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray2), "[1, 10]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(shortArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray7), "[1, 10, -1, 1, 0]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true); org.junit.Assert.assertNotNull(shortArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray11), "[-1, 1, 0]"); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false]"); org.junit.Assert.assertNotNull(shortArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray16), "[]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); org.junit.Assert.assertNotNull(shortArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray18), "[-1, 1, 0]"); org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, ""); }
public void test0404() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0404"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass3 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,", true); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: {{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,/,Class[],{false,false,false}},{java,"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0405() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0405"); byte[] byteArray2 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.contains(byteArray2, (byte) 0); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray2, (byte) 10); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.subarray(byteArray2, (int) (byte) 0, 0); int int11 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(byteArray9, (byte) 1); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(byteArray9, (byte) 0, (int) (short) 10); java.lang.String[] strArray18 = new java.lang.String[] { "", "boolean[]", "hi!" }; java.lang.String[] strArray19 = org.apache.commons.lang3.ArrayUtils.toArray(strArray18); double[] doubleArray23 = new double[] { 'a', 10.0d, (byte) 0 }; int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray23, (double) '.', (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray23, "java.lang"); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray23); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray29); double[] doubleArray33 = new double[] { 10L, 0 }; double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray33, 0, (int) 'a'); int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) (-1L), 10); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean44 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray33); int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray33, (double) 10); java.lang.String str48 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray33, "hi!"); double[] doubleArray51 = new double[] { 10L, 0 }; double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray51, 0, (int) 'a'); boolean boolean55 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray33, doubleArray51); int int58 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray33, (double) (short) 1, 0); double[] doubleArray59 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray29, doubleArray33); int int61 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) strArray18, (java.lang.Object) doubleArray29, (int) (byte) 0); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) int14, (java.lang.Object) (byte) 0); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[1]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertNotNull(strArray19); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, ""); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1)); org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false); org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0); org.junit.Assert.assertEquals("'" + str48 + "' != '" + "double[]" + "'", str48, "double[]"); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true); org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1)); org.junit.Assert.assertNotNull(doubleArray59); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); }
public void test0406() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0406"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); java.lang.Double[] doubleArray6 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray5); double[] doubleArray10 = new double[] { 'a', 10.0d, (byte) 0 }; int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray10, (double) '.', (double) 10); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray10, "java.lang"); double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray10); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray16); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) (-1L), 10); int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20); int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 10); java.lang.String str35 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray20, "hi!"); double[] doubleArray38 = new double[] { 10L, 0 }; double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, 0, (int) 'a'); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray38); int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 1, 0); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray16, doubleArray20); int int48 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray16, 1.0d); double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray5, doubleArray16); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, ""); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "double[]" + "'", str35, "double[]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1)); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0, 97.0, 10.0, 0.0]"); }
public void test0407() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0407"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.ArrayList[] arrayListArray23 = new java.util.ArrayList[1]; @SuppressWarnings("unchecked") java.util.ArrayList<java.lang.String>[] strListArray24 = (java.util.ArrayList<java.lang.String>[]) arrayListArray23; strListArray24[0] = strList19; java.util.ArrayList<java.lang.String>[] strListArray29 = org.apache.commons.lang3.ArrayUtils.subarray(strListArray24, 6, (int) '#'); // The following exception was thrown during execution in test generation try { java.util.ArrayList<java.lang.String>[] strListArray31 = org.apache.commons.lang3.ArrayUtils.remove(strListArray29, (int) (short) 1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(arrayListArray23); org.junit.Assert.assertNotNull(strListArray24); org.junit.Assert.assertNotNull(strListArray29); }
public void test0408() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0408"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); int int28 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) ' ', 0); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1)); }
public void test0409() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0409"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("boolean[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "boolean[]" + "'", str1, "boolean[]"); }
public void test0410() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0410"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("0}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0411() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0411"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Long"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Long"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0412() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0412"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); java.lang.Boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray11); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, true, (int) (short) 0); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray11, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); }
public void test0413() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0413"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray10); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray10); java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { false, true, false, true, false, false }; boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19, false); boolean[] booleanArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray19); int int25 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray22, false, (-1)); int int28 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray22, false, (int) '$'); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isEmpty(booleanArray22); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray12, booleanArray22); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray19); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, true, false, true, false, false]"); org.junit.Assert.assertNotNull(booleanArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray22), "[false, true, false, true, false, false]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0); org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); }
public void test0414() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0414"); java.lang.String[] strArray18 = new java.lang.String[] { "{}", "String", "{false,false,false}", "{false,false,false}", "true", "boolean[]", "", "$", "Character", "{}", "java.lang", "0", "", ".", "Character", "boolean[]", "Double", "Double" }; java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>(); boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18); java.util.List<java.lang.Class<?>> wildcardClassList21 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList22 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList23 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList24 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); java.util.List<java.lang.Class<?>> wildcardClassList25 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList19); org.junit.Assert.assertNotNull(strArray18); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(wildcardClassList21); org.junit.Assert.assertNotNull(wildcardClassList22); org.junit.Assert.assertNotNull(wildcardClassList23); org.junit.Assert.assertNotNull(wildcardClassList24); org.junit.Assert.assertNotNull(wildcardClassList25); }
public void test0415() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0415"); long[] longArray5 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6); java.lang.Object[] objArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) longArray6); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6); long[] longArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) (short) 1); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) (short) 1, "true"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(objArray8); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray11), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Short" + "'", str13, "Short"); }
public void test0416() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0416"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); java.lang.Class[] classArray17 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray18 = (java.lang.Class<?>[]) classArray17; java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; boolean boolean23 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray17, wildcardClassArray21, false); boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray13, wildcardClassArray21); java.lang.Class<?>[] wildcardClassArray25 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray26 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray27 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray13); java.lang.Class[] classArray29 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray30 = (java.lang.Class<?>[]) classArray29; java.lang.Class[] classArray32 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32; boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray29, wildcardClassArray33, false); java.lang.Class[] classArray37 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray38 = (java.lang.Class<?>[]) classArray37; java.lang.Class[] classArray40 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray41 = (java.lang.Class<?>[]) classArray40; boolean boolean43 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray37, wildcardClassArray41, false); boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray33, wildcardClassArray41); boolean boolean45 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray27, wildcardClassArray33); java.lang.Class<?>[] wildcardClassArray46 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray33); boolean boolean47 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray33); java.lang.Class<?>[] wildcardClassArray48 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers((java.lang.Class<?>[]) classArray1); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(classArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(wildcardClassArray25); org.junit.Assert.assertNotNull(wildcardClassArray26); org.junit.Assert.assertNotNull(wildcardClassArray27); org.junit.Assert.assertNotNull(classArray29); org.junit.Assert.assertNotNull(wildcardClassArray30); org.junit.Assert.assertNotNull(classArray32); org.junit.Assert.assertNotNull(wildcardClassArray33); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(classArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(classArray40); org.junit.Assert.assertNotNull(wildcardClassArray41); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true); org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(wildcardClassArray48); }
public void test0417() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0417"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = null; java.lang.Class<?>[] wildcardClassArray22 = org.apache.commons.lang3.ArrayUtils.EMPTY_CLASS_ARRAY; boolean boolean24 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray21, wildcardClassArray22, true); boolean boolean25 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray22); java.lang.Class<?>[] wildcardClassArray26 = null; boolean boolean27 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray26); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray22); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true); org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true); }
public void test0418() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0418"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray9 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray3); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray9); double[] doubleArray13 = new double[] { 10L, 0 }; double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray13, 0, (int) 'a'); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) (-1L), 10); int int23 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray13); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray13, (double) 10); java.lang.String str28 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray13, "hi!"); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); boolean boolean35 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray13, doubleArray31); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray13, (double) (short) 1, 0); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray9, doubleArray13); double[] doubleArray40 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray13); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "double[]" + "'", str28, "double[]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1)); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[97.0, 10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[10.0, 0.0]"); }
public void test0419() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0419"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("String[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "String[]" + "'", str1, "String[]"); }
public void test0420() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0420"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray11 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray12 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray14 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10, intArray11, intArray12, intArray13 }; java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray43 = new java.lang.Integer[][] { intArray21, intArray28, intArray35, intArray42 }; java.lang.Integer[][] intArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray46 = org.apache.commons.lang3.ArrayUtils.add(intArray14, intArray43); java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray46); long[] longArray51 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray51, (long) 'a'); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray51, (long) '4'); int int56 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray47, (java.lang.Object) '4'); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray47, true); java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertNotNull(longArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); org.junit.Assert.assertNotNull(wildcardClassArray59); }
public void test0421() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0421"); long[] longArray5 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); java.lang.Long[] longArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6); long[] longArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) 10); long[] longArray12 = org.apache.commons.lang3.ArrayUtils.subarray(longArray9, (int) '$', 2); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) longArray12, "{},String,{false,false,false},{false,false,false},true,boolean[],,$,Character,{},java"); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertNotNull(longArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray9), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray12), "[]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); }
public void test0422() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0422"); byte[] byteArray0 = null; byte[] byteArray2 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (byte) 0); java.lang.String str4 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray0, "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10"); org.junit.Assert.assertNotNull(byteArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0]"); org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10" + "'", str4, "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10"); }
public void test0423() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0423"); char[] charArray1 = new char[] { 'a' }; boolean boolean3 = org.apache.commons.lang3.ArrayUtils.contains(charArray1, '4'); char[] charArray4 = org.apache.commons.lang3.ArrayUtils.clone(charArray1); int int6 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray1, '#'); org.apache.commons.lang3.ArrayUtils.reverse(charArray1); char[] charArray10 = org.apache.commons.lang3.ArrayUtils.subarray(charArray1, (int) (short) -1, 4); java.lang.String str12 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray1, "Boolean[]"); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray1), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray1), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray1), "[a]"); org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[a]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertNotNull(charArray10); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray10), "a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray10), "[a]"); org.junit.Assert.assertEquals("'" + str12 + "' != '" + "char[]" + "'", str12, "char[]"); }
public void test0424() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0424"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 'a', 0, (double) 0L); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) 100L); double[] doubleArray14 = new double[] { 10L, 0 }; double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, 0, (int) 'a'); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (-1L), 10); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray14); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.add(doubleArray21, (double) 1L); double[] doubleArray26 = new double[] { 10L, 0 }; double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray26, 0, (int) 'a'); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) (-1L), 10); int int36 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray26, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean37 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray26); int int39 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray26, (double) 10); java.lang.String str41 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray26, "hi!"); double[] doubleArray44 = new double[] { 10L, 0 }; double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray44, 0, (int) 'a'); boolean boolean48 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray26, doubleArray44); boolean boolean49 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray23, doubleArray26); double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray23, (double) (short) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0, 10.0, 0.0, 1.0]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1); org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false); org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0); org.junit.Assert.assertEquals("'" + str41 + "' != '" + "double[]" + "'", str41, "double[]"); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true); org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false); org.junit.Assert.assertNotNull(doubleArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, 0.0, 1.0]"); }
public void test0425() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0425"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray19, (double) (-1L), (int) (short) 0, (double) 0L); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray19); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray19, 0.0d, (double) 5); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2); }
public void test0426() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0426"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray18 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray18, 100, 0); boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, true); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, false); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray21); boolean[] booleanArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray21, false); java.lang.String str30 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) false, "hi!"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]"); org.junit.Assert.assertNotNull(booleanArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray28), "[]"); org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Boolean" + "'", str30, "Boolean"); }
public void test0427() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0427"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("$"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: $"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0428() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0428"); long[] longArray1 = new long[] { (short) 1 }; long[][] longArray2 = new long[][] { longArray1 }; long[][] longArray3 = new long[][] {}; long[][] longArray4 = org.apache.commons.lang3.ArrayUtils.addAll(longArray2, longArray3); boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(longArray4); java.lang.String[] strArray16 = new java.lang.String[] { "boolean[]", "0", "Double", "java.lang", "0", "{class [Ljava.lang.Class;,class [Z,class [Z,class [Z,class [Z}", "Byte", "Float", "char[]", "Class[]" }; java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>(); boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16); java.util.List<java.lang.Class<?>> wildcardClassList19 = org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses((java.util.List<java.lang.String>) strList17); int int21 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) longArray4, (java.lang.Object) strList17, (-1)); org.junit.Assert.assertNotNull(longArray1); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray1), "[1]"); org.junit.Assert.assertNotNull(longArray2); org.junit.Assert.assertNotNull(longArray3); org.junit.Assert.assertNotNull(longArray4); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(strArray16); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true); org.junit.Assert.assertNotNull(wildcardClassList19); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); }
public void test0429() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0429"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (int) (byte) 1, (int) (short) 100); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray61, 0); double[] doubleArray66 = new double[] { 10L, 0 }; double[] doubleArray69 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray66, 0, (int) 'a'); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) (-1L), 10); int int76 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray66, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean77 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray66); int int79 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray66, (double) 10); java.lang.String str81 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray66, "hi!"); double[] doubleArray84 = new double[] { 10L, 0 }; double[] doubleArray87 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray84, 0, (int) 'a'); boolean boolean88 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray66, doubleArray84); double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray66); double[] doubleArray91 = org.apache.commons.lang3.ArrayUtils.add(doubleArray89, (double) (short) 10); double[] doubleArray93 = org.apache.commons.lang3.ArrayUtils.add(doubleArray91, (double) 10.0f); boolean boolean94 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray63, doubleArray93); boolean boolean95 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray93); boolean boolean97 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray93, (double) (byte) -1); int int99 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray93, (double) 6); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0]"); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray69); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false); org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0); org.junit.Assert.assertEquals("'" + str81 + "' != '" + "double[]" + "'", str81, "double[]"); org.junit.Assert.assertNotNull(doubleArray84); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray87); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray91); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray93); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false); org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false); org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false); org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1)); }
public void test0430() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0430"); float[] floatArray0 = new float[] {}; float[] floatArray3 = new float[] { (-1.0f), '#' }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray0, floatArray3); float[] floatArray5 = new float[] {}; float[] floatArray8 = new float[] { (-1.0f), '#' }; boolean boolean9 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray5, floatArray8); boolean boolean10 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray3, floatArray8); float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY; float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray11, 0.0f); float[] floatArray14 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray8, floatArray13); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) floatArray13, "double[]"); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray5), "[]"); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false); org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[]"); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]"); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[-1.0, 35.0]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "float[]" + "'", str16, "float[]"); }
public void test0431() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0431"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray14, (double) (short) -1, (int) (short) 10, (double) 4); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray14, (int) '$', (int) (byte) 10); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray23, (double) (short) 0, (double) 6); java.lang.String str28 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) (short) 0, "{false,false,false}"); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0" + "'", str28, "0"); }
public void test0432() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0432"); java.lang.Character[] charArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY; java.lang.Character[] charArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray0); char[] charArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray0); java.lang.String str4 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) charArray2, "{32,0,0,100}"); char[] charArray7 = new char[] { 'a', '4' }; char[] charArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray7); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(charArray8, '4', 0); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(charArray8, '#', 4); char[] charArray16 = org.apache.commons.lang3.ArrayUtils.add(charArray8, 'a'); boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(charArray2, charArray8); java.lang.Character[] charArray18 = org.apache.commons.lang3.ArrayUtils.toObject(charArray8); org.junit.Assert.assertNotNull(charArray0); org.junit.Assert.assertNotNull(charArray1); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray2), ""); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray2), ""); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray2), "[]"); org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, ""); org.junit.Assert.assertNotNull(charArray7); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray7), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray7), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray7), "[a, 4]"); org.junit.Assert.assertNotNull(charArray8); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "a4"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "a4"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[a, 4]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(charArray16); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "a4a"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "a4a"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[a, 4, a]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertNotNull(charArray18); }
public void test0433() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0433"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean[] booleanArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray3); boolean boolean12 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray10, true); java.lang.Boolean[] booleanArray13 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray10); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray13, false); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, true); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray10), "[false, false, false]"); org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false); org.junit.Assert.assertNotNull(booleanArray13); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1)); }
public void test0434() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0434"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); java.lang.Byte[] byteArray10 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; boolean boolean11 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) intArray6, (java.lang.Object[]) byteArray10); byte[] byteArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10); java.lang.Byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray10); java.lang.Object obj14 = null; boolean boolean15 = org.apache.commons.lang3.ArrayUtils.contains((java.lang.Object[]) byteArray10, obj14); byte[] byteArray17 = org.apache.commons.lang3.ArrayUtils.toPrimitive(byteArray10, (byte) 1); boolean[] booleanArray21 = new boolean[] { false, false, false }; boolean[] booleanArray23 = new boolean[] { true }; boolean[] booleanArray24 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray21, booleanArray23); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray21, ""); java.lang.String str27 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray21); boolean[] booleanArray29 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, false); java.lang.Boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.toObject(booleanArray29); java.lang.Object[] objArray31 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) booleanArray30); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) byteArray10, (java.lang.Object) booleanArray30); boolean[] booleanArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(booleanArray30); int int35 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray33, true); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(byteArray10); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false); org.junit.Assert.assertNotNull(byteArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false); org.junit.Assert.assertNotNull(byteArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true]"); org.junit.Assert.assertNotNull(booleanArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray24), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "boolean[]" + "'", str26, "boolean[]"); org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{false,false,false}" + "'", str27, "{false,false,false}"); org.junit.Assert.assertNotNull(booleanArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray29), "[false, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertNotNull(objArray31); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[false, false, false, false]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(booleanArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray33), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1)); }
public void test0435() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0435"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); java.lang.Object obj5 = null; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray2, obj5, (int) 'a'); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) -1); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 0); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray12, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); int int17 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(shortArray12, (short) (byte) 10, 9); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[10, 0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[10, 0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); }
public void test0436() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0436"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) doubleArray20); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); }
public void test0437() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0437"); // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass1 = org.apache.commons.lang3.ClassUtils.getClass("Boolean"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Boolean"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0438() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0438"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); java.lang.Object obj5 = null; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray2, obj5, (int) 'a'); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) -1); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 0); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray12, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); // The following exception was thrown during execution in test generation try { short[] shortArray16 = org.apache.commons.lang3.ArrayUtils.remove(shortArray12, (int) (short) 100); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Length: 2"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[10, 0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[10, 0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); }
public void test0439() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0439"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (double) (-1)); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) (short) -1, 10.0d); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); }
public void test0440() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0440"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 10, (double) 1.0f); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, 0.0d, (int) (short) 1, (double) 'a'); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) ' ', 10); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray31, (double) (byte) 10); int int46 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 100L, (double) 10); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 10.0, 0.0, 10.0]"); org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1)); }
public void test0441() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0441"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, (int) (short) 10, (int) (short) 10); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray25, 10.0d); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray25, (double) (byte) 1); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]"); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); }
public void test0442() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0442"); long[] longArray5 = new long[] { (short) -1, (short) 10, 1, (short) -1, (byte) 0 }; java.lang.Long[] longArray6 = org.apache.commons.lang3.ArrayUtils.toObject(longArray5); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6); java.lang.Long[] longArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(longArray6); long[] longArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray6, (long) ' '); java.lang.Double[] doubleArray11 = new java.lang.Double[] {}; java.lang.Double[] doubleArray12 = new java.lang.Double[] {}; java.lang.Double[] doubleArray13 = new java.lang.Double[] {}; java.lang.Double[] doubleArray14 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray15 = new java.lang.Double[][] { doubleArray11, doubleArray12, doubleArray13, doubleArray14 }; java.lang.Double[] doubleArray16 = new java.lang.Double[] {}; java.lang.Double[] doubleArray17 = new java.lang.Double[] {}; java.lang.Double[] doubleArray18 = new java.lang.Double[] {}; java.lang.Double[] doubleArray19 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray20 = new java.lang.Double[][] { doubleArray16, doubleArray17, doubleArray18, doubleArray19 }; java.lang.Double[] doubleArray21 = new java.lang.Double[] {}; java.lang.Double[] doubleArray22 = new java.lang.Double[] {}; java.lang.Double[] doubleArray23 = new java.lang.Double[] {}; java.lang.Double[] doubleArray24 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray25 = new java.lang.Double[][] { doubleArray21, doubleArray22, doubleArray23, doubleArray24 }; java.lang.Double[] doubleArray26 = new java.lang.Double[] {}; java.lang.Double[] doubleArray27 = new java.lang.Double[] {}; java.lang.Double[] doubleArray28 = new java.lang.Double[] {}; java.lang.Double[] doubleArray29 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray30 = new java.lang.Double[][] { doubleArray26, doubleArray27, doubleArray28, doubleArray29 }; java.lang.Double[] doubleArray31 = new java.lang.Double[] {}; java.lang.Double[] doubleArray32 = new java.lang.Double[] {}; java.lang.Double[] doubleArray33 = new java.lang.Double[] {}; java.lang.Double[] doubleArray34 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray35 = new java.lang.Double[][] { doubleArray31, doubleArray32, doubleArray33, doubleArray34 }; java.lang.Double[] doubleArray36 = new java.lang.Double[] {}; java.lang.Double[] doubleArray37 = new java.lang.Double[] {}; java.lang.Double[] doubleArray38 = new java.lang.Double[] {}; java.lang.Double[] doubleArray39 = new java.lang.Double[] {}; java.lang.Double[][] doubleArray40 = new java.lang.Double[][] { doubleArray36, doubleArray37, doubleArray38, doubleArray39 }; java.lang.Double[][][] doubleArray41 = new java.lang.Double[][][] { doubleArray15, doubleArray20, doubleArray25, doubleArray30, doubleArray35, doubleArray40 }; java.lang.Double[] doubleArray44 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray47 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray50 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[] doubleArray53 = new java.lang.Double[] { (-1.0d), 10.0d }; java.lang.Double[][] doubleArray54 = new java.lang.Double[][] { doubleArray44, doubleArray47, doubleArray50, doubleArray53 }; double[] doubleArray58 = new double[] { 'a', 10.0d, (byte) 0 }; int int61 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, (double) '.', (double) 10); java.lang.String str63 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray58, "java.lang"); int int66 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, 0.0d, (int) (short) 100); double[] doubleArray70 = new double[] { 'a', 10.0d, (byte) 0 }; int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray70, (double) '.', (double) 10); double[] doubleArray74 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray58, doubleArray70); double[] doubleArray76 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray58, (int) (byte) 0); java.lang.Double[][] doubleArray77 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray54, (java.lang.Object) doubleArray58); java.lang.Double[][][] doubleArray78 = org.apache.commons.lang3.ArrayUtils.add(doubleArray41, doubleArray77); java.lang.String str79 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) doubleArray78); boolean boolean80 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) longArray6, (java.lang.Object[]) doubleArray78); org.junit.Assert.assertNotNull(longArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray5), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray6); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(longArray8); org.junit.Assert.assertNotNull(longArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray10), "[-1, 10, 1, -1, 0]"); org.junit.Assert.assertNotNull(doubleArray11); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertNotNull(doubleArray32); org.junit.Assert.assertNotNull(doubleArray33); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertNotNull(doubleArray35); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertNotNull(doubleArray40); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertNotNull(doubleArray53); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1)); org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, ""); org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1)); org.junit.Assert.assertNotNull(doubleArray70); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1)); org.junit.Assert.assertNotNull(doubleArray74); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray76); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertNotNull(doubleArray78); org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10.0}}}" + "'", str79, "{{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{},{},{},{}},{{-1.0,10.0},{-1.0,10.0},{-1.0,10.0},{-1.0,10.0}}}"); org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false); }
public void test0443() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0443"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName("{{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + ",Class[],{false,false,false}},{java," + "'", str1, ",Class[],{false,false,false}},{java,"); }
public void test0444() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0444"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); java.lang.Double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); }
public void test0445() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0445"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray19 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray20 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray18); java.lang.Class<?>[] wildcardClassArray21 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray20); byte[] byteArray24 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(byteArray24, (byte) 0); byte[] byteArray28 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 10); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(byteArray24); byte[] byteArray31 = org.apache.commons.lang3.ArrayUtils.add(byteArray24, (byte) 0); byte[] byteArray33 = org.apache.commons.lang3.ArrayUtils.removeElement(byteArray24, (byte) 1); java.lang.Byte[] byteArray34 = org.apache.commons.lang3.ArrayUtils.toObject(byteArray33); java.lang.Byte[] byteArray35 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray34); int int37 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray21, (java.lang.Object) byteArray35, (int) (short) -1); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(wildcardClassArray19); org.junit.Assert.assertNotNull(wildcardClassArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(byteArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false); org.junit.Assert.assertNotNull(byteArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[1]"); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); org.junit.Assert.assertNotNull(byteArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 1, 0]"); org.junit.Assert.assertNotNull(byteArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10]"); org.junit.Assert.assertNotNull(byteArray34); org.junit.Assert.assertNotNull(byteArray35); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); }
public void test0446() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0446"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); boolean boolean59 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray58); double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.removeElement(doubleArray58, (double) 10.0f); double[] doubleArray65 = new double[] { 'a', 10.0d, (byte) 0 }; int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) '.', (double) 10); java.lang.String str70 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray65, "java.lang"); int int73 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, 0.0d, (int) (short) 100); double[] doubleArray77 = new double[] { 'a', 10.0d, (byte) 0 }; int int80 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray77, (double) '.', (double) 10); double[] doubleArray81 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray65, doubleArray77); java.lang.Double[] doubleArray82 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray77); int int85 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray77, (double) 10.0f, (double) (byte) 1); double[] doubleArray88 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray77, 1, 1); double[] doubleArray89 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray58, doubleArray77); int int92 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray58, 0.0d, 3); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, ""); org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1)); org.junit.Assert.assertNotNull(doubleArray77); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1)); org.junit.Assert.assertNotNull(doubleArray81); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray82); org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1); org.junit.Assert.assertNotNull(doubleArray88); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[]"); org.junit.Assert.assertNotNull(doubleArray89); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int92 + "' != '" + 5 + "'", int92 == 5); }
public void test0447() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0447"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21); int int26 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray22, (double) 5, 6, (double) (-1.0f)); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray22, (double) 10); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[97.0, 10.0, 0.0, 10.0]"); }
public void test0448() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0448"); float[] floatArray0 = new float[] {}; float[] floatArray3 = new float[] { (-1.0f), '#' }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray0, floatArray3); float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray0, (int) ' ', 4); float[] floatArray8 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY; float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray8, 0.0f); java.lang.Float[] floatArray11 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray13 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray11, (float) 10L); float[] floatArray14 = new float[] {}; float[] floatArray17 = new float[] { (-1.0f), '#' }; boolean boolean18 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray14, floatArray17); float[] floatArray21 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray14, (int) ' ', 4); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray21); float[] floatArray23 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray10, floatArray13); float[] floatArray24 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray23); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) floatArray23, "{10.0,0.0}"); float[] floatArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(floatArray23); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]"); org.junit.Assert.assertNotNull(floatArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray8), "[]"); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]"); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray14), "[]"); org.junit.Assert.assertNotNull(floatArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray17), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false); org.junit.Assert.assertNotNull(floatArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray21), "[]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true); org.junit.Assert.assertNotNull(floatArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray23), "[]"); org.junit.Assert.assertNotNull(floatArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray24), "[]"); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "float[]" + "'", str26, "float[]"); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray27), "[]"); }
public void test0449() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0449"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, (-1), 5); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 10, (double) 1.0f); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, 0.0d, (int) (short) 1, (double) 'a'); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) ' ', 10); int int43 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) 4); // The following exception was thrown during execution in test generation try { double[] doubleArray45 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray31, (int) (short) -1); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1)); org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1)); }
public void test0450() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0450"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); double[] doubleArray12 = new double[] { 'a', 10.0d, (byte) 0 }; int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray12, (double) '.', (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray12, "java.lang"); double[] doubleArray18 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray12); boolean boolean19 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(doubleArray18); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray3, doubleArray18); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray18, (double) (byte) -1, 0, (-1.0d)); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertNotNull(doubleArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1)); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, ""); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1)); }
public void test0451() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0451"); byte[] byteArray0 = new byte[] {}; byte[] byteArray3 = new byte[] { (byte) 10, (byte) 1 }; boolean boolean5 = org.apache.commons.lang3.ArrayUtils.contains(byteArray3, (byte) 0); byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.addAll(byteArray0, byteArray3); byte[] byteArray9 = org.apache.commons.lang3.ArrayUtils.add(byteArray0, (int) (byte) 0, (byte) 100); byte[] byteArray11 = org.apache.commons.lang3.ArrayUtils.remove(byteArray9, 0); byte[] byteArray13 = org.apache.commons.lang3.ArrayUtils.add(byteArray11, (byte) 1); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) byteArray13, "Integer"); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray0), "[]"); org.junit.Assert.assertNotNull(byteArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[10, 1]"); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, 1]"); org.junit.Assert.assertNotNull(byteArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[100]"); org.junit.Assert.assertNotNull(byteArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]"); org.junit.Assert.assertNotNull(byteArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, ""); }
public void test0452() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0452"); float[] floatArray0 = new float[] {}; float[] floatArray3 = new float[] { (-1.0f), '#' }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray0, floatArray3); boolean boolean5 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray3); int int8 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray3, (float) 1L, (int) '.'); float[] floatArray10 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray3, (float) '.'); org.apache.commons.lang3.ArrayUtils.reverse(floatArray10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) floatArray10, "true"); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray10), "[35.0, -1.0]"); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); }
public void test0453() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0453"); int[] intArray2 = new int[] { (byte) 0, 10 }; int[] intArray5 = org.apache.commons.lang3.ArrayUtils.subarray(intArray2, (int) ' ', (int) '#'); java.lang.Integer[] intArray12 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray14 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray12, (int) (byte) 100); int[] intArray15 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray12); int[] intArray20 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray20, 3, 100); int[] intArray24 = org.apache.commons.lang3.ArrayUtils.clone(intArray20); boolean boolean26 = org.apache.commons.lang3.ArrayUtils.contains(intArray24, (int) (byte) 100); int[] intArray29 = org.apache.commons.lang3.ArrayUtils.subarray(intArray24, (int) ' ', 1); boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray15, intArray24); java.lang.String str32 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray24, "-1"); int[] intArray33 = org.apache.commons.lang3.ArrayUtils.clone(intArray24); boolean boolean34 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray2, intArray33); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 10]"); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[]"); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100]"); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(intArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, ""); org.junit.Assert.assertNotNull(intArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false); }
public void test0454() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0454"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName("0"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0" + "'", str1, "0"); }
public void test0455() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0455"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false, (int) '4'); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, false, 9); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); }
public void test0456() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0456"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray20); java.lang.Double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray37); }
public void test0457() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0457"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray3, ""); java.lang.String str9 = org.apache.commons.lang3.ArrayUtils.toString((java.lang.Object) booleanArray3); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(booleanArray3, false); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray3, 4, (int) (byte) 1); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "boolean[]" + "'", str8, "boolean[]"); org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{false,false,false}" + "'", str9, "{false,false,false}"); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); }
public void test0458() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0458"); org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray0 = new org.apache.commons.lang3.ArrayUtils[][] {}; org.apache.commons.lang3.ArrayUtils[][] arrayUtilsArray1 = org.apache.commons.lang3.ArrayUtils.toArray(arrayUtilsArray0); java.lang.Class<?>[] wildcardClassArray2 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) arrayUtilsArray0); int[] intArray5 = new int[] { (byte) 0, 10 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.subarray(intArray5, (int) ' ', (int) '#'); java.lang.Integer[] intArray9 = org.apache.commons.lang3.ArrayUtils.toObject(intArray8); int[] intArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray9); java.lang.Class<?>[] wildcardClassArray11 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray9); boolean boolean13 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray2, wildcardClassArray11, false); org.junit.Assert.assertNotNull(arrayUtilsArray0); org.junit.Assert.assertNotNull(arrayUtilsArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10]"); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[]"); org.junit.Assert.assertNotNull(wildcardClassArray11); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true); }
public void test0459() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0459"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("java"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0460() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0460"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getShortClassName(""); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0461() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0461"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); int int24 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, 0.0d, 4); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (short) 1, (double) 100L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray21, (double) 'a'); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true); }
public void test0462() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0462"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); boolean boolean15 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray14); double[] doubleArray17 = org.apache.commons.lang3.ArrayUtils.add(doubleArray14, (-1.0d)); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int26 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) (-1L), 10); int int30 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray20); int int33 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 10); java.lang.String str35 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray20, "hi!"); double[] doubleArray38 = new double[] { 10L, 0 }; double[] doubleArray41 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray38, 0, (int) 'a'); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray20, doubleArray38); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray20); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray43, 0, (double) (byte) 10); double[] doubleArray47 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray17, doubleArray46); int int51 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray47, (double) 4, 0, (double) ' '); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertNotNull(doubleArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1)); org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0); org.junit.Assert.assertEquals("'" + str35 + "' != '" + "double[]" + "'", str35, "double[]"); org.junit.Assert.assertNotNull(doubleArray38); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray41); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray47); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0); }
public void test0463() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0463"); java.lang.Integer[] intArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY; java.lang.Long[] longArray1 = org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY; long[] longArray3 = org.apache.commons.lang3.ArrayUtils.toPrimitive(longArray1, (long) (byte) 10); org.apache.commons.lang3.ArrayUtils.reverse(longArray3); boolean boolean6 = org.apache.commons.lang3.ArrayUtils.isSameType((java.lang.Object) longArray3, (java.lang.Object) 'a'); long[] longArray7 = org.apache.commons.lang3.ArrayUtils.clone(longArray3); int int9 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) intArray0, (java.lang.Object) longArray3, (int) (byte) -1); java.lang.Integer[] intArray10 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(intArray0); int[] intArray11 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray0); int[] intArray16 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray19 = org.apache.commons.lang3.ArrayUtils.subarray(intArray16, 3, 100); org.apache.commons.lang3.ArrayUtils.reverse(intArray16); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.contains(intArray16, 10); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isNotEmpty(intArray16); java.lang.Integer[] intArray24 = org.apache.commons.lang3.ArrayUtils.toObject(intArray16); int[] intArray26 = org.apache.commons.lang3.ArrayUtils.add(intArray16, (int) (byte) 1); int[] intArray27 = org.apache.commons.lang3.ArrayUtils.addAll(intArray11, intArray16); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray11, "{false}"); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(longArray1); org.junit.Assert.assertNotNull(longArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray3), "[]"); org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false); org.junit.Assert.assertNotNull(longArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray7), "[]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[]"); org.junit.Assert.assertNotNull(intArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[100, 0, 0, 32]"); org.junit.Assert.assertNotNull(intArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true); org.junit.Assert.assertNotNull(intArray24); org.junit.Assert.assertNotNull(intArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 0, 0, 32, 1]"); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[100, 0, 0, 32]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, ""); }
public void test0464() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0464"); double[] doubleArray0 = null; double[] doubleArray2 = org.apache.commons.lang3.ArrayUtils.add(doubleArray0, (double) (-1L)); double[] doubleArray6 = new double[] { 'a', 10.0d, (byte) 0 }; int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, (double) '.', (double) 10); java.lang.String str11 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray6, "java.lang"); int int14 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray6, 0.0d, (int) (short) 100); double[] doubleArray18 = new double[] { 'a', 10.0d, (byte) 0 }; int int21 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray18, (double) '.', (double) 10); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray6, doubleArray18); boolean boolean23 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray18); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray0, doubleArray18); int int27 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray24, (double) 3, (double) 100L); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[-1.0]"); org.junit.Assert.assertNotNull(doubleArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, ""); org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1)); org.junit.Assert.assertNotNull(doubleArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1)); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2); }
public void test0465() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0465"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = new double[] { 10L, 0 }; double[] doubleArray31 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray28, 0, (int) 'a'); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (-1L), 10); int int38 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean39 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); int int41 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) 10); int int45 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray28, (double) 3, 0, 0.0d); boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray25, doubleArray28); double[] doubleArray50 = new double[] { 'a', 10.0d, (byte) 0 }; int int53 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray50, (double) '.', (double) 10); java.lang.String str55 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray50, "java.lang"); int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray50, 0.0d, (int) (short) 100); double[] doubleArray62 = new double[] { 'a', 10.0d, (byte) 0 }; int int65 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray62, (double) '.', (double) 10); double[] doubleArray66 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray50, doubleArray62); java.lang.Double[] doubleArray67 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray62); double[] doubleArray68 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray25, doubleArray62); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1); org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0); org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1)); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1)); org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, ""); org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1)); org.junit.Assert.assertNotNull(doubleArray62); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1)); org.junit.Assert.assertNotNull(doubleArray66); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray67); org.junit.Assert.assertNotNull(doubleArray68); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[10.0, 0.0, 97.0, 10.0, 0.0]"); }
public void test0466() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0466"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) (byte) 0, (double) 100L); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) 1.0f); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray2, ""); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) '#', (int) (short) 0); double[] doubleArray21 = new double[] { 10L, 0 }; double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (-1L), 10); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) 10); java.lang.String str36 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray21, "hi!"); double[] doubleArray39 = new double[] { 10L, 0 }; double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray39, 0, (int) 'a'); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray21, doubleArray39); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, (double) (short) 10); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) 10.0f); double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray46); java.lang.Double[] doubleArray50 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray49); java.lang.Double[] doubleArray51 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray50); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 1.0]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double[]" + "'", str15, "double[]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "double[]" + "'", str36, "double[]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0, 10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray50); org.junit.Assert.assertNotNull(doubleArray51); }
public void test0467() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0467"); float[] floatArray3 = new float[] { ' ', 10.0f, (short) 0 }; float[] floatArray7 = new float[] { ' ', 10.0f, (short) 0 }; float[] floatArray11 = new float[] { ' ', 10.0f, (short) 0 }; float[][] floatArray12 = new float[][] { floatArray3, floatArray7, floatArray11 }; float[] floatArray13 = new float[] {}; float[] floatArray16 = new float[] { (-1.0f), '#' }; boolean boolean17 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray13, floatArray16); float[] floatArray20 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray13, (int) ' ', 4); float[] floatArray22 = org.apache.commons.lang3.ArrayUtils.add(floatArray13, (float) '#'); float[][] floatArray23 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray12, (java.lang.Object) floatArray13); float[] floatArray25 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray13, 0.0f); float[] floatArray26 = new float[] {}; float[] floatArray29 = new float[] { (-1.0f), '#' }; boolean boolean30 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray26, floatArray29); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray29); int int34 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(floatArray29, (float) 1L, (int) '.'); boolean boolean36 = org.apache.commons.lang3.ArrayUtils.contains(floatArray29, (float) (short) 10); float[] floatArray37 = new float[] {}; float[] floatArray40 = new float[] { (-1.0f), '#' }; boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray37, floatArray40); float[] floatArray42 = new float[] {}; float[] floatArray45 = new float[] { (-1.0f), '#' }; boolean boolean46 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray42, floatArray45); boolean boolean47 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray40, floatArray45); float[] floatArray48 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY; float[] floatArray50 = org.apache.commons.lang3.ArrayUtils.removeElement(floatArray48, 0.0f); float[] floatArray51 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray45, floatArray50); float[] floatArray52 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray29, floatArray50); int int54 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray29, (float) (-1)); float[] floatArray55 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray25, floatArray29); int int58 = org.apache.commons.lang3.ArrayUtils.indexOf(floatArray25, (float) ' ', 1); java.lang.String str60 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) floatArray25, "{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , "); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[32.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[32.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray11), "[32.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(floatArray12); org.junit.Assert.assertNotNull(floatArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray13), "[]"); org.junit.Assert.assertNotNull(floatArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray16), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray20), "[]"); org.junit.Assert.assertNotNull(floatArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray22), "[35.0]"); org.junit.Assert.assertNotNull(floatArray23); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray25), "[]"); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray26), "[]"); org.junit.Assert.assertNotNull(floatArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray29), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1)); org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false); org.junit.Assert.assertNotNull(floatArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray37), "[]"); org.junit.Assert.assertNotNull(floatArray40); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray40), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertNotNull(floatArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray42), "[]"); org.junit.Assert.assertNotNull(floatArray45); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray45), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false); org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray48), "[]"); org.junit.Assert.assertNotNull(floatArray50); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray50), "[]"); org.junit.Assert.assertNotNull(floatArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray51), "[-1.0, 35.0]"); org.junit.Assert.assertNotNull(floatArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray52), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0); org.junit.Assert.assertNotNull(floatArray55); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray55), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1)); org.junit.Assert.assertEquals("'" + str60 + "' != '" + "float[]" + "'", str60, "float[]"); }
public void test0468() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0468"); java.lang.Float[][][] floatArray0 = new java.lang.Float[][][] {}; java.lang.Float[] floatArray4 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray5 = new java.lang.Float[][] { floatArray4 }; java.lang.Float[] floatArray9 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray10 = new java.lang.Float[][] { floatArray9 }; java.lang.Float[] floatArray14 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray15 = new java.lang.Float[][] { floatArray14 }; java.lang.Float[] floatArray19 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray20 = new java.lang.Float[][] { floatArray19 }; java.lang.Float[] floatArray24 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray25 = new java.lang.Float[][] { floatArray24 }; java.lang.Float[][][] floatArray26 = new java.lang.Float[][][] { floatArray5, floatArray10, floatArray15, floatArray20, floatArray25 }; java.lang.Float[][][] floatArray27 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray0, floatArray26); java.lang.Float[][][] floatArray28 = new java.lang.Float[][][] {}; java.lang.Float[] floatArray32 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray33 = new java.lang.Float[][] { floatArray32 }; java.lang.Float[] floatArray37 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray38 = new java.lang.Float[][] { floatArray37 }; java.lang.Float[] floatArray42 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray43 = new java.lang.Float[][] { floatArray42 }; java.lang.Float[] floatArray47 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray48 = new java.lang.Float[][] { floatArray47 }; java.lang.Float[] floatArray52 = new java.lang.Float[] { 10.0f, 0.0f, 0.0f }; java.lang.Float[][] floatArray53 = new java.lang.Float[][] { floatArray52 }; java.lang.Float[][][] floatArray54 = new java.lang.Float[][][] { floatArray33, floatArray38, floatArray43, floatArray48, floatArray53 }; java.lang.Float[][][] floatArray55 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray28, floatArray54); java.lang.Float[][][] floatArray56 = org.apache.commons.lang3.ArrayUtils.addAll(floatArray26, floatArray55); java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) floatArray55); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray4); org.junit.Assert.assertNotNull(floatArray5); org.junit.Assert.assertNotNull(floatArray9); org.junit.Assert.assertNotNull(floatArray10); org.junit.Assert.assertNotNull(floatArray14); org.junit.Assert.assertNotNull(floatArray15); org.junit.Assert.assertNotNull(floatArray19); org.junit.Assert.assertNotNull(floatArray20); org.junit.Assert.assertNotNull(floatArray24); org.junit.Assert.assertNotNull(floatArray25); org.junit.Assert.assertNotNull(floatArray26); org.junit.Assert.assertNotNull(floatArray27); org.junit.Assert.assertNotNull(floatArray28); org.junit.Assert.assertNotNull(floatArray32); org.junit.Assert.assertNotNull(floatArray33); org.junit.Assert.assertNotNull(floatArray37); org.junit.Assert.assertNotNull(floatArray38); org.junit.Assert.assertNotNull(floatArray42); org.junit.Assert.assertNotNull(floatArray43); org.junit.Assert.assertNotNull(floatArray47); org.junit.Assert.assertNotNull(floatArray48); org.junit.Assert.assertNotNull(floatArray52); org.junit.Assert.assertNotNull(floatArray53); org.junit.Assert.assertNotNull(floatArray54); org.junit.Assert.assertNotNull(floatArray55); org.junit.Assert.assertNotNull(floatArray56); org.junit.Assert.assertNotNull(wildcardClassArray57); }
public void test0469() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0469"); java.lang.Byte[] byteArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY; java.lang.Byte[] byteArray1 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) byteArray0); java.lang.Class<?> wildcardClass4 = org.apache.commons.lang3.ClassUtils.getClass("double[]"); int int5 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) byteArray0, (java.lang.Object) wildcardClass4); java.lang.Byte[] byteArray6 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray0); java.lang.Byte[] byteArray7 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(byteArray6); org.junit.Assert.assertNotNull(byteArray0); org.junit.Assert.assertNotNull(byteArray1); org.junit.Assert.assertNotNull(wildcardClass4); org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1)); org.junit.Assert.assertNotNull(byteArray6); org.junit.Assert.assertNotNull(byteArray7); }
public void test0470() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0470"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("{{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "{{java," + "'", str1, "{{java,"); }
public void test0471() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0471"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Integer[][] intArray8 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray9 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray10 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray11 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray12 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray13 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray14 = new java.lang.Integer[][][] { intArray8, intArray9, intArray10, intArray11, intArray12, intArray13 }; java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray28 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray43 = new java.lang.Integer[][] { intArray21, intArray28, intArray35, intArray42 }; java.lang.Integer[][] intArray45 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray43, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray46 = org.apache.commons.lang3.ArrayUtils.add(intArray14, intArray43); java.lang.Class<?>[] wildcardClassArray47 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray46); long[] longArray51 = new long[] { (byte) 100, (short) 10, (byte) 1 }; boolean boolean53 = org.apache.commons.lang3.ArrayUtils.contains(longArray51, (long) 'a'); int int55 = org.apache.commons.lang3.ArrayUtils.indexOf(longArray51, (long) '4'); int int56 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray47, (java.lang.Object) '4'); boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray47, true); java.lang.Class<?>[] wildcardClassArray59 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); // The following exception was thrown during execution in test generation try { java.lang.reflect.AnnotatedElement[] annotatedElementArray61 = org.apache.commons.lang3.ArrayUtils.remove((java.lang.reflect.AnnotatedElement[]) wildcardClassArray59, (int) (byte) 0); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertNotNull(intArray10); org.junit.Assert.assertNotNull(intArray11); org.junit.Assert.assertNotNull(intArray12); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertNotNull(intArray21); org.junit.Assert.assertNotNull(intArray28); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray42); org.junit.Assert.assertNotNull(intArray43); org.junit.Assert.assertNotNull(intArray45); org.junit.Assert.assertNotNull(intArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertNotNull(longArray51); org.junit.Assert.assertEquals(java.util.Arrays.toString(longArray51), "[100, 10, 1]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false); org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1)); org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1)); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false); org.junit.Assert.assertNotNull(wildcardClassArray59); }
public void test0472() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0472"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(",Class[],{false,false,false}}}"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0473() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0473"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false); boolean[] booleanArray18 = new boolean[] { false, false, false }; boolean[] booleanArray20 = new boolean[] { true }; boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray18, booleanArray20); boolean boolean22 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray14, booleanArray18); boolean[] booleanArray23 = null; boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(booleanArray14, booleanArray23); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) booleanArray14, ""); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray20), "[true]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); }
public void test0474() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0474"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("0.0"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "0" + "'", str1, "0"); }
public void test0475() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0475"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("double[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0476() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0476"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); int[] intArray14 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray14, 3, 100); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray14); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) (byte) 100); int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) ' ', 1); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray18); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray18, "-1"); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray18, 4, 6); int int32 = org.apache.commons.lang3.ArrayUtils.indexOf(intArray18, 1, 5); int[] intArray35 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) 'a', 2); // The following exception was thrown during execution in test generation try { int[] intArray37 = org.apache.commons.lang3.ArrayUtils.remove(intArray18, (int) '4'); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Length: 4"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1)); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[]"); }
public void test0477() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0477"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray18 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray21 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray18, 100, 0); boolean[] booleanArray23 = org.apache.commons.lang3.ArrayUtils.add(booleanArray21, true); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray21, false); boolean[] booleanArray26 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray12, booleanArray21); boolean[] booleanArray27 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray21); java.lang.String str29 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) booleanArray27, ", Character, boolean[], Double, Double][]"); boolean[] booleanArray30 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(booleanArray27); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray18), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray21), "[]"); org.junit.Assert.assertNotNull(booleanArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray23), "[true]"); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); org.junit.Assert.assertNotNull(booleanArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray26), "[]"); org.junit.Assert.assertNotNull(booleanArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray27), "[]"); org.junit.Assert.assertEquals("'" + str29 + "' != '" + "boolean[]" + "'", str29, "boolean[]"); org.junit.Assert.assertNotNull(booleanArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray30), "[]"); }
public void test0478() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0478"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); int int29 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray25, (double) 3, (int) ' ', 0.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1)); }
public void test0479() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0479"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.remove(doubleArray3, (int) (byte) 0); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray21); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray22, 3, (int) '#'); double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[]"); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[]"); }
public void test0480() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0480"); java.lang.ClassLoader classLoader0 = null; // The following exception was thrown during execution in test generation try { java.lang.Class<?> wildcardClass2 = org.apache.commons.lang3.ClassUtils.getClass(classLoader0, "lang"); org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: lang"); } catch (java.lang.ClassNotFoundException e) { // Expected exception. } }
public void test0481() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0481"); java.lang.Character[] charArray2 = new java.lang.Character[] { '4', '$' }; java.lang.Character[] charArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(charArray2); char[] charArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3); char[] charArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(charArray3, '$'); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) charArray3, "{}"); org.junit.Assert.assertNotNull(charArray2); org.junit.Assert.assertNotNull(charArray3); org.junit.Assert.assertNotNull(charArray4); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray4), "4$"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray4), "4$"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray4), "[4, $]"); org.junit.Assert.assertNotNull(charArray6); org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray6), "4$"); org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray6), "4$"); org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray6), "[4, $]"); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Character[]" + "'", str8, "Character[]"); }
public void test0482() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0482"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray14 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray3, (int) (byte) 10, 5); int int16 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d); int int19 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) (short) 100, (double) (byte) 0); double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray14); int int22 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, (double) 10L); int int25 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray14, 0.0d, 5); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[]"); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1)); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[]"); org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1)); org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1)); }
public void test0483() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0483"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); boolean boolean11 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray2, (double) (byte) 0, (double) 100L); double[] doubleArray13 = org.apache.commons.lang3.ArrayUtils.add(doubleArray2, (double) 1.0f); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) doubleArray2, ""); int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) '#', (int) (short) 0); double[] doubleArray21 = new double[] { 10L, 0 }; double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray21, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) (-1L), 10); int int31 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray21, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean32 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray21); int int34 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray21, (double) 10); java.lang.String str36 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray21, "hi!"); double[] doubleArray39 = new double[] { 10L, 0 }; double[] doubleArray42 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray39, 0, (int) 'a'); boolean boolean43 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray21, doubleArray39); double[] doubleArray44 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray21); double[] doubleArray46 = org.apache.commons.lang3.ArrayUtils.add(doubleArray44, (double) (short) 10); double[] doubleArray48 = org.apache.commons.lang3.ArrayUtils.add(doubleArray46, (double) 10.0f); double[] doubleArray49 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray2, doubleArray46); boolean boolean52 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray46, (double) 10L, (double) (-1L)); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true); org.junit.Assert.assertNotNull(doubleArray13); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[10.0, 0.0, 1.0]"); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "double[]" + "'", str15, "double[]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1); org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false); org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0); org.junit.Assert.assertEquals("'" + str36 + "' != '" + "double[]" + "'", str36, "double[]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray42); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true); org.junit.Assert.assertNotNull(doubleArray44); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray46); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[10.0, 0.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray48); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[10.0, 0.0, 10.0, 10.0]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0, 10.0, 0.0, 10.0]"); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false); }
public void test0484() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0484"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray20); java.lang.Double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); int int23 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) doubleArray20); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3); }
public void test0485() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0485"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); short[] shortArray6 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2, (short) (byte) -1); double[] doubleArray10 = new double[] { 'a', 10.0d, (byte) 0 }; int int13 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray10, (double) '.', (double) 10); java.lang.String str15 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray10, "java.lang"); double[] doubleArray16 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray16, (int) ' ', (int) (byte) 10); int int20 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) shortArray2, (java.lang.Object) ' '); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray6), "[10, 0]"); org.junit.Assert.assertNotNull(doubleArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1)); org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, ""); org.junit.Assert.assertNotNull(doubleArray16); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[]"); org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1)); }
public void test0486() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0486"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName("$"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0487() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0487"); java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 10, (short) 0 }; java.lang.Short[] shortArray3 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray4 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray2); java.lang.Object obj5 = null; int int7 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) shortArray2, obj5, (int) 'a'); java.lang.Short[] shortArray8 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray2); short[] shortArray10 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) -1); short[] shortArray12 = org.apache.commons.lang3.ArrayUtils.toPrimitive(shortArray8, (short) 0); java.lang.String str14 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) shortArray12, "[{}, String, {false,false,false}, {false,false,false}, true, boolean[], , $, Character, {}, java.lang, 0, , ., Character, boolean[], Double, Double]"); short[] shortArray15 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(shortArray12); org.junit.Assert.assertNotNull(shortArray2); org.junit.Assert.assertNotNull(shortArray3); org.junit.Assert.assertNotNull(shortArray4); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray4), "[10, 0]"); org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1)); org.junit.Assert.assertNotNull(shortArray8); org.junit.Assert.assertNotNull(shortArray10); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray10), "[10, 0]"); org.junit.Assert.assertNotNull(shortArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray12), "[10, 0]"); org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, ""); org.junit.Assert.assertNotNull(shortArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(shortArray15), "[10, 0]"); }
public void test0488() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0488"); boolean[] booleanArray5 = new boolean[] { true, true, false, false, false }; boolean[] booleanArray8 = org.apache.commons.lang3.ArrayUtils.subarray(booleanArray5, 100, 0); int int10 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray8, false); boolean[] booleanArray12 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray8, true); boolean[] booleanArray14 = org.apache.commons.lang3.ArrayUtils.removeElement(booleanArray12, false); java.lang.String str16 = org.apache.commons.lang3.ClassUtils.getShortClassName((java.lang.Object) booleanArray12, "Double"); // The following exception was thrown during execution in test generation try { boolean[] booleanArray18 = org.apache.commons.lang3.ArrayUtils.remove(booleanArray12, (int) (byte) 0); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Length: 0"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true, true, false, false, false]"); org.junit.Assert.assertNotNull(booleanArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray8), "[]"); org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1)); org.junit.Assert.assertNotNull(booleanArray12); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray12), "[]"); org.junit.Assert.assertNotNull(booleanArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray14), "[]"); org.junit.Assert.assertEquals("'" + str16 + "' != '" + "boolean[]" + "'", str16, "boolean[]"); }
public void test0489() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0489"); java.lang.Float[] floatArray0 = org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY; float[] floatArray2 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray0, (float) (byte) 0); java.lang.Float[] floatArray3 = org.apache.commons.lang3.ArrayUtils.toObject(floatArray2); java.lang.Object[] objArray4 = org.apache.commons.lang3.ArrayUtils.nullToEmpty((java.lang.Object[]) floatArray3); double[] doubleArray8 = new double[] { 'a', 10.0d, (byte) 0 }; int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, (double) '.', (double) 10); java.lang.String str13 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray8, "java.lang"); int int16 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray8, 0.0d, (int) (short) 100); double[] doubleArray20 = new double[] { 'a', 10.0d, (byte) 0 }; int int23 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) '.', (double) 10); double[] doubleArray24 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray8, doubleArray20); java.lang.Double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); java.lang.Double[] doubleArray26 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray25); double[] doubleArray27 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26); double[] doubleArray29 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26, (double) (byte) 10); double[] doubleArray30 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray26); boolean boolean31 = org.apache.commons.lang3.ArrayUtils.isSameLength((java.lang.Object[]) floatArray3, (java.lang.Object[]) doubleArray26); float[] floatArray33 = org.apache.commons.lang3.ArrayUtils.toPrimitive(floatArray3, (float) 0); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertNotNull(floatArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray2), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertNotNull(objArray4); org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]"); org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]"); org.junit.Assert.assertNotNull(doubleArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, ""); org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1)); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1)); org.junit.Assert.assertNotNull(doubleArray24); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertNotNull(doubleArray26); org.junit.Assert.assertNotNull(doubleArray27); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray29); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray30); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false); org.junit.Assert.assertNotNull(floatArray33); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray33), "[]"); }
public void test0490() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0490"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray5); java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; java.lang.Class[] classArray23 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, wildcardClassArray24, false); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray24, wildcardClassArray32); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class[] classArray38 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38; java.lang.Class[] classArray41 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray42 = (java.lang.Class<?>[]) classArray41; boolean boolean44 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray38, wildcardClassArray42, false); java.lang.Class[] classArray46 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46; java.lang.Class[] classArray49 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray50 = (java.lang.Class<?>[]) classArray49; boolean boolean52 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray46, wildcardClassArray50, false); boolean boolean53 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray42, wildcardClassArray50); java.lang.Class<?>[] wildcardClassArray54 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray55 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray56 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray57 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray42); java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray42); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray36, wildcardClassArray58); boolean boolean61 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray58, true); int int62 = org.apache.commons.lang3.ArrayUtils.getLength((java.lang.Object) wildcardClassArray58); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(classArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(classArray41); org.junit.Assert.assertNotNull(wildcardClassArray42); org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true); org.junit.Assert.assertNotNull(classArray46); org.junit.Assert.assertNotNull(wildcardClassArray47); org.junit.Assert.assertNotNull(classArray49); org.junit.Assert.assertNotNull(wildcardClassArray50); org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertNotNull(wildcardClassArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertNotNull(wildcardClassArray57); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true); org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0); }
public void test0491() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0491"); double[] doubleArray2 = new double[] { 10L, 0 }; double[] doubleArray5 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray2, 0, (int) 'a'); int int8 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) (-1L), 10); int int12 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray2, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean13 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray2); int int15 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray2, (double) 10); java.lang.String str17 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray2, "hi!"); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray2, doubleArray20); double[] doubleArray25 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray2); double[] doubleArray28 = org.apache.commons.lang3.ArrayUtils.add(doubleArray25, 0, (double) (byte) 10); double[] doubleArray31 = new double[] { 10L, 0 }; double[] doubleArray34 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray31, 0, (int) 'a'); int int37 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) (-1L), 10); int int41 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray31, (double) (short) 1, (int) ' ', (double) (short) 10); boolean boolean42 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray31); int int44 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray31, (double) 10); java.lang.String str46 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) doubleArray31, "hi!"); double[] doubleArray49 = new double[] { 10L, 0 }; double[] doubleArray52 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray49, 0, (int) 'a'); boolean boolean53 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray31, doubleArray49); double[] doubleArray54 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray31); double[] doubleArray57 = org.apache.commons.lang3.ArrayUtils.add(doubleArray54, 0, (double) (byte) 10); double[] doubleArray58 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray28, doubleArray57); int int60 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray28, (double) (short) 1); java.lang.Double[] doubleArray61 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray28); boolean boolean62 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray28); double[] doubleArray63 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray28); boolean boolean64 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray63); double[] doubleArray65 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray63); org.apache.commons.lang3.ArrayUtils.reverse(doubleArray65); int int70 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray65, (double) 5, 4, 10.0d); org.junit.Assert.assertNotNull(doubleArray2); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1)); org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1); org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false); org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0); org.junit.Assert.assertEquals("'" + str17 + "' != '" + "double[]" + "'", str17, "double[]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true); org.junit.Assert.assertNotNull(doubleArray25); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray28); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray31); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray34); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1)); org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false); org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0); org.junit.Assert.assertEquals("'" + str46 + "' != '" + "double[]" + "'", str46, "double[]"); org.junit.Assert.assertNotNull(doubleArray49); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray52); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true); org.junit.Assert.assertNotNull(doubleArray54); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray57); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray58); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[10.0, 10.0, 0.0, 10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1)); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false); org.junit.Assert.assertNotNull(doubleArray63); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[10.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false); org.junit.Assert.assertNotNull(doubleArray65); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, 10.0]"); org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1)); }
public void test0492() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0492"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); double[] doubleArray20 = new double[] { 10L, 0 }; double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray20, 0, (int) 'a'); int int27 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray20, (double) 'a', 0, (double) 0L); boolean boolean29 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray20, (double) 100L); int int31 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray17, (java.lang.Object) doubleArray20, (int) '.'); int int35 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(doubleArray20, (double) (short) 10, (int) '#', 0.0d); java.lang.Double[] doubleArray36 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray20); double[] doubleArray37 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36); double[] doubleArray39 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray36, (double) (short) -1); double[] doubleArray40 = null; boolean boolean41 = org.apache.commons.lang3.ArrayUtils.isSameLength(doubleArray39, doubleArray40); double[] doubleArray43 = org.apache.commons.lang3.ArrayUtils.add(doubleArray39, 10.0d); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1)); org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false); org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1)); org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0); org.junit.Assert.assertNotNull(doubleArray36); org.junit.Assert.assertNotNull(doubleArray37); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray39); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false); org.junit.Assert.assertNotNull(doubleArray43); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[10.0, 0.0, 10.0]"); }
public void test0493() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0493"); java.lang.Integer[] intArray6 = new java.lang.Integer[] { 4, (-1), 10, 0, (-1), 100 }; int[] intArray8 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6, (int) (byte) 100); int[] intArray9 = org.apache.commons.lang3.ArrayUtils.toPrimitive(intArray6); int[] intArray14 = new int[] { ' ', (byte) 0, 0, 100 }; int[] intArray17 = org.apache.commons.lang3.ArrayUtils.subarray(intArray14, 3, 100); int[] intArray18 = org.apache.commons.lang3.ArrayUtils.clone(intArray14); boolean boolean20 = org.apache.commons.lang3.ArrayUtils.contains(intArray18, (int) (byte) 100); int[] intArray23 = org.apache.commons.lang3.ArrayUtils.subarray(intArray18, (int) ' ', 1); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray9, intArray18); java.lang.String str26 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) intArray18, "-1"); int[] intArray27 = null; boolean boolean28 = org.apache.commons.lang3.ArrayUtils.isSameLength(intArray18, intArray27); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray8); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray9); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[4, -1, 10, 0, -1, 100]"); org.junit.Assert.assertNotNull(intArray14); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[32, 0, 0, 100]"); org.junit.Assert.assertNotNull(intArray17); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[100]"); org.junit.Assert.assertNotNull(intArray18); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[32, 0, 0, 100]"); org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true); org.junit.Assert.assertNotNull(intArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, ""); org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false); }
public void test0494() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0494"); boolean[] booleanArray3 = new boolean[] { false, false, false }; boolean[] booleanArray5 = new boolean[] { true }; boolean[] booleanArray6 = org.apache.commons.lang3.ArrayUtils.addAll(booleanArray3, booleanArray5); int int9 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray3, true, (int) (short) -1); boolean[] booleanArray11 = org.apache.commons.lang3.ArrayUtils.add(booleanArray3, false); int int14 = org.apache.commons.lang3.ArrayUtils.lastIndexOf(booleanArray11, false, 2); boolean[] booleanArray15 = org.apache.commons.lang3.ArrayUtils.clone(booleanArray11); int int17 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false); int int19 = org.apache.commons.lang3.ArrayUtils.indexOf(booleanArray15, false); java.lang.String str21 = org.apache.commons.lang3.ClassUtils.getShortCanonicalName((java.lang.Object) false, "{false}"); org.junit.Assert.assertNotNull(booleanArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray3), "[false, false, false]"); org.junit.Assert.assertNotNull(booleanArray5); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray5), "[true]"); org.junit.Assert.assertNotNull(booleanArray6); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray6), "[false, false, false, true]"); org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1)); org.junit.Assert.assertNotNull(booleanArray11); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray11), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2); org.junit.Assert.assertNotNull(booleanArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(booleanArray15), "[false, false, false, false]"); org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0); org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0); org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Boolean" + "'", str21, "Boolean"); }
public void test0495() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0495"); java.lang.Integer[][] intArray0 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray1 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray2 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray3 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray4 = new java.lang.Integer[][] {}; java.lang.Integer[][] intArray5 = new java.lang.Integer[][] {}; java.lang.Integer[][][] intArray6 = new java.lang.Integer[][][] { intArray0, intArray1, intArray2, intArray3, intArray4, intArray5 }; java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray27 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 100, 4, 4, 100, 4 }; java.lang.Integer[][] intArray35 = new java.lang.Integer[][] { intArray13, intArray20, intArray27, intArray34 }; java.lang.Integer[][] intArray37 = org.apache.commons.lang3.ArrayUtils.removeElement(intArray35, (java.lang.Object) (-1L)); java.lang.Integer[][][] intArray38 = org.apache.commons.lang3.ArrayUtils.add(intArray6, intArray35); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.toClass((java.lang.Object[]) intArray38); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray39); java.lang.Class[] classArray42 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray43 = (java.lang.Class<?>[]) classArray42; java.lang.Class[] classArray45 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray46 = (java.lang.Class<?>[]) classArray45; boolean boolean48 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray42, wildcardClassArray46, false); java.lang.Class[] classArray50 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray51 = (java.lang.Class<?>[]) classArray50; java.lang.Class[] classArray53 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53; boolean boolean56 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray50, wildcardClassArray54, false); boolean boolean57 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray46, wildcardClassArray54); java.lang.Class<?>[] wildcardClassArray58 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray46); double[] doubleArray61 = new double[] { 10L, 0 }; double[] doubleArray64 = org.apache.commons.lang3.ArrayUtils.subarray(doubleArray61, 0, (int) 'a'); int int68 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray61, (double) 'a', 0, (double) 0L); boolean boolean70 = org.apache.commons.lang3.ArrayUtils.contains(doubleArray61, (double) 100L); int int72 = org.apache.commons.lang3.ArrayUtils.indexOf((java.lang.Object[]) wildcardClassArray58, (java.lang.Object) doubleArray61, (int) '.'); java.lang.Object obj73 = null; int int74 = org.apache.commons.lang3.ArrayUtils.lastIndexOf((java.lang.Object[]) wildcardClassArray58, obj73); boolean boolean75 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray40, wildcardClassArray58); org.apache.commons.lang3.ArrayUtils.reverse((java.lang.Object[]) wildcardClassArray40); org.junit.Assert.assertNotNull(intArray0); org.junit.Assert.assertNotNull(intArray1); org.junit.Assert.assertNotNull(intArray2); org.junit.Assert.assertNotNull(intArray3); org.junit.Assert.assertNotNull(intArray4); org.junit.Assert.assertNotNull(intArray5); org.junit.Assert.assertNotNull(intArray6); org.junit.Assert.assertNotNull(intArray13); org.junit.Assert.assertNotNull(intArray20); org.junit.Assert.assertNotNull(intArray27); org.junit.Assert.assertNotNull(intArray34); org.junit.Assert.assertNotNull(intArray35); org.junit.Assert.assertNotNull(intArray37); org.junit.Assert.assertNotNull(intArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertNotNull(classArray42); org.junit.Assert.assertNotNull(wildcardClassArray43); org.junit.Assert.assertNotNull(classArray45); org.junit.Assert.assertNotNull(wildcardClassArray46); org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true); org.junit.Assert.assertNotNull(classArray50); org.junit.Assert.assertNotNull(wildcardClassArray51); org.junit.Assert.assertNotNull(classArray53); org.junit.Assert.assertNotNull(wildcardClassArray54); org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true); org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true); org.junit.Assert.assertNotNull(wildcardClassArray58); org.junit.Assert.assertNotNull(doubleArray61); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray64); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1)); org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false); org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1)); org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1)); org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false); }
public void test0496() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0496"); java.lang.Class[] classArray1 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray2 = (java.lang.Class<?>[]) classArray1; java.lang.Class[] classArray4 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray5 = (java.lang.Class<?>[]) classArray4; boolean boolean7 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray1, wildcardClassArray5, false); java.lang.Class[] classArray9 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray10 = (java.lang.Class<?>[]) classArray9; java.lang.Class[] classArray12 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12; boolean boolean15 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray9, wildcardClassArray13, false); boolean boolean16 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray5, wildcardClassArray13); java.lang.Class<?>[] wildcardClassArray17 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray5); java.lang.Class<?>[] wildcardClassArray18 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray17); java.lang.Class[] classArray20 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20; java.lang.Class[] classArray23 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23; boolean boolean26 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray20, wildcardClassArray24, false); java.lang.Class[] classArray28 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28; java.lang.Class[] classArray31 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31; boolean boolean34 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray28, wildcardClassArray32, false); boolean boolean35 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray24, wildcardClassArray32); java.lang.Class<?>[] wildcardClassArray36 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray37 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray38 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray39 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); java.lang.Class<?>[] wildcardClassArray40 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray24); boolean boolean42 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray40, true); java.lang.Class[] classArray44 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray45 = (java.lang.Class<?>[]) classArray44; java.lang.Class[] classArray47 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47; boolean boolean50 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray44, wildcardClassArray48, false); java.lang.Class[] classArray52 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52; java.lang.Class[] classArray55 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55; boolean boolean58 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray52, wildcardClassArray56, false); boolean boolean59 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray48, wildcardClassArray56); java.lang.Class<?>[] wildcardClassArray60 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray48); java.lang.Class<?>[] wildcardClassArray61 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray60); java.lang.Class[] classArray63 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray64 = (java.lang.Class<?>[]) classArray63; java.lang.Class[] classArray66 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66; boolean boolean69 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray63, wildcardClassArray67, false); java.lang.Class[] classArray71 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray72 = (java.lang.Class<?>[]) classArray71; java.lang.Class[] classArray74 = new java.lang.Class[0]; @SuppressWarnings("unchecked") java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74; boolean boolean77 = org.apache.commons.lang3.ClassUtils.isAssignable((java.lang.Class<?>[]) classArray71, wildcardClassArray75, false); boolean boolean78 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray67, wildcardClassArray75); java.lang.Class<?>[] wildcardClassArray79 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray67); java.lang.Class<?>[] wildcardClassArray80 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray67); java.lang.Class<?>[] wildcardClassArray81 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray67); java.lang.Class<?>[] wildcardClassArray82 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray67); java.lang.Class<?>[] wildcardClassArray83 = org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(wildcardClassArray67); boolean boolean85 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray61, wildcardClassArray83, true); boolean boolean86 = org.apache.commons.lang3.ClassUtils.isAssignable(wildcardClassArray18, wildcardClassArray83); java.lang.Class<?>[] wildcardClassArray87 = org.apache.commons.lang3.ClassUtils.primitivesToWrappers(wildcardClassArray83); org.junit.Assert.assertNotNull(classArray1); org.junit.Assert.assertNotNull(wildcardClassArray2); org.junit.Assert.assertNotNull(classArray4); org.junit.Assert.assertNotNull(wildcardClassArray5); org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true); org.junit.Assert.assertNotNull(classArray9); org.junit.Assert.assertNotNull(wildcardClassArray10); org.junit.Assert.assertNotNull(classArray12); org.junit.Assert.assertNotNull(wildcardClassArray13); org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true); org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true); org.junit.Assert.assertNotNull(wildcardClassArray17); org.junit.Assert.assertNotNull(wildcardClassArray18); org.junit.Assert.assertNotNull(classArray20); org.junit.Assert.assertNotNull(wildcardClassArray21); org.junit.Assert.assertNotNull(classArray23); org.junit.Assert.assertNotNull(wildcardClassArray24); org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true); org.junit.Assert.assertNotNull(classArray28); org.junit.Assert.assertNotNull(wildcardClassArray29); org.junit.Assert.assertNotNull(classArray31); org.junit.Assert.assertNotNull(wildcardClassArray32); org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true); org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true); org.junit.Assert.assertNotNull(wildcardClassArray36); org.junit.Assert.assertNotNull(wildcardClassArray37); org.junit.Assert.assertNotNull(wildcardClassArray38); org.junit.Assert.assertNotNull(wildcardClassArray39); org.junit.Assert.assertNotNull(wildcardClassArray40); org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true); org.junit.Assert.assertNotNull(classArray44); org.junit.Assert.assertNotNull(wildcardClassArray45); org.junit.Assert.assertNotNull(classArray47); org.junit.Assert.assertNotNull(wildcardClassArray48); org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true); org.junit.Assert.assertNotNull(classArray52); org.junit.Assert.assertNotNull(wildcardClassArray53); org.junit.Assert.assertNotNull(classArray55); org.junit.Assert.assertNotNull(wildcardClassArray56); org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true); org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true); org.junit.Assert.assertNotNull(wildcardClassArray60); org.junit.Assert.assertNotNull(wildcardClassArray61); org.junit.Assert.assertNotNull(classArray63); org.junit.Assert.assertNotNull(wildcardClassArray64); org.junit.Assert.assertNotNull(classArray66); org.junit.Assert.assertNotNull(wildcardClassArray67); org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true); org.junit.Assert.assertNotNull(classArray71); org.junit.Assert.assertNotNull(wildcardClassArray72); org.junit.Assert.assertNotNull(classArray74); org.junit.Assert.assertNotNull(wildcardClassArray75); org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true); org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true); org.junit.Assert.assertNotNull(wildcardClassArray79); org.junit.Assert.assertNotNull(wildcardClassArray80); org.junit.Assert.assertNotNull(wildcardClassArray81); org.junit.Assert.assertNotNull(wildcardClassArray82); org.junit.Assert.assertNotNull(wildcardClassArray83); org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true); org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true); org.junit.Assert.assertNotNull(wildcardClassArray87); }
public void test0497() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0497"); java.lang.String str1 = org.apache.commons.lang3.ClassUtils.getPackageName("Class[]"); org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, ""); }
public void test0498() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0498"); float[] floatArray0 = new float[] {}; float[] floatArray3 = new float[] { (-1.0f), '#' }; boolean boolean4 = org.apache.commons.lang3.ArrayUtils.isSameLength(floatArray0, floatArray3); float[] floatArray7 = org.apache.commons.lang3.ArrayUtils.subarray(floatArray3, 3, 0); boolean boolean8 = org.apache.commons.lang3.ArrayUtils.isEmpty(floatArray3); java.lang.String str10 = org.apache.commons.lang3.ClassUtils.getPackageCanonicalName((java.lang.Object) boolean8, "{{java,.,Class[],{false,false,false}},{java,.,Class[],{false,false,false}},{java,"); org.junit.Assert.assertNotNull(floatArray0); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray0), "[]"); org.junit.Assert.assertNotNull(floatArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray3), "[-1.0, 35.0]"); org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false); org.junit.Assert.assertNotNull(floatArray7); org.junit.Assert.assertEquals(java.util.Arrays.toString(floatArray7), "[]"); org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false); org.junit.Assert.assertEquals("'" + str10 + "' != '" + "java.lang" + "'", str10, "java.lang"); }
public void test0499() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0499"); double[] doubleArray3 = new double[] { 'a', 10.0d, (byte) 0 }; int int6 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, (double) '.', (double) 10); java.lang.String str8 = org.apache.commons.lang3.ClassUtils.getPackageName((java.lang.Object) doubleArray3, "java.lang"); int int11 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray3, 0.0d, (int) (short) 100); double[] doubleArray15 = new double[] { 'a', 10.0d, (byte) 0 }; int int18 = org.apache.commons.lang3.ArrayUtils.indexOf(doubleArray15, (double) '.', (double) 10); double[] doubleArray19 = org.apache.commons.lang3.ArrayUtils.addAll(doubleArray3, doubleArray15); java.lang.Double[] doubleArray20 = org.apache.commons.lang3.ArrayUtils.toObject(doubleArray15); java.lang.Double[] doubleArray21 = org.apache.commons.lang3.ArrayUtils.nullToEmpty(doubleArray20); double[] doubleArray22 = org.apache.commons.lang3.ArrayUtils.toPrimitive(doubleArray21); double[] doubleArray23 = org.apache.commons.lang3.ArrayUtils.clone(doubleArray22); boolean boolean24 = org.apache.commons.lang3.ArrayUtils.isEmpty(doubleArray22); org.junit.Assert.assertNotNull(doubleArray3); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1)); org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, ""); org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1)); org.junit.Assert.assertNotNull(doubleArray15); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1)); org.junit.Assert.assertNotNull(doubleArray19); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[97.0, 10.0, 0.0, 97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray20); org.junit.Assert.assertNotNull(doubleArray21); org.junit.Assert.assertNotNull(doubleArray22); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertNotNull(doubleArray23); org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[97.0, 10.0, 0.0]"); org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false); }
public void test0500() throws Throwable { if (debug) System.out.format("%n%s%n", "RegressionTest0.test0500"); org.apache.commons.lang3.ClassUtils classUtils0 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils[] classUtilsArray1 = new org.apache.commons.lang3.ClassUtils[] { classUtils0 }; org.apache.commons.lang3.ClassUtils classUtils2 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils[] classUtilsArray3 = new org.apache.commons.lang3.ClassUtils[] { classUtils2 }; org.apache.commons.lang3.ClassUtils classUtils4 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils[] classUtilsArray5 = new org.apache.commons.lang3.ClassUtils[] { classUtils4 }; org.apache.commons.lang3.ClassUtils[][] classUtilsArray6 = new org.apache.commons.lang3.ClassUtils[][] { classUtilsArray1, classUtilsArray3, classUtilsArray5 }; org.apache.commons.lang3.ClassUtils classUtils8 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils9 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils[] classUtilsArray10 = new org.apache.commons.lang3.ClassUtils[] { classUtils8, classUtils9 }; org.apache.commons.lang3.ClassUtils classUtils11 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils12 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils13 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils14 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils15 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils classUtils16 = new org.apache.commons.lang3.ClassUtils(); org.apache.commons.lang3.ClassUtils[] classUtilsArray17 = new org.apache.commons.lang3.ClassUtils[] { classUtils11, classUtils12, classUtils13, classUtils14, classUtils15, classUtils16 }; org.apache.commons.lang3.ClassUtils[] classUtilsArray18 = org.apache.commons.lang3.ArrayUtils.addAll(classUtilsArray10, classUtilsArray17); // The following exception was thrown during execution in test generation try { org.apache.commons.lang3.ClassUtils[][] classUtilsArray19 = org.apache.commons.lang3.ArrayUtils.add(classUtilsArray6, (int) '.', classUtilsArray18); org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 46, Length: 3"); } catch (java.lang.IndexOutOfBoundsException e) { // Expected exception. } org.junit.Assert.assertNotNull(classUtilsArray1); org.junit.Assert.assertNotNull(classUtilsArray3); org.junit.Assert.assertNotNull(classUtilsArray5); org.junit.Assert.assertNotNull(classUtilsArray6); org.junit.Assert.assertNotNull(classUtilsArray10); org.junit.Assert.assertNotNull(classUtilsArray17); org.junit.Assert.assertNotNull(classUtilsArray18); }
