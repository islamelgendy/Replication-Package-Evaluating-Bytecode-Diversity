Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test01
Start line: 12
End line: 30
Method source code: 
    public void test01() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test01");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector0, (double) (short) -1);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray3 = new org.apache.commons.math.optimization.linear.LinearConstraint[] {};
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList4 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList4, linearConstraintArray3);
        org.apache.commons.math.optimization.GoalType goalType6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau9 = new org.apache.commons.math.optimization.linear.SimplexTableau(linearObjectiveFunction2, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList4, goalType6, false, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(linearConstraintArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #6
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: ldc2_w        #9
34: invokespecial #11
37: astore_2
38: iconst_0
39: anewarray     #12
42: astore_3
43: new           #13
46: dup
47: invokespecial #14
50: astore        4
52: aload         4
54: aload_3
55: invokestatic  #15
58: istore        5
60: aconst_null
61: astore        6
63: new           #16
66: dup
67: aload_2
68: aload         4
70: aload         6
72: iconst_0
73: ldc2_w        #17
76: invokespecial #19
79: astore        7
81: ldc           #20
83: invokestatic  #21
86: goto          91
89: astore        7
91: aload_3
92: invokestatic  #23
95: new           #24
98: dup
99: invokespecial #25
102: ldc           #26
104: invokevirtual #27
107: iload         5
109: invokevirtual #28
112: ldc           #29
114: invokevirtual #27
117: iconst_0
118: invokevirtual #28
121: ldc           #26
123: invokevirtual #27
126: invokevirtual #30
129: iload         5
131: ifne          138
134: iconst_1
135: goto          139
138: iconst_0
139: invokestatic  #31
142: return
Exception table:
from    to  target type
63    86    89   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test02
Start line: 33
End line: 51
Method source code: 
    public void test02() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test02");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector0, (double) (short) -1);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray3 = new org.apache.commons.math.optimization.linear.LinearConstraint[] {};
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList4 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList4, linearConstraintArray3);
        org.apache.commons.math.optimization.GoalType goalType6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau10 = new org.apache.commons.math.optimization.linear.SimplexTableau(linearObjectiveFunction2, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList4, goalType6, false, (double) (short) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(linearConstraintArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #32
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: ldc2_w        #9
34: invokespecial #11
37: astore_2
38: iconst_0
39: anewarray     #12
42: astore_3
43: new           #13
46: dup
47: invokespecial #14
50: astore        4
52: aload         4
54: aload_3
55: invokestatic  #15
58: istore        5
60: aconst_null
61: astore        6
63: new           #16
66: dup
67: aload_2
68: aload         4
70: aload         6
72: iconst_0
73: ldc2_w        #33
76: iconst_m1
77: invokespecial #35
80: astore        7
82: ldc           #20
84: invokestatic  #21
87: goto          92
90: astore        7
92: aload_3
93: invokestatic  #23
96: new           #24
99: dup
100: invokespecial #25
103: ldc           #26
105: invokevirtual #27
108: iload         5
110: invokevirtual #28
113: ldc           #29
115: invokevirtual #27
118: iconst_0
119: invokevirtual #28
122: ldc           #26
124: invokevirtual #27
127: invokevirtual #30
130: iload         5
132: ifne          139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #31
143: return
Exception table:
from    to  target type
63    87    90   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test03
Start line: 54
End line: 83
Method source code: 
    public void test03() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test03");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector0, (double) (short) -1);
        double[] doubleArray3 = new double[] {};
        org.apache.commons.math.optimization.linear.Relationship relationship5 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix8 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int9 = array2DRowRealMatrix8.getRowDimension();
        double[] doubleArray11 = array2DRowRealMatrix8.getColumn((int) (byte) 10);
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint13 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray3, (double) '4', relationship5, doubleArray11, (double) 3);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray14 = new org.apache.commons.math.optimization.linear.LinearConstraint[] { linearConstraint13 };
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList15 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList15, linearConstraintArray14);
        org.apache.commons.math.optimization.GoalType goalType17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau21 = new org.apache.commons.math.optimization.linear.SimplexTableau(linearObjectiveFunction2, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList15, goalType17, false, (double) (short) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(linearConstraintArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #36
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: ldc2_w        #9
34: invokespecial #11
37: astore_2
38: iconst_0
39: newarray       double
41: astore_3
42: aconst_null
43: astore        4
45: new           #37
48: dup
49: iconst_3
50: bipush        97
52: invokespecial #38
55: astore        5
57: aload         5
59: invokevirtual #39
62: istore        6
64: aload         5
66: bipush        10
68: invokevirtual #40
71: astore        7
73: new           #12
76: dup
77: aload_3
78: ldc2_w        #41
81: aload         4
83: aload         7
85: ldc2_w        #43
88: invokespecial #45
91: astore        8
93: iconst_1
94: anewarray     #12
97: dup
98: iconst_0
99: aload         8
101: aastore
102: astore        9
104: new           #13
107: dup
108: invokespecial #14
111: astore        10
113: aload         10
115: aload         9
117: invokestatic  #15
120: istore        11
122: aconst_null
123: astore        12
125: new           #16
128: dup
129: aload_2
130: aload         10
132: aload         12
134: iconst_0
135: ldc2_w        #33
138: bipush        32
140: invokespecial #35
143: astore        13
145: ldc           #20
147: invokestatic  #21
150: goto          155
153: astore        13
155: aload_3
156: invokestatic  #23
159: aload_3
160: invokestatic  #46
163: ldc           #47
165: invokestatic  #48
168: new           #24
171: dup
172: invokespecial #25
175: ldc           #26
177: invokevirtual #27
180: iload         6
182: invokevirtual #49
185: ldc           #29
187: invokevirtual #27
190: iconst_3
191: invokevirtual #49
194: ldc           #26
196: invokevirtual #27
199: invokevirtual #30
202: iload         6
204: iconst_3
205: if_icmpne     212
208: iconst_1
209: goto          213
212: iconst_0
213: invokestatic  #31
216: aload         7
218: invokestatic  #23
221: aload         7
223: invokestatic  #46
226: ldc           #50
228: invokestatic  #48
231: aload         9
233: invokestatic  #23
236: new           #24
239: dup
240: invokespecial #25
243: ldc           #26
245: invokevirtual #27
248: iload         11
250: invokevirtual #28
253: ldc           #29
255: invokevirtual #27
258: iconst_1
259: invokevirtual #28
262: ldc           #26
264: invokevirtual #27
267: invokevirtual #30
270: iload         11
272: iconst_1
273: if_icmpne     280
276: iconst_1
277: goto          281
280: iconst_0
281: invokestatic  #31
284: return
Exception table:
from    to  target type
125   150   153   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test04
Start line: 86
End line: 103
Method source code: 
    public void test04() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test04");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector0, (double) (short) -1);
        boolean boolean4 = linearObjectiveFunction2.equals((java.lang.Object) 1L);
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection5 = null;
        org.apache.commons.math.optimization.GoalType goalType6 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau9 = new org.apache.commons.math.optimization.linear.SimplexTableau(linearObjectiveFunction2, linearConstraintCollection5, goalType6, true, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + goalType6 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType6.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #51
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: ldc2_w        #9
34: invokespecial #11
37: astore_2
38: aload_2
39: lconst_1
40: invokestatic  #52
43: invokevirtual #53
46: istore_3
47: aconst_null
48: astore        4
50: getstatic     #54
53: astore        5
55: new           #16
58: dup
59: aload_2
60: aload         4
62: aload         5
64: iconst_1
65: ldc2_w        #9
68: invokespecial #19
71: astore        6
73: ldc           #20
75: invokestatic  #21
78: goto          83
81: astore        6
83: new           #24
86: dup
87: invokespecial #25
90: ldc           #26
92: invokevirtual #27
95: iload_3
96: invokevirtual #28
99: ldc           #29
101: invokevirtual #27
104: iconst_0
105: invokevirtual #28
108: ldc           #26
110: invokevirtual #27
113: invokevirtual #30
116: iload_3
117: ifne          124
120: iconst_1
121: goto          125
124: iconst_0
125: invokestatic  #31
128: new           #24
131: dup
132: invokespecial #25
135: ldc           #26
137: invokevirtual #27
140: aload         5
142: invokevirtual #55
145: ldc           #29
147: invokevirtual #27
150: getstatic     #54
153: invokevirtual #55
156: ldc           #26
158: invokevirtual #27
161: invokevirtual #30
164: aload         5
166: getstatic     #54
169: invokevirtual #56
172: invokestatic  #31
175: return
Exception table:
from    to  target type
55    78    81   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test05
Start line: 106
End line: 136
Method source code: 
    public void test05() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test05");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector0, (double) (short) -1);
        double[] doubleArray3 = new double[] {};
        org.apache.commons.math.optimization.linear.Relationship relationship5 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix8 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int9 = array2DRowRealMatrix8.getRowDimension();
        double[] doubleArray11 = array2DRowRealMatrix8.getColumn((int) (byte) 10);
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint13 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray3, (double) '4', relationship5, doubleArray11, (double) 3);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray14 = new org.apache.commons.math.optimization.linear.LinearConstraint[] { linearConstraint13 };
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList15 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList15, linearConstraintArray14);
        org.apache.commons.math.optimization.GoalType goalType17 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau21 = new org.apache.commons.math.optimization.linear.SimplexTableau(linearObjectiveFunction2, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList15, goalType17, false, (-4.503599627370496E17d), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(linearConstraintArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + goalType17 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType17.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #57
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: ldc2_w        #9
34: invokespecial #11
37: astore_2
38: iconst_0
39: newarray       double
41: astore_3
42: aconst_null
43: astore        4
45: new           #37
48: dup
49: iconst_3
50: bipush        97
52: invokespecial #38
55: astore        5
57: aload         5
59: invokevirtual #39
62: istore        6
64: aload         5
66: bipush        10
68: invokevirtual #40
71: astore        7
73: new           #12
76: dup
77: aload_3
78: ldc2_w        #41
81: aload         4
83: aload         7
85: ldc2_w        #43
88: invokespecial #45
91: astore        8
93: iconst_1
94: anewarray     #12
97: dup
98: iconst_0
99: aload         8
101: aastore
102: astore        9
104: new           #13
107: dup
108: invokespecial #14
111: astore        10
113: aload         10
115: aload         9
117: invokestatic  #15
120: istore        11
122: getstatic     #54
125: astore        12
127: new           #16
130: dup
131: aload_2
132: aload         10
134: aload         12
136: iconst_0
137: ldc2_w        #58
140: bipush        97
142: invokespecial #35
145: astore        13
147: ldc           #20
149: invokestatic  #21
152: goto          157
155: astore        13
157: aload_3
158: invokestatic  #23
161: aload_3
162: invokestatic  #46
165: ldc           #47
167: invokestatic  #48
170: new           #24
173: dup
174: invokespecial #25
177: ldc           #26
179: invokevirtual #27
182: iload         6
184: invokevirtual #49
187: ldc           #29
189: invokevirtual #27
192: iconst_3
193: invokevirtual #49
196: ldc           #26
198: invokevirtual #27
201: invokevirtual #30
204: iload         6
206: iconst_3
207: if_icmpne     214
210: iconst_1
211: goto          215
214: iconst_0
215: invokestatic  #31
218: aload         7
220: invokestatic  #23
223: aload         7
225: invokestatic  #46
228: ldc           #50
230: invokestatic  #48
233: aload         9
235: invokestatic  #23
238: new           #24
241: dup
242: invokespecial #25
245: ldc           #26
247: invokevirtual #27
250: iload         11
252: invokevirtual #28
255: ldc           #29
257: invokevirtual #27
260: iconst_1
261: invokevirtual #28
264: ldc           #26
266: invokevirtual #27
269: invokevirtual #30
272: iload         11
274: iconst_1
275: if_icmpne     282
278: iconst_1
279: goto          283
282: iconst_0
283: invokestatic  #31
286: new           #24
289: dup
290: invokespecial #25
293: ldc           #26
295: invokevirtual #27
298: aload         12
300: invokevirtual #55
303: ldc           #29
305: invokevirtual #27
308: getstatic     #54
311: invokevirtual #55
314: ldc           #26
316: invokevirtual #27
319: invokevirtual #30
322: aload         12
324: getstatic     #54
327: invokevirtual #56
330: invokestatic  #31
333: return
Exception table:
from    to  target type
127   152   155   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test06
Start line: 139
End line: 159
Method source code: 
    public void test06() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test06");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector0, (double) (short) -1);
        double double3 = linearObjectiveFunction2.getConstantTerm();
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection4 = null;
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver7 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver7.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType10 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver7.goal = goalType10;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau15 = new org.apache.commons.math.optimization.linear.SimplexTableau(linearObjectiveFunction2, linearConstraintCollection4, goalType10, false, (double) 4, (int) (byte) -100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-1.0d) + "'", double3 == (-1.0d));
        org.junit.Assert.assertTrue("'" + goalType10 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType10.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #60
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: ldc2_w        #9
34: invokespecial #11
37: astore_2
38: aload_2
39: invokevirtual #61
42: dstore_3
43: aconst_null
44: astore        5
46: new           #62
49: dup
50: ldc2_w        #17
53: ldc           #63
55: invokespecial #64
58: astore        6
60: aload         6
62: iconst_0
63: putfield      #65
66: getstatic     #54
69: astore        7
71: aload         6
73: aload         7
75: putfield      #66
78: new           #16
81: dup
82: aload_2
83: aload         5
85: aload         7
87: iconst_0
88: ldc2_w        #67
91: bipush        -100
93: invokespecial #35
96: astore        8
98: ldc           #20
100: invokestatic  #21
103: goto          108
106: astore        8
108: new           #24
111: dup
112: invokespecial #25
115: ldc           #26
117: invokevirtual #27
120: dload_3
121: invokevirtual #69
124: ldc           #29
126: invokevirtual #27
129: ldc2_w        #9
132: invokevirtual #69
135: ldc           #26
137: invokevirtual #27
140: invokevirtual #30
143: dload_3
144: ldc2_w        #9
147: dcmpl
148: ifne          155
151: iconst_1
152: goto          156
155: iconst_0
156: invokestatic  #31
159: new           #24
162: dup
163: invokespecial #25
166: ldc           #26
168: invokevirtual #27
171: aload         7
173: invokevirtual #55
176: ldc           #29
178: invokevirtual #27
181: getstatic     #54
184: invokevirtual #55
187: ldc           #26
189: invokevirtual #27
192: invokevirtual #30
195: aload         7
197: getstatic     #54
200: invokevirtual #56
203: invokestatic  #31
206: return
Exception table:
from    to  target type
78   103   106   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test07
Start line: 162
End line: 261
Method source code: 
    public void test07() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test07");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver2.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType5 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver2.goal = goalType5;
        int int7 = simplexSolver2.getMaxIterations();
        org.apache.commons.math.optimization.GoalType goalType8 = simplexSolver2.goal;
        org.apache.commons.math.linear.RealVector realVector9 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction11 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector9, (double) (short) -1);
        double double12 = linearObjectiveFunction11.getConstantTerm();
        double[] doubleArray17 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray17);
        org.apache.commons.math.linear.RealVector realVector20 = arrayRealVector18.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector18);
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        java.lang.String str28 = arrayRealVector27.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector29 = arrayRealVector27.copy();
        org.apache.commons.math.linear.RealVector realVector30 = arrayRealVector18.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector29);
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        java.lang.String str37 = arrayRealVector36.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = arrayRealVector36.copy();
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector36.mapAddToSelf((double) (short) 100);
        double double41 = realVector30.getDistance(realVector40);
        double[] doubleArray46 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray46);
        java.lang.String str48 = arrayRealVector47.toString();
        org.apache.commons.math.linear.RealVector realVector50 = arrayRealVector47.mapDivideToSelf((double) (byte) 0);
        org.apache.commons.math.linear.RealVector realVector51 = realVector30.projection((org.apache.commons.math.linear.RealVector) arrayRealVector47);
        org.apache.commons.math.optimization.linear.Relationship relationship52 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship53 = relationship52.oppositeRelationship();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint55 = new org.apache.commons.math.optimization.linear.LinearConstraint(realVector51, relationship52, 0.0d);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix58 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int59 = array2DRowRealMatrix58.getRowDimension();
        double[] doubleArray61 = array2DRowRealMatrix58.getRow(1);
        org.apache.commons.math.optimization.linear.Relationship relationship62 = org.apache.commons.math.optimization.linear.Relationship.GEQ;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint64 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray61, relationship62, 0.9866275920404853d);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix67 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int68 = array2DRowRealMatrix67.getRowDimension();
        double[] doubleArray70 = array2DRowRealMatrix67.getRow(1);
        org.apache.commons.math.optimization.linear.Relationship relationship71 = org.apache.commons.math.optimization.linear.Relationship.GEQ;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint73 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray70, relationship71, 0.9866275920404853d);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray74 = new org.apache.commons.math.optimization.linear.LinearConstraint[] { linearConstraint55, linearConstraint64, linearConstraint73 };
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList75 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList75, linearConstraintArray74);
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver79 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver79.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType82 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver79.goal = goalType82;
        int int84 = simplexSolver79.getMaxIterations();
        org.apache.commons.math.optimization.GoalType goalType85 = simplexSolver79.goal;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair87 = simplexSolver2.optimize(linearObjectiveFunction11, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList75, goalType85, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType5 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType5.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + goalType8 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType8.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{0; 10; (NaN); 10}" + "'", str28, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector29);
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{0; 10; (NaN); 10}" + "'", str37, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector38);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{0; 10; (NaN); 10}" + "'", str48, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector50);
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertTrue("'" + relationship52 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship52.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship53 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship53.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + relationship62 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.GEQ + "'", relationship62.equals(org.apache.commons.math.optimization.linear.Relationship.GEQ));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + relationship71 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.GEQ + "'", relationship71.equals(org.apache.commons.math.optimization.linear.Relationship.GEQ));
        org.junit.Assert.assertNotNull(linearConstraintArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + goalType82 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType82.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 100 + "'", int84 == 100);
        org.junit.Assert.assertTrue("'" + goalType85 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType85.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #70
19: aastore
20: invokevirtual #7
23: pop
24: new           #62
27: dup
28: ldc2_w        #17
31: ldc           #63
33: invokespecial #64
36: astore_1
37: aload_1
38: iconst_0
39: putfield      #65
42: getstatic     #54
45: astore_2
46: aload_1
47: aload_2
48: putfield      #66
51: aload_1
52: invokevirtual #71
55: istore_3
56: aload_1
57: getfield      #66
60: astore        4
62: aconst_null
63: astore        5
65: new           #8
68: dup
69: aload         5
71: ldc2_w        #9
74: invokespecial #11
77: astore        6
79: aload         6
81: invokevirtual #61
84: dstore        7
86: iconst_4
87: newarray       double
89: dup
90: iconst_0
91: dconst_0
92: dastore
93: dup
94: iconst_1
95: ldc2_w        #17
98: dastore
99: dup
100: iconst_2
101: ldc2_w        #73
104: dastore
105: dup
106: iconst_3
107: ldc2_w        #17
110: dastore
111: astore        9
113: new           #75
116: dup
117: aload         9
119: invokespecial #76
122: astore        10
124: aload         10
126: ldc2_w        #33
129: invokevirtual #77
132: astore        11
134: new           #75
137: dup
138: aload         10
140: invokespecial #78
143: astore        12
145: iconst_4
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #17
157: dastore
158: dup
159: iconst_2
160: ldc2_w        #73
163: dastore
164: dup
165: iconst_3
166: ldc2_w        #17
169: dastore
170: astore        13
172: new           #75
175: dup
176: aload         13
178: invokespecial #76
181: astore        14
183: aload         14
185: invokevirtual #79
188: astore        15
190: aload         14
192: invokevirtual #80
195: astore        16
197: aload         10
199: aload         16
201: invokevirtual #81
204: astore        17
206: iconst_4
207: newarray       double
209: dup
210: iconst_0
211: dconst_0
212: dastore
213: dup
214: iconst_1
215: ldc2_w        #17
218: dastore
219: dup
220: iconst_2
221: ldc2_w        #73
224: dastore
225: dup
226: iconst_3
227: ldc2_w        #17
230: dastore
231: astore        18
233: new           #75
236: dup
237: aload         18
239: invokespecial #76
242: astore        19
244: aload         19
246: invokevirtual #79
249: astore        20
251: aload         19
253: invokevirtual #80
256: astore        21
258: aload         19
260: ldc2_w        #33
263: invokevirtual #82
266: astore        22
268: aload         17
270: aload         22
272: invokevirtual #83
275: dstore        23
277: iconst_4
278: newarray       double
280: dup
281: iconst_0
282: dconst_0
283: dastore
284: dup
285: iconst_1
286: ldc2_w        #17
289: dastore
290: dup
291: iconst_2
292: ldc2_w        #73
295: dastore
296: dup
297: iconst_3
298: ldc2_w        #17
301: dastore
302: astore        25
304: new           #75
307: dup
308: aload         25
310: invokespecial #76
313: astore        26
315: aload         26
317: invokevirtual #79
320: astore        27
322: aload         26
324: dconst_0
325: invokevirtual #84
328: astore        28
330: aload         17
332: aload         26
334: invokevirtual #85
337: astore        29
339: getstatic     #86
342: astore        30
344: aload         30
346: invokevirtual #87
349: astore        31
351: new           #12
354: dup
355: aload         29
357: aload         30
359: dconst_0
360: invokespecial #88
363: astore        32
365: new           #37
368: dup
369: iconst_3
370: bipush        97
372: invokespecial #38
375: astore        33
377: aload         33
379: invokevirtual #39
382: istore        34
384: aload         33
386: iconst_1
387: invokevirtual #89
390: astore        35
392: getstatic     #90
395: astore        36
397: new           #12
400: dup
401: aload         35
403: aload         36
405: ldc2_w        #91
408: invokespecial #93
411: astore        37
413: new           #37
416: dup
417: iconst_3
418: bipush        97
420: invokespecial #38
423: astore        38
425: aload         38
427: invokevirtual #39
430: istore        39
432: aload         38
434: iconst_1
435: invokevirtual #89
438: astore        40
440: getstatic     #90
443: astore        41
445: new           #12
448: dup
449: aload         40
451: aload         41
453: ldc2_w        #91
456: invokespecial #93
459: astore        42
461: iconst_3
462: anewarray     #12
465: dup
466: iconst_0
467: aload         32
469: aastore
470: dup
471: iconst_1
472: aload         37
474: aastore
475: dup
476: iconst_2
477: aload         42
479: aastore
480: astore        43
482: new           #13
485: dup
486: invokespecial #14
489: astore        44
491: aload         44
493: aload         43
495: invokestatic  #15
498: istore        45
500: new           #62
503: dup
504: ldc2_w        #17
507: ldc           #63
509: invokespecial #64
512: astore        46
514: aload         46
516: iconst_0
517: putfield      #65
520: getstatic     #54
523: astore        47
525: aload         46
527: aload         47
529: putfield      #66
532: aload         46
534: invokevirtual #71
537: istore        48
539: aload         46
541: getfield      #66
544: astore        49
546: aload_1
547: aload         6
549: aload         44
551: aload         49
553: iconst_0
554: invokevirtual #94
557: astore        50
559: ldc           #20
561: invokestatic  #21
564: goto          569
567: astore        50
569: new           #24
572: dup
573: invokespecial #25
576: ldc           #26
578: invokevirtual #27
581: aload_2
582: invokevirtual #55
585: ldc           #29
587: invokevirtual #27
590: getstatic     #54
593: invokevirtual #55
596: ldc           #26
598: invokevirtual #27
601: invokevirtual #30
604: aload_2
605: getstatic     #54
608: invokevirtual #56
611: invokestatic  #31
614: new           #24
617: dup
618: invokespecial #25
621: ldc           #26
623: invokevirtual #27
626: iload_3
627: invokevirtual #49
630: ldc           #29
632: invokevirtual #27
635: bipush        100
637: invokevirtual #49
640: ldc           #26
642: invokevirtual #27
645: invokevirtual #30
648: iload_3
649: bipush        100
651: if_icmpne     658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #31
662: new           #24
665: dup
666: invokespecial #25
669: ldc           #26
671: invokevirtual #27
674: aload         4
676: invokevirtual #55
679: ldc           #29
681: invokevirtual #27
684: getstatic     #54
687: invokevirtual #55
690: ldc           #26
692: invokevirtual #27
695: invokevirtual #30
698: aload         4
700: getstatic     #54
703: invokevirtual #56
706: invokestatic  #31
709: new           #24
712: dup
713: invokespecial #25
716: ldc           #26
718: invokevirtual #27
721: dload         7
723: invokevirtual #69
726: ldc           #29
728: invokevirtual #27
731: ldc2_w        #9
734: invokevirtual #69
737: ldc           #26
739: invokevirtual #27
742: invokevirtual #30
745: dload         7
747: ldc2_w        #9
750: dcmpl
751: ifne          758
754: iconst_1
755: goto          759
758: iconst_0
759: invokestatic  #31
762: aload         9
764: invokestatic  #23
767: aload         9
769: invokestatic  #46
772: ldc           #95
774: invokestatic  #48
777: aload         11
779: invokestatic  #23
782: aload         13
784: invokestatic  #23
787: aload         13
789: invokestatic  #46
792: ldc           #95
794: invokestatic  #48
797: new           #24
800: dup
801: invokespecial #25
804: ldc           #26
806: invokevirtual #27
809: aload         15
811: invokevirtual #27
814: ldc           #96
816: invokevirtual #27
819: invokevirtual #30
822: aload         15
824: ldc           #97
826: invokestatic  #98
829: aload         16
831: invokestatic  #23
834: aload         17
836: invokestatic  #23
839: aload         18
841: invokestatic  #23
844: aload         18
846: invokestatic  #46
849: ldc           #95
851: invokestatic  #48
854: new           #24
857: dup
858: invokespecial #25
861: ldc           #26
863: invokevirtual #27
866: aload         20
868: invokevirtual #27
871: ldc           #96
873: invokevirtual #27
876: invokevirtual #30
879: aload         20
881: ldc           #97
883: invokestatic  #98
886: aload         21
888: invokestatic  #23
891: aload         22
893: invokestatic  #23
896: dload         23
898: invokestatic  #99
901: invokestatic  #100
904: aload         25
906: invokestatic  #23
909: aload         25
911: invokestatic  #46
914: ldc           #95
916: invokestatic  #48
919: new           #24
922: dup
923: invokespecial #25
926: ldc           #26
928: invokevirtual #27
931: aload         27
933: invokevirtual #27
936: ldc           #96
938: invokevirtual #27
941: invokevirtual #30
944: aload         27
946: ldc           #97
948: invokestatic  #98
951: aload         28
953: invokestatic  #23
956: aload         29
958: invokestatic  #23
961: new           #24
964: dup
965: invokespecial #25
968: ldc           #26
970: invokevirtual #27
973: aload         30
975: invokevirtual #55
978: ldc           #29
980: invokevirtual #27
983: getstatic     #86
986: invokevirtual #55
989: ldc           #26
991: invokevirtual #27
994: invokevirtual #30
997: aload         30
999: getstatic     #86
1002: invokevirtual #101
1005: invokestatic  #31
1008: new           #24
1011: dup
1012: invokespecial #25
1015: ldc           #26
1017: invokevirtual #27
1020: aload         31
1022: invokevirtual #55
1025: ldc           #29
1027: invokevirtual #27
1030: getstatic     #86
1033: invokevirtual #55
1036: ldc           #26
1038: invokevirtual #27
1041: invokevirtual #30
1044: aload         31
1046: getstatic     #86
1049: invokevirtual #101
1052: invokestatic  #31
1055: new           #24
1058: dup
1059: invokespecial #25
1062: ldc           #26
1064: invokevirtual #27
1067: iload         34
1069: invokevirtual #49
1072: ldc           #29
1074: invokevirtual #27
1077: iconst_3
1078: invokevirtual #49
1081: ldc           #26
1083: invokevirtual #27
1086: invokevirtual #30
1089: iload         34
1091: iconst_3
1092: if_icmpne     1099
1095: iconst_1
1096: goto          1100
1099: iconst_0
1100: invokestatic  #31
1103: aload         35
1105: invokestatic  #23
1108: aload         35
1110: invokestatic  #46
1113: ldc           #102
1115: invokestatic  #48
1118: new           #24
1121: dup
1122: invokespecial #25
1125: ldc           #26
1127: invokevirtual #27
1130: aload         36
1132: invokevirtual #55
1135: ldc           #29
1137: invokevirtual #27
1140: getstatic     #90
1143: invokevirtual #55
1146: ldc           #26
1148: invokevirtual #27
1151: invokevirtual #30
1154: aload         36
1156: getstatic     #90
1159: invokevirtual #101
1162: invokestatic  #31
1165: new           #24
1168: dup
1169: invokespecial #25
1172: ldc           #26
1174: invokevirtual #27
1177: iload         39
1179: invokevirtual #49
1182: ldc           #29
1184: invokevirtual #27
1187: iconst_3
1188: invokevirtual #49
1191: ldc           #26
1193: invokevirtual #27
1196: invokevirtual #30
1199: iload         39
1201: iconst_3
1202: if_icmpne     1209
1205: iconst_1
1206: goto          1210
1209: iconst_0
1210: invokestatic  #31
1213: aload         40
1215: invokestatic  #23
1218: aload         40
1220: invokestatic  #46
1223: ldc           #102
1225: invokestatic  #48
1228: new           #24
1231: dup
1232: invokespecial #25
1235: ldc           #26
1237: invokevirtual #27
1240: aload         41
1242: invokevirtual #55
1245: ldc           #29
1247: invokevirtual #27
1250: getstatic     #90
1253: invokevirtual #55
1256: ldc           #26
1258: invokevirtual #27
1261: invokevirtual #30
1264: aload         41
1266: getstatic     #90
1269: invokevirtual #101
1272: invokestatic  #31
1275: aload         43
1277: invokestatic  #23
1280: new           #24
1283: dup
1284: invokespecial #25
1287: ldc           #26
1289: invokevirtual #27
1292: iload         45
1294: invokevirtual #28
1297: ldc           #29
1299: invokevirtual #27
1302: iconst_1
1303: invokevirtual #28
1306: ldc           #26
1308: invokevirtual #27
1311: invokevirtual #30
1314: iload         45
1316: iconst_1
1317: if_icmpne     1324
1320: iconst_1
1321: goto          1325
1324: iconst_0
1325: invokestatic  #31
1328: new           #24
1331: dup
1332: invokespecial #25
1335: ldc           #26
1337: invokevirtual #27
1340: aload         47
1342: invokevirtual #55
1345: ldc           #29
1347: invokevirtual #27
1350: getstatic     #54
1353: invokevirtual #55
1356: ldc           #26
1358: invokevirtual #27
1361: invokevirtual #30
1364: aload         47
1366: getstatic     #54
1369: invokevirtual #56
1372: invokestatic  #31
1375: new           #24
1378: dup
1379: invokespecial #25
1382: ldc           #26
1384: invokevirtual #27
1387: iload         48
1389: invokevirtual #49
1392: ldc           #29
1394: invokevirtual #27
1397: bipush        100
1399: invokevirtual #49
1402: ldc           #26
1404: invokevirtual #27
1407: invokevirtual #30
1410: iload         48
1412: bipush        100
1414: if_icmpne     1421
1417: iconst_1
1418: goto          1422
1421: iconst_0
1422: invokestatic  #31
1425: new           #24
1428: dup
1429: invokespecial #25
1432: ldc           #26
1434: invokevirtual #27
1437: aload         49
1439: invokevirtual #55
1442: ldc           #29
1444: invokevirtual #27
1447: getstatic     #54
1450: invokevirtual #55
1453: ldc           #26
1455: invokevirtual #27
1458: invokevirtual #30
1461: aload         49
1463: getstatic     #54
1466: invokevirtual #56
1469: invokestatic  #31
1472: return
Exception table:
from    to  target type
546   564   567   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test08
Start line: 264
End line: 352
Method source code: 
    public void test08() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test08");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix3 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int4 = array2DRowRealMatrix3.getRowDimension();
        double[] doubleArray6 = array2DRowRealMatrix3.getColumn((int) (byte) 10);
        double[][] doubleArray7 = array2DRowRealMatrix3.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException8 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix9 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray7);
        org.apache.commons.math.linear.RealVector realVector11 = blockRealMatrix9.getColumnVector((int) (short) 10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix12 = blockRealMatrix9.copy();
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix16 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int17 = array2DRowRealMatrix16.getRowDimension();
        double[] doubleArray19 = array2DRowRealMatrix16.getColumn((int) (byte) 10);
        double[][] doubleArray20 = array2DRowRealMatrix16.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException21 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable13, (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix22 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray20);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix24 = blockRealMatrix22.scalarAdd((double) (byte) -1);
        org.apache.commons.math.linear.RealMatrix realMatrix25 = blockRealMatrix12.subtract((org.apache.commons.math.linear.RealMatrix) blockRealMatrix22);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix28 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int29 = array2DRowRealMatrix28.getRowDimension();
        double[] doubleArray31 = array2DRowRealMatrix28.getColumn((int) (byte) 10);
        org.apache.commons.math.linear.RealMatrix realMatrix33 = array2DRowRealMatrix28.getColumnMatrix(10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix34 = blockRealMatrix22.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix28);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix37 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        double[][] doubleArray38 = array2DRowRealMatrix37.getData();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix39 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray38);
        double double40 = array2DRowRealMatrix39.getFrobeniusNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix42 = array2DRowRealMatrix39.scalarAdd((double) 1.2676506E32f);
        org.apache.commons.math.linear.RealMatrix realMatrix44 = realMatrix42.getColumnMatrix(32);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix45 = blockRealMatrix34.add(realMatrix42);
        double[] doubleArray50 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray50);
        org.apache.commons.math.linear.RealVector realVector53 = arrayRealVector51.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector54 = arrayRealVector51.copy();
        double[] doubleArray59 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray59);
        org.apache.commons.math.linear.RealVector realVector62 = arrayRealVector60.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector64 = arrayRealVector60.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector54, arrayRealVector60);
        double[] doubleArray70 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector71 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray70);
        org.apache.commons.math.linear.RealVector realVector72 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray70);
        double double73 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector72);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector74 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector54, realVector72);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.MatrixUtils.solveUpperTriangularSystem((org.apache.commons.math.linear.RealMatrix) blockRealMatrix45, (org.apache.commons.math.linear.RealVector) arrayRealVector54);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.MathIllegalArgumentException; message: 3 != 4");
        } catch (org.apache.commons.math.exception.MathIllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertNotNull(blockRealMatrix12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(blockRealMatrix24);
        org.junit.Assert.assertNotNull(realMatrix25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(realMatrix33);
        org.junit.Assert.assertNotNull(blockRealMatrix34);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix42);
        org.junit.Assert.assertNotNull(realMatrix44);
        org.junit.Assert.assertNotNull(blockRealMatrix45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertNotNull(arrayRealVector54);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertNotNull(realVector64);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #103
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #37
29: dup
30: iconst_3
31: bipush        97
33: invokespecial #38
36: astore_2
37: aload_2
38: invokevirtual #39
41: istore_3
42: aload_2
43: bipush        10
45: invokevirtual #40
48: astore        4
50: aload_2
51: invokevirtual #104
54: astore        5
56: new           #105
59: dup
60: aload_1
61: aload         5
63: checkcast     #106
66: invokespecial #107
69: astore        6
71: new           #108
74: dup
75: aload         5
77: invokespecial #109
80: astore        7
82: aload         7
84: bipush        10
86: invokevirtual #110
89: astore        8
91: aload         7
93: invokevirtual #111
96: astore        9
98: aconst_null
99: astore        10
101: new           #37
104: dup
105: iconst_3
106: bipush        97
108: invokespecial #38
111: astore        11
113: aload         11
115: invokevirtual #39
118: istore        12
120: aload         11
122: bipush        10
124: invokevirtual #40
127: astore        13
129: aload         11
131: invokevirtual #104
134: astore        14
136: new           #105
139: dup
140: aload         10
142: aload         14
144: checkcast     #106
147: invokespecial #107
150: astore        15
152: new           #108
155: dup
156: aload         14
158: invokespecial #109
161: astore        16
163: aload         16
165: ldc2_w        #9
168: invokevirtual #112
171: astore        17
173: aload         9
175: aload         16
177: invokevirtual #113
180: astore        18
182: new           #37
185: dup
186: iconst_3
187: bipush        97
189: invokespecial #38
192: astore        19
194: aload         19
196: invokevirtual #39
199: istore        20
201: aload         19
203: bipush        10
205: invokevirtual #40
208: astore        21
210: aload         19
212: bipush        10
214: invokevirtual #114
217: astore        22
219: aload         16
221: aload         19
223: invokevirtual #115
226: astore        23
228: new           #37
231: dup
232: iconst_3
233: bipush        97
235: invokespecial #38
238: astore        24
240: aload         24
242: invokevirtual #104
245: astore        25
247: new           #37
250: dup
251: aload         25
253: invokespecial #116
256: astore        26
258: aload         26
260: invokevirtual #117
263: dstore        27
265: aload         26
267: ldc2_w        #118
270: invokevirtual #120
273: astore        29
275: aload         29
277: bipush        32
279: invokeinterface #121,  2
284: astore        30
286: aload         23
288: aload         29
290: invokevirtual #115
293: astore        31
295: iconst_4
296: newarray       double
298: dup
299: iconst_0
300: dconst_0
301: dastore
302: dup
303: iconst_1
304: ldc2_w        #17
307: dastore
308: dup
309: iconst_2
310: ldc2_w        #73
313: dastore
314: dup
315: iconst_3
316: ldc2_w        #17
319: dastore
320: astore        32
322: new           #75
325: dup
326: aload         32
328: invokespecial #76
331: astore        33
333: aload         33
335: ldc2_w        #33
338: invokevirtual #77
341: astore        34
343: aload         33
345: invokevirtual #80
348: astore        35
350: iconst_4
351: newarray       double
353: dup
354: iconst_0
355: dconst_0
356: dastore
357: dup
358: iconst_1
359: ldc2_w        #17
362: dastore
363: dup
364: iconst_2
365: ldc2_w        #73
368: dastore
369: dup
370: iconst_3
371: ldc2_w        #17
374: dastore
375: astore        36
377: new           #75
380: dup
381: aload         36
383: invokespecial #76
386: astore        37
388: aload         37
390: ldc2_w        #33
393: invokevirtual #77
396: astore        38
398: aload         37
400: ldc2_w        #122
403: invokevirtual #77
406: astore        39
408: new           #75
411: dup
412: aload         35
414: aload         37
416: invokespecial #124
419: astore        40
421: iconst_4
422: newarray       double
424: dup
425: iconst_0
426: dconst_0
427: dastore
428: dup
429: iconst_1
430: ldc2_w        #17
433: dastore
434: dup
435: iconst_2
436: ldc2_w        #73
439: dastore
440: dup
441: iconst_3
442: ldc2_w        #17
445: dastore
446: astore        41
448: new           #75
451: dup
452: aload         41
454: invokespecial #76
457: astore        42
459: aload         41
461: invokestatic  #125
464: astore        43
466: aload         43
468: invokestatic  #126
471: dstore        44
473: new           #75
476: dup
477: aload         35
479: aload         43
481: invokespecial #127
484: astore        46
486: aload         31
488: aload         35
490: invokestatic  #128
493: ldc           #129
495: invokestatic  #21
498: goto          503
501: astore        47
503: new           #24
506: dup
507: invokespecial #25
510: ldc           #26
512: invokevirtual #27
515: iload_3
516: invokevirtual #49
519: ldc           #29
521: invokevirtual #27
524: iconst_3
525: invokevirtual #49
528: ldc           #26
530: invokevirtual #27
533: invokevirtual #30
536: iload_3
537: iconst_3
538: if_icmpne     545
541: iconst_1
542: goto          546
545: iconst_0
546: invokestatic  #31
549: aload         4
551: invokestatic  #23
554: aload         4
556: invokestatic  #46
559: ldc           #50
561: invokestatic  #48
564: aload         5
566: invokestatic  #23
569: aload         8
571: invokestatic  #23
574: aload         9
576: invokestatic  #23
579: new           #24
582: dup
583: invokespecial #25
586: ldc           #26
588: invokevirtual #27
591: iload         12
593: invokevirtual #49
596: ldc           #29
598: invokevirtual #27
601: iconst_3
602: invokevirtual #49
605: ldc           #26
607: invokevirtual #27
610: invokevirtual #30
613: iload         12
615: iconst_3
616: if_icmpne     623
619: iconst_1
620: goto          624
623: iconst_0
624: invokestatic  #31
627: aload         13
629: invokestatic  #23
632: aload         13
634: invokestatic  #46
637: ldc           #50
639: invokestatic  #48
642: aload         14
644: invokestatic  #23
647: aload         17
649: invokestatic  #23
652: aload         18
654: invokestatic  #23
657: new           #24
660: dup
661: invokespecial #25
664: ldc           #26
666: invokevirtual #27
669: iload         20
671: invokevirtual #49
674: ldc           #29
676: invokevirtual #27
679: iconst_3
680: invokevirtual #49
683: ldc           #26
685: invokevirtual #27
688: invokevirtual #30
691: iload         20
693: iconst_3
694: if_icmpne     701
697: iconst_1
698: goto          702
701: iconst_0
702: invokestatic  #31
705: aload         21
707: invokestatic  #23
710: aload         21
712: invokestatic  #46
715: ldc           #50
717: invokestatic  #48
720: aload         22
722: invokestatic  #23
725: aload         23
727: invokestatic  #23
730: aload         25
732: invokestatic  #23
735: new           #24
738: dup
739: invokespecial #25
742: ldc           #26
744: invokevirtual #27
747: dload         27
749: invokevirtual #69
752: ldc           #29
754: invokevirtual #27
757: dconst_0
758: invokevirtual #69
761: ldc           #26
763: invokevirtual #27
766: invokevirtual #30
769: dload         27
771: dconst_0
772: dcmpl
773: ifne          780
776: iconst_1
777: goto          781
780: iconst_0
781: invokestatic  #31
784: aload         29
786: invokestatic  #23
789: aload         30
791: invokestatic  #23
794: aload         31
796: invokestatic  #23
799: aload         32
801: invokestatic  #23
804: aload         32
806: invokestatic  #46
809: ldc           #95
811: invokestatic  #48
814: aload         34
816: invokestatic  #23
819: aload         35
821: invokestatic  #23
824: aload         36
826: invokestatic  #23
829: aload         36
831: invokestatic  #46
834: ldc           #95
836: invokestatic  #48
839: aload         38
841: invokestatic  #23
844: aload         39
846: invokestatic  #23
849: aload         41
851: invokestatic  #23
854: aload         41
856: invokestatic  #46
859: ldc           #95
861: invokestatic  #48
864: aload         43
866: invokestatic  #23
869: dload         44
871: invokestatic  #99
874: invokestatic  #100
877: return
Exception table:
from    to  target type
486   498   501   Class org/apache/commons/math/exception/MathIllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test09
Start line: 355
End line: 427
Method source code: 
    public void test09() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test09");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix3 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int4 = array2DRowRealMatrix3.getRowDimension();
        double[] doubleArray6 = array2DRowRealMatrix3.getColumn((int) (byte) 10);
        double[][] doubleArray7 = array2DRowRealMatrix3.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException8 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix9 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray7);
        org.apache.commons.math.linear.RealVector realVector11 = blockRealMatrix9.getColumnVector((int) (short) 10);
        int int12 = blockRealMatrix9.getColumnDimension();
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix16 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int17 = array2DRowRealMatrix16.getRowDimension();
        double[] doubleArray19 = array2DRowRealMatrix16.getColumn((int) (byte) 10);
        double[][] doubleArray20 = array2DRowRealMatrix16.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException21 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable13, (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix22 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray20);
        org.apache.commons.math.linear.RealVector realVector24 = blockRealMatrix22.getColumnVector((int) (short) 10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix25 = blockRealMatrix9.add(blockRealMatrix22);
        int int26 = blockRealMatrix9.getColumnDimension();
        double[] doubleArray32 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray32);
        org.apache.commons.math.linear.RealVector realVector35 = arrayRealVector33.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = arrayRealVector33.copy();
        double[] doubleArray41 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray41);
        org.apache.commons.math.linear.RealVector realVector44 = arrayRealVector42.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector42.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector36, arrayRealVector42);
        double[] doubleArray52 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray52);
        org.apache.commons.math.linear.RealVector realVector54 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray52);
        double double55 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector54);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector36, realVector54);
        arrayRealVector36.set(1.0001523125762564d);
        double[] doubleArray59 = arrayRealVector36.getDataRef();
        // The following exception was thrown during execution in test generation
        try {
            blockRealMatrix9.setRow(36, doubleArray59);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: row index (36)");
        } catch (org.apache.commons.math.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 97 + "'", int12 == 97);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(blockRealMatrix25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertNotNull(arrayRealVector36);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #130
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #37
29: dup
30: iconst_3
31: bipush        97
33: invokespecial #38
36: astore_2
37: aload_2
38: invokevirtual #39
41: istore_3
42: aload_2
43: bipush        10
45: invokevirtual #40
48: astore        4
50: aload_2
51: invokevirtual #104
54: astore        5
56: new           #105
59: dup
60: aload_1
61: aload         5
63: checkcast     #106
66: invokespecial #107
69: astore        6
71: new           #108
74: dup
75: aload         5
77: invokespecial #109
80: astore        7
82: aload         7
84: bipush        10
86: invokevirtual #110
89: astore        8
91: aload         7
93: invokevirtual #131
96: istore        9
98: aconst_null
99: astore        10
101: new           #37
104: dup
105: iconst_3
106: bipush        97
108: invokespecial #38
111: astore        11
113: aload         11
115: invokevirtual #39
118: istore        12
120: aload         11
122: bipush        10
124: invokevirtual #40
127: astore        13
129: aload         11
131: invokevirtual #104
134: astore        14
136: new           #105
139: dup
140: aload         10
142: aload         14
144: checkcast     #106
147: invokespecial #107
150: astore        15
152: new           #108
155: dup
156: aload         14
158: invokespecial #109
161: astore        16
163: aload         16
165: bipush        10
167: invokevirtual #110
170: astore        17
172: aload         7
174: aload         16
176: invokevirtual #132
179: astore        18
181: aload         7
183: invokevirtual #131
186: istore        19
188: iconst_4
189: newarray       double
191: dup
192: iconst_0
193: dconst_0
194: dastore
195: dup
196: iconst_1
197: ldc2_w        #17
200: dastore
201: dup
202: iconst_2
203: ldc2_w        #73
206: dastore
207: dup
208: iconst_3
209: ldc2_w        #17
212: dastore
213: astore        20
215: new           #75
218: dup
219: aload         20
221: invokespecial #76
224: astore        21
226: aload         21
228: ldc2_w        #33
231: invokevirtual #77
234: astore        22
236: aload         21
238: invokevirtual #80
241: astore        23
243: iconst_4
244: newarray       double
246: dup
247: iconst_0
248: dconst_0
249: dastore
250: dup
251: iconst_1
252: ldc2_w        #17
255: dastore
256: dup
257: iconst_2
258: ldc2_w        #73
261: dastore
262: dup
263: iconst_3
264: ldc2_w        #17
267: dastore
268: astore        24
270: new           #75
273: dup
274: aload         24
276: invokespecial #76
279: astore        25
281: aload         25
283: ldc2_w        #33
286: invokevirtual #77
289: astore        26
291: aload         25
293: ldc2_w        #122
296: invokevirtual #77
299: astore        27
301: new           #75
304: dup
305: aload         23
307: aload         25
309: invokespecial #124
312: astore        28
314: iconst_4
315: newarray       double
317: dup
318: iconst_0
319: dconst_0
320: dastore
321: dup
322: iconst_1
323: ldc2_w        #17
326: dastore
327: dup
328: iconst_2
329: ldc2_w        #73
332: dastore
333: dup
334: iconst_3
335: ldc2_w        #17
338: dastore
339: astore        29
341: new           #75
344: dup
345: aload         29
347: invokespecial #76
350: astore        30
352: aload         29
354: invokestatic  #125
357: astore        31
359: aload         31
361: invokestatic  #126
364: dstore        32
366: new           #75
369: dup
370: aload         23
372: aload         31
374: invokespecial #127
377: astore        34
379: aload         23
381: ldc2_w        #133
384: invokevirtual #135
387: aload         23
389: invokevirtual #136
392: astore        35
394: aload         7
396: bipush        36
398: aload         35
400: invokevirtual #137
403: ldc           #138
405: invokestatic  #21
408: goto          413
411: astore        36
413: new           #24
416: dup
417: invokespecial #25
420: ldc           #26
422: invokevirtual #27
425: iload_3
426: invokevirtual #49
429: ldc           #29
431: invokevirtual #27
434: iconst_3
435: invokevirtual #49
438: ldc           #26
440: invokevirtual #27
443: invokevirtual #30
446: iload_3
447: iconst_3
448: if_icmpne     455
451: iconst_1
452: goto          456
455: iconst_0
456: invokestatic  #31
459: aload         4
461: invokestatic  #23
464: aload         4
466: invokestatic  #46
469: ldc           #50
471: invokestatic  #48
474: aload         5
476: invokestatic  #23
479: aload         8
481: invokestatic  #23
484: new           #24
487: dup
488: invokespecial #25
491: ldc           #26
493: invokevirtual #27
496: iload         9
498: invokevirtual #49
501: ldc           #29
503: invokevirtual #27
506: bipush        97
508: invokevirtual #49
511: ldc           #26
513: invokevirtual #27
516: invokevirtual #30
519: iload         9
521: bipush        97
523: if_icmpne     530
526: iconst_1
527: goto          531
530: iconst_0
531: invokestatic  #31
534: new           #24
537: dup
538: invokespecial #25
541: ldc           #26
543: invokevirtual #27
546: iload         12
548: invokevirtual #49
551: ldc           #29
553: invokevirtual #27
556: iconst_3
557: invokevirtual #49
560: ldc           #26
562: invokevirtual #27
565: invokevirtual #30
568: iload         12
570: iconst_3
571: if_icmpne     578
574: iconst_1
575: goto          579
578: iconst_0
579: invokestatic  #31
582: aload         13
584: invokestatic  #23
587: aload         13
589: invokestatic  #46
592: ldc           #50
594: invokestatic  #48
597: aload         14
599: invokestatic  #23
602: aload         17
604: invokestatic  #23
607: aload         18
609: invokestatic  #23
612: new           #24
615: dup
616: invokespecial #25
619: ldc           #26
621: invokevirtual #27
624: iload         19
626: invokevirtual #49
629: ldc           #29
631: invokevirtual #27
634: bipush        97
636: invokevirtual #49
639: ldc           #26
641: invokevirtual #27
644: invokevirtual #30
647: iload         19
649: bipush        97
651: if_icmpne     658
654: iconst_1
655: goto          659
658: iconst_0
659: invokestatic  #31
662: aload         20
664: invokestatic  #23
667: aload         20
669: invokestatic  #46
672: ldc           #95
674: invokestatic  #48
677: aload         22
679: invokestatic  #23
682: aload         23
684: invokestatic  #23
687: aload         24
689: invokestatic  #23
692: aload         24
694: invokestatic  #46
697: ldc           #95
699: invokestatic  #48
702: aload         26
704: invokestatic  #23
707: aload         27
709: invokestatic  #23
712: aload         29
714: invokestatic  #23
717: aload         29
719: invokestatic  #46
722: ldc           #95
724: invokestatic  #48
727: aload         31
729: invokestatic  #23
732: dload         32
734: invokestatic  #99
737: invokestatic  #100
740: aload         35
742: invokestatic  #23
745: aload         35
747: invokestatic  #46
750: ldc           #140
752: invokestatic  #48
755: return
Exception table:
from    to  target type
394   408   411   Class org/apache/commons/math/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test10
Start line: 430
End line: 543
Method source code: 
    public void test10() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test10");
        org.apache.commons.math.linear.RealVector realVector0 = null;
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction2 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector0, (double) (short) -1);
        boolean boolean4 = linearObjectiveFunction2.equals((java.lang.Object) 1L);
        org.apache.commons.math.linear.RealVector realVector5 = linearObjectiveFunction2.getCoefficients();
        double[] doubleArray6 = new double[] {};
        org.apache.commons.math.optimization.linear.Relationship relationship8 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix11 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int12 = array2DRowRealMatrix11.getRowDimension();
        double[] doubleArray14 = array2DRowRealMatrix11.getColumn((int) (byte) 10);
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint16 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray6, (double) '4', relationship8, doubleArray14, (double) 3);
        double[] doubleArray17 = new double[] {};
        org.apache.commons.math.optimization.linear.Relationship relationship19 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix22 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int23 = array2DRowRealMatrix22.getRowDimension();
        double[] doubleArray25 = array2DRowRealMatrix22.getColumn((int) (byte) 10);
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint27 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray17, (double) '4', relationship19, doubleArray25, (double) 3);
        double[] doubleArray32 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray32);
        java.lang.String str34 = arrayRealVector33.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector35 = arrayRealVector33.copy();
        boolean boolean36 = linearConstraint27.equals((java.lang.Object) arrayRealVector35);
        double double37 = linearConstraint27.getValue();
        org.apache.commons.math.optimization.linear.Relationship relationship38 = linearConstraint27.getRelationship();
        org.apache.commons.math.exception.util.Localizable localizable39 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix42 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int43 = array2DRowRealMatrix42.getRowDimension();
        double[] doubleArray45 = array2DRowRealMatrix42.getColumn((int) (byte) 10);
        double[][] doubleArray46 = array2DRowRealMatrix42.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException47 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable39, (java.lang.Object[]) doubleArray46);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix48 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray46);
        boolean boolean49 = linearConstraint27.equals((java.lang.Object) doubleArray46);
        double[] doubleArray50 = new double[] {};
        org.apache.commons.math.optimization.linear.Relationship relationship52 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix55 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int56 = array2DRowRealMatrix55.getRowDimension();
        double[] doubleArray58 = array2DRowRealMatrix55.getColumn((int) (byte) 10);
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint60 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray50, (double) '4', relationship52, doubleArray58, (double) 3);
        double[] doubleArray65 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector66 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray65);
        java.lang.String str67 = arrayRealVector66.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector68 = arrayRealVector66.copy();
        boolean boolean69 = linearConstraint60.equals((java.lang.Object) arrayRealVector68);
        double double70 = linearConstraint60.getValue();
        org.apache.commons.math.optimization.linear.Relationship relationship71 = linearConstraint60.getRelationship();
        org.apache.commons.math.optimization.linear.Relationship relationship72 = linearConstraint60.getRelationship();
        double[] doubleArray73 = new double[] {};
        org.apache.commons.math.optimization.linear.Relationship relationship75 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix78 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int79 = array2DRowRealMatrix78.getRowDimension();
        double[] doubleArray81 = array2DRowRealMatrix78.getColumn((int) (byte) 10);
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint83 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray73, (double) '4', relationship75, doubleArray81, (double) 3);
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray84 = new org.apache.commons.math.optimization.linear.LinearConstraint[] { linearConstraint16, linearConstraint27, linearConstraint60, linearConstraint83 };
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList85 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList85, linearConstraintArray84);
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver89 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver89.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType92 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver89.goal = goalType92;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.linear.SimplexTableau simplexTableau96 = new org.apache.commons.math.optimization.linear.SimplexTableau(linearObjectiveFunction2, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList85, goalType92, false, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(realVector5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{0; 10; (NaN); 10}" + "'", str34, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-49.0d) + "'", double37 == (-49.0d));
        org.junit.Assert.assertNull(relationship38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "{0; 10; (NaN); 10}" + "'", str67, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-49.0d) + "'", double70 == (-49.0d));
        org.junit.Assert.assertNull(relationship71);
        org.junit.Assert.assertNull(relationship72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 3 + "'", int79 == 3);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(linearConstraintArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + goalType92 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType92.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #141
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #8
29: dup
30: aload_1
31: ldc2_w        #9
34: invokespecial #11
37: astore_2
38: aload_2
39: lconst_1
40: invokestatic  #52
43: invokevirtual #53
46: istore_3
47: aload_2
48: invokevirtual #142
51: astore        4
53: iconst_0
54: newarray       double
56: astore        5
58: aconst_null
59: astore        6
61: new           #37
64: dup
65: iconst_3
66: bipush        97
68: invokespecial #38
71: astore        7
73: aload         7
75: invokevirtual #39
78: istore        8
80: aload         7
82: bipush        10
84: invokevirtual #40
87: astore        9
89: new           #12
92: dup
93: aload         5
95: ldc2_w        #41
98: aload         6
100: aload         9
102: ldc2_w        #43
105: invokespecial #45
108: astore        10
110: iconst_0
111: newarray       double
113: astore        11
115: aconst_null
116: astore        12
118: new           #37
121: dup
122: iconst_3
123: bipush        97
125: invokespecial #38
128: astore        13
130: aload         13
132: invokevirtual #39
135: istore        14
137: aload         13
139: bipush        10
141: invokevirtual #40
144: astore        15
146: new           #12
149: dup
150: aload         11
152: ldc2_w        #41
155: aload         12
157: aload         15
159: ldc2_w        #43
162: invokespecial #45
165: astore        16
167: iconst_4
168: newarray       double
170: dup
171: iconst_0
172: dconst_0
173: dastore
174: dup
175: iconst_1
176: ldc2_w        #17
179: dastore
180: dup
181: iconst_2
182: ldc2_w        #73
185: dastore
186: dup
187: iconst_3
188: ldc2_w        #17
191: dastore
192: astore        17
194: new           #75
197: dup
198: aload         17
200: invokespecial #76
203: astore        18
205: aload         18
207: invokevirtual #79
210: astore        19
212: aload         18
214: invokevirtual #80
217: astore        20
219: aload         16
221: aload         20
223: invokevirtual #143
226: istore        21
228: aload         16
230: invokevirtual #144
233: dstore        22
235: aload         16
237: invokevirtual #145
240: astore        24
242: aconst_null
243: astore        25
245: new           #37
248: dup
249: iconst_3
250: bipush        97
252: invokespecial #38
255: astore        26
257: aload         26
259: invokevirtual #39
262: istore        27
264: aload         26
266: bipush        10
268: invokevirtual #40
271: astore        28
273: aload         26
275: invokevirtual #104
278: astore        29
280: new           #105
283: dup
284: aload         25
286: aload         29
288: checkcast     #106
291: invokespecial #107
294: astore        30
296: new           #108
299: dup
300: aload         29
302: invokespecial #109
305: astore        31
307: aload         16
309: aload         29
311: invokevirtual #143
314: istore        32
316: iconst_0
317: newarray       double
319: astore        33
321: aconst_null
322: astore        34
324: new           #37
327: dup
328: iconst_3
329: bipush        97
331: invokespecial #38
334: astore        35
336: aload         35
338: invokevirtual #39
341: istore        36
343: aload         35
345: bipush        10
347: invokevirtual #40
350: astore        37
352: new           #12
355: dup
356: aload         33
358: ldc2_w        #41
361: aload         34
363: aload         37
365: ldc2_w        #43
368: invokespecial #45
371: astore        38
373: iconst_4
374: newarray       double
376: dup
377: iconst_0
378: dconst_0
379: dastore
380: dup
381: iconst_1
382: ldc2_w        #17
385: dastore
386: dup
387: iconst_2
388: ldc2_w        #73
391: dastore
392: dup
393: iconst_3
394: ldc2_w        #17
397: dastore
398: astore        39
400: new           #75
403: dup
404: aload         39
406: invokespecial #76
409: astore        40
411: aload         40
413: invokevirtual #79
416: astore        41
418: aload         40
420: invokevirtual #80
423: astore        42
425: aload         38
427: aload         42
429: invokevirtual #143
432: istore        43
434: aload         38
436: invokevirtual #144
439: dstore        44
441: aload         38
443: invokevirtual #145
446: astore        46
448: aload         38
450: invokevirtual #145
453: astore        47
455: iconst_0
456: newarray       double
458: astore        48
460: aconst_null
461: astore        49
463: new           #37
466: dup
467: iconst_3
468: bipush        97
470: invokespecial #38
473: astore        50
475: aload         50
477: invokevirtual #39
480: istore        51
482: aload         50
484: bipush        10
486: invokevirtual #40
489: astore        52
491: new           #12
494: dup
495: aload         48
497: ldc2_w        #41
500: aload         49
502: aload         52
504: ldc2_w        #43
507: invokespecial #45
510: astore        53
512: iconst_4
513: anewarray     #12
516: dup
517: iconst_0
518: aload         10
520: aastore
521: dup
522: iconst_1
523: aload         16
525: aastore
526: dup
527: iconst_2
528: aload         38
530: aastore
531: dup
532: iconst_3
533: aload         53
535: aastore
536: astore        54
538: new           #13
541: dup
542: invokespecial #14
545: astore        55
547: aload         55
549: aload         54
551: invokestatic  #15
554: istore        56
556: new           #62
559: dup
560: ldc2_w        #17
563: ldc           #63
565: invokespecial #64
568: astore        57
570: aload         57
572: iconst_0
573: putfield      #65
576: getstatic     #54
579: astore        58
581: aload         57
583: aload         58
585: putfield      #66
588: new           #16
591: dup
592: aload_2
593: aload         55
595: aload         58
597: iconst_0
598: ldc2_w        #33
601: invokespecial #19
604: astore        59
606: ldc           #20
608: invokestatic  #21
611: goto          616
614: astore        59
616: new           #24
619: dup
620: invokespecial #25
623: ldc           #26
625: invokevirtual #27
628: iload_3
629: invokevirtual #28
632: ldc           #29
634: invokevirtual #27
637: iconst_0
638: invokevirtual #28
641: ldc           #26
643: invokevirtual #27
646: invokevirtual #30
649: iload_3
650: ifne          657
653: iconst_1
654: goto          658
657: iconst_0
658: invokestatic  #31
661: aload         4
663: invokestatic  #146
666: aload         5
668: invokestatic  #23
671: aload         5
673: invokestatic  #46
676: ldc           #47
678: invokestatic  #48
681: new           #24
684: dup
685: invokespecial #25
688: ldc           #26
690: invokevirtual #27
693: iload         8
695: invokevirtual #49
698: ldc           #29
700: invokevirtual #27
703: iconst_3
704: invokevirtual #49
707: ldc           #26
709: invokevirtual #27
712: invokevirtual #30
715: iload         8
717: iconst_3
718: if_icmpne     725
721: iconst_1
722: goto          726
725: iconst_0
726: invokestatic  #31
729: aload         9
731: invokestatic  #23
734: aload         9
736: invokestatic  #46
739: ldc           #50
741: invokestatic  #48
744: aload         11
746: invokestatic  #23
749: aload         11
751: invokestatic  #46
754: ldc           #47
756: invokestatic  #48
759: new           #24
762: dup
763: invokespecial #25
766: ldc           #26
768: invokevirtual #27
771: iload         14
773: invokevirtual #49
776: ldc           #29
778: invokevirtual #27
781: iconst_3
782: invokevirtual #49
785: ldc           #26
787: invokevirtual #27
790: invokevirtual #30
793: iload         14
795: iconst_3
796: if_icmpne     803
799: iconst_1
800: goto          804
803: iconst_0
804: invokestatic  #31
807: aload         15
809: invokestatic  #23
812: aload         15
814: invokestatic  #46
817: ldc           #50
819: invokestatic  #48
822: aload         17
824: invokestatic  #23
827: aload         17
829: invokestatic  #46
832: ldc           #95
834: invokestatic  #48
837: new           #24
840: dup
841: invokespecial #25
844: ldc           #26
846: invokevirtual #27
849: aload         19
851: invokevirtual #27
854: ldc           #96
856: invokevirtual #27
859: invokevirtual #30
862: aload         19
864: ldc           #97
866: invokestatic  #98
869: aload         20
871: invokestatic  #23
874: new           #24
877: dup
878: invokespecial #25
881: ldc           #26
883: invokevirtual #27
886: iload         21
888: invokevirtual #28
891: ldc           #29
893: invokevirtual #27
896: iconst_0
897: invokevirtual #28
900: ldc           #26
902: invokevirtual #27
905: invokevirtual #30
908: iload         21
910: ifne          917
913: iconst_1
914: goto          918
917: iconst_0
918: invokestatic  #31
921: new           #24
924: dup
925: invokespecial #25
928: ldc           #26
930: invokevirtual #27
933: dload         22
935: invokevirtual #69
938: ldc           #29
940: invokevirtual #27
943: ldc2_w        #147
946: invokevirtual #69
949: ldc           #26
951: invokevirtual #27
954: invokevirtual #30
957: dload         22
959: ldc2_w        #147
962: dcmpl
963: ifne          970
966: iconst_1
967: goto          971
970: iconst_0
971: invokestatic  #31
974: aload         24
976: invokestatic  #146
979: new           #24
982: dup
983: invokespecial #25
986: ldc           #26
988: invokevirtual #27
991: iload         27
993: invokevirtual #49
996: ldc           #29
998: invokevirtual #27
1001: iconst_3
1002: invokevirtual #49
1005: ldc           #26
1007: invokevirtual #27
1010: invokevirtual #30
1013: iload         27
1015: iconst_3
1016: if_icmpne     1023
1019: iconst_1
1020: goto          1024
1023: iconst_0
1024: invokestatic  #31
1027: aload         28
1029: invokestatic  #23
1032: aload         28
1034: invokestatic  #46
1037: ldc           #50
1039: invokestatic  #48
1042: aload         29
1044: invokestatic  #23
1047: new           #24
1050: dup
1051: invokespecial #25
1054: ldc           #26
1056: invokevirtual #27
1059: iload         32
1061: invokevirtual #28
1064: ldc           #29
1066: invokevirtual #27
1069: iconst_0
1070: invokevirtual #28
1073: ldc           #26
1075: invokevirtual #27
1078: invokevirtual #30
1081: iload         32
1083: ifne          1090
1086: iconst_1
1087: goto          1091
1090: iconst_0
1091: invokestatic  #31
1094: aload         33
1096: invokestatic  #23
1099: aload         33
1101: invokestatic  #46
1104: ldc           #47
1106: invokestatic  #48
1109: new           #24
1112: dup
1113: invokespecial #25
1116: ldc           #26
1118: invokevirtual #27
1121: iload         36
1123: invokevirtual #49
1126: ldc           #29
1128: invokevirtual #27
1131: iconst_3
1132: invokevirtual #49
1135: ldc           #26
1137: invokevirtual #27
1140: invokevirtual #30
1143: iload         36
1145: iconst_3
1146: if_icmpne     1153
1149: iconst_1
1150: goto          1154
1153: iconst_0
1154: invokestatic  #31
1157: aload         37
1159: invokestatic  #23
1162: aload         37
1164: invokestatic  #46
1167: ldc           #50
1169: invokestatic  #48
1172: aload         39
1174: invokestatic  #23
1177: aload         39
1179: invokestatic  #46
1182: ldc           #95
1184: invokestatic  #48
1187: new           #24
1190: dup
1191: invokespecial #25
1194: ldc           #26
1196: invokevirtual #27
1199: aload         41
1201: invokevirtual #27
1204: ldc           #96
1206: invokevirtual #27
1209: invokevirtual #30
1212: aload         41
1214: ldc           #97
1216: invokestatic  #98
1219: aload         42
1221: invokestatic  #23
1224: new           #24
1227: dup
1228: invokespecial #25
1231: ldc           #26
1233: invokevirtual #27
1236: iload         43
1238: invokevirtual #28
1241: ldc           #29
1243: invokevirtual #27
1246: iconst_0
1247: invokevirtual #28
1250: ldc           #26
1252: invokevirtual #27
1255: invokevirtual #30
1258: iload         43
1260: ifne          1267
1263: iconst_1
1264: goto          1268
1267: iconst_0
1268: invokestatic  #31
1271: new           #24
1274: dup
1275: invokespecial #25
1278: ldc           #26
1280: invokevirtual #27
1283: dload         44
1285: invokevirtual #69
1288: ldc           #29
1290: invokevirtual #27
1293: ldc2_w        #147
1296: invokevirtual #69
1299: ldc           #26
1301: invokevirtual #27
1304: invokevirtual #30
1307: dload         44
1309: ldc2_w        #147
1312: dcmpl
1313: ifne          1320
1316: iconst_1
1317: goto          1321
1320: iconst_0
1321: invokestatic  #31
1324: aload         46
1326: invokestatic  #146
1329: aload         47
1331: invokestatic  #146
1334: aload         48
1336: invokestatic  #23
1339: aload         48
1341: invokestatic  #46
1344: ldc           #47
1346: invokestatic  #48
1349: new           #24
1352: dup
1353: invokespecial #25
1356: ldc           #26
1358: invokevirtual #27
1361: iload         51
1363: invokevirtual #49
1366: ldc           #29
1368: invokevirtual #27
1371: iconst_3
1372: invokevirtual #49
1375: ldc           #26
1377: invokevirtual #27
1380: invokevirtual #30
1383: iload         51
1385: iconst_3
1386: if_icmpne     1393
1389: iconst_1
1390: goto          1394
1393: iconst_0
1394: invokestatic  #31
1397: aload         52
1399: invokestatic  #23
1402: aload         52
1404: invokestatic  #46
1407: ldc           #50
1409: invokestatic  #48
1412: aload         54
1414: invokestatic  #23
1417: new           #24
1420: dup
1421: invokespecial #25
1424: ldc           #26
1426: invokevirtual #27
1429: iload         56
1431: invokevirtual #28
1434: ldc           #29
1436: invokevirtual #27
1439: iconst_1
1440: invokevirtual #28
1443: ldc           #26
1445: invokevirtual #27
1448: invokevirtual #30
1451: iload         56
1453: iconst_1
1454: if_icmpne     1461
1457: iconst_1
1458: goto          1462
1461: iconst_0
1462: invokestatic  #31
1465: new           #24
1468: dup
1469: invokespecial #25
1472: ldc           #26
1474: invokevirtual #27
1477: aload         58
1479: invokevirtual #55
1482: ldc           #29
1484: invokevirtual #27
1487: getstatic     #54
1490: invokevirtual #55
1493: ldc           #26
1495: invokevirtual #27
1498: invokevirtual #30
1501: aload         58
1503: getstatic     #54
1506: invokevirtual #56
1509: invokestatic  #31
1512: return
Exception table:
from    to  target type
588   611   614   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test11
Start line: 546
End line: 628
Method source code: 
    public void test11() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test11");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix3 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int4 = array2DRowRealMatrix3.getRowDimension();
        double[] doubleArray6 = array2DRowRealMatrix3.getColumn((int) (byte) 10);
        double[][] doubleArray7 = array2DRowRealMatrix3.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException8 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix9 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray7);
        org.apache.commons.math.linear.RealVector realVector11 = blockRealMatrix9.getColumnVector((int) (short) 10);
        int int12 = blockRealMatrix9.getColumnDimension();
        org.apache.commons.math.exception.util.Localizable localizable13 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix16 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int17 = array2DRowRealMatrix16.getRowDimension();
        double[] doubleArray19 = array2DRowRealMatrix16.getColumn((int) (byte) 10);
        double[][] doubleArray20 = array2DRowRealMatrix16.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException21 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable13, (java.lang.Object[]) doubleArray20);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix22 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray20);
        org.apache.commons.math.linear.RealVector realVector24 = blockRealMatrix22.getColumnVector((int) (short) 10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix25 = blockRealMatrix9.add(blockRealMatrix22);
        int int26 = blockRealMatrix9.getColumnDimension();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix30 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int31 = array2DRowRealMatrix30.getRowDimension();
        double[] doubleArray33 = array2DRowRealMatrix30.getRow(1);
        org.apache.commons.math.optimization.linear.Relationship relationship34 = org.apache.commons.math.optimization.linear.Relationship.GEQ;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint36 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray33, relationship34, 0.9866275920404853d);
        double[] doubleArray41 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray41);
        org.apache.commons.math.linear.RealVector realVector44 = arrayRealVector42.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = arrayRealVector42.copy();
        double[] doubleArray50 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray50);
        org.apache.commons.math.linear.RealVector realVector53 = arrayRealVector51.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector55 = arrayRealVector51.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector45, arrayRealVector51);
        double[] doubleArray61 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray61);
        org.apache.commons.math.linear.RealVector realVector63 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray61);
        double double64 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector63);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector45, realVector63);
        arrayRealVector45.set(1.0001523125762564d);
        double[] doubleArray68 = arrayRealVector45.getDataRef();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector69 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33, arrayRealVector45);
        // The following exception was thrown during execution in test generation
        try {
            blockRealMatrix9.setColumnVector(0, (org.apache.commons.math.linear.RealVector) arrayRealVector69);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixDimensionMismatchException; message: got 101x1 but expected 3x1");
        } catch (org.apache.commons.math.linear.MatrixDimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 97 + "'", int12 == 97);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertNotNull(realVector24);
        org.junit.Assert.assertNotNull(blockRealMatrix25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + relationship34 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.GEQ + "'", relationship34.equals(org.apache.commons.math.optimization.linear.Relationship.GEQ));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(arrayRealVector45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #149
19: aastore
20: invokevirtual #7
23: pop
24: aconst_null
25: astore_1
26: new           #37
29: dup
30: iconst_3
31: bipush        97
33: invokespecial #38
36: astore_2
37: aload_2
38: invokevirtual #39
41: istore_3
42: aload_2
43: bipush        10
45: invokevirtual #40
48: astore        4
50: aload_2
51: invokevirtual #104
54: astore        5
56: new           #105
59: dup
60: aload_1
61: aload         5
63: checkcast     #106
66: invokespecial #107
69: astore        6
71: new           #108
74: dup
75: aload         5
77: invokespecial #109
80: astore        7
82: aload         7
84: bipush        10
86: invokevirtual #110
89: astore        8
91: aload         7
93: invokevirtual #131
96: istore        9
98: aconst_null
99: astore        10
101: new           #37
104: dup
105: iconst_3
106: bipush        97
108: invokespecial #38
111: astore        11
113: aload         11
115: invokevirtual #39
118: istore        12
120: aload         11
122: bipush        10
124: invokevirtual #40
127: astore        13
129: aload         11
131: invokevirtual #104
134: astore        14
136: new           #105
139: dup
140: aload         10
142: aload         14
144: checkcast     #106
147: invokespecial #107
150: astore        15
152: new           #108
155: dup
156: aload         14
158: invokespecial #109
161: astore        16
163: aload         16
165: bipush        10
167: invokevirtual #110
170: astore        17
172: aload         7
174: aload         16
176: invokevirtual #132
179: astore        18
181: aload         7
183: invokevirtual #131
186: istore        19
188: new           #37
191: dup
192: iconst_3
193: bipush        97
195: invokespecial #38
198: astore        20
200: aload         20
202: invokevirtual #39
205: istore        21
207: aload         20
209: iconst_1
210: invokevirtual #89
213: astore        22
215: getstatic     #90
218: astore        23
220: new           #12
223: dup
224: aload         22
226: aload         23
228: ldc2_w        #91
231: invokespecial #93
234: astore        24
236: iconst_4
237: newarray       double
239: dup
240: iconst_0
241: dconst_0
242: dastore
243: dup
244: iconst_1
245: ldc2_w        #17
248: dastore
249: dup
250: iconst_2
251: ldc2_w        #73
254: dastore
255: dup
256: iconst_3
257: ldc2_w        #17
260: dastore
261: astore        25
263: new           #75
266: dup
267: aload         25
269: invokespecial #76
272: astore        26
274: aload         26
276: ldc2_w        #33
279: invokevirtual #77
282: astore        27
284: aload         26
286: invokevirtual #80
289: astore        28
291: iconst_4
292: newarray       double
294: dup
295: iconst_0
296: dconst_0
297: dastore
298: dup
299: iconst_1
300: ldc2_w        #17
303: dastore
304: dup
305: iconst_2
306: ldc2_w        #73
309: dastore
310: dup
311: iconst_3
312: ldc2_w        #17
315: dastore
316: astore        29
318: new           #75
321: dup
322: aload         29
324: invokespecial #76
327: astore        30
329: aload         30
331: ldc2_w        #33
334: invokevirtual #77
337: astore        31
339: aload         30
341: ldc2_w        #122
344: invokevirtual #77
347: astore        32
349: new           #75
352: dup
353: aload         28
355: aload         30
357: invokespecial #124
360: astore        33
362: iconst_4
363: newarray       double
365: dup
366: iconst_0
367: dconst_0
368: dastore
369: dup
370: iconst_1
371: ldc2_w        #17
374: dastore
375: dup
376: iconst_2
377: ldc2_w        #73
380: dastore
381: dup
382: iconst_3
383: ldc2_w        #17
386: dastore
387: astore        34
389: new           #75
392: dup
393: aload         34
395: invokespecial #76
398: astore        35
400: aload         34
402: invokestatic  #125
405: astore        36
407: aload         36
409: invokestatic  #126
412: dstore        37
414: new           #75
417: dup
418: aload         28
420: aload         36
422: invokespecial #127
425: astore        39
427: aload         28
429: ldc2_w        #133
432: invokevirtual #135
435: aload         28
437: invokevirtual #136
440: astore        40
442: new           #75
445: dup
446: aload         22
448: aload         28
450: invokespecial #150
453: astore        41
455: aload         7
457: iconst_0
458: aload         41
460: invokevirtual #151
463: ldc           #152
465: invokestatic  #21
468: goto          473
471: astore        42
473: new           #24
476: dup
477: invokespecial #25
480: ldc           #26
482: invokevirtual #27
485: iload_3
486: invokevirtual #49
489: ldc           #29
491: invokevirtual #27
494: iconst_3
495: invokevirtual #49
498: ldc           #26
500: invokevirtual #27
503: invokevirtual #30
506: iload_3
507: iconst_3
508: if_icmpne     515
511: iconst_1
512: goto          516
515: iconst_0
516: invokestatic  #31
519: aload         4
521: invokestatic  #23
524: aload         4
526: invokestatic  #46
529: ldc           #50
531: invokestatic  #48
534: aload         5
536: invokestatic  #23
539: aload         8
541: invokestatic  #23
544: new           #24
547: dup
548: invokespecial #25
551: ldc           #26
553: invokevirtual #27
556: iload         9
558: invokevirtual #49
561: ldc           #29
563: invokevirtual #27
566: bipush        97
568: invokevirtual #49
571: ldc           #26
573: invokevirtual #27
576: invokevirtual #30
579: iload         9
581: bipush        97
583: if_icmpne     590
586: iconst_1
587: goto          591
590: iconst_0
591: invokestatic  #31
594: new           #24
597: dup
598: invokespecial #25
601: ldc           #26
603: invokevirtual #27
606: iload         12
608: invokevirtual #49
611: ldc           #29
613: invokevirtual #27
616: iconst_3
617: invokevirtual #49
620: ldc           #26
622: invokevirtual #27
625: invokevirtual #30
628: iload         12
630: iconst_3
631: if_icmpne     638
634: iconst_1
635: goto          639
638: iconst_0
639: invokestatic  #31
642: aload         13
644: invokestatic  #23
647: aload         13
649: invokestatic  #46
652: ldc           #50
654: invokestatic  #48
657: aload         14
659: invokestatic  #23
662: aload         17
664: invokestatic  #23
667: aload         18
669: invokestatic  #23
672: new           #24
675: dup
676: invokespecial #25
679: ldc           #26
681: invokevirtual #27
684: iload         19
686: invokevirtual #49
689: ldc           #29
691: invokevirtual #27
694: bipush        97
696: invokevirtual #49
699: ldc           #26
701: invokevirtual #27
704: invokevirtual #30
707: iload         19
709: bipush        97
711: if_icmpne     718
714: iconst_1
715: goto          719
718: iconst_0
719: invokestatic  #31
722: new           #24
725: dup
726: invokespecial #25
729: ldc           #26
731: invokevirtual #27
734: iload         21
736: invokevirtual #49
739: ldc           #29
741: invokevirtual #27
744: iconst_3
745: invokevirtual #49
748: ldc           #26
750: invokevirtual #27
753: invokevirtual #30
756: iload         21
758: iconst_3
759: if_icmpne     766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #31
770: aload         22
772: invokestatic  #23
775: aload         22
777: invokestatic  #46
780: ldc           #102
782: invokestatic  #48
785: new           #24
788: dup
789: invokespecial #25
792: ldc           #26
794: invokevirtual #27
797: aload         23
799: invokevirtual #55
802: ldc           #29
804: invokevirtual #27
807: getstatic     #90
810: invokevirtual #55
813: ldc           #26
815: invokevirtual #27
818: invokevirtual #30
821: aload         23
823: getstatic     #90
826: invokevirtual #101
829: invokestatic  #31
832: aload         25
834: invokestatic  #23
837: aload         25
839: invokestatic  #46
842: ldc           #95
844: invokestatic  #48
847: aload         27
849: invokestatic  #23
852: aload         28
854: invokestatic  #23
857: aload         29
859: invokestatic  #23
862: aload         29
864: invokestatic  #46
867: ldc           #95
869: invokestatic  #48
872: aload         31
874: invokestatic  #23
877: aload         32
879: invokestatic  #23
882: aload         34
884: invokestatic  #23
887: aload         34
889: invokestatic  #46
892: ldc           #95
894: invokestatic  #48
897: aload         36
899: invokestatic  #23
902: dload         37
904: invokestatic  #99
907: invokestatic  #100
910: aload         40
912: invokestatic  #23
915: aload         40
917: invokestatic  #46
920: ldc           #140
922: invokestatic  #48
925: return
Exception table:
from    to  target type
455   468   471   Class org/apache/commons/math/linear/MatrixDimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test12
Start line: 631
End line: 685
Method source code: 
    public void test12() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test12");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        java.text.NumberFormat numberFormat32 = org.apache.commons.math.util.CompositeFormat.getDefaultNumberFormat();
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat33 = new org.apache.commons.math.linear.RealVectorFormat("=", ">=", ">=", numberFormat32);
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat34 = new org.apache.commons.math.linear.RealVectorFormat(numberFormat32);
        double[] doubleArray39 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray39);
        org.apache.commons.math.linear.RealVector realVector42 = arrayRealVector40.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector43 = arrayRealVector40.copy();
        boolean boolean44 = arrayRealVector40.isInfinite();
        double double45 = arrayRealVector40.getNorm();
        java.lang.String str46 = realVectorFormat34.format((org.apache.commons.math.linear.RealVector) arrayRealVector40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = arrayRealVector28.add((org.apache.commons.math.linear.RealVector) arrayRealVector40);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 8 != 4");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(numberFormat32);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertNotNull(arrayRealVector43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double45));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{0; 10; (NaN); 10}" + "'", str46, "{0; 10; (NaN); 10}");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #154
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: ldc2_w        #33
116: invokevirtual #77
119: astore        7
121: aload         6
123: ldc2_w        #122
126: invokevirtual #77
129: astore        8
131: new           #75
134: dup
135: aload         4
137: aload         6
139: invokespecial #124
142: astore        9
144: iconst_4
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: ldc2_w        #17
156: dastore
157: dup
158: iconst_2
159: ldc2_w        #73
162: dastore
163: dup
164: iconst_3
165: ldc2_w        #17
168: dastore
169: astore        10
171: new           #75
174: dup
175: aload         10
177: invokespecial #76
180: astore        11
182: aload         10
184: invokestatic  #125
187: astore        12
189: aload         12
191: invokestatic  #126
194: dstore        13
196: new           #75
199: dup
200: aload         4
202: aload         12
204: invokespecial #127
207: astore        15
209: invokestatic  #155
212: astore        16
214: new           #156
217: dup
218: ldc           #157
220: ldc           #158
222: ldc           #158
224: aload         16
226: invokespecial #159
229: astore        17
231: new           #156
234: dup
235: aload         16
237: invokespecial #160
240: astore        18
242: iconst_4
243: newarray       double
245: dup
246: iconst_0
247: dconst_0
248: dastore
249: dup
250: iconst_1
251: ldc2_w        #17
254: dastore
255: dup
256: iconst_2
257: ldc2_w        #73
260: dastore
261: dup
262: iconst_3
263: ldc2_w        #17
266: dastore
267: astore        19
269: new           #75
272: dup
273: aload         19
275: invokespecial #76
278: astore        20
280: aload         20
282: ldc2_w        #33
285: invokevirtual #77
288: astore        21
290: aload         20
292: invokevirtual #80
295: astore        22
297: aload         20
299: invokevirtual #161
302: istore        23
304: aload         20
306: invokevirtual #162
309: dstore        24
311: aload         18
313: aload         20
315: invokevirtual #163
318: astore        26
320: aload         15
322: aload         20
324: invokevirtual #164
327: astore        27
329: ldc           #165
331: invokestatic  #21
334: goto          339
337: astore        27
339: aload_1
340: invokestatic  #23
343: aload_1
344: invokestatic  #46
347: ldc           #95
349: invokestatic  #48
352: aload_3
353: invokestatic  #23
356: aload         4
358: invokestatic  #23
361: aload         5
363: invokestatic  #23
366: aload         5
368: invokestatic  #46
371: ldc           #95
373: invokestatic  #48
376: aload         7
378: invokestatic  #23
381: aload         8
383: invokestatic  #23
386: aload         10
388: invokestatic  #23
391: aload         10
393: invokestatic  #46
396: ldc           #95
398: invokestatic  #48
401: aload         12
403: invokestatic  #23
406: dload         13
408: invokestatic  #99
411: invokestatic  #100
414: aload         16
416: invokestatic  #23
419: aload         19
421: invokestatic  #23
424: aload         19
426: invokestatic  #46
429: ldc           #95
431: invokestatic  #48
434: aload         21
436: invokestatic  #23
439: aload         22
441: invokestatic  #23
444: new           #24
447: dup
448: invokespecial #25
451: ldc           #26
453: invokevirtual #27
456: iload         23
458: invokevirtual #28
461: ldc           #29
463: invokevirtual #27
466: iconst_0
467: invokevirtual #28
470: ldc           #26
472: invokevirtual #27
475: invokevirtual #30
478: iload         23
480: ifne          487
483: iconst_1
484: goto          488
487: iconst_0
488: invokestatic  #31
491: dload         24
493: invokestatic  #99
496: invokestatic  #100
499: new           #24
502: dup
503: invokespecial #25
506: ldc           #26
508: invokevirtual #27
511: aload         26
513: invokevirtual #27
516: ldc           #96
518: invokevirtual #27
521: invokevirtual #30
524: aload         26
526: ldc           #97
528: invokestatic  #98
531: return
Exception table:
from    to  target type
320   334   337   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test13
Start line: 688
End line: 748
Method source code: 
    public void test13() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test13");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = arrayRealVector23.copy();
        org.apache.commons.math.linear.RealVector realVector26 = arrayRealVector14.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector25);
        int int27 = arrayRealVector25.getDimension();
        double double28 = arrayRealVector8.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector25);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector34.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector34.copy();
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        java.lang.String str46 = arrayRealVector45.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = arrayRealVector45.copy();
        boolean boolean48 = arrayRealVector47.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = arrayRealVector37.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector47);
        double double50 = arrayRealVector47.getL1Norm();
        org.apache.commons.math.linear.RealVector realVector52 = arrayRealVector47.mapDivideToSelf(100.0d);
        double double53 = arrayRealVector25.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector47);
        double double54 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector47);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 4 + "'", int27 == 4);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{0; 10; (NaN); 10}" + "'", str46, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(arrayRealVector49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(realVector52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue(Double.isNaN(double54));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #167
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: ldc2_w        #33
116: invokevirtual #77
119: astore        7
121: new           #75
124: dup
125: aload         6
127: invokespecial #78
130: astore        8
132: iconst_4
133: newarray       double
135: dup
136: iconst_0
137: dconst_0
138: dastore
139: dup
140: iconst_1
141: ldc2_w        #17
144: dastore
145: dup
146: iconst_2
147: ldc2_w        #73
150: dastore
151: dup
152: iconst_3
153: ldc2_w        #17
156: dastore
157: astore        9
159: new           #75
162: dup
163: aload         9
165: invokespecial #76
168: astore        10
170: aload         10
172: invokevirtual #79
175: astore        11
177: aload         10
179: invokevirtual #80
182: astore        12
184: aload         6
186: aload         12
188: invokevirtual #81
191: astore        13
193: aload         12
195: invokevirtual #168
198: istore        14
200: aload         4
202: aload         12
204: invokevirtual #169
207: dstore        15
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #17
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #73
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #17
233: dastore
234: astore        17
236: new           #75
239: dup
240: aload         17
242: invokespecial #76
245: astore        18
247: aload         18
249: ldc2_w        #33
252: invokevirtual #77
255: astore        19
257: aload         18
259: invokevirtual #80
262: astore        20
264: iconst_4
265: newarray       double
267: dup
268: iconst_0
269: dconst_0
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #17
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #73
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #17
288: dastore
289: astore        21
291: new           #75
294: dup
295: aload         21
297: invokespecial #76
300: astore        22
302: aload         22
304: invokevirtual #79
307: astore        23
309: aload         22
311: invokevirtual #80
314: astore        24
316: aload         24
318: invokevirtual #161
321: istore        25
323: aload         20
325: ldc2_w        #33
328: ldc2_w        #17
331: aload         24
333: invokevirtual #170
336: astore        26
338: aload         24
340: invokevirtual #171
343: dstore        27
345: aload         24
347: ldc2_w        #33
350: invokevirtual #84
353: astore        29
355: aload         12
357: aload         24
359: invokevirtual #169
362: dstore        30
364: aload         24
366: invokestatic  #126
369: dstore        32
371: aload_1
372: invokestatic  #23
375: aload_1
376: invokestatic  #46
379: ldc           #95
381: invokestatic  #48
384: aload_3
385: invokestatic  #23
388: aload         4
390: invokestatic  #23
393: aload         5
395: invokestatic  #23
398: aload         5
400: invokestatic  #46
403: ldc           #95
405: invokestatic  #48
408: aload         7
410: invokestatic  #23
413: aload         9
415: invokestatic  #23
418: aload         9
420: invokestatic  #46
423: ldc           #95
425: invokestatic  #48
428: new           #24
431: dup
432: invokespecial #25
435: ldc           #26
437: invokevirtual #27
440: aload         11
442: invokevirtual #27
445: ldc           #96
447: invokevirtual #27
450: invokevirtual #30
453: aload         11
455: ldc           #97
457: invokestatic  #98
460: aload         12
462: invokestatic  #23
465: aload         13
467: invokestatic  #23
470: new           #24
473: dup
474: invokespecial #25
477: ldc           #26
479: invokevirtual #27
482: iload         14
484: invokevirtual #49
487: ldc           #29
489: invokevirtual #27
492: iconst_4
493: invokevirtual #49
496: ldc           #26
498: invokevirtual #27
501: invokevirtual #30
504: iload         14
506: iconst_4
507: if_icmpne     514
510: iconst_1
511: goto          515
514: iconst_0
515: invokestatic  #31
518: dload         15
520: invokestatic  #99
523: invokestatic  #100
526: aload         17
528: invokestatic  #23
531: aload         17
533: invokestatic  #46
536: ldc           #95
538: invokestatic  #48
541: aload         19
543: invokestatic  #23
546: aload         20
548: invokestatic  #23
551: aload         21
553: invokestatic  #23
556: aload         21
558: invokestatic  #46
561: ldc           #95
563: invokestatic  #48
566: new           #24
569: dup
570: invokespecial #25
573: ldc           #26
575: invokevirtual #27
578: aload         23
580: invokevirtual #27
583: ldc           #96
585: invokevirtual #27
588: invokevirtual #30
591: aload         23
593: ldc           #97
595: invokestatic  #98
598: aload         24
600: invokestatic  #23
603: new           #24
606: dup
607: invokespecial #25
610: ldc           #26
612: invokevirtual #27
615: iload         25
617: invokevirtual #28
620: ldc           #29
622: invokevirtual #27
625: iconst_0
626: invokevirtual #28
629: ldc           #26
631: invokevirtual #27
634: invokevirtual #30
637: iload         25
639: ifne          646
642: iconst_1
643: goto          647
646: iconst_0
647: invokestatic  #31
650: aload         26
652: invokestatic  #23
655: dload         27
657: invokestatic  #99
660: invokestatic  #100
663: aload         29
665: invokestatic  #23
668: dload         30
670: invokestatic  #99
673: invokestatic  #100
676: dload         32
678: invokestatic  #99
681: invokestatic  #100
684: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test14
Start line: 751
End line: 812
Method source code: 
    public void test14() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test14");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        java.lang.String str17 = arrayRealVector16.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = arrayRealVector16.copy();
        boolean boolean19 = arrayRealVector18.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = arrayRealVector8.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector18);
        double double21 = arrayRealVector18.getL1Norm();
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = arrayRealVector27.copy();
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector36.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector36.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector30, arrayRealVector36);
        double[] doubleArray46 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math.linear.RealVector realVector48 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray46);
        double double49 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector48);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector30, realVector48);
        double double51 = arrayRealVector18.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector30);
        org.apache.commons.math.analysis.UnivariateFunction univariateFunction52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = arrayRealVector30.map(univariateFunction52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(arrayRealVector20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(arrayRealVector30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #172
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: invokevirtual #79
116: astore        7
118: aload         6
120: invokevirtual #80
123: astore        8
125: aload         8
127: invokevirtual #161
130: istore        9
132: aload         4
134: ldc2_w        #33
137: ldc2_w        #17
140: aload         8
142: invokevirtual #170
145: astore        10
147: aload         8
149: invokevirtual #171
152: dstore        11
154: iconst_4
155: newarray       double
157: dup
158: iconst_0
159: dconst_0
160: dastore
161: dup
162: iconst_1
163: ldc2_w        #17
166: dastore
167: dup
168: iconst_2
169: ldc2_w        #73
172: dastore
173: dup
174: iconst_3
175: ldc2_w        #17
178: dastore
179: astore        13
181: new           #75
184: dup
185: aload         13
187: invokespecial #76
190: astore        14
192: aload         14
194: ldc2_w        #33
197: invokevirtual #77
200: astore        15
202: aload         14
204: invokevirtual #80
207: astore        16
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #17
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #73
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #17
233: dastore
234: astore        17
236: new           #75
239: dup
240: aload         17
242: invokespecial #76
245: astore        18
247: aload         18
249: ldc2_w        #33
252: invokevirtual #77
255: astore        19
257: aload         18
259: ldc2_w        #122
262: invokevirtual #77
265: astore        20
267: new           #75
270: dup
271: aload         16
273: aload         18
275: invokespecial #124
278: astore        21
280: iconst_4
281: newarray       double
283: dup
284: iconst_0
285: dconst_0
286: dastore
287: dup
288: iconst_1
289: ldc2_w        #17
292: dastore
293: dup
294: iconst_2
295: ldc2_w        #73
298: dastore
299: dup
300: iconst_3
301: ldc2_w        #17
304: dastore
305: astore        22
307: new           #75
310: dup
311: aload         22
313: invokespecial #76
316: astore        23
318: aload         22
320: invokestatic  #125
323: astore        24
325: aload         24
327: invokestatic  #126
330: dstore        25
332: new           #75
335: dup
336: aload         16
338: aload         24
340: invokespecial #127
343: astore        27
345: aload         8
347: aload         16
349: invokevirtual #173
352: dstore        28
354: aconst_null
355: astore        30
357: aload         16
359: aload         30
361: invokevirtual #174
364: astore        31
366: ldc           #20
368: invokestatic  #21
371: goto          376
374: astore        31
376: aload_1
377: invokestatic  #23
380: aload_1
381: invokestatic  #46
384: ldc           #95
386: invokestatic  #48
389: aload_3
390: invokestatic  #23
393: aload         4
395: invokestatic  #23
398: aload         5
400: invokestatic  #23
403: aload         5
405: invokestatic  #46
408: ldc           #95
410: invokestatic  #48
413: new           #24
416: dup
417: invokespecial #25
420: ldc           #26
422: invokevirtual #27
425: aload         7
427: invokevirtual #27
430: ldc           #96
432: invokevirtual #27
435: invokevirtual #30
438: aload         7
440: ldc           #97
442: invokestatic  #98
445: aload         8
447: invokestatic  #23
450: new           #24
453: dup
454: invokespecial #25
457: ldc           #26
459: invokevirtual #27
462: iload         9
464: invokevirtual #28
467: ldc           #29
469: invokevirtual #27
472: iconst_0
473: invokevirtual #28
476: ldc           #26
478: invokevirtual #27
481: invokevirtual #30
484: iload         9
486: ifne          493
489: iconst_1
490: goto          494
493: iconst_0
494: invokestatic  #31
497: aload         10
499: invokestatic  #23
502: dload         11
504: invokestatic  #99
507: invokestatic  #100
510: aload         13
512: invokestatic  #23
515: aload         13
517: invokestatic  #46
520: ldc           #95
522: invokestatic  #48
525: aload         15
527: invokestatic  #23
530: aload         16
532: invokestatic  #23
535: aload         17
537: invokestatic  #23
540: aload         17
542: invokestatic  #46
545: ldc           #95
547: invokestatic  #48
550: aload         19
552: invokestatic  #23
555: aload         20
557: invokestatic  #23
560: aload         22
562: invokestatic  #23
565: aload         22
567: invokestatic  #46
570: ldc           #95
572: invokestatic  #48
575: aload         24
577: invokestatic  #23
580: dload         25
582: invokestatic  #99
585: invokestatic  #100
588: dload         28
590: invokestatic  #99
593: invokestatic  #100
596: return
Exception table:
from    to  target type
357   371   374   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test15
Start line: 815
End line: 879
Method source code: 
    public void test15() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test15");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = arrayRealVector14.copy();
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        java.lang.String str26 = arrayRealVector25.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = arrayRealVector25.copy();
        boolean boolean28 = arrayRealVector27.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector29 = arrayRealVector17.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector27);
        double double30 = arrayRealVector27.getL1Norm();
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector36.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector39 = arrayRealVector36.copy();
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector45.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector45.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector39, arrayRealVector45);
        double[] doubleArray55 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray55);
        org.apache.commons.math.linear.RealVector realVector57 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray55);
        double double58 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector57);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector39, realVector57);
        double double60 = arrayRealVector27.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector39);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector61 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector5, arrayRealVector27);
        arrayRealVector27.setEntry((int) (short) 0, 0.0174532925199433d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(arrayRealVector17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{0; 10; (NaN); 10}" + "'", str26, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(arrayRealVector29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(arrayRealVector39);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #175
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: invokevirtual #79
63: astore_3
64: aload_2
65: invokevirtual #80
68: astore        4
70: new           #75
73: dup
74: aload_2
75: invokespecial #78
78: astore        5
80: iconst_4
81: newarray       double
83: dup
84: iconst_0
85: dconst_0
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #17
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #73
98: dastore
99: dup
100: iconst_3
101: ldc2_w        #17
104: dastore
105: astore        6
107: new           #75
110: dup
111: aload         6
113: invokespecial #76
116: astore        7
118: aload         7
120: ldc2_w        #33
123: invokevirtual #77
126: astore        8
128: aload         7
130: invokevirtual #80
133: astore        9
135: iconst_4
136: newarray       double
138: dup
139: iconst_0
140: dconst_0
141: dastore
142: dup
143: iconst_1
144: ldc2_w        #17
147: dastore
148: dup
149: iconst_2
150: ldc2_w        #73
153: dastore
154: dup
155: iconst_3
156: ldc2_w        #17
159: dastore
160: astore        10
162: new           #75
165: dup
166: aload         10
168: invokespecial #76
171: astore        11
173: aload         11
175: invokevirtual #79
178: astore        12
180: aload         11
182: invokevirtual #80
185: astore        13
187: aload         13
189: invokevirtual #161
192: istore        14
194: aload         9
196: ldc2_w        #33
199: ldc2_w        #17
202: aload         13
204: invokevirtual #170
207: astore        15
209: aload         13
211: invokevirtual #171
214: dstore        16
216: iconst_4
217: newarray       double
219: dup
220: iconst_0
221: dconst_0
222: dastore
223: dup
224: iconst_1
225: ldc2_w        #17
228: dastore
229: dup
230: iconst_2
231: ldc2_w        #73
234: dastore
235: dup
236: iconst_3
237: ldc2_w        #17
240: dastore
241: astore        18
243: new           #75
246: dup
247: aload         18
249: invokespecial #76
252: astore        19
254: aload         19
256: ldc2_w        #33
259: invokevirtual #77
262: astore        20
264: aload         19
266: invokevirtual #80
269: astore        21
271: iconst_4
272: newarray       double
274: dup
275: iconst_0
276: dconst_0
277: dastore
278: dup
279: iconst_1
280: ldc2_w        #17
283: dastore
284: dup
285: iconst_2
286: ldc2_w        #73
289: dastore
290: dup
291: iconst_3
292: ldc2_w        #17
295: dastore
296: astore        22
298: new           #75
301: dup
302: aload         22
304: invokespecial #76
307: astore        23
309: aload         23
311: ldc2_w        #33
314: invokevirtual #77
317: astore        24
319: aload         23
321: ldc2_w        #122
324: invokevirtual #77
327: astore        25
329: new           #75
332: dup
333: aload         21
335: aload         23
337: invokespecial #124
340: astore        26
342: iconst_4
343: newarray       double
345: dup
346: iconst_0
347: dconst_0
348: dastore
349: dup
350: iconst_1
351: ldc2_w        #17
354: dastore
355: dup
356: iconst_2
357: ldc2_w        #73
360: dastore
361: dup
362: iconst_3
363: ldc2_w        #17
366: dastore
367: astore        27
369: new           #75
372: dup
373: aload         27
375: invokespecial #76
378: astore        28
380: aload         27
382: invokestatic  #125
385: astore        29
387: aload         29
389: invokestatic  #126
392: dstore        30
394: new           #75
397: dup
398: aload         21
400: aload         29
402: invokespecial #127
405: astore        32
407: aload         13
409: aload         21
411: invokevirtual #173
414: dstore        33
416: new           #75
419: dup
420: aload_2
421: aload         13
423: invokespecial #124
426: astore        35
428: aload         13
430: iconst_0
431: ldc2_w        #176
434: invokevirtual #178
437: aload_1
438: invokestatic  #23
441: aload_1
442: invokestatic  #46
445: ldc           #95
447: invokestatic  #48
450: new           #24
453: dup
454: invokespecial #25
457: ldc           #26
459: invokevirtual #27
462: aload_3
463: invokevirtual #27
466: ldc           #96
468: invokevirtual #27
471: invokevirtual #30
474: aload_3
475: ldc           #97
477: invokestatic  #98
480: aload         4
482: invokestatic  #23
485: aload         6
487: invokestatic  #23
490: aload         6
492: invokestatic  #46
495: ldc           #95
497: invokestatic  #48
500: aload         8
502: invokestatic  #23
505: aload         9
507: invokestatic  #23
510: aload         10
512: invokestatic  #23
515: aload         10
517: invokestatic  #46
520: ldc           #95
522: invokestatic  #48
525: new           #24
528: dup
529: invokespecial #25
532: ldc           #26
534: invokevirtual #27
537: aload         12
539: invokevirtual #27
542: ldc           #96
544: invokevirtual #27
547: invokevirtual #30
550: aload         12
552: ldc           #97
554: invokestatic  #98
557: aload         13
559: invokestatic  #23
562: new           #24
565: dup
566: invokespecial #25
569: ldc           #26
571: invokevirtual #27
574: iload         14
576: invokevirtual #28
579: ldc           #29
581: invokevirtual #27
584: iconst_0
585: invokevirtual #28
588: ldc           #26
590: invokevirtual #27
593: invokevirtual #30
596: iload         14
598: ifne          605
601: iconst_1
602: goto          606
605: iconst_0
606: invokestatic  #31
609: aload         15
611: invokestatic  #23
614: dload         16
616: invokestatic  #99
619: invokestatic  #100
622: aload         18
624: invokestatic  #23
627: aload         18
629: invokestatic  #46
632: ldc           #95
634: invokestatic  #48
637: aload         20
639: invokestatic  #23
642: aload         21
644: invokestatic  #23
647: aload         22
649: invokestatic  #23
652: aload         22
654: invokestatic  #46
657: ldc           #95
659: invokestatic  #48
662: aload         24
664: invokestatic  #23
667: aload         25
669: invokestatic  #23
672: aload         27
674: invokestatic  #23
677: aload         27
679: invokestatic  #46
682: ldc           #95
684: invokestatic  #48
687: aload         29
689: invokestatic  #23
692: dload         30
694: invokestatic  #99
697: invokestatic  #100
700: dload         33
702: invokestatic  #99
705: invokestatic  #100
708: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test16
Start line: 882
End line: 937
Method source code: 
    public void test16() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test16");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        java.lang.String str17 = arrayRealVector16.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = arrayRealVector16.copy();
        boolean boolean19 = arrayRealVector18.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = arrayRealVector8.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector18);
        double double21 = arrayRealVector18.getL1Norm();
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = arrayRealVector27.copy();
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector36.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector36.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector30, arrayRealVector36);
        double[] doubleArray46 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math.linear.RealVector realVector48 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray46);
        double double49 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector48);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector30, realVector48);
        double double51 = arrayRealVector18.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector30);
        org.apache.commons.math.linear.RealVector realVector52 = arrayRealVector30.unitVector();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(arrayRealVector20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(arrayRealVector30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(realVector52);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #179
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: invokevirtual #79
116: astore        7
118: aload         6
120: invokevirtual #80
123: astore        8
125: aload         8
127: invokevirtual #161
130: istore        9
132: aload         4
134: ldc2_w        #33
137: ldc2_w        #17
140: aload         8
142: invokevirtual #170
145: astore        10
147: aload         8
149: invokevirtual #171
152: dstore        11
154: iconst_4
155: newarray       double
157: dup
158: iconst_0
159: dconst_0
160: dastore
161: dup
162: iconst_1
163: ldc2_w        #17
166: dastore
167: dup
168: iconst_2
169: ldc2_w        #73
172: dastore
173: dup
174: iconst_3
175: ldc2_w        #17
178: dastore
179: astore        13
181: new           #75
184: dup
185: aload         13
187: invokespecial #76
190: astore        14
192: aload         14
194: ldc2_w        #33
197: invokevirtual #77
200: astore        15
202: aload         14
204: invokevirtual #80
207: astore        16
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #17
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #73
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #17
233: dastore
234: astore        17
236: new           #75
239: dup
240: aload         17
242: invokespecial #76
245: astore        18
247: aload         18
249: ldc2_w        #33
252: invokevirtual #77
255: astore        19
257: aload         18
259: ldc2_w        #122
262: invokevirtual #77
265: astore        20
267: new           #75
270: dup
271: aload         16
273: aload         18
275: invokespecial #124
278: astore        21
280: iconst_4
281: newarray       double
283: dup
284: iconst_0
285: dconst_0
286: dastore
287: dup
288: iconst_1
289: ldc2_w        #17
292: dastore
293: dup
294: iconst_2
295: ldc2_w        #73
298: dastore
299: dup
300: iconst_3
301: ldc2_w        #17
304: dastore
305: astore        22
307: new           #75
310: dup
311: aload         22
313: invokespecial #76
316: astore        23
318: aload         22
320: invokestatic  #125
323: astore        24
325: aload         24
327: invokestatic  #126
330: dstore        25
332: new           #75
335: dup
336: aload         16
338: aload         24
340: invokespecial #127
343: astore        27
345: aload         8
347: aload         16
349: invokevirtual #173
352: dstore        28
354: aload         16
356: invokevirtual #180
359: astore        30
361: aload_1
362: invokestatic  #23
365: aload_1
366: invokestatic  #46
369: ldc           #95
371: invokestatic  #48
374: aload_3
375: invokestatic  #23
378: aload         4
380: invokestatic  #23
383: aload         5
385: invokestatic  #23
388: aload         5
390: invokestatic  #46
393: ldc           #95
395: invokestatic  #48
398: new           #24
401: dup
402: invokespecial #25
405: ldc           #26
407: invokevirtual #27
410: aload         7
412: invokevirtual #27
415: ldc           #96
417: invokevirtual #27
420: invokevirtual #30
423: aload         7
425: ldc           #97
427: invokestatic  #98
430: aload         8
432: invokestatic  #23
435: new           #24
438: dup
439: invokespecial #25
442: ldc           #26
444: invokevirtual #27
447: iload         9
449: invokevirtual #28
452: ldc           #29
454: invokevirtual #27
457: iconst_0
458: invokevirtual #28
461: ldc           #26
463: invokevirtual #27
466: invokevirtual #30
469: iload         9
471: ifne          478
474: iconst_1
475: goto          479
478: iconst_0
479: invokestatic  #31
482: aload         10
484: invokestatic  #23
487: dload         11
489: invokestatic  #99
492: invokestatic  #100
495: aload         13
497: invokestatic  #23
500: aload         13
502: invokestatic  #46
505: ldc           #95
507: invokestatic  #48
510: aload         15
512: invokestatic  #23
515: aload         16
517: invokestatic  #23
520: aload         17
522: invokestatic  #23
525: aload         17
527: invokestatic  #46
530: ldc           #95
532: invokestatic  #48
535: aload         19
537: invokestatic  #23
540: aload         20
542: invokestatic  #23
545: aload         22
547: invokestatic  #23
550: aload         22
552: invokestatic  #46
555: ldc           #95
557: invokestatic  #48
560: aload         24
562: invokestatic  #23
565: dload         25
567: invokestatic  #99
570: invokestatic  #100
573: dload         28
575: invokestatic  #99
578: invokestatic  #100
581: aload         30
583: invokestatic  #23
586: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test17
Start line: 940
End line: 1008
Method source code: 
    public void test17() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test17");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector34.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector34.copy();
        double[] doubleArray42 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42);
        org.apache.commons.math.linear.RealVector realVector45 = arrayRealVector43.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector43.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, arrayRealVector43);
        double[] doubleArray53 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math.linear.RealVector realVector55 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray53);
        double double56 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector55);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, realVector55);
        arrayRealVector37.set(1.0001523125762564d);
        double[] doubleArray60 = arrayRealVector37.getDataRef();
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector8.append((org.apache.commons.math.linear.RealVector) arrayRealVector37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector64 = realVector61.getSubVector((int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(realVector61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #181
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: ldc2_w        #33
116: invokevirtual #77
119: astore        7
121: aload         6
123: ldc2_w        #122
126: invokevirtual #77
129: astore        8
131: new           #75
134: dup
135: aload         4
137: aload         6
139: invokespecial #124
142: astore        9
144: iconst_4
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: ldc2_w        #17
156: dastore
157: dup
158: iconst_2
159: ldc2_w        #73
162: dastore
163: dup
164: iconst_3
165: ldc2_w        #17
168: dastore
169: astore        10
171: new           #75
174: dup
175: aload         10
177: invokespecial #76
180: astore        11
182: aload         10
184: invokestatic  #125
187: astore        12
189: aload         12
191: invokestatic  #126
194: dstore        13
196: new           #75
199: dup
200: aload         4
202: aload         12
204: invokespecial #127
207: astore        15
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #17
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #73
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #17
233: dastore
234: astore        16
236: new           #75
239: dup
240: aload         16
242: invokespecial #76
245: astore        17
247: aload         17
249: ldc2_w        #33
252: invokevirtual #77
255: astore        18
257: aload         17
259: invokevirtual #80
262: astore        19
264: iconst_4
265: newarray       double
267: dup
268: iconst_0
269: dconst_0
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #17
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #73
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #17
288: dastore
289: astore        20
291: new           #75
294: dup
295: aload         20
297: invokespecial #76
300: astore        21
302: aload         21
304: ldc2_w        #33
307: invokevirtual #77
310: astore        22
312: aload         21
314: ldc2_w        #122
317: invokevirtual #77
320: astore        23
322: new           #75
325: dup
326: aload         19
328: aload         21
330: invokespecial #124
333: astore        24
335: iconst_4
336: newarray       double
338: dup
339: iconst_0
340: dconst_0
341: dastore
342: dup
343: iconst_1
344: ldc2_w        #17
347: dastore
348: dup
349: iconst_2
350: ldc2_w        #73
353: dastore
354: dup
355: iconst_3
356: ldc2_w        #17
359: dastore
360: astore        25
362: new           #75
365: dup
366: aload         25
368: invokespecial #76
371: astore        26
373: aload         25
375: invokestatic  #125
378: astore        27
380: aload         27
382: invokestatic  #126
385: dstore        28
387: new           #75
390: dup
391: aload         19
393: aload         27
395: invokespecial #127
398: astore        30
400: aload         19
402: ldc2_w        #133
405: invokevirtual #135
408: aload         19
410: invokevirtual #136
413: astore        31
415: aload         4
417: aload         19
419: invokevirtual #182
422: astore        32
424: aload         32
426: bipush        52
428: iconst_m1
429: invokevirtual #183
432: astore        33
434: ldc           #184
436: invokestatic  #21
439: goto          444
442: astore        33
444: aload_1
445: invokestatic  #23
448: aload_1
449: invokestatic  #46
452: ldc           #95
454: invokestatic  #48
457: aload_3
458: invokestatic  #23
461: aload         4
463: invokestatic  #23
466: aload         5
468: invokestatic  #23
471: aload         5
473: invokestatic  #46
476: ldc           #95
478: invokestatic  #48
481: aload         7
483: invokestatic  #23
486: aload         8
488: invokestatic  #23
491: aload         10
493: invokestatic  #23
496: aload         10
498: invokestatic  #46
501: ldc           #95
503: invokestatic  #48
506: aload         12
508: invokestatic  #23
511: dload         13
513: invokestatic  #99
516: invokestatic  #100
519: aload         16
521: invokestatic  #23
524: aload         16
526: invokestatic  #46
529: ldc           #95
531: invokestatic  #48
534: aload         18
536: invokestatic  #23
539: aload         19
541: invokestatic  #23
544: aload         20
546: invokestatic  #23
549: aload         20
551: invokestatic  #46
554: ldc           #95
556: invokestatic  #48
559: aload         22
561: invokestatic  #23
564: aload         23
566: invokestatic  #23
569: aload         25
571: invokestatic  #23
574: aload         25
576: invokestatic  #46
579: ldc           #95
581: invokestatic  #48
584: aload         27
586: invokestatic  #23
589: dload         28
591: invokestatic  #99
594: invokestatic  #100
597: aload         31
599: invokestatic  #23
602: aload         31
604: invokestatic  #46
607: ldc           #140
609: invokestatic  #48
612: aload         32
614: invokestatic  #23
617: return
Exception table:
from    to  target type
424   439   442   Class java/lang/NegativeArraySizeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test18
Start line: 1011
End line: 0
Method source code: 
    public void test18() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test18");
        java.text.NumberFormat numberFormat3 = org.apache.commons.math.util.CompositeFormat.getDefaultNumberFormat();
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat4 = new org.apache.commons.math.linear.RealVectorFormat("=", ">=", ">=", numberFormat3);
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat5 = new org.apache.commons.math.linear.RealVectorFormat(numberFormat3);
        double[] doubleArray10 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray10);
        org.apache.commons.math.linear.RealVector realVector13 = arrayRealVector11.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = arrayRealVector11.copy();
        boolean boolean15 = arrayRealVector11.isInfinite();
        double double16 = arrayRealVector11.getNorm();
        java.lang.String str17 = realVectorFormat5.format((org.apache.commons.math.linear.RealVector) arrayRealVector11);
        java.lang.String str18 = realVectorFormat5.getSuffix();
        double[] doubleArray23 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray23);
        org.apache.commons.math.linear.RealVector realVector25 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray23);
        double double26 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector25);
        java.lang.StringBuffer stringBuffer27 = null;
        java.text.FieldPosition fieldPosition28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer29 = realVectorFormat5.format(realVector25, stringBuffer27, fieldPosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(numberFormat3);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector13);
        org.junit.Assert.assertNotNull(arrayRealVector14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "}" + "'", str18, "}");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertTrue(Double.isNaN(double26));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #186
19: aastore
20: invokevirtual #7
23: pop
24: invokestatic  #155
27: astore_1
28: new           #156
31: dup
32: ldc           #157
34: ldc           #158
36: ldc           #158
38: aload_1
39: invokespecial #159
42: astore_2
43: new           #156
46: dup
47: aload_1
48: invokespecial #160
51: astore_3
52: iconst_4
53: newarray       double
55: dup
56: iconst_0
57: dconst_0
58: dastore
59: dup
60: iconst_1
61: ldc2_w        #17
64: dastore
65: dup
66: iconst_2
67: ldc2_w        #73
70: dastore
71: dup
72: iconst_3
73: ldc2_w        #17
76: dastore
77: astore        4
79: new           #75
82: dup
83: aload         4
85: invokespecial #76
88: astore        5
90: aload         5
92: ldc2_w        #33
95: invokevirtual #77
98: astore        6
100: aload         5
102: invokevirtual #80
105: astore        7
107: aload         5
109: invokevirtual #161
112: istore        8
114: aload         5
116: invokevirtual #162
119: dstore        9
121: aload_3
122: aload         5
124: invokevirtual #163
127: astore        11
129: aload_3
130: invokevirtual #187
133: astore        12
135: iconst_4
136: newarray       double
138: dup
139: iconst_0
140: dconst_0
141: dastore
142: dup
143: iconst_1
144: ldc2_w        #17
147: dastore
148: dup
149: iconst_2
150: ldc2_w        #73
153: dastore
154: dup
155: iconst_3
156: ldc2_w        #17
159: dastore
160: astore        13
162: new           #75
165: dup
166: aload         13
168: invokespecial #76
171: astore        14
173: aload         13
175: invokestatic  #125
178: astore        15
180: aload         15
182: invokestatic  #126
185: dstore        16
187: aconst_null
188: astore        18
190: aconst_null
191: astore        19
193: aload_3
194: aload         15
196: aload         18
198: aload         19
200: invokevirtual #188
203: astore        20
205: ldc           #20
207: invokestatic  #21
210: goto          215
213: astore        20
215: aload_1
216: invokestatic  #23
219: aload         4
221: invokestatic  #23
224: aload         4
226: invokestatic  #46
229: ldc           #95
231: invokestatic  #48
234: aload         6
236: invokestatic  #23
239: aload         7
241: invokestatic  #23
244: new           #24
247: dup
248: invokespecial #25
251: ldc           #26
253: invokevirtual #27
256: iload         8
258: invokevirtual #28
261: ldc           #29
263: invokevirtual #27
266: iconst_0
267: invokevirtual #28
270: ldc           #26
272: invokevirtual #27
275: invokevirtual #30
278: iload         8
280: ifne          287
283: iconst_1
284: goto          288
287: iconst_0
288: invokestatic  #31
291: dload         9
293: invokestatic  #99
296: invokestatic  #100
299: new           #24
302: dup
303: invokespecial #25
306: ldc           #26
308: invokevirtual #27
311: aload         11
313: invokevirtual #27
316: ldc           #96
318: invokevirtual #27
321: invokevirtual #30
324: aload         11
326: ldc           #97
328: invokestatic  #98
331: new           #24
334: dup
335: invokespecial #25
338: ldc           #26
340: invokevirtual #27
343: aload         12
345: invokevirtual #27
348: ldc           #189
350: invokevirtual #27
353: invokevirtual #30
356: aload         12
358: ldc           #190
360: invokestatic  #98
363: aload         13
365: invokestatic  #23
368: aload         13
370: invokestatic  #46
373: ldc           #95
375: invokestatic  #48
378: aload         15
380: invokestatic  #23
383: dload         16
385: invokestatic  #99
388: invokestatic  #100
391: return
Exception table:
from    to  target type
193   210   213   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test19
Start line: 1054
End line: 1154
Method source code: 
    public void test19() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test19");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        org.apache.commons.math.linear.RealVector realVector15 = arrayRealVector13.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector13);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double double18 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        int int19 = arrayRealVector5.getDimension();
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector5.mapMultiply((double) 1074790400);
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        java.lang.String str28 = arrayRealVector27.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector29 = arrayRealVector27.copy();
        boolean boolean30 = arrayRealVector29.isInfinite();
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        double double37 = arrayRealVector29.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector36);
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector45.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = arrayRealVector45.copy();
        double[] doubleArray55 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray55);
        java.lang.String str57 = arrayRealVector56.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector58 = arrayRealVector56.copy();
        boolean boolean59 = arrayRealVector58.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = arrayRealVector48.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector58);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector36.combineToSelf(2.0d, (double) (short) 0, (org.apache.commons.math.linear.RealVector) arrayRealVector58);
        org.apache.commons.math.linear.RealVector realVector62 = arrayRealVector5.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector58);
        double[] doubleArray67 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray67);
        org.apache.commons.math.linear.RealVector realVector70 = arrayRealVector68.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector71 = arrayRealVector68.copy();
        double[] doubleArray76 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector77 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray76);
        org.apache.commons.math.linear.RealVector realVector79 = arrayRealVector77.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector81 = arrayRealVector77.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector71, arrayRealVector77);
        double[] doubleArray87 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector88 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray87);
        org.apache.commons.math.linear.RealVector realVector89 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray87);
        double double90 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector89);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector91 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector71, realVector89);
        arrayRealVector71.set(1.0001523125762564d);
        double[] doubleArray94 = arrayRealVector71.getDataRef();
        org.apache.commons.math.linear.RealVector realVector96 = arrayRealVector71.mapAddToSelf((double) 4.0f);
        org.apache.commons.math.linear.RealVector realVector97 = arrayRealVector5.ebeMultiply(realVector96);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction99 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(realVector96, (double) (-1.0f));
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{0; 10; (NaN); 10}" + "'", str28, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(arrayRealVector48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{0; 10; (NaN); 10}" + "'", str57, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(arrayRealVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(arrayRealVector71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector79);
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector89);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[5.000152312576256, 5.000152312576256, 5.000152312576256, 5.000152312576256]");
        org.junit.Assert.assertNotNull(realVector96);
        org.junit.Assert.assertNotNull(realVector97);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #191
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: invokevirtual #79
63: astore_3
64: aload_2
65: invokevirtual #80
68: astore        4
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #17
82: dastore
83: dup
84: iconst_2
85: ldc2_w        #73
88: dastore
89: dup
90: iconst_3
91: ldc2_w        #17
94: dastore
95: astore        5
97: new           #75
100: dup
101: aload         5
103: invokespecial #76
106: astore        6
108: aload         6
110: ldc2_w        #33
113: invokevirtual #77
116: astore        7
118: new           #75
121: dup
122: aload         6
124: invokespecial #78
127: astore        8
129: new           #75
132: dup
133: aload         8
135: invokespecial #78
138: astore        9
140: aload_2
141: aload         8
143: invokevirtual #192
146: dstore        10
148: aload_2
149: invokevirtual #168
152: istore        12
154: aload_2
155: ldc2_w        #193
158: invokevirtual #195
161: astore        13
163: iconst_4
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #17
175: dastore
176: dup
177: iconst_2
178: ldc2_w        #73
181: dastore
182: dup
183: iconst_3
184: ldc2_w        #17
187: dastore
188: astore        14
190: new           #75
193: dup
194: aload         14
196: invokespecial #76
199: astore        15
201: aload         15
203: invokevirtual #79
206: astore        16
208: aload         15
210: invokevirtual #80
213: astore        17
215: aload         17
217: invokevirtual #161
220: istore        18
222: iconst_4
223: newarray       double
225: dup
226: iconst_0
227: dconst_0
228: dastore
229: dup
230: iconst_1
231: ldc2_w        #17
234: dastore
235: dup
236: iconst_2
237: ldc2_w        #73
240: dastore
241: dup
242: iconst_3
243: ldc2_w        #17
246: dastore
247: astore        19
249: new           #75
252: dup
253: aload         19
255: invokespecial #76
258: astore        20
260: aload         17
262: aload         20
264: invokevirtual #192
267: dstore        21
269: iconst_4
270: newarray       double
272: dup
273: iconst_0
274: dconst_0
275: dastore
276: dup
277: iconst_1
278: ldc2_w        #17
281: dastore
282: dup
283: iconst_2
284: ldc2_w        #73
287: dastore
288: dup
289: iconst_3
290: ldc2_w        #17
293: dastore
294: astore        23
296: new           #75
299: dup
300: aload         23
302: invokespecial #76
305: astore        24
307: aload         24
309: ldc2_w        #33
312: invokevirtual #77
315: astore        25
317: aload         24
319: invokevirtual #80
322: astore        26
324: iconst_4
325: newarray       double
327: dup
328: iconst_0
329: dconst_0
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #17
336: dastore
337: dup
338: iconst_2
339: ldc2_w        #73
342: dastore
343: dup
344: iconst_3
345: ldc2_w        #17
348: dastore
349: astore        27
351: new           #75
354: dup
355: aload         27
357: invokespecial #76
360: astore        28
362: aload         28
364: invokevirtual #79
367: astore        29
369: aload         28
371: invokevirtual #80
374: astore        30
376: aload         30
378: invokevirtual #161
381: istore        31
383: aload         26
385: ldc2_w        #33
388: ldc2_w        #17
391: aload         30
393: invokevirtual #170
396: astore        32
398: aload         20
400: ldc2_w        #196
403: dconst_0
404: aload         30
406: invokevirtual #198
409: astore        33
411: aload_2
412: aload         30
414: invokevirtual #81
417: astore        34
419: iconst_4
420: newarray       double
422: dup
423: iconst_0
424: dconst_0
425: dastore
426: dup
427: iconst_1
428: ldc2_w        #17
431: dastore
432: dup
433: iconst_2
434: ldc2_w        #73
437: dastore
438: dup
439: iconst_3
440: ldc2_w        #17
443: dastore
444: astore        35
446: new           #75
449: dup
450: aload         35
452: invokespecial #76
455: astore        36
457: aload         36
459: ldc2_w        #33
462: invokevirtual #77
465: astore        37
467: aload         36
469: invokevirtual #80
472: astore        38
474: iconst_4
475: newarray       double
477: dup
478: iconst_0
479: dconst_0
480: dastore
481: dup
482: iconst_1
483: ldc2_w        #17
486: dastore
487: dup
488: iconst_2
489: ldc2_w        #73
492: dastore
493: dup
494: iconst_3
495: ldc2_w        #17
498: dastore
499: astore        39
501: new           #75
504: dup
505: aload         39
507: invokespecial #76
510: astore        40
512: aload         40
514: ldc2_w        #33
517: invokevirtual #77
520: astore        41
522: aload         40
524: ldc2_w        #122
527: invokevirtual #77
530: astore        42
532: new           #75
535: dup
536: aload         38
538: aload         40
540: invokespecial #124
543: astore        43
545: iconst_4
546: newarray       double
548: dup
549: iconst_0
550: dconst_0
551: dastore
552: dup
553: iconst_1
554: ldc2_w        #17
557: dastore
558: dup
559: iconst_2
560: ldc2_w        #73
563: dastore
564: dup
565: iconst_3
566: ldc2_w        #17
569: dastore
570: astore        44
572: new           #75
575: dup
576: aload         44
578: invokespecial #76
581: astore        45
583: aload         44
585: invokestatic  #125
588: astore        46
590: aload         46
592: invokestatic  #126
595: dstore        47
597: new           #75
600: dup
601: aload         38
603: aload         46
605: invokespecial #127
608: astore        49
610: aload         38
612: ldc2_w        #133
615: invokevirtual #135
618: aload         38
620: invokevirtual #136
623: astore        50
625: aload         38
627: ldc2_w        #67
630: invokevirtual #82
633: astore        51
635: aload_2
636: aload         51
638: invokevirtual #199
641: astore        52
643: new           #8
646: dup
647: aload         51
649: ldc2_w        #9
652: invokespecial #11
655: astore        53
657: aload_1
658: invokestatic  #23
661: aload_1
662: invokestatic  #46
665: ldc           #95
667: invokestatic  #48
670: new           #24
673: dup
674: invokespecial #25
677: ldc           #26
679: invokevirtual #27
682: aload_3
683: invokevirtual #27
686: ldc           #96
688: invokevirtual #27
691: invokevirtual #30
694: aload_3
695: ldc           #97
697: invokestatic  #98
700: aload         4
702: invokestatic  #23
705: aload         5
707: invokestatic  #23
710: aload         5
712: invokestatic  #46
715: ldc           #95
717: invokestatic  #48
720: aload         7
722: invokestatic  #23
725: dload         10
727: invokestatic  #99
730: invokestatic  #100
733: new           #24
736: dup
737: invokespecial #25
740: ldc           #26
742: invokevirtual #27
745: iload         12
747: invokevirtual #49
750: ldc           #29
752: invokevirtual #27
755: iconst_4
756: invokevirtual #49
759: ldc           #26
761: invokevirtual #27
764: invokevirtual #30
767: iload         12
769: iconst_4
770: if_icmpne     777
773: iconst_1
774: goto          778
777: iconst_0
778: invokestatic  #31
781: aload         13
783: invokestatic  #23
786: aload         14
788: invokestatic  #23
791: aload         14
793: invokestatic  #46
796: ldc           #95
798: invokestatic  #48
801: new           #24
804: dup
805: invokespecial #25
808: ldc           #26
810: invokevirtual #27
813: aload         16
815: invokevirtual #27
818: ldc           #96
820: invokevirtual #27
823: invokevirtual #30
826: aload         16
828: ldc           #97
830: invokestatic  #98
833: aload         17
835: invokestatic  #23
838: new           #24
841: dup
842: invokespecial #25
845: ldc           #26
847: invokevirtual #27
850: iload         18
852: invokevirtual #28
855: ldc           #29
857: invokevirtual #27
860: iconst_0
861: invokevirtual #28
864: ldc           #26
866: invokevirtual #27
869: invokevirtual #30
872: iload         18
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #31
885: aload         19
887: invokestatic  #23
890: aload         19
892: invokestatic  #46
895: ldc           #95
897: invokestatic  #48
900: dload         21
902: invokestatic  #99
905: invokestatic  #100
908: aload         23
910: invokestatic  #23
913: aload         23
915: invokestatic  #46
918: ldc           #95
920: invokestatic  #48
923: aload         25
925: invokestatic  #23
928: aload         26
930: invokestatic  #23
933: aload         27
935: invokestatic  #23
938: aload         27
940: invokestatic  #46
943: ldc           #95
945: invokestatic  #48
948: new           #24
951: dup
952: invokespecial #25
955: ldc           #26
957: invokevirtual #27
960: aload         29
962: invokevirtual #27
965: ldc           #96
967: invokevirtual #27
970: invokevirtual #30
973: aload         29
975: ldc           #97
977: invokestatic  #98
980: aload         30
982: invokestatic  #23
985: new           #24
988: dup
989: invokespecial #25
992: ldc           #26
994: invokevirtual #27
997: iload         31
999: invokevirtual #28
1002: ldc           #29
1004: invokevirtual #27
1007: iconst_0
1008: invokevirtual #28
1011: ldc           #26
1013: invokevirtual #27
1016: invokevirtual #30
1019: iload         31
1021: ifne          1028
1024: iconst_1
1025: goto          1029
1028: iconst_0
1029: invokestatic  #31
1032: aload         32
1034: invokestatic  #23
1037: aload         33
1039: invokestatic  #23
1042: aload         34
1044: invokestatic  #23
1047: aload         35
1049: invokestatic  #23
1052: aload         35
1054: invokestatic  #46
1057: ldc           #95
1059: invokestatic  #48
1062: aload         37
1064: invokestatic  #23
1067: aload         38
1069: invokestatic  #23
1072: aload         39
1074: invokestatic  #23
1077: aload         39
1079: invokestatic  #46
1082: ldc           #95
1084: invokestatic  #48
1087: aload         41
1089: invokestatic  #23
1092: aload         42
1094: invokestatic  #23
1097: aload         44
1099: invokestatic  #23
1102: aload         44
1104: invokestatic  #46
1107: ldc           #95
1109: invokestatic  #48
1112: aload         46
1114: invokestatic  #23
1117: dload         47
1119: invokestatic  #99
1122: invokestatic  #100
1125: aload         50
1127: invokestatic  #23
1130: aload         50
1132: invokestatic  #46
1135: ldc           #200
1137: invokestatic  #48
1140: aload         51
1142: invokestatic  #23
1145: aload         52
1147: invokestatic  #23
1150: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test20
Start line: 1157
End line: 1178
Method source code: 
    public void test20() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test20");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector6 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray4);
        double double7 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector6);
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        org.apache.commons.math.linear.RealVector realVector15 = arrayRealVector13.mapSubtract((double) 100L);
        boolean boolean16 = realVector15.isNaN();
        org.apache.commons.math.linear.RealVector realVector17 = realVector6.append(realVector15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(realVector17);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #201
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_1
60: invokestatic  #125
63: astore_3
64: aload_3
65: invokestatic  #126
68: dstore        4
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #17
82: dastore
83: dup
84: iconst_2
85: ldc2_w        #73
88: dastore
89: dup
90: iconst_3
91: ldc2_w        #17
94: dastore
95: astore        6
97: new           #75
100: dup
101: aload         6
103: invokespecial #76
106: astore        7
108: aload         7
110: ldc2_w        #33
113: invokevirtual #77
116: astore        8
118: aload         8
120: invokevirtual #202
123: istore        9
125: aload_3
126: aload         8
128: invokevirtual #203
131: astore        10
133: aload_1
134: invokestatic  #23
137: aload_1
138: invokestatic  #46
141: ldc           #95
143: invokestatic  #48
146: aload_3
147: invokestatic  #23
150: dload         4
152: invokestatic  #99
155: invokestatic  #100
158: aload         6
160: invokestatic  #23
163: aload         6
165: invokestatic  #46
168: ldc           #95
170: invokestatic  #48
173: aload         8
175: invokestatic  #23
178: new           #24
181: dup
182: invokespecial #25
185: ldc           #26
187: invokevirtual #27
190: iload         9
192: invokevirtual #28
195: ldc           #29
197: invokevirtual #27
200: iconst_1
201: invokevirtual #28
204: ldc           #26
206: invokevirtual #27
209: invokevirtual #30
212: iload         9
214: iconst_1
215: if_icmpne     222
218: iconst_1
219: goto          223
222: iconst_0
223: invokestatic  #31
226: aload         10
228: invokestatic  #23
231: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test21
Start line: 1181
End line: 1240
Method source code: 
    public void test21() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test21");
        java.lang.Double[] doubleArray0 = new java.lang.Double[] {};
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector1 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector2 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray0);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix5 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int6 = array2DRowRealMatrix5.getRowDimension();
        double[] doubleArray8 = array2DRowRealMatrix5.getRow(1);
        org.apache.commons.math.optimization.linear.Relationship relationship9 = org.apache.commons.math.optimization.linear.Relationship.GEQ;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint11 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray8, relationship9, 0.9866275920404853d);
        org.apache.commons.math.util.MathUtils.checkFinite(doubleArray8);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector2, doubleArray8);
        double double14 = arrayRealVector13.getL1Norm();
        boolean boolean15 = arrayRealVector13.isNaN();
        double[] doubleArray20 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray20);
        org.apache.commons.math.linear.RealVector realVector23 = arrayRealVector21.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector24 = arrayRealVector21.copy();
        double[] doubleArray29 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray29);
        org.apache.commons.math.linear.RealVector realVector32 = arrayRealVector30.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector34 = arrayRealVector30.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector24, arrayRealVector30);
        double[] doubleArray40 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray40);
        org.apache.commons.math.linear.RealVector realVector42 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray40);
        double double43 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector42);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector24, realVector42);
        arrayRealVector24.set(1.0001523125762564d);
        double[] doubleArray47 = arrayRealVector24.getDataRef();
        // The following exception was thrown during execution in test generation
        try {
            double double48 = arrayRealVector13.cosine((org.apache.commons.math.linear.RealVector) arrayRealVector24);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.MathArithmeticException; message: zero norm");
        } catch (org.apache.commons.math.exception.MathArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6 == 3);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + relationship9 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.GEQ + "'", relationship9.equals(org.apache.commons.math.optimization.linear.Relationship.GEQ));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector23);
        org.junit.Assert.assertNotNull(arrayRealVector24);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(realVector34);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector42);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #204
19: aastore
20: invokevirtual #7
23: pop
24: iconst_0
25: anewarray     #72
28: astore_1
29: new           #75
32: dup
33: aload_1
34: invokespecial #205
37: astore_2
38: new           #75
41: dup
42: aload_1
43: invokespecial #205
46: astore_3
47: new           #37
50: dup
51: iconst_3
52: bipush        97
54: invokespecial #38
57: astore        4
59: aload         4
61: invokevirtual #39
64: istore        5
66: aload         4
68: iconst_1
69: invokevirtual #89
72: astore        6
74: getstatic     #90
77: astore        7
79: new           #12
82: dup
83: aload         6
85: aload         7
87: ldc2_w        #91
90: invokespecial #93
93: astore        8
95: aload         6
97: invokestatic  #206
100: new           #75
103: dup
104: aload_3
105: aload         6
107: invokespecial #207
110: astore        9
112: aload         9
114: invokevirtual #171
117: dstore        10
119: aload         9
121: invokevirtual #208
124: istore        12
126: iconst_4
127: newarray       double
129: dup
130: iconst_0
131: dconst_0
132: dastore
133: dup
134: iconst_1
135: ldc2_w        #17
138: dastore
139: dup
140: iconst_2
141: ldc2_w        #73
144: dastore
145: dup
146: iconst_3
147: ldc2_w        #17
150: dastore
151: astore        13
153: new           #75
156: dup
157: aload         13
159: invokespecial #76
162: astore        14
164: aload         14
166: ldc2_w        #33
169: invokevirtual #77
172: astore        15
174: aload         14
176: invokevirtual #80
179: astore        16
181: iconst_4
182: newarray       double
184: dup
185: iconst_0
186: dconst_0
187: dastore
188: dup
189: iconst_1
190: ldc2_w        #17
193: dastore
194: dup
195: iconst_2
196: ldc2_w        #73
199: dastore
200: dup
201: iconst_3
202: ldc2_w        #17
205: dastore
206: astore        17
208: new           #75
211: dup
212: aload         17
214: invokespecial #76
217: astore        18
219: aload         18
221: ldc2_w        #33
224: invokevirtual #77
227: astore        19
229: aload         18
231: ldc2_w        #122
234: invokevirtual #77
237: astore        20
239: new           #75
242: dup
243: aload         16
245: aload         18
247: invokespecial #124
250: astore        21
252: iconst_4
253: newarray       double
255: dup
256: iconst_0
257: dconst_0
258: dastore
259: dup
260: iconst_1
261: ldc2_w        #17
264: dastore
265: dup
266: iconst_2
267: ldc2_w        #73
270: dastore
271: dup
272: iconst_3
273: ldc2_w        #17
276: dastore
277: astore        22
279: new           #75
282: dup
283: aload         22
285: invokespecial #76
288: astore        23
290: aload         22
292: invokestatic  #125
295: astore        24
297: aload         24
299: invokestatic  #126
302: dstore        25
304: new           #75
307: dup
308: aload         16
310: aload         24
312: invokespecial #127
315: astore        27
317: aload         16
319: ldc2_w        #133
322: invokevirtual #135
325: aload         16
327: invokevirtual #136
330: astore        28
332: aload         9
334: aload         16
336: invokevirtual #209
339: dstore        29
341: ldc           #210
343: invokestatic  #21
346: goto          351
349: astore        29
351: aload_1
352: invokestatic  #23
355: new           #24
358: dup
359: invokespecial #25
362: ldc           #26
364: invokevirtual #27
367: iload         5
369: invokevirtual #49
372: ldc           #29
374: invokevirtual #27
377: iconst_3
378: invokevirtual #49
381: ldc           #26
383: invokevirtual #27
386: invokevirtual #30
389: iload         5
391: iconst_3
392: if_icmpne     399
395: iconst_1
396: goto          400
399: iconst_0
400: invokestatic  #31
403: aload         6
405: invokestatic  #23
408: aload         6
410: invokestatic  #46
413: ldc           #102
415: invokestatic  #48
418: new           #24
421: dup
422: invokespecial #25
425: ldc           #26
427: invokevirtual #27
430: aload         7
432: invokevirtual #55
435: ldc           #29
437: invokevirtual #27
440: getstatic     #90
443: invokevirtual #55
446: ldc           #26
448: invokevirtual #27
451: invokevirtual #30
454: aload         7
456: getstatic     #90
459: invokevirtual #101
462: invokestatic  #31
465: new           #24
468: dup
469: invokespecial #25
472: ldc           #26
474: invokevirtual #27
477: dload         10
479: invokevirtual #69
482: ldc           #29
484: invokevirtual #27
487: dconst_0
488: invokevirtual #69
491: ldc           #26
493: invokevirtual #27
496: invokevirtual #30
499: dload         10
501: dconst_0
502: dcmpl
503: ifne          510
506: iconst_1
507: goto          511
510: iconst_0
511: invokestatic  #31
514: new           #24
517: dup
518: invokespecial #25
521: ldc           #26
523: invokevirtual #27
526: iload         12
528: invokevirtual #28
531: ldc           #29
533: invokevirtual #27
536: iconst_0
537: invokevirtual #28
540: ldc           #26
542: invokevirtual #27
545: invokevirtual #30
548: iload         12
550: ifne          557
553: iconst_1
554: goto          558
557: iconst_0
558: invokestatic  #31
561: aload         13
563: invokestatic  #23
566: aload         13
568: invokestatic  #46
571: ldc           #95
573: invokestatic  #48
576: aload         15
578: invokestatic  #23
581: aload         16
583: invokestatic  #23
586: aload         17
588: invokestatic  #23
591: aload         17
593: invokestatic  #46
596: ldc           #95
598: invokestatic  #48
601: aload         19
603: invokestatic  #23
606: aload         20
608: invokestatic  #23
611: aload         22
613: invokestatic  #23
616: aload         22
618: invokestatic  #46
621: ldc           #95
623: invokestatic  #48
626: aload         24
628: invokestatic  #23
631: dload         25
633: invokestatic  #99
636: invokestatic  #100
639: aload         28
641: invokestatic  #23
644: aload         28
646: invokestatic  #46
649: ldc           #140
651: invokestatic  #48
654: return
Exception table:
from    to  target type
332   346   349   Class org/apache/commons/math/exception/MathArithmeticException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test22
Start line: 1243
End line: 1334
Method source code: 
    public void test22() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test22");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector20 = arrayRealVector8.copy();
        double[] doubleArray25 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray25);
        java.lang.String str27 = arrayRealVector26.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = arrayRealVector26.copy();
        arrayRealVector26.set(4.61512051684126d);
        double double31 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        double[] doubleArray36 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray36);
        arrayRealVector37.unitize();
        double[] doubleArray43 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray43);
        java.lang.String str45 = arrayRealVector44.toString();
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector37.add((org.apache.commons.math.linear.RealVector) arrayRealVector44);
        arrayRealVector37.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship51 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship52 = relationship51.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship51);
        double[] doubleArray58 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray58);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector59.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = arrayRealVector59.copy();
        double[] doubleArray69 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector70 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray69);
        java.lang.String str71 = arrayRealVector70.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector72 = arrayRealVector70.copy();
        boolean boolean73 = arrayRealVector72.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector74 = arrayRealVector62.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector72);
        double double75 = arrayRealVector72.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint77 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector37, Double.NaN, relationship51, (org.apache.commons.math.linear.RealVector) arrayRealVector72, (double) 52);
        double double79 = arrayRealVector37.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector81 = arrayRealVector37.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector82 = arrayRealVector26.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector37);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector83 = arrayRealVector8.append(arrayRealVector37);
        double[] doubleArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector85 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{0; 10; (NaN); 10}" + "'", str27, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-18.46048206736504d) + "'", double31 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{0; 10; (NaN); 10}" + "'", str45, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertTrue("'" + relationship51 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship51.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship52 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship52.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(arrayRealVector62);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{0; 10; (NaN); 10}" + "'", str71, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(arrayRealVector74);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(realVector82);
        org.junit.Assert.assertNotNull(arrayRealVector83);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #212
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: ldc2_w        #33
116: invokevirtual #77
119: astore        7
121: aload         6
123: ldc2_w        #122
126: invokevirtual #77
129: astore        8
131: new           #75
134: dup
135: aload         4
137: aload         6
139: invokespecial #124
142: astore        9
144: aload         4
146: invokevirtual #80
149: astore        10
151: iconst_4
152: newarray       double
154: dup
155: iconst_0
156: dconst_0
157: dastore
158: dup
159: iconst_1
160: ldc2_w        #17
163: dastore
164: dup
165: iconst_2
166: ldc2_w        #73
169: dastore
170: dup
171: iconst_3
172: ldc2_w        #17
175: dastore
176: astore        11
178: new           #75
181: dup
182: aload         11
184: invokespecial #76
187: astore        12
189: aload         12
191: invokevirtual #79
194: astore        13
196: aload         12
198: invokevirtual #80
201: astore        14
203: aload         12
205: ldc2_w        #213
208: invokevirtual #135
211: aload         12
213: invokestatic  #126
216: dstore        15
218: iconst_4
219: newarray       double
221: dup
222: iconst_0
223: dconst_0
224: dastore
225: dup
226: iconst_1
227: ldc2_w        #17
230: dastore
231: dup
232: iconst_2
233: ldc2_w        #73
236: dastore
237: dup
238: iconst_3
239: ldc2_w        #17
242: dastore
243: astore        17
245: new           #75
248: dup
249: aload         17
251: invokespecial #76
254: astore        18
256: aload         18
258: invokevirtual #215
261: iconst_4
262: newarray       double
264: dup
265: iconst_0
266: dconst_0
267: dastore
268: dup
269: iconst_1
270: ldc2_w        #17
273: dastore
274: dup
275: iconst_2
276: ldc2_w        #73
279: dastore
280: dup
281: iconst_3
282: ldc2_w        #17
285: dastore
286: astore        19
288: new           #75
291: dup
292: aload         19
294: invokespecial #76
297: astore        20
299: aload         20
301: invokevirtual #79
304: astore        21
306: aload         18
308: aload         20
310: invokevirtual #164
313: astore        22
315: aload         18
317: iconst_3
318: dconst_1
319: invokevirtual #178
322: getstatic     #86
325: astore        23
327: aload         23
329: invokevirtual #87
332: astore        24
334: aload         23
336: invokestatic  #216
339: iconst_4
340: newarray       double
342: dup
343: iconst_0
344: dconst_0
345: dastore
346: dup
347: iconst_1
348: ldc2_w        #17
351: dastore
352: dup
353: iconst_2
354: ldc2_w        #73
357: dastore
358: dup
359: iconst_3
360: ldc2_w        #17
363: dastore
364: astore        25
366: new           #75
369: dup
370: aload         25
372: invokespecial #76
375: astore        26
377: aload         26
379: ldc2_w        #33
382: invokevirtual #77
385: astore        27
387: aload         26
389: invokevirtual #80
392: astore        28
394: iconst_4
395: newarray       double
397: dup
398: iconst_0
399: dconst_0
400: dastore
401: dup
402: iconst_1
403: ldc2_w        #17
406: dastore
407: dup
408: iconst_2
409: ldc2_w        #73
412: dastore
413: dup
414: iconst_3
415: ldc2_w        #17
418: dastore
419: astore        29
421: new           #75
424: dup
425: aload         29
427: invokespecial #76
430: astore        30
432: aload         30
434: invokevirtual #79
437: astore        31
439: aload         30
441: invokevirtual #80
444: astore        32
446: aload         32
448: invokevirtual #161
451: istore        33
453: aload         28
455: ldc2_w        #33
458: ldc2_w        #17
461: aload         32
463: invokevirtual #170
466: astore        34
468: aload         32
470: invokevirtual #171
473: dstore        35
475: new           #12
478: dup
479: aload         18
481: ldc2_w        #73
484: aload         23
486: aload         32
488: ldc2_w        #41
491: invokespecial #217
494: astore        37
496: aload         18
498: iconst_1
499: invokevirtual #218
502: dstore        38
504: aload         18
506: ldc2_w        #219
509: invokevirtual #77
512: astore        40
514: aload         12
516: aload         18
518: invokevirtual #221
521: astore        41
523: aload         4
525: aload         18
527: invokevirtual #222
530: astore        42
532: aconst_null
533: astore        43
535: new           #75
538: dup
539: aload         4
541: aload         43
543: invokespecial #207
546: astore        44
548: ldc           #20
550: invokestatic  #21
553: goto          558
556: astore        44
558: aload_1
559: invokestatic  #23
562: aload_1
563: invokestatic  #46
566: ldc           #95
568: invokestatic  #48
571: aload_3
572: invokestatic  #23
575: aload         4
577: invokestatic  #23
580: aload         5
582: invokestatic  #23
585: aload         5
587: invokestatic  #46
590: ldc           #95
592: invokestatic  #48
595: aload         7
597: invokestatic  #23
600: aload         8
602: invokestatic  #23
605: aload         10
607: invokestatic  #23
610: aload         11
612: invokestatic  #23
615: aload         11
617: invokestatic  #46
620: ldc           #95
622: invokestatic  #48
625: new           #24
628: dup
629: invokespecial #25
632: ldc           #26
634: invokevirtual #27
637: aload         13
639: invokevirtual #27
642: ldc           #96
644: invokevirtual #27
647: invokevirtual #30
650: aload         13
652: ldc           #97
654: invokestatic  #98
657: aload         14
659: invokestatic  #23
662: new           #24
665: dup
666: invokespecial #25
669: ldc           #26
671: invokevirtual #27
674: dload         15
676: invokevirtual #69
679: ldc           #29
681: invokevirtual #27
684: ldc2_w        #223
687: invokevirtual #69
690: ldc           #26
692: invokevirtual #27
695: invokevirtual #30
698: dload         15
700: ldc2_w        #223
703: dcmpl
704: ifne          711
707: iconst_1
708: goto          712
711: iconst_0
712: invokestatic  #31
715: aload         17
717: invokestatic  #23
720: aload         17
722: invokestatic  #46
725: ldc           #95
727: invokestatic  #48
730: aload         19
732: invokestatic  #23
735: aload         19
737: invokestatic  #46
740: ldc           #95
742: invokestatic  #48
745: new           #24
748: dup
749: invokespecial #25
752: ldc           #26
754: invokevirtual #27
757: aload         21
759: invokevirtual #27
762: ldc           #96
764: invokevirtual #27
767: invokevirtual #30
770: aload         21
772: ldc           #97
774: invokestatic  #98
777: aload         22
779: invokestatic  #23
782: new           #24
785: dup
786: invokespecial #25
789: ldc           #26
791: invokevirtual #27
794: aload         23
796: invokevirtual #55
799: ldc           #29
801: invokevirtual #27
804: getstatic     #86
807: invokevirtual #55
810: ldc           #26
812: invokevirtual #27
815: invokevirtual #30
818: aload         23
820: getstatic     #86
823: invokevirtual #101
826: invokestatic  #31
829: new           #24
832: dup
833: invokespecial #25
836: ldc           #26
838: invokevirtual #27
841: aload         24
843: invokevirtual #55
846: ldc           #29
848: invokevirtual #27
851: getstatic     #86
854: invokevirtual #55
857: ldc           #26
859: invokevirtual #27
862: invokevirtual #30
865: aload         24
867: getstatic     #86
870: invokevirtual #101
873: invokestatic  #31
876: aload         25
878: invokestatic  #23
881: aload         25
883: invokestatic  #46
886: ldc           #95
888: invokestatic  #48
891: aload         27
893: invokestatic  #23
896: aload         28
898: invokestatic  #23
901: aload         29
903: invokestatic  #23
906: aload         29
908: invokestatic  #46
911: ldc           #95
913: invokestatic  #48
916: new           #24
919: dup
920: invokespecial #25
923: ldc           #26
925: invokevirtual #27
928: aload         31
930: invokevirtual #27
933: ldc           #96
935: invokevirtual #27
938: invokevirtual #30
941: aload         31
943: ldc           #97
945: invokestatic  #98
948: aload         32
950: invokestatic  #23
953: new           #24
956: dup
957: invokespecial #25
960: ldc           #26
962: invokevirtual #27
965: iload         33
967: invokevirtual #28
970: ldc           #29
972: invokevirtual #27
975: iconst_0
976: invokevirtual #28
979: ldc           #26
981: invokevirtual #27
984: invokevirtual #30
987: iload         33
989: ifne          996
992: iconst_1
993: goto          997
996: iconst_0
997: invokestatic  #31
1000: aload         34
1002: invokestatic  #23
1005: dload         35
1007: invokestatic  #99
1010: invokestatic  #100
1013: dload         38
1015: invokestatic  #99
1018: invokestatic  #100
1021: aload         40
1023: invokestatic  #23
1026: aload         41
1028: invokestatic  #23
1031: aload         42
1033: invokestatic  #23
1036: return
Exception table:
from    to  target type
535   553   556   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test23
Start line: 1337
End line: 1382
Method source code: 
    public void test23() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test23");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix2 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        double[][] doubleArray3 = array2DRowRealMatrix2.getData();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix4 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray3);
        int int5 = array2DRowRealMatrix4.getRowDimension();
        org.apache.commons.math.linear.RealMatrix realMatrix7 = array2DRowRealMatrix4.getColumnMatrix(4);
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = arrayRealVector14.copy();
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector27 = arrayRealVector23.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector17, arrayRealVector23);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector35 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray33);
        double double36 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector35);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector17, realVector35);
        arrayRealVector17.set(1.0001523125762564d);
        // The following exception was thrown during execution in test generation
        try {
            array2DRowRealMatrix4.setRowVector((int) (byte) 100, (org.apache.commons.math.linear.RealVector) arrayRealVector17);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: row index (100)");
        } catch (org.apache.commons.math.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertNotNull(realMatrix7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(arrayRealVector17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #225
19: aastore
20: invokevirtual #7
23: pop
24: new           #37
27: dup
28: iconst_3
29: bipush        97
31: invokespecial #38
34: astore_1
35: aload_1
36: invokevirtual #104
39: astore_2
40: new           #37
43: dup
44: aload_2
45: invokespecial #116
48: astore_3
49: aload_3
50: invokevirtual #39
53: istore        4
55: aload_3
56: iconst_4
57: invokevirtual #114
60: astore        5
62: iconst_4
63: newarray       double
65: dup
66: iconst_0
67: dconst_0
68: dastore
69: dup
70: iconst_1
71: ldc2_w        #17
74: dastore
75: dup
76: iconst_2
77: ldc2_w        #73
80: dastore
81: dup
82: iconst_3
83: ldc2_w        #17
86: dastore
87: astore        6
89: new           #75
92: dup
93: aload         6
95: invokespecial #76
98: astore        7
100: aload         7
102: ldc2_w        #33
105: invokevirtual #77
108: astore        8
110: aload         7
112: invokevirtual #80
115: astore        9
117: iconst_4
118: newarray       double
120: dup
121: iconst_0
122: dconst_0
123: dastore
124: dup
125: iconst_1
126: ldc2_w        #17
129: dastore
130: dup
131: iconst_2
132: ldc2_w        #73
135: dastore
136: dup
137: iconst_3
138: ldc2_w        #17
141: dastore
142: astore        10
144: new           #75
147: dup
148: aload         10
150: invokespecial #76
153: astore        11
155: aload         11
157: ldc2_w        #33
160: invokevirtual #77
163: astore        12
165: aload         11
167: ldc2_w        #122
170: invokevirtual #77
173: astore        13
175: new           #75
178: dup
179: aload         9
181: aload         11
183: invokespecial #124
186: astore        14
188: iconst_4
189: newarray       double
191: dup
192: iconst_0
193: dconst_0
194: dastore
195: dup
196: iconst_1
197: ldc2_w        #17
200: dastore
201: dup
202: iconst_2
203: ldc2_w        #73
206: dastore
207: dup
208: iconst_3
209: ldc2_w        #17
212: dastore
213: astore        15
215: new           #75
218: dup
219: aload         15
221: invokespecial #76
224: astore        16
226: aload         15
228: invokestatic  #125
231: astore        17
233: aload         17
235: invokestatic  #126
238: dstore        18
240: new           #75
243: dup
244: aload         9
246: aload         17
248: invokespecial #127
251: astore        20
253: aload         9
255: ldc2_w        #133
258: invokevirtual #135
261: aload_3
262: bipush        100
264: aload         9
266: invokevirtual #226
269: ldc           #227
271: invokestatic  #21
274: goto          279
277: astore        21
279: aload_2
280: invokestatic  #23
283: new           #24
286: dup
287: invokespecial #25
290: ldc           #26
292: invokevirtual #27
295: iload         4
297: invokevirtual #49
300: ldc           #29
302: invokevirtual #27
305: iconst_3
306: invokevirtual #49
309: ldc           #26
311: invokevirtual #27
314: invokevirtual #30
317: iload         4
319: iconst_3
320: if_icmpne     327
323: iconst_1
324: goto          328
327: iconst_0
328: invokestatic  #31
331: aload         5
333: invokestatic  #23
336: aload         6
338: invokestatic  #23
341: aload         6
343: invokestatic  #46
346: ldc           #95
348: invokestatic  #48
351: aload         8
353: invokestatic  #23
356: aload         9
358: invokestatic  #23
361: aload         10
363: invokestatic  #23
366: aload         10
368: invokestatic  #46
371: ldc           #95
373: invokestatic  #48
376: aload         12
378: invokestatic  #23
381: aload         13
383: invokestatic  #23
386: aload         15
388: invokestatic  #23
391: aload         15
393: invokestatic  #46
396: ldc           #95
398: invokestatic  #48
401: aload         17
403: invokestatic  #23
406: dload         18
408: invokestatic  #99
411: invokestatic  #100
414: return
Exception table:
from    to  target type
261   274   277   Class org/apache/commons/math/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test24
Start line: 1385
End line: 1453
Method source code: 
    public void test24() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test24");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector34.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector34.copy();
        double[] doubleArray42 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42);
        org.apache.commons.math.linear.RealVector realVector45 = arrayRealVector43.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector43.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, arrayRealVector43);
        double[] doubleArray53 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math.linear.RealVector realVector55 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray53);
        double double56 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector55);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, realVector55);
        arrayRealVector37.set(1.0001523125762564d);
        double[] doubleArray60 = arrayRealVector37.getDataRef();
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector8.append((org.apache.commons.math.linear.RealVector) arrayRealVector37);
        // The following exception was thrown during execution in test generation
        try {
            arrayRealVector37.addToEntry((-127), (-18.46048206736504d));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -127");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(realVector61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #228
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: ldc2_w        #33
116: invokevirtual #77
119: astore        7
121: aload         6
123: ldc2_w        #122
126: invokevirtual #77
129: astore        8
131: new           #75
134: dup
135: aload         4
137: aload         6
139: invokespecial #124
142: astore        9
144: iconst_4
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: ldc2_w        #17
156: dastore
157: dup
158: iconst_2
159: ldc2_w        #73
162: dastore
163: dup
164: iconst_3
165: ldc2_w        #17
168: dastore
169: astore        10
171: new           #75
174: dup
175: aload         10
177: invokespecial #76
180: astore        11
182: aload         10
184: invokestatic  #125
187: astore        12
189: aload         12
191: invokestatic  #126
194: dstore        13
196: new           #75
199: dup
200: aload         4
202: aload         12
204: invokespecial #127
207: astore        15
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #17
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #73
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #17
233: dastore
234: astore        16
236: new           #75
239: dup
240: aload         16
242: invokespecial #76
245: astore        17
247: aload         17
249: ldc2_w        #33
252: invokevirtual #77
255: astore        18
257: aload         17
259: invokevirtual #80
262: astore        19
264: iconst_4
265: newarray       double
267: dup
268: iconst_0
269: dconst_0
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #17
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #73
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #17
288: dastore
289: astore        20
291: new           #75
294: dup
295: aload         20
297: invokespecial #76
300: astore        21
302: aload         21
304: ldc2_w        #33
307: invokevirtual #77
310: astore        22
312: aload         21
314: ldc2_w        #122
317: invokevirtual #77
320: astore        23
322: new           #75
325: dup
326: aload         19
328: aload         21
330: invokespecial #124
333: astore        24
335: iconst_4
336: newarray       double
338: dup
339: iconst_0
340: dconst_0
341: dastore
342: dup
343: iconst_1
344: ldc2_w        #17
347: dastore
348: dup
349: iconst_2
350: ldc2_w        #73
353: dastore
354: dup
355: iconst_3
356: ldc2_w        #17
359: dastore
360: astore        25
362: new           #75
365: dup
366: aload         25
368: invokespecial #76
371: astore        26
373: aload         25
375: invokestatic  #125
378: astore        27
380: aload         27
382: invokestatic  #126
385: dstore        28
387: new           #75
390: dup
391: aload         19
393: aload         27
395: invokespecial #127
398: astore        30
400: aload         19
402: ldc2_w        #133
405: invokevirtual #135
408: aload         19
410: invokevirtual #136
413: astore        31
415: aload         4
417: aload         19
419: invokevirtual #182
422: astore        32
424: aload         19
426: bipush        -127
428: ldc2_w        #223
431: invokevirtual #229
434: ldc           #230
436: invokestatic  #21
439: goto          444
442: astore        33
444: aload_1
445: invokestatic  #23
448: aload_1
449: invokestatic  #46
452: ldc           #95
454: invokestatic  #48
457: aload_3
458: invokestatic  #23
461: aload         4
463: invokestatic  #23
466: aload         5
468: invokestatic  #23
471: aload         5
473: invokestatic  #46
476: ldc           #95
478: invokestatic  #48
481: aload         7
483: invokestatic  #23
486: aload         8
488: invokestatic  #23
491: aload         10
493: invokestatic  #23
496: aload         10
498: invokestatic  #46
501: ldc           #95
503: invokestatic  #48
506: aload         12
508: invokestatic  #23
511: dload         13
513: invokestatic  #99
516: invokestatic  #100
519: aload         16
521: invokestatic  #23
524: aload         16
526: invokestatic  #46
529: ldc           #95
531: invokestatic  #48
534: aload         18
536: invokestatic  #23
539: aload         19
541: invokestatic  #23
544: aload         20
546: invokestatic  #23
549: aload         20
551: invokestatic  #46
554: ldc           #95
556: invokestatic  #48
559: aload         22
561: invokestatic  #23
564: aload         23
566: invokestatic  #23
569: aload         25
571: invokestatic  #23
574: aload         25
576: invokestatic  #46
579: ldc           #95
581: invokestatic  #48
584: aload         27
586: invokestatic  #23
589: dload         28
591: invokestatic  #99
594: invokestatic  #100
597: aload         31
599: invokestatic  #23
602: aload         31
604: invokestatic  #46
607: ldc           #140
609: invokestatic  #48
612: aload         32
614: invokestatic  #23
617: return
Exception table:
from    to  target type
424   439   442   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test25
Start line: 1456
End line: 1559
Method source code: 
    public void test25() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test25");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        arrayRealVector5.set(4.61512051684126d);
        double double10 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        arrayRealVector16.unitize();
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector16.add((org.apache.commons.math.linear.RealVector) arrayRealVector23);
        arrayRealVector16.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship30 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship31 = relationship30.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship30);
        double[] doubleArray37 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector38.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = arrayRealVector38.copy();
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        java.lang.String str50 = arrayRealVector49.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = arrayRealVector49.copy();
        boolean boolean52 = arrayRealVector51.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = arrayRealVector41.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector51);
        double double54 = arrayRealVector51.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint56 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector16, Double.NaN, relationship30, (org.apache.commons.math.linear.RealVector) arrayRealVector51, (double) 52);
        double double58 = arrayRealVector16.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector60 = arrayRealVector16.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector5.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double[] doubleArray66 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray66);
        java.lang.String str68 = arrayRealVector67.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector69 = arrayRealVector67.copy();
        double[] doubleArray74 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector75 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray74);
        java.lang.String str76 = arrayRealVector75.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector77 = arrayRealVector75.copy();
        boolean boolean78 = arrayRealVector77.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector79 = arrayRealVector67.add((org.apache.commons.math.linear.RealVector) arrayRealVector77);
        double[] doubleArray84 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector85 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray84);
        java.lang.String str86 = arrayRealVector85.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector87 = arrayRealVector85.copy();
        arrayRealVector85.set(4.61512051684126d);
        double double90 = arrayRealVector79.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector85);
        arrayRealVector79.unitize();
        org.apache.commons.math.linear.RealVector realVector92 = realVector61.projection((org.apache.commons.math.linear.RealVector) arrayRealVector79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector95 = arrayRealVector79.getSubVector((int) (byte) -1, (-127));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-18.46048206736504d) + "'", double10 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertTrue("'" + relationship30 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship30.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship31 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship31.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(arrayRealVector41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{0; 10; (NaN); 10}" + "'", str50, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{0; 10; (NaN); 10}" + "'", str68, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{0; 10; (NaN); 10}" + "'", str76, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(arrayRealVector79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{0; 10; (NaN); 10}" + "'", str86, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector87);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(realVector92);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #232
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: invokevirtual #79
63: astore_3
64: aload_2
65: invokevirtual #80
68: astore        4
70: aload_2
71: ldc2_w        #213
74: invokevirtual #135
77: aload_2
78: invokestatic  #126
81: dstore        5
83: iconst_4
84: newarray       double
86: dup
87: iconst_0
88: dconst_0
89: dastore
90: dup
91: iconst_1
92: ldc2_w        #17
95: dastore
96: dup
97: iconst_2
98: ldc2_w        #73
101: dastore
102: dup
103: iconst_3
104: ldc2_w        #17
107: dastore
108: astore        7
110: new           #75
113: dup
114: aload         7
116: invokespecial #76
119: astore        8
121: aload         8
123: invokevirtual #215
126: iconst_4
127: newarray       double
129: dup
130: iconst_0
131: dconst_0
132: dastore
133: dup
134: iconst_1
135: ldc2_w        #17
138: dastore
139: dup
140: iconst_2
141: ldc2_w        #73
144: dastore
145: dup
146: iconst_3
147: ldc2_w        #17
150: dastore
151: astore        9
153: new           #75
156: dup
157: aload         9
159: invokespecial #76
162: astore        10
164: aload         10
166: invokevirtual #79
169: astore        11
171: aload         8
173: aload         10
175: invokevirtual #164
178: astore        12
180: aload         8
182: iconst_3
183: dconst_1
184: invokevirtual #178
187: getstatic     #86
190: astore        13
192: aload         13
194: invokevirtual #87
197: astore        14
199: aload         13
201: invokestatic  #216
204: iconst_4
205: newarray       double
207: dup
208: iconst_0
209: dconst_0
210: dastore
211: dup
212: iconst_1
213: ldc2_w        #17
216: dastore
217: dup
218: iconst_2
219: ldc2_w        #73
222: dastore
223: dup
224: iconst_3
225: ldc2_w        #17
228: dastore
229: astore        15
231: new           #75
234: dup
235: aload         15
237: invokespecial #76
240: astore        16
242: aload         16
244: ldc2_w        #33
247: invokevirtual #77
250: astore        17
252: aload         16
254: invokevirtual #80
257: astore        18
259: iconst_4
260: newarray       double
262: dup
263: iconst_0
264: dconst_0
265: dastore
266: dup
267: iconst_1
268: ldc2_w        #17
271: dastore
272: dup
273: iconst_2
274: ldc2_w        #73
277: dastore
278: dup
279: iconst_3
280: ldc2_w        #17
283: dastore
284: astore        19
286: new           #75
289: dup
290: aload         19
292: invokespecial #76
295: astore        20
297: aload         20
299: invokevirtual #79
302: astore        21
304: aload         20
306: invokevirtual #80
309: astore        22
311: aload         22
313: invokevirtual #161
316: istore        23
318: aload         18
320: ldc2_w        #33
323: ldc2_w        #17
326: aload         22
328: invokevirtual #170
331: astore        24
333: aload         22
335: invokevirtual #171
338: dstore        25
340: new           #12
343: dup
344: aload         8
346: ldc2_w        #73
349: aload         13
351: aload         22
353: ldc2_w        #41
356: invokespecial #217
359: astore        27
361: aload         8
363: iconst_1
364: invokevirtual #218
367: dstore        28
369: aload         8
371: ldc2_w        #219
374: invokevirtual #77
377: astore        30
379: aload_2
380: aload         8
382: invokevirtual #221
385: astore        31
387: iconst_4
388: newarray       double
390: dup
391: iconst_0
392: dconst_0
393: dastore
394: dup
395: iconst_1
396: ldc2_w        #17
399: dastore
400: dup
401: iconst_2
402: ldc2_w        #73
405: dastore
406: dup
407: iconst_3
408: ldc2_w        #17
411: dastore
412: astore        32
414: new           #75
417: dup
418: aload         32
420: invokespecial #76
423: astore        33
425: aload         33
427: invokevirtual #79
430: astore        34
432: aload         33
434: invokevirtual #80
437: astore        35
439: iconst_4
440: newarray       double
442: dup
443: iconst_0
444: dconst_0
445: dastore
446: dup
447: iconst_1
448: ldc2_w        #17
451: dastore
452: dup
453: iconst_2
454: ldc2_w        #73
457: dastore
458: dup
459: iconst_3
460: ldc2_w        #17
463: dastore
464: astore        36
466: new           #75
469: dup
470: aload         36
472: invokespecial #76
475: astore        37
477: aload         37
479: invokevirtual #79
482: astore        38
484: aload         37
486: invokevirtual #80
489: astore        39
491: aload         39
493: invokevirtual #161
496: istore        40
498: aload         33
500: aload         39
502: invokevirtual #164
505: astore        41
507: iconst_4
508: newarray       double
510: dup
511: iconst_0
512: dconst_0
513: dastore
514: dup
515: iconst_1
516: ldc2_w        #17
519: dastore
520: dup
521: iconst_2
522: ldc2_w        #73
525: dastore
526: dup
527: iconst_3
528: ldc2_w        #17
531: dastore
532: astore        42
534: new           #75
537: dup
538: aload         42
540: invokespecial #76
543: astore        43
545: aload         43
547: invokevirtual #79
550: astore        44
552: aload         43
554: invokevirtual #80
557: astore        45
559: aload         43
561: ldc2_w        #213
564: invokevirtual #135
567: aload         41
569: aload         43
571: invokevirtual #169
574: dstore        46
576: aload         41
578: invokevirtual #215
581: aload         31
583: aload         41
585: invokevirtual #85
588: astore        48
590: aload         41
592: iconst_m1
593: bipush        -127
595: invokevirtual #233
598: astore        49
600: ldc           #184
602: invokestatic  #21
605: goto          610
608: astore        49
610: aload_1
611: invokestatic  #23
614: aload_1
615: invokestatic  #46
618: ldc           #95
620: invokestatic  #48
623: new           #24
626: dup
627: invokespecial #25
630: ldc           #26
632: invokevirtual #27
635: aload_3
636: invokevirtual #27
639: ldc           #96
641: invokevirtual #27
644: invokevirtual #30
647: aload_3
648: ldc           #97
650: invokestatic  #98
653: aload         4
655: invokestatic  #23
658: new           #24
661: dup
662: invokespecial #25
665: ldc           #26
667: invokevirtual #27
670: dload         5
672: invokevirtual #69
675: ldc           #29
677: invokevirtual #27
680: ldc2_w        #223
683: invokevirtual #69
686: ldc           #26
688: invokevirtual #27
691: invokevirtual #30
694: dload         5
696: ldc2_w        #223
699: dcmpl
700: ifne          707
703: iconst_1
704: goto          708
707: iconst_0
708: invokestatic  #31
711: aload         7
713: invokestatic  #23
716: aload         7
718: invokestatic  #46
721: ldc           #95
723: invokestatic  #48
726: aload         9
728: invokestatic  #23
731: aload         9
733: invokestatic  #46
736: ldc           #95
738: invokestatic  #48
741: new           #24
744: dup
745: invokespecial #25
748: ldc           #26
750: invokevirtual #27
753: aload         11
755: invokevirtual #27
758: ldc           #96
760: invokevirtual #27
763: invokevirtual #30
766: aload         11
768: ldc           #97
770: invokestatic  #98
773: aload         12
775: invokestatic  #23
778: new           #24
781: dup
782: invokespecial #25
785: ldc           #26
787: invokevirtual #27
790: aload         13
792: invokevirtual #55
795: ldc           #29
797: invokevirtual #27
800: getstatic     #86
803: invokevirtual #55
806: ldc           #26
808: invokevirtual #27
811: invokevirtual #30
814: aload         13
816: getstatic     #86
819: invokevirtual #101
822: invokestatic  #31
825: new           #24
828: dup
829: invokespecial #25
832: ldc           #26
834: invokevirtual #27
837: aload         14
839: invokevirtual #55
842: ldc           #29
844: invokevirtual #27
847: getstatic     #86
850: invokevirtual #55
853: ldc           #26
855: invokevirtual #27
858: invokevirtual #30
861: aload         14
863: getstatic     #86
866: invokevirtual #101
869: invokestatic  #31
872: aload         15
874: invokestatic  #23
877: aload         15
879: invokestatic  #46
882: ldc           #95
884: invokestatic  #48
887: aload         17
889: invokestatic  #23
892: aload         18
894: invokestatic  #23
897: aload         19
899: invokestatic  #23
902: aload         19
904: invokestatic  #46
907: ldc           #95
909: invokestatic  #48
912: new           #24
915: dup
916: invokespecial #25
919: ldc           #26
921: invokevirtual #27
924: aload         21
926: invokevirtual #27
929: ldc           #96
931: invokevirtual #27
934: invokevirtual #30
937: aload         21
939: ldc           #97
941: invokestatic  #98
944: aload         22
946: invokestatic  #23
949: new           #24
952: dup
953: invokespecial #25
956: ldc           #26
958: invokevirtual #27
961: iload         23
963: invokevirtual #28
966: ldc           #29
968: invokevirtual #27
971: iconst_0
972: invokevirtual #28
975: ldc           #26
977: invokevirtual #27
980: invokevirtual #30
983: iload         23
985: ifne          992
988: iconst_1
989: goto          993
992: iconst_0
993: invokestatic  #31
996: aload         24
998: invokestatic  #23
1001: dload         25
1003: invokestatic  #99
1006: invokestatic  #100
1009: dload         28
1011: invokestatic  #99
1014: invokestatic  #100
1017: aload         30
1019: invokestatic  #23
1022: aload         31
1024: invokestatic  #23
1027: aload         32
1029: invokestatic  #23
1032: aload         32
1034: invokestatic  #46
1037: ldc           #95
1039: invokestatic  #48
1042: new           #24
1045: dup
1046: invokespecial #25
1049: ldc           #26
1051: invokevirtual #27
1054: aload         34
1056: invokevirtual #27
1059: ldc           #96
1061: invokevirtual #27
1064: invokevirtual #30
1067: aload         34
1069: ldc           #97
1071: invokestatic  #98
1074: aload         35
1076: invokestatic  #23
1079: aload         36
1081: invokestatic  #23
1084: aload         36
1086: invokestatic  #46
1089: ldc           #95
1091: invokestatic  #48
1094: new           #24
1097: dup
1098: invokespecial #25
1101: ldc           #26
1103: invokevirtual #27
1106: aload         38
1108: invokevirtual #27
1111: ldc           #96
1113: invokevirtual #27
1116: invokevirtual #30
1119: aload         38
1121: ldc           #97
1123: invokestatic  #98
1126: aload         39
1128: invokestatic  #23
1131: new           #24
1134: dup
1135: invokespecial #25
1138: ldc           #26
1140: invokevirtual #27
1143: iload         40
1145: invokevirtual #28
1148: ldc           #29
1150: invokevirtual #27
1153: iconst_0
1154: invokevirtual #28
1157: ldc           #26
1159: invokevirtual #27
1162: invokevirtual #30
1165: iload         40
1167: ifne          1174
1170: iconst_1
1171: goto          1175
1174: iconst_0
1175: invokestatic  #31
1178: aload         41
1180: invokestatic  #23
1183: aload         42
1185: invokestatic  #23
1188: aload         42
1190: invokestatic  #46
1193: ldc           #95
1195: invokestatic  #48
1198: new           #24
1201: dup
1202: invokespecial #25
1205: ldc           #26
1207: invokevirtual #27
1210: aload         44
1212: invokevirtual #27
1215: ldc           #96
1217: invokevirtual #27
1220: invokevirtual #30
1223: aload         44
1225: ldc           #97
1227: invokestatic  #98
1230: aload         45
1232: invokestatic  #23
1235: dload         46
1237: invokestatic  #99
1240: invokestatic  #100
1243: aload         48
1245: invokestatic  #23
1248: return
Exception table:
from    to  target type
590   605   608   Class java/lang/NegativeArraySizeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test26
Start line: 1562
End line: 1637
Method source code: 
    public void test26() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test26");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver2.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType5 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver2.goal = goalType5;
        int int7 = simplexSolver2.maxUlps;
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection8 = simplexSolver2.linearConstraints;
        simplexSolver2.nonNegative = true;
        org.apache.commons.math.exception.util.Localizable localizable11 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix14 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int15 = array2DRowRealMatrix14.getRowDimension();
        double[] doubleArray17 = array2DRowRealMatrix14.getColumn((int) (byte) 10);
        double[][] doubleArray18 = array2DRowRealMatrix14.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException19 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable11, (java.lang.Object[]) doubleArray18);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix20 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray18);
        org.apache.commons.math.linear.RealVector realVector22 = blockRealMatrix20.getColumnVector((int) (short) 10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix23 = blockRealMatrix20.copy();
        double[] doubleArray25 = blockRealMatrix20.getRow((int) (short) 0);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray25);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction28 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray25, (double) 10.0f);
        double[] doubleArray29 = new double[] {};
        org.apache.commons.math.optimization.linear.Relationship relationship31 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix34 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int35 = array2DRowRealMatrix34.getRowDimension();
        double[] doubleArray37 = array2DRowRealMatrix34.getColumn((int) (byte) 10);
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint39 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray29, (double) '4', relationship31, doubleArray37, (double) 3);
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        java.lang.String str46 = arrayRealVector45.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = arrayRealVector45.copy();
        boolean boolean48 = linearConstraint39.equals((java.lang.Object) arrayRealVector47);
        org.apache.commons.math.optimization.linear.Relationship relationship49 = linearConstraint39.getRelationship();
        org.apache.commons.math.optimization.linear.LinearConstraint[] linearConstraintArray50 = new org.apache.commons.math.optimization.linear.LinearConstraint[] { linearConstraint39 };
        java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintList51 = new java.util.ArrayList<org.apache.commons.math.optimization.linear.LinearConstraint>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList51, linearConstraintArray50);
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver55 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        int int56 = simplexSolver55.maxUlps;
        org.apache.commons.math.optimization.GoalType goalType57 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver55.goal = goalType57;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair60 = simplexSolver2.optimize(linearObjectiveFunction28, (java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint>) linearConstraintList51, goalType57, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType5 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType5.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1074790400) + "'", int7 == (-1074790400));
        org.junit.Assert.assertNull(linearConstraintCollection8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(blockRealMatrix23);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "{0; 10; (NaN); 10}" + "'", str46, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(relationship49);
        org.junit.Assert.assertNotNull(linearConstraintArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1074790400) + "'", int56 == (-1074790400));
        org.junit.Assert.assertTrue("'" + goalType57 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType57.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #234
19: aastore
20: invokevirtual #7
23: pop
24: new           #62
27: dup
28: ldc2_w        #17
31: ldc           #63
33: invokespecial #64
36: astore_1
37: aload_1
38: iconst_0
39: putfield      #65
42: getstatic     #54
45: astore_2
46: aload_1
47: aload_2
48: putfield      #66
51: aload_1
52: getfield      #235
55: istore_3
56: aload_1
57: getfield      #236
60: astore        4
62: aload_1
63: iconst_1
64: putfield      #65
67: aconst_null
68: astore        5
70: new           #37
73: dup
74: iconst_3
75: bipush        97
77: invokespecial #38
80: astore        6
82: aload         6
84: invokevirtual #39
87: istore        7
89: aload         6
91: bipush        10
93: invokevirtual #40
96: astore        8
98: aload         6
100: invokevirtual #104
103: astore        9
105: new           #105
108: dup
109: aload         5
111: aload         9
113: checkcast     #106
116: invokespecial #107
119: astore        10
121: new           #108
124: dup
125: aload         9
127: invokespecial #109
130: astore        11
132: aload         11
134: bipush        10
136: invokevirtual #110
139: astore        12
141: aload         11
143: invokevirtual #111
146: astore        13
148: aload         11
150: iconst_0
151: invokevirtual #237
154: astore        14
156: aload         14
158: invokestatic  #125
161: astore        15
163: new           #8
166: dup
167: aload         14
169: ldc2_w        #17
172: invokespecial #238
175: astore        16
177: iconst_0
178: newarray       double
180: astore        17
182: aconst_null
183: astore        18
185: new           #37
188: dup
189: iconst_3
190: bipush        97
192: invokespecial #38
195: astore        19
197: aload         19
199: invokevirtual #39
202: istore        20
204: aload         19
206: bipush        10
208: invokevirtual #40
211: astore        21
213: new           #12
216: dup
217: aload         17
219: ldc2_w        #41
222: aload         18
224: aload         21
226: ldc2_w        #43
229: invokespecial #45
232: astore        22
234: iconst_4
235: newarray       double
237: dup
238: iconst_0
239: dconst_0
240: dastore
241: dup
242: iconst_1
243: ldc2_w        #17
246: dastore
247: dup
248: iconst_2
249: ldc2_w        #73
252: dastore
253: dup
254: iconst_3
255: ldc2_w        #17
258: dastore
259: astore        23
261: new           #75
264: dup
265: aload         23
267: invokespecial #76
270: astore        24
272: aload         24
274: invokevirtual #79
277: astore        25
279: aload         24
281: invokevirtual #80
284: astore        26
286: aload         22
288: aload         26
290: invokevirtual #143
293: istore        27
295: aload         22
297: invokevirtual #145
300: astore        28
302: iconst_1
303: anewarray     #12
306: dup
307: iconst_0
308: aload         22
310: aastore
311: astore        29
313: new           #13
316: dup
317: invokespecial #14
320: astore        30
322: aload         30
324: aload         29
326: invokestatic  #15
329: istore        31
331: new           #62
334: dup
335: ldc2_w        #17
338: ldc           #63
340: invokespecial #64
343: astore        32
345: aload         32
347: getfield      #235
350: istore        33
352: getstatic     #54
355: astore        34
357: aload         32
359: aload         34
361: putfield      #66
364: aload_1
365: aload         16
367: aload         30
369: aload         34
371: iconst_0
372: invokevirtual #94
375: astore        35
377: ldc           #20
379: invokestatic  #21
382: goto          387
385: astore        35
387: new           #24
390: dup
391: invokespecial #25
394: ldc           #26
396: invokevirtual #27
399: aload_2
400: invokevirtual #55
403: ldc           #29
405: invokevirtual #27
408: getstatic     #54
411: invokevirtual #55
414: ldc           #26
416: invokevirtual #27
419: invokevirtual #30
422: aload_2
423: getstatic     #54
426: invokevirtual #56
429: invokestatic  #31
432: new           #24
435: dup
436: invokespecial #25
439: ldc           #26
441: invokevirtual #27
444: iload_3
445: invokevirtual #49
448: ldc           #29
450: invokevirtual #27
453: ldc           #63
455: invokevirtual #49
458: ldc           #26
460: invokevirtual #27
463: invokevirtual #30
466: iload_3
467: ldc           #63
469: if_icmpne     476
472: iconst_1
473: goto          477
476: iconst_0
477: invokestatic  #31
480: aload         4
482: invokestatic  #146
485: new           #24
488: dup
489: invokespecial #25
492: ldc           #26
494: invokevirtual #27
497: iload         7
499: invokevirtual #49
502: ldc           #29
504: invokevirtual #27
507: iconst_3
508: invokevirtual #49
511: ldc           #26
513: invokevirtual #27
516: invokevirtual #30
519: iload         7
521: iconst_3
522: if_icmpne     529
525: iconst_1
526: goto          530
529: iconst_0
530: invokestatic  #31
533: aload         8
535: invokestatic  #23
538: aload         8
540: invokestatic  #46
543: ldc           #50
545: invokestatic  #48
548: aload         9
550: invokestatic  #23
553: aload         12
555: invokestatic  #23
558: aload         13
560: invokestatic  #23
563: aload         14
565: invokestatic  #23
568: aload         14
570: invokestatic  #46
573: ldc           #102
575: invokestatic  #48
578: aload         15
580: invokestatic  #23
583: aload         17
585: invokestatic  #23
588: aload         17
590: invokestatic  #46
593: ldc           #47
595: invokestatic  #48
598: new           #24
601: dup
602: invokespecial #25
605: ldc           #26
607: invokevirtual #27
610: iload         20
612: invokevirtual #49
615: ldc           #29
617: invokevirtual #27
620: iconst_3
621: invokevirtual #49
624: ldc           #26
626: invokevirtual #27
629: invokevirtual #30
632: iload         20
634: iconst_3
635: if_icmpne     642
638: iconst_1
639: goto          643
642: iconst_0
643: invokestatic  #31
646: aload         21
648: invokestatic  #23
651: aload         21
653: invokestatic  #46
656: ldc           #50
658: invokestatic  #48
661: aload         23
663: invokestatic  #23
666: aload         23
668: invokestatic  #46
671: ldc           #95
673: invokestatic  #48
676: new           #24
679: dup
680: invokespecial #25
683: ldc           #26
685: invokevirtual #27
688: aload         25
690: invokevirtual #27
693: ldc           #96
695: invokevirtual #27
698: invokevirtual #30
701: aload         25
703: ldc           #97
705: invokestatic  #98
708: aload         26
710: invokestatic  #23
713: new           #24
716: dup
717: invokespecial #25
720: ldc           #26
722: invokevirtual #27
725: iload         27
727: invokevirtual #28
730: ldc           #29
732: invokevirtual #27
735: iconst_0
736: invokevirtual #28
739: ldc           #26
741: invokevirtual #27
744: invokevirtual #30
747: iload         27
749: ifne          756
752: iconst_1
753: goto          757
756: iconst_0
757: invokestatic  #31
760: aload         28
762: invokestatic  #146
765: aload         29
767: invokestatic  #23
770: new           #24
773: dup
774: invokespecial #25
777: ldc           #26
779: invokevirtual #27
782: iload         31
784: invokevirtual #28
787: ldc           #29
789: invokevirtual #27
792: iconst_1
793: invokevirtual #28
796: ldc           #26
798: invokevirtual #27
801: invokevirtual #30
804: iload         31
806: iconst_1
807: if_icmpne     814
810: iconst_1
811: goto          815
814: iconst_0
815: invokestatic  #31
818: new           #24
821: dup
822: invokespecial #25
825: ldc           #26
827: invokevirtual #27
830: iload         33
832: invokevirtual #49
835: ldc           #29
837: invokevirtual #27
840: ldc           #63
842: invokevirtual #49
845: ldc           #26
847: invokevirtual #27
850: invokevirtual #30
853: iload         33
855: ldc           #63
857: if_icmpne     864
860: iconst_1
861: goto          865
864: iconst_0
865: invokestatic  #31
868: new           #24
871: dup
872: invokespecial #25
875: ldc           #26
877: invokevirtual #27
880: aload         34
882: invokevirtual #55
885: ldc           #29
887: invokevirtual #27
890: getstatic     #54
893: invokevirtual #55
896: ldc           #26
898: invokevirtual #27
901: invokevirtual #30
904: aload         34
906: getstatic     #54
909: invokevirtual #56
912: invokestatic  #31
915: return
Exception table:
from    to  target type
364   382   385   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test27
Start line: 1640
End line: 1722
Method source code: 
    public void test27() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test27");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        boolean boolean7 = arrayRealVector5.isInfinite();
        arrayRealVector5.set(0.0d);
        int int10 = arrayRealVector5.getDimension();
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector16.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        java.lang.String str26 = arrayRealVector25.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = arrayRealVector25.copy();
        org.apache.commons.math.linear.RealVector realVector28 = arrayRealVector16.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        int int29 = arrayRealVector27.getDimension();
        org.apache.commons.math.linear.RealVector realVector31 = arrayRealVector27.mapSubtract(0.0d);
        org.apache.commons.math.linear.RealVector realVector33 = arrayRealVector27.mapDivide((double) (short) 0);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector5, arrayRealVector27);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix37 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int38 = array2DRowRealMatrix37.getRowDimension();
        double[] doubleArray40 = array2DRowRealMatrix37.getRow(1);
        org.apache.commons.math.optimization.linear.Relationship relationship41 = org.apache.commons.math.optimization.linear.Relationship.GEQ;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint43 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray40, relationship41, 0.9866275920404853d);
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        org.apache.commons.math.linear.RealVector realVector51 = arrayRealVector49.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector52 = arrayRealVector49.copy();
        double[] doubleArray57 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray57);
        org.apache.commons.math.linear.RealVector realVector60 = arrayRealVector58.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector62 = arrayRealVector58.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector52, arrayRealVector58);
        double[] doubleArray68 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector69 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray68);
        org.apache.commons.math.linear.RealVector realVector70 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray68);
        double double71 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector70);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector72 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector52, realVector70);
        arrayRealVector52.set(1.0001523125762564d);
        double[] doubleArray75 = arrayRealVector52.getDataRef();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector76 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray40, arrayRealVector52);
        org.apache.commons.math.linear.RealVector realVector78 = arrayRealVector76.mapMultiplyToSelf(1.0001523125762564d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector79 = arrayRealVector27.append(arrayRealVector76);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{0; 10; (NaN); 10}" + "'", str26, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector27);
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(realVector31);
        org.junit.Assert.assertNotNull(realVector33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + relationship41 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.GEQ + "'", relationship41.equals(org.apache.commons.math.optimization.linear.Relationship.GEQ));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(arrayRealVector52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertTrue(Double.isNaN(double71));
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(realVector78);
        org.junit.Assert.assertNotNull(arrayRealVector79);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #239
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: invokevirtual #79
63: astore_3
64: aload_2
65: invokevirtual #161
68: istore        4
70: aload_2
71: dconst_0
72: invokevirtual #135
75: aload_2
76: invokevirtual #168
79: istore        5
81: iconst_4
82: newarray       double
84: dup
85: iconst_0
86: dconst_0
87: dastore
88: dup
89: iconst_1
90: ldc2_w        #17
93: dastore
94: dup
95: iconst_2
96: ldc2_w        #73
99: dastore
100: dup
101: iconst_3
102: ldc2_w        #17
105: dastore
106: astore        6
108: new           #75
111: dup
112: aload         6
114: invokespecial #76
117: astore        7
119: aload         7
121: ldc2_w        #33
124: invokevirtual #77
127: astore        8
129: new           #75
132: dup
133: aload         7
135: invokespecial #78
138: astore        9
140: iconst_4
141: newarray       double
143: dup
144: iconst_0
145: dconst_0
146: dastore
147: dup
148: iconst_1
149: ldc2_w        #17
152: dastore
153: dup
154: iconst_2
155: ldc2_w        #73
158: dastore
159: dup
160: iconst_3
161: ldc2_w        #17
164: dastore
165: astore        10
167: new           #75
170: dup
171: aload         10
173: invokespecial #76
176: astore        11
178: aload         11
180: invokevirtual #79
183: astore        12
185: aload         11
187: invokevirtual #80
190: astore        13
192: aload         7
194: aload         13
196: invokevirtual #81
199: astore        14
201: aload         13
203: invokevirtual #168
206: istore        15
208: aload         13
210: dconst_0
211: invokevirtual #77
214: astore        16
216: aload         13
218: dconst_0
219: invokevirtual #240
222: astore        17
224: new           #75
227: dup
228: aload_2
229: aload         13
231: invokespecial #241
234: astore        18
236: new           #37
239: dup
240: iconst_3
241: bipush        97
243: invokespecial #38
246: astore        19
248: aload         19
250: invokevirtual #39
253: istore        20
255: aload         19
257: iconst_1
258: invokevirtual #89
261: astore        21
263: getstatic     #90
266: astore        22
268: new           #12
271: dup
272: aload         21
274: aload         22
276: ldc2_w        #91
279: invokespecial #93
282: astore        23
284: iconst_4
285: newarray       double
287: dup
288: iconst_0
289: dconst_0
290: dastore
291: dup
292: iconst_1
293: ldc2_w        #17
296: dastore
297: dup
298: iconst_2
299: ldc2_w        #73
302: dastore
303: dup
304: iconst_3
305: ldc2_w        #17
308: dastore
309: astore        24
311: new           #75
314: dup
315: aload         24
317: invokespecial #76
320: astore        25
322: aload         25
324: ldc2_w        #33
327: invokevirtual #77
330: astore        26
332: aload         25
334: invokevirtual #80
337: astore        27
339: iconst_4
340: newarray       double
342: dup
343: iconst_0
344: dconst_0
345: dastore
346: dup
347: iconst_1
348: ldc2_w        #17
351: dastore
352: dup
353: iconst_2
354: ldc2_w        #73
357: dastore
358: dup
359: iconst_3
360: ldc2_w        #17
363: dastore
364: astore        28
366: new           #75
369: dup
370: aload         28
372: invokespecial #76
375: astore        29
377: aload         29
379: ldc2_w        #33
382: invokevirtual #77
385: astore        30
387: aload         29
389: ldc2_w        #122
392: invokevirtual #77
395: astore        31
397: new           #75
400: dup
401: aload         27
403: aload         29
405: invokespecial #124
408: astore        32
410: iconst_4
411: newarray       double
413: dup
414: iconst_0
415: dconst_0
416: dastore
417: dup
418: iconst_1
419: ldc2_w        #17
422: dastore
423: dup
424: iconst_2
425: ldc2_w        #73
428: dastore
429: dup
430: iconst_3
431: ldc2_w        #17
434: dastore
435: astore        33
437: new           #75
440: dup
441: aload         33
443: invokespecial #76
446: astore        34
448: aload         33
450: invokestatic  #125
453: astore        35
455: aload         35
457: invokestatic  #126
460: dstore        36
462: new           #75
465: dup
466: aload         27
468: aload         35
470: invokespecial #127
473: astore        38
475: aload         27
477: ldc2_w        #133
480: invokevirtual #135
483: aload         27
485: invokevirtual #136
488: astore        39
490: new           #75
493: dup
494: aload         21
496: aload         27
498: invokespecial #150
501: astore        40
503: aload         40
505: ldc2_w        #133
508: invokevirtual #242
511: astore        41
513: aload         13
515: aload         40
517: invokevirtual #222
520: astore        42
522: aload_1
523: invokestatic  #23
526: aload_1
527: invokestatic  #46
530: ldc           #95
532: invokestatic  #48
535: new           #24
538: dup
539: invokespecial #25
542: ldc           #26
544: invokevirtual #27
547: aload_3
548: invokevirtual #27
551: ldc           #96
553: invokevirtual #27
556: invokevirtual #30
559: aload_3
560: ldc           #97
562: invokestatic  #98
565: new           #24
568: dup
569: invokespecial #25
572: ldc           #26
574: invokevirtual #27
577: iload         4
579: invokevirtual #28
582: ldc           #29
584: invokevirtual #27
587: iconst_0
588: invokevirtual #28
591: ldc           #26
593: invokevirtual #27
596: invokevirtual #30
599: iload         4
601: ifne          608
604: iconst_1
605: goto          609
608: iconst_0
609: invokestatic  #31
612: new           #24
615: dup
616: invokespecial #25
619: ldc           #26
621: invokevirtual #27
624: iload         5
626: invokevirtual #49
629: ldc           #29
631: invokevirtual #27
634: iconst_4
635: invokevirtual #49
638: ldc           #26
640: invokevirtual #27
643: invokevirtual #30
646: iload         5
648: iconst_4
649: if_icmpne     656
652: iconst_1
653: goto          657
656: iconst_0
657: invokestatic  #31
660: aload         6
662: invokestatic  #23
665: aload         6
667: invokestatic  #46
670: ldc           #95
672: invokestatic  #48
675: aload         8
677: invokestatic  #23
680: aload         10
682: invokestatic  #23
685: aload         10
687: invokestatic  #46
690: ldc           #95
692: invokestatic  #48
695: new           #24
698: dup
699: invokespecial #25
702: ldc           #26
704: invokevirtual #27
707: aload         12
709: invokevirtual #27
712: ldc           #96
714: invokevirtual #27
717: invokevirtual #30
720: aload         12
722: ldc           #97
724: invokestatic  #98
727: aload         13
729: invokestatic  #23
732: aload         14
734: invokestatic  #23
737: new           #24
740: dup
741: invokespecial #25
744: ldc           #26
746: invokevirtual #27
749: iload         15
751: invokevirtual #49
754: ldc           #29
756: invokevirtual #27
759: iconst_4
760: invokevirtual #49
763: ldc           #26
765: invokevirtual #27
768: invokevirtual #30
771: iload         15
773: iconst_4
774: if_icmpne     781
777: iconst_1
778: goto          782
781: iconst_0
782: invokestatic  #31
785: aload         16
787: invokestatic  #23
790: aload         17
792: invokestatic  #23
795: new           #24
798: dup
799: invokespecial #25
802: ldc           #26
804: invokevirtual #27
807: iload         20
809: invokevirtual #49
812: ldc           #29
814: invokevirtual #27
817: iconst_3
818: invokevirtual #49
821: ldc           #26
823: invokevirtual #27
826: invokevirtual #30
829: iload         20
831: iconst_3
832: if_icmpne     839
835: iconst_1
836: goto          840
839: iconst_0
840: invokestatic  #31
843: aload         21
845: invokestatic  #23
848: aload         21
850: invokestatic  #46
853: ldc           #102
855: invokestatic  #48
858: new           #24
861: dup
862: invokespecial #25
865: ldc           #26
867: invokevirtual #27
870: aload         22
872: invokevirtual #55
875: ldc           #29
877: invokevirtual #27
880: getstatic     #90
883: invokevirtual #55
886: ldc           #26
888: invokevirtual #27
891: invokevirtual #30
894: aload         22
896: getstatic     #90
899: invokevirtual #101
902: invokestatic  #31
905: aload         24
907: invokestatic  #23
910: aload         24
912: invokestatic  #46
915: ldc           #95
917: invokestatic  #48
920: aload         26
922: invokestatic  #23
925: aload         27
927: invokestatic  #23
930: aload         28
932: invokestatic  #23
935: aload         28
937: invokestatic  #46
940: ldc           #95
942: invokestatic  #48
945: aload         30
947: invokestatic  #23
950: aload         31
952: invokestatic  #23
955: aload         33
957: invokestatic  #23
960: aload         33
962: invokestatic  #46
965: ldc           #95
967: invokestatic  #48
970: aload         35
972: invokestatic  #23
975: dload         36
977: invokestatic  #99
980: invokestatic  #100
983: aload         39
985: invokestatic  #23
988: aload         39
990: invokestatic  #46
993: ldc           #140
995: invokestatic  #48
998: aload         41
1000: invokestatic  #23
1003: aload         42
1005: invokestatic  #23
1008: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test28
Start line: 1725
End line: 1762
Method source code: 
    public void test28() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test28");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        java.lang.String str14 = arrayRealVector13.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = arrayRealVector13.copy();
        boolean boolean16 = arrayRealVector15.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = arrayRealVector5.add((org.apache.commons.math.linear.RealVector) arrayRealVector15);
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector17.mapDivideToSelf((-1.0d));
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = arrayRealVector17.subtract(realVector26);
        int int29 = realVector26.getDimension();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{0; 10; (NaN); 10}" + "'", str14, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(arrayRealVector17);
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(arrayRealVector28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #243
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: invokevirtual #79
63: astore_3
64: aload_2
65: invokevirtual #80
68: astore        4
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #17
82: dastore
83: dup
84: iconst_2
85: ldc2_w        #73
88: dastore
89: dup
90: iconst_3
91: ldc2_w        #17
94: dastore
95: astore        5
97: new           #75
100: dup
101: aload         5
103: invokespecial #76
106: astore        6
108: aload         6
110: invokevirtual #79
113: astore        7
115: aload         6
117: invokevirtual #80
120: astore        8
122: aload         8
124: invokevirtual #161
127: istore        9
129: aload_2
130: aload         8
132: invokevirtual #164
135: astore        10
137: aload         10
139: ldc2_w        #9
142: invokevirtual #84
145: astore        11
147: iconst_4
148: newarray       double
150: dup
151: iconst_0
152: dconst_0
153: dastore
154: dup
155: iconst_1
156: ldc2_w        #17
159: dastore
160: dup
161: iconst_2
162: ldc2_w        #73
165: dastore
166: dup
167: iconst_3
168: ldc2_w        #17
171: dastore
172: astore        12
174: new           #75
177: dup
178: aload         12
180: invokespecial #76
183: astore        13
185: aload         12
187: invokestatic  #125
190: astore        14
192: aload         14
194: invokestatic  #126
197: dstore        15
199: aload         10
201: aload         14
203: invokevirtual #221
206: astore        17
208: aload         14
210: invokevirtual #244
213: istore        18
215: aload_1
216: invokestatic  #23
219: aload_1
220: invokestatic  #46
223: ldc           #95
225: invokestatic  #48
228: new           #24
231: dup
232: invokespecial #25
235: ldc           #26
237: invokevirtual #27
240: aload_3
241: invokevirtual #27
244: ldc           #96
246: invokevirtual #27
249: invokevirtual #30
252: aload_3
253: ldc           #97
255: invokestatic  #98
258: aload         4
260: invokestatic  #23
263: aload         5
265: invokestatic  #23
268: aload         5
270: invokestatic  #46
273: ldc           #95
275: invokestatic  #48
278: new           #24
281: dup
282: invokespecial #25
285: ldc           #26
287: invokevirtual #27
290: aload         7
292: invokevirtual #27
295: ldc           #96
297: invokevirtual #27
300: invokevirtual #30
303: aload         7
305: ldc           #97
307: invokestatic  #98
310: aload         8
312: invokestatic  #23
315: new           #24
318: dup
319: invokespecial #25
322: ldc           #26
324: invokevirtual #27
327: iload         9
329: invokevirtual #28
332: ldc           #29
334: invokevirtual #27
337: iconst_0
338: invokevirtual #28
341: ldc           #26
343: invokevirtual #27
346: invokevirtual #30
349: iload         9
351: ifne          358
354: iconst_1
355: goto          359
358: iconst_0
359: invokestatic  #31
362: aload         10
364: invokestatic  #23
367: aload         11
369: invokestatic  #23
372: aload         12
374: invokestatic  #23
377: aload         12
379: invokestatic  #46
382: ldc           #95
384: invokestatic  #48
387: aload         14
389: invokestatic  #23
392: dload         15
394: invokestatic  #99
397: invokestatic  #100
400: aload         17
402: invokestatic  #23
405: new           #24
408: dup
409: invokespecial #25
412: ldc           #26
414: invokevirtual #27
417: iload         18
419: invokevirtual #49
422: ldc           #29
424: invokevirtual #27
427: iconst_4
428: invokevirtual #49
431: ldc           #26
433: invokevirtual #27
436: invokevirtual #30
439: iload         18
441: iconst_4
442: if_icmpne     449
445: iconst_1
446: goto          450
449: iconst_0
450: invokestatic  #31
453: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test29
Start line: 1765
End line: 1788
Method source code: 
    public void test29() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test29");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver2.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType5 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver2.goal = goalType5;
        int int7 = simplexSolver2.getMaxIterations();
        org.apache.commons.math.optimization.GoalType goalType8 = simplexSolver2.goal;
        org.apache.commons.math.optimization.GoalType goalType9 = null;
        simplexSolver2.goal = goalType9;
        int int11 = simplexSolver2.getIterations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair12 = simplexSolver2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType5 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType5.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + goalType8 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType8.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #245
19: aastore
20: invokevirtual #7
23: pop
24: new           #62
27: dup
28: ldc2_w        #17
31: ldc           #63
33: invokespecial #64
36: astore_1
37: aload_1
38: iconst_0
39: putfield      #65
42: getstatic     #54
45: astore_2
46: aload_1
47: aload_2
48: putfield      #66
51: aload_1
52: invokevirtual #71
55: istore_3
56: aload_1
57: getfield      #66
60: astore        4
62: aconst_null
63: astore        5
65: aload_1
66: aload         5
68: putfield      #66
71: aload_1
72: invokevirtual #246
75: istore        6
77: aload_1
78: invokevirtual #247
81: astore        7
83: ldc           #20
85: invokestatic  #21
88: goto          93
91: astore        7
93: new           #24
96: dup
97: invokespecial #25
100: ldc           #26
102: invokevirtual #27
105: aload_2
106: invokevirtual #55
109: ldc           #29
111: invokevirtual #27
114: getstatic     #54
117: invokevirtual #55
120: ldc           #26
122: invokevirtual #27
125: invokevirtual #30
128: aload_2
129: getstatic     #54
132: invokevirtual #56
135: invokestatic  #31
138: new           #24
141: dup
142: invokespecial #25
145: ldc           #26
147: invokevirtual #27
150: iload_3
151: invokevirtual #49
154: ldc           #29
156: invokevirtual #27
159: bipush        100
161: invokevirtual #49
164: ldc           #26
166: invokevirtual #27
169: invokevirtual #30
172: iload_3
173: bipush        100
175: if_icmpne     182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #31
186: new           #24
189: dup
190: invokespecial #25
193: ldc           #26
195: invokevirtual #27
198: aload         4
200: invokevirtual #55
203: ldc           #29
205: invokevirtual #27
208: getstatic     #54
211: invokevirtual #55
214: ldc           #26
216: invokevirtual #27
219: invokevirtual #30
222: aload         4
224: getstatic     #54
227: invokevirtual #56
230: invokestatic  #31
233: new           #24
236: dup
237: invokespecial #25
240: ldc           #26
242: invokevirtual #27
245: iload         6
247: invokevirtual #49
250: ldc           #29
252: invokevirtual #27
255: iconst_0
256: invokevirtual #49
259: ldc           #26
261: invokevirtual #27
264: invokevirtual #30
267: iload         6
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #31
280: return
Exception table:
from    to  target type
77    88    91   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test30
Start line: 1791
End line: 1890
Method source code: 
    public void test30() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test30");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        org.apache.commons.math.linear.RealVector realVector15 = arrayRealVector13.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector13);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double double18 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        int int19 = arrayRealVector5.getDimension();
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector5.mapMultiply((double) 1074790400);
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        java.lang.String str28 = arrayRealVector27.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector29 = arrayRealVector27.copy();
        boolean boolean30 = arrayRealVector29.isInfinite();
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        double double37 = arrayRealVector29.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector36);
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector45.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = arrayRealVector45.copy();
        double[] doubleArray55 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray55);
        java.lang.String str57 = arrayRealVector56.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector58 = arrayRealVector56.copy();
        boolean boolean59 = arrayRealVector58.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = arrayRealVector48.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector58);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector36.combineToSelf(2.0d, (double) (short) 0, (org.apache.commons.math.linear.RealVector) arrayRealVector58);
        org.apache.commons.math.linear.RealVector realVector62 = arrayRealVector5.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector58);
        double[] doubleArray67 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray67);
        org.apache.commons.math.linear.RealVector realVector70 = arrayRealVector68.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector71 = arrayRealVector68.copy();
        double[] doubleArray76 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector77 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray76);
        org.apache.commons.math.linear.RealVector realVector79 = arrayRealVector77.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector81 = arrayRealVector77.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector71, arrayRealVector77);
        double[] doubleArray87 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector88 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray87);
        org.apache.commons.math.linear.RealVector realVector89 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray87);
        double double90 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector89);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector91 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector71, realVector89);
        arrayRealVector71.set(1.0001523125762564d);
        double[] doubleArray94 = arrayRealVector71.getDataRef();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector95 = arrayRealVector5.append(arrayRealVector71);
        int int96 = arrayRealVector5.getMinIndex();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{0; 10; (NaN); 10}" + "'", str28, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(arrayRealVector48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{0; 10; (NaN); 10}" + "'", str57, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(arrayRealVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(arrayRealVector71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector79);
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector89);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(arrayRealVector95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #248
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: invokevirtual #79
63: astore_3
64: aload_2
65: invokevirtual #80
68: astore        4
70: iconst_4
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: ldc2_w        #17
82: dastore
83: dup
84: iconst_2
85: ldc2_w        #73
88: dastore
89: dup
90: iconst_3
91: ldc2_w        #17
94: dastore
95: astore        5
97: new           #75
100: dup
101: aload         5
103: invokespecial #76
106: astore        6
108: aload         6
110: ldc2_w        #33
113: invokevirtual #77
116: astore        7
118: new           #75
121: dup
122: aload         6
124: invokespecial #78
127: astore        8
129: new           #75
132: dup
133: aload         8
135: invokespecial #78
138: astore        9
140: aload_2
141: aload         8
143: invokevirtual #192
146: dstore        10
148: aload_2
149: invokevirtual #168
152: istore        12
154: aload_2
155: ldc2_w        #193
158: invokevirtual #195
161: astore        13
163: iconst_4
164: newarray       double
166: dup
167: iconst_0
168: dconst_0
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #17
175: dastore
176: dup
177: iconst_2
178: ldc2_w        #73
181: dastore
182: dup
183: iconst_3
184: ldc2_w        #17
187: dastore
188: astore        14
190: new           #75
193: dup
194: aload         14
196: invokespecial #76
199: astore        15
201: aload         15
203: invokevirtual #79
206: astore        16
208: aload         15
210: invokevirtual #80
213: astore        17
215: aload         17
217: invokevirtual #161
220: istore        18
222: iconst_4
223: newarray       double
225: dup
226: iconst_0
227: dconst_0
228: dastore
229: dup
230: iconst_1
231: ldc2_w        #17
234: dastore
235: dup
236: iconst_2
237: ldc2_w        #73
240: dastore
241: dup
242: iconst_3
243: ldc2_w        #17
246: dastore
247: astore        19
249: new           #75
252: dup
253: aload         19
255: invokespecial #76
258: astore        20
260: aload         17
262: aload         20
264: invokevirtual #192
267: dstore        21
269: iconst_4
270: newarray       double
272: dup
273: iconst_0
274: dconst_0
275: dastore
276: dup
277: iconst_1
278: ldc2_w        #17
281: dastore
282: dup
283: iconst_2
284: ldc2_w        #73
287: dastore
288: dup
289: iconst_3
290: ldc2_w        #17
293: dastore
294: astore        23
296: new           #75
299: dup
300: aload         23
302: invokespecial #76
305: astore        24
307: aload         24
309: ldc2_w        #33
312: invokevirtual #77
315: astore        25
317: aload         24
319: invokevirtual #80
322: astore        26
324: iconst_4
325: newarray       double
327: dup
328: iconst_0
329: dconst_0
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #17
336: dastore
337: dup
338: iconst_2
339: ldc2_w        #73
342: dastore
343: dup
344: iconst_3
345: ldc2_w        #17
348: dastore
349: astore        27
351: new           #75
354: dup
355: aload         27
357: invokespecial #76
360: astore        28
362: aload         28
364: invokevirtual #79
367: astore        29
369: aload         28
371: invokevirtual #80
374: astore        30
376: aload         30
378: invokevirtual #161
381: istore        31
383: aload         26
385: ldc2_w        #33
388: ldc2_w        #17
391: aload         30
393: invokevirtual #170
396: astore        32
398: aload         20
400: ldc2_w        #196
403: dconst_0
404: aload         30
406: invokevirtual #198
409: astore        33
411: aload_2
412: aload         30
414: invokevirtual #81
417: astore        34
419: iconst_4
420: newarray       double
422: dup
423: iconst_0
424: dconst_0
425: dastore
426: dup
427: iconst_1
428: ldc2_w        #17
431: dastore
432: dup
433: iconst_2
434: ldc2_w        #73
437: dastore
438: dup
439: iconst_3
440: ldc2_w        #17
443: dastore
444: astore        35
446: new           #75
449: dup
450: aload         35
452: invokespecial #76
455: astore        36
457: aload         36
459: ldc2_w        #33
462: invokevirtual #77
465: astore        37
467: aload         36
469: invokevirtual #80
472: astore        38
474: iconst_4
475: newarray       double
477: dup
478: iconst_0
479: dconst_0
480: dastore
481: dup
482: iconst_1
483: ldc2_w        #17
486: dastore
487: dup
488: iconst_2
489: ldc2_w        #73
492: dastore
493: dup
494: iconst_3
495: ldc2_w        #17
498: dastore
499: astore        39
501: new           #75
504: dup
505: aload         39
507: invokespecial #76
510: astore        40
512: aload         40
514: ldc2_w        #33
517: invokevirtual #77
520: astore        41
522: aload         40
524: ldc2_w        #122
527: invokevirtual #77
530: astore        42
532: new           #75
535: dup
536: aload         38
538: aload         40
540: invokespecial #124
543: astore        43
545: iconst_4
546: newarray       double
548: dup
549: iconst_0
550: dconst_0
551: dastore
552: dup
553: iconst_1
554: ldc2_w        #17
557: dastore
558: dup
559: iconst_2
560: ldc2_w        #73
563: dastore
564: dup
565: iconst_3
566: ldc2_w        #17
569: dastore
570: astore        44
572: new           #75
575: dup
576: aload         44
578: invokespecial #76
581: astore        45
583: aload         44
585: invokestatic  #125
588: astore        46
590: aload         46
592: invokestatic  #126
595: dstore        47
597: new           #75
600: dup
601: aload         38
603: aload         46
605: invokespecial #127
608: astore        49
610: aload         38
612: ldc2_w        #133
615: invokevirtual #135
618: aload         38
620: invokevirtual #136
623: astore        50
625: aload_2
626: aload         38
628: invokevirtual #222
631: astore        51
633: aload_2
634: invokevirtual #249
637: istore        52
639: aload_1
640: invokestatic  #23
643: aload_1
644: invokestatic  #46
647: ldc           #95
649: invokestatic  #48
652: new           #24
655: dup
656: invokespecial #25
659: ldc           #26
661: invokevirtual #27
664: aload_3
665: invokevirtual #27
668: ldc           #96
670: invokevirtual #27
673: invokevirtual #30
676: aload_3
677: ldc           #97
679: invokestatic  #98
682: aload         4
684: invokestatic  #23
687: aload         5
689: invokestatic  #23
692: aload         5
694: invokestatic  #46
697: ldc           #95
699: invokestatic  #48
702: aload         7
704: invokestatic  #23
707: dload         10
709: invokestatic  #99
712: invokestatic  #100
715: new           #24
718: dup
719: invokespecial #25
722: ldc           #26
724: invokevirtual #27
727: iload         12
729: invokevirtual #49
732: ldc           #29
734: invokevirtual #27
737: iconst_4
738: invokevirtual #49
741: ldc           #26
743: invokevirtual #27
746: invokevirtual #30
749: iload         12
751: iconst_4
752: if_icmpne     759
755: iconst_1
756: goto          760
759: iconst_0
760: invokestatic  #31
763: aload         13
765: invokestatic  #23
768: aload         14
770: invokestatic  #23
773: aload         14
775: invokestatic  #46
778: ldc           #95
780: invokestatic  #48
783: new           #24
786: dup
787: invokespecial #25
790: ldc           #26
792: invokevirtual #27
795: aload         16
797: invokevirtual #27
800: ldc           #96
802: invokevirtual #27
805: invokevirtual #30
808: aload         16
810: ldc           #97
812: invokestatic  #98
815: aload         17
817: invokestatic  #23
820: new           #24
823: dup
824: invokespecial #25
827: ldc           #26
829: invokevirtual #27
832: iload         18
834: invokevirtual #28
837: ldc           #29
839: invokevirtual #27
842: iconst_0
843: invokevirtual #28
846: ldc           #26
848: invokevirtual #27
851: invokevirtual #30
854: iload         18
856: ifne          863
859: iconst_1
860: goto          864
863: iconst_0
864: invokestatic  #31
867: aload         19
869: invokestatic  #23
872: aload         19
874: invokestatic  #46
877: ldc           #95
879: invokestatic  #48
882: dload         21
884: invokestatic  #99
887: invokestatic  #100
890: aload         23
892: invokestatic  #23
895: aload         23
897: invokestatic  #46
900: ldc           #95
902: invokestatic  #48
905: aload         25
907: invokestatic  #23
910: aload         26
912: invokestatic  #23
915: aload         27
917: invokestatic  #23
920: aload         27
922: invokestatic  #46
925: ldc           #95
927: invokestatic  #48
930: new           #24
933: dup
934: invokespecial #25
937: ldc           #26
939: invokevirtual #27
942: aload         29
944: invokevirtual #27
947: ldc           #96
949: invokevirtual #27
952: invokevirtual #30
955: aload         29
957: ldc           #97
959: invokestatic  #98
962: aload         30
964: invokestatic  #23
967: new           #24
970: dup
971: invokespecial #25
974: ldc           #26
976: invokevirtual #27
979: iload         31
981: invokevirtual #28
984: ldc           #29
986: invokevirtual #27
989: iconst_0
990: invokevirtual #28
993: ldc           #26
995: invokevirtual #27
998: invokevirtual #30
1001: iload         31
1003: ifne          1010
1006: iconst_1
1007: goto          1011
1010: iconst_0
1011: invokestatic  #31
1014: aload         32
1016: invokestatic  #23
1019: aload         33
1021: invokestatic  #23
1024: aload         34
1026: invokestatic  #23
1029: aload         35
1031: invokestatic  #23
1034: aload         35
1036: invokestatic  #46
1039: ldc           #95
1041: invokestatic  #48
1044: aload         37
1046: invokestatic  #23
1049: aload         38
1051: invokestatic  #23
1054: aload         39
1056: invokestatic  #23
1059: aload         39
1061: invokestatic  #46
1064: ldc           #95
1066: invokestatic  #48
1069: aload         41
1071: invokestatic  #23
1074: aload         42
1076: invokestatic  #23
1079: aload         44
1081: invokestatic  #23
1084: aload         44
1086: invokestatic  #46
1089: ldc           #95
1091: invokestatic  #48
1094: aload         46
1096: invokestatic  #23
1099: dload         47
1101: invokestatic  #99
1104: invokestatic  #100
1107: aload         50
1109: invokestatic  #23
1112: aload         50
1114: invokestatic  #46
1117: ldc           #140
1119: invokestatic  #48
1122: aload         51
1124: invokestatic  #23
1127: new           #24
1130: dup
1131: invokespecial #25
1134: ldc           #26
1136: invokevirtual #27
1139: iload         52
1141: invokevirtual #49
1144: ldc           #29
1146: invokevirtual #27
1149: iconst_0
1150: invokevirtual #49
1153: ldc           #26
1155: invokevirtual #27
1158: invokevirtual #30
1161: iload         52
1163: ifne          1170
1166: iconst_1
1167: goto          1171
1170: iconst_0
1171: invokestatic  #31
1174: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test31
Start line: 1893
End line: 1958
Method source code: 
    public void test31() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test31");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector34.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector34.copy();
        double[] doubleArray42 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42);
        org.apache.commons.math.linear.RealVector realVector45 = arrayRealVector43.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector43.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, arrayRealVector43);
        double[] doubleArray53 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math.linear.RealVector realVector55 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray53);
        double double56 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector55);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, realVector55);
        arrayRealVector37.set(1.0001523125762564d);
        double[] doubleArray60 = arrayRealVector37.getDataRef();
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector8.append((org.apache.commons.math.linear.RealVector) arrayRealVector37);
        org.apache.commons.math.linear.RealVector realVector63 = realVector61.mapSubtract((-103.27892990343184d));
        org.apache.commons.math.linear.RealVector realVector64 = realVector63.unitVector();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertNotNull(realVector64);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #250
19: aastore
20: invokevirtual #7
23: pop
24: iconst_4
25: newarray       double
27: dup
28: iconst_0
29: dconst_0
30: dastore
31: dup
32: iconst_1
33: ldc2_w        #17
36: dastore
37: dup
38: iconst_2
39: ldc2_w        #73
42: dastore
43: dup
44: iconst_3
45: ldc2_w        #17
48: dastore
49: astore_1
50: new           #75
53: dup
54: aload_1
55: invokespecial #76
58: astore_2
59: aload_2
60: ldc2_w        #33
63: invokevirtual #77
66: astore_3
67: aload_2
68: invokevirtual #80
71: astore        4
73: iconst_4
74: newarray       double
76: dup
77: iconst_0
78: dconst_0
79: dastore
80: dup
81: iconst_1
82: ldc2_w        #17
85: dastore
86: dup
87: iconst_2
88: ldc2_w        #73
91: dastore
92: dup
93: iconst_3
94: ldc2_w        #17
97: dastore
98: astore        5
100: new           #75
103: dup
104: aload         5
106: invokespecial #76
109: astore        6
111: aload         6
113: ldc2_w        #33
116: invokevirtual #77
119: astore        7
121: aload         6
123: ldc2_w        #122
126: invokevirtual #77
129: astore        8
131: new           #75
134: dup
135: aload         4
137: aload         6
139: invokespecial #124
142: astore        9
144: iconst_4
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: ldc2_w        #17
156: dastore
157: dup
158: iconst_2
159: ldc2_w        #73
162: dastore
163: dup
164: iconst_3
165: ldc2_w        #17
168: dastore
169: astore        10
171: new           #75
174: dup
175: aload         10
177: invokespecial #76
180: astore        11
182: aload         10
184: invokestatic  #125
187: astore        12
189: aload         12
191: invokestatic  #126
194: dstore        13
196: new           #75
199: dup
200: aload         4
202: aload         12
204: invokespecial #127
207: astore        15
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #17
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #73
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #17
233: dastore
234: astore        16
236: new           #75
239: dup
240: aload         16
242: invokespecial #76
245: astore        17
247: aload         17
249: ldc2_w        #33
252: invokevirtual #77
255: astore        18
257: aload         17
259: invokevirtual #80
262: astore        19
264: iconst_4
265: newarray       double
267: dup
268: iconst_0
269: dconst_0
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #17
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #73
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #17
288: dastore
289: astore        20
291: new           #75
294: dup
295: aload         20
297: invokespecial #76
300: astore        21
302: aload         21
304: ldc2_w        #33
307: invokevirtual #77
310: astore        22
312: aload         21
314: ldc2_w        #122
317: invokevirtual #77
320: astore        23
322: new           #75
325: dup
326: aload         19
328: aload         21
330: invokespecial #124
333: astore        24
335: iconst_4
336: newarray       double
338: dup
339: iconst_0
340: dconst_0
341: dastore
342: dup
343: iconst_1
344: ldc2_w        #17
347: dastore
348: dup
349: iconst_2
350: ldc2_w        #73
353: dastore
354: dup
355: iconst_3
356: ldc2_w        #17
359: dastore
360: astore        25
362: new           #75
365: dup
366: aload         25
368: invokespecial #76
371: astore        26
373: aload         25
375: invokestatic  #125
378: astore        27
380: aload         27
382: invokestatic  #126
385: dstore        28
387: new           #75
390: dup
391: aload         19
393: aload         27
395: invokespecial #127
398: astore        30
400: aload         19
402: ldc2_w        #133
405: invokevirtual #135
408: aload         19
410: invokevirtual #136
413: astore        31
415: aload         4
417: aload         19
419: invokevirtual #182
422: astore        32
424: aload         32
426: ldc2_w        #251
429: invokevirtual #253
432: astore        33
434: aload         33
436: invokevirtual #254
439: astore        34
441: aload_1
442: invokestatic  #23
445: aload_1
446: invokestatic  #46
449: ldc           #95
451: invokestatic  #48
454: aload_3
455: invokestatic  #23
458: aload         4
460: invokestatic  #23
463: aload         5
465: invokestatic  #23
468: aload         5
470: invokestatic  #46
473: ldc           #95
475: invokestatic  #48
478: aload         7
480: invokestatic  #23
483: aload         8
485: invokestatic  #23
488: aload         10
490: invokestatic  #23
493: aload         10
495: invokestatic  #46
498: ldc           #95
500: invokestatic  #48
503: aload         12
505: invokestatic  #23
508: dload         13
510: invokestatic  #99
513: invokestatic  #100
516: aload         16
518: invokestatic  #23
521: aload         16
523: invokestatic  #46
526: ldc           #95
528: invokestatic  #48
531: aload         18
533: invokestatic  #23
536: aload         19
538: invokestatic  #23
541: aload         20
543: invokestatic  #23
546: aload         20
548: invokestatic  #46
551: ldc           #95
553: invokestatic  #48
556: aload         22
558: invokestatic  #23
561: aload         23
563: invokestatic  #23
566: aload         25
568: invokestatic  #23
571: aload         25
573: invokestatic  #46
576: ldc           #95
578: invokestatic  #48
581: aload         27
583: invokestatic  #23
586: dload         28
588: invokestatic  #99
591: invokestatic  #100
594: aload         31
596: invokestatic  #23
599: aload         31
601: invokestatic  #46
604: ldc           #140
606: invokestatic  #48
609: aload         32
611: invokestatic  #23
614: aload         33
616: invokestatic  #23
619: aload         34
621: invokestatic  #23
624: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test32
Start line: 1961
End line: 1984
Method source code: 
    public void test32() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test32");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver2.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType5 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver2.goal = goalType5;
        int int7 = simplexSolver2.getMaxIterations();
        org.apache.commons.math.optimization.GoalType goalType8 = simplexSolver2.goal;
        org.apache.commons.math.optimization.GoalType goalType9 = null;
        simplexSolver2.goal = goalType9;
        int int11 = simplexSolver2.getIterations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair12 = simplexSolver2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType5 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType5.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + goalType8 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType8.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          24
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc           #255
19: aastore
20: invokevirtual #7
23: pop
24: new           #62
27: dup
28: ldc2_w        #17
31: ldc           #63
33: invokespecial #64
36: astore_1
37: aload_1
38: iconst_0
39: putfield      #65
42: getstatic     #54
45: astore_2
46: aload_1
47: aload_2
48: putfield      #66
51: aload_1
52: invokevirtual #71
55: istore_3
56: aload_1
57: getfield      #66
60: astore        4
62: aconst_null
63: astore        5
65: aload_1
66: aload         5
68: putfield      #66
71: aload_1
72: invokevirtual #246
75: istore        6
77: aload_1
78: invokevirtual #247
81: astore        7
83: ldc           #20
85: invokestatic  #21
88: goto          93
91: astore        7
93: new           #24
96: dup
97: invokespecial #25
100: ldc           #26
102: invokevirtual #27
105: aload_2
106: invokevirtual #55
109: ldc           #29
111: invokevirtual #27
114: getstatic     #54
117: invokevirtual #55
120: ldc           #26
122: invokevirtual #27
125: invokevirtual #30
128: aload_2
129: getstatic     #54
132: invokevirtual #56
135: invokestatic  #31
138: new           #24
141: dup
142: invokespecial #25
145: ldc           #26
147: invokevirtual #27
150: iload_3
151: invokevirtual #49
154: ldc           #29
156: invokevirtual #27
159: bipush        100
161: invokevirtual #49
164: ldc           #26
166: invokevirtual #27
169: invokevirtual #30
172: iload_3
173: bipush        100
175: if_icmpne     182
178: iconst_1
179: goto          183
182: iconst_0
183: invokestatic  #31
186: new           #24
189: dup
190: invokespecial #25
193: ldc           #26
195: invokevirtual #27
198: aload         4
200: invokevirtual #55
203: ldc           #29
205: invokevirtual #27
208: getstatic     #54
211: invokevirtual #55
214: ldc           #26
216: invokevirtual #27
219: invokevirtual #30
222: aload         4
224: getstatic     #54
227: invokevirtual #56
230: invokestatic  #31
233: new           #24
236: dup
237: invokespecial #25
240: ldc           #26
242: invokevirtual #27
245: iload         6
247: invokevirtual #49
250: ldc           #29
252: invokevirtual #27
255: iconst_0
256: invokevirtual #49
259: ldc           #26
261: invokevirtual #27
264: invokevirtual #30
267: iload         6
269: ifne          276
272: iconst_1
273: goto          277
276: iconst_0
277: invokestatic  #31
280: return
Exception table:
from    to  target type
77    88    91   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test33
Start line: 1987
End line: 2058
Method source code: 
    public void test33() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test33");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        double[] doubleArray10 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray10);
        java.lang.String str12 = arrayRealVector11.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = arrayRealVector11.copy();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector11);
        double[] doubleArray19 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector20.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = arrayRealVector20.copy();
        double[] doubleArray30 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray30);
        java.lang.String str32 = arrayRealVector31.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = arrayRealVector31.copy();
        boolean boolean34 = arrayRealVector33.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector35 = arrayRealVector23.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector33);
        double double36 = arrayRealVector33.getL1Norm();
        double[] doubleArray41 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray41);
        org.apache.commons.math.linear.RealVector realVector44 = arrayRealVector42.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = arrayRealVector42.copy();
        double[] doubleArray50 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray50);
        org.apache.commons.math.linear.RealVector realVector53 = arrayRealVector51.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector55 = arrayRealVector51.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector45, arrayRealVector51);
        double[] doubleArray61 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray61);
        org.apache.commons.math.linear.RealVector realVector63 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray61);
        double double64 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector63);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector45, realVector63);
        double double66 = arrayRealVector33.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector45);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector11, arrayRealVector33);
        double double68 = arrayRealVector5.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector33);
        double double69 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector33);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{0; 10; (NaN); 10}" + "'", str12, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(arrayRealVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{0; 10; (NaN); 10}" + "'", str32, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(arrayRealVector35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(arrayRealVector45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #256
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: iconst_4
61: newarray       double
63: dup
64: iconst_0
65: dconst_0
66: dastore
67: dup
68: iconst_1
69: ldc2_w        #17
72: dastore
73: dup
74: iconst_2
75: ldc2_w        #73
78: dastore
79: dup
80: iconst_3
81: ldc2_w        #17
84: dastore
85: astore_3
86: new           #75
89: dup
90: aload_3
91: invokespecial #76
94: astore        4
96: aload         4
98: invokevirtual #79
101: astore        5
103: aload         4
105: invokevirtual #80
108: astore        6
110: new           #75
113: dup
114: aload         4
116: invokespecial #78
119: astore        7
121: iconst_4
122: newarray       double
124: dup
125: iconst_0
126: dconst_0
127: dastore
128: dup
129: iconst_1
130: ldc2_w        #17
133: dastore
134: dup
135: iconst_2
136: ldc2_w        #73
139: dastore
140: dup
141: iconst_3
142: ldc2_w        #17
145: dastore
146: astore        8
148: new           #75
151: dup
152: aload         8
154: invokespecial #76
157: astore        9
159: aload         9
161: ldc2_w        #33
164: invokevirtual #77
167: astore        10
169: aload         9
171: invokevirtual #80
174: astore        11
176: iconst_4
177: newarray       double
179: dup
180: iconst_0
181: dconst_0
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #17
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #73
194: dastore
195: dup
196: iconst_3
197: ldc2_w        #17
200: dastore
201: astore        12
203: new           #75
206: dup
207: aload         12
209: invokespecial #76
212: astore        13
214: aload         13
216: invokevirtual #79
219: astore        14
221: aload         13
223: invokevirtual #80
226: astore        15
228: aload         15
230: invokevirtual #161
233: istore        16
235: aload         11
237: ldc2_w        #33
240: ldc2_w        #17
243: aload         15
245: invokevirtual #170
248: astore        17
250: aload         15
252: invokevirtual #171
255: dstore        18
257: iconst_4
258: newarray       double
260: dup
261: iconst_0
262: dconst_0
263: dastore
264: dup
265: iconst_1
266: ldc2_w        #17
269: dastore
270: dup
271: iconst_2
272: ldc2_w        #73
275: dastore
276: dup
277: iconst_3
278: ldc2_w        #17
281: dastore
282: astore        20
284: new           #75
287: dup
288: aload         20
290: invokespecial #76
293: astore        21
295: aload         21
297: ldc2_w        #33
300: invokevirtual #77
303: astore        22
305: aload         21
307: invokevirtual #80
310: astore        23
312: iconst_4
313: newarray       double
315: dup
316: iconst_0
317: dconst_0
318: dastore
319: dup
320: iconst_1
321: ldc2_w        #17
324: dastore
325: dup
326: iconst_2
327: ldc2_w        #73
330: dastore
331: dup
332: iconst_3
333: ldc2_w        #17
336: dastore
337: astore        24
339: new           #75
342: dup
343: aload         24
345: invokespecial #76
348: astore        25
350: aload         25
352: ldc2_w        #33
355: invokevirtual #77
358: astore        26
360: aload         25
362: ldc2_w        #122
365: invokevirtual #77
368: astore        27
370: new           #75
373: dup
374: aload         23
376: aload         25
378: invokespecial #124
381: astore        28
383: iconst_4
384: newarray       double
386: dup
387: iconst_0
388: dconst_0
389: dastore
390: dup
391: iconst_1
392: ldc2_w        #17
395: dastore
396: dup
397: iconst_2
398: ldc2_w        #73
401: dastore
402: dup
403: iconst_3
404: ldc2_w        #17
407: dastore
408: astore        29
410: new           #75
413: dup
414: aload         29
416: invokespecial #76
419: astore        30
421: aload         29
423: invokestatic  #125
426: astore        31
428: aload         31
430: invokestatic  #126
433: dstore        32
435: new           #75
438: dup
439: aload         23
441: aload         31
443: invokespecial #127
446: astore        34
448: aload         15
450: aload         23
452: invokevirtual #173
455: dstore        35
457: new           #75
460: dup
461: aload         4
463: aload         15
465: invokespecial #124
468: astore        37
470: aload_2
471: aload         15
473: invokevirtual #169
476: dstore        38
478: aload         15
480: invokestatic  #126
483: dstore        40
485: aload_1
486: invokestatic  #23
489: aload_1
490: invokestatic  #46
493: ldc           #95
495: invokestatic  #48
498: aload_3
499: invokestatic  #23
502: aload_3
503: invokestatic  #46
506: ldc           #95
508: invokestatic  #48
511: new           #24
514: dup
515: invokespecial #25
518: ldc           #26
520: invokevirtual #27
523: aload         5
525: invokevirtual #27
528: ldc           #96
530: invokevirtual #27
533: invokevirtual #30
536: aload         5
538: ldc           #97
540: invokestatic  #98
543: aload         6
545: invokestatic  #23
548: aload         8
550: invokestatic  #23
553: aload         8
555: invokestatic  #46
558: ldc           #95
560: invokestatic  #48
563: aload         10
565: invokestatic  #23
568: aload         11
570: invokestatic  #23
573: aload         12
575: invokestatic  #23
578: aload         12
580: invokestatic  #46
583: ldc           #95
585: invokestatic  #48
588: new           #24
591: dup
592: invokespecial #25
595: ldc           #26
597: invokevirtual #27
600: aload         14
602: invokevirtual #27
605: ldc           #96
607: invokevirtual #27
610: invokevirtual #30
613: aload         14
615: ldc           #97
617: invokestatic  #98
620: aload         15
622: invokestatic  #23
625: new           #24
628: dup
629: invokespecial #25
632: ldc           #26
634: invokevirtual #27
637: iload         16
639: invokevirtual #28
642: ldc           #29
644: invokevirtual #27
647: iconst_0
648: invokevirtual #28
651: ldc           #26
653: invokevirtual #27
656: invokevirtual #30
659: iload         16
661: ifne          668
664: iconst_1
665: goto          669
668: iconst_0
669: invokestatic  #31
672: aload         17
674: invokestatic  #23
677: dload         18
679: invokestatic  #99
682: invokestatic  #100
685: aload         20
687: invokestatic  #23
690: aload         20
692: invokestatic  #46
695: ldc           #95
697: invokestatic  #48
700: aload         22
702: invokestatic  #23
705: aload         23
707: invokestatic  #23
710: aload         24
712: invokestatic  #23
715: aload         24
717: invokestatic  #46
720: ldc           #95
722: invokestatic  #48
725: aload         26
727: invokestatic  #23
730: aload         27
732: invokestatic  #23
735: aload         29
737: invokestatic  #23
740: aload         29
742: invokestatic  #46
745: ldc           #95
747: invokestatic  #48
750: aload         31
752: invokestatic  #23
755: dload         32
757: invokestatic  #99
760: invokestatic  #100
763: dload         35
765: invokestatic  #99
768: invokestatic  #100
771: dload         38
773: invokestatic  #99
776: invokestatic  #100
779: dload         40
781: invokestatic  #99
784: invokestatic  #100
787: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test34
Start line: 2061
End line: 2145
Method source code: 
    public void test34() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test34");
        java.text.NumberFormat numberFormat3 = null;
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat4 = new org.apache.commons.math.linear.RealVectorFormat("hi!", "{0; 10; (NaN); 10; 0; 10; (NaN); 10}", "", numberFormat3);
        double[] doubleArray9 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray9);
        org.apache.commons.math.linear.RealVector realVector12 = arrayRealVector10.mapSubtract((double) 100L);
        int int13 = arrayRealVector10.getDimension();
        arrayRealVector10.set(1.5395564933646284d);
        double[] doubleArray20 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray20);
        java.lang.String str22 = arrayRealVector21.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = arrayRealVector21.copy();
        arrayRealVector21.set(4.61512051684126d);
        double double26 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector21);
        double[] doubleArray31 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector32 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray31);
        arrayRealVector32.unitize();
        double[] doubleArray38 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray38);
        java.lang.String str40 = arrayRealVector39.toString();
        org.apache.commons.math.linear.RealVector realVector41 = arrayRealVector32.add((org.apache.commons.math.linear.RealVector) arrayRealVector39);
        arrayRealVector32.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship46 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship47 = relationship46.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship46);
        double[] doubleArray53 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math.linear.RealVector realVector56 = arrayRealVector54.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = arrayRealVector54.copy();
        double[] doubleArray64 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray64);
        java.lang.String str66 = arrayRealVector65.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = arrayRealVector65.copy();
        boolean boolean68 = arrayRealVector67.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector69 = arrayRealVector57.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector67);
        double double70 = arrayRealVector67.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint72 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector32, Double.NaN, relationship46, (org.apache.commons.math.linear.RealVector) arrayRealVector67, (double) 52);
        double double74 = arrayRealVector32.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector76 = arrayRealVector32.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector77 = arrayRealVector21.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector32);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector78 = arrayRealVector10.append(arrayRealVector21);
        java.lang.StringBuffer stringBuffer79 = null;
        java.text.FieldPosition fieldPosition80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.StringBuffer stringBuffer81 = realVectorFormat4.format((org.apache.commons.math.linear.RealVector) arrayRealVector21, stringBuffer79, fieldPosition80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4 + "'", int13 == 4);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{0; 10; (NaN); 10}" + "'", str22, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector23);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-18.46048206736504d) + "'", double26 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{0; 10; (NaN); 10}" + "'", str40, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertTrue("'" + relationship46 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship46.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship47 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship47.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector56);
        org.junit.Assert.assertNotNull(arrayRealVector57);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "{0; 10; (NaN); 10}" + "'", str66, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(arrayRealVector69);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(realVector76);
        org.junit.Assert.assertNotNull(realVector77);
        org.junit.Assert.assertNotNull(arrayRealVector78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #257
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #156
30: dup
31: ldc_w         #258
34: ldc_w         #259
37: ldc_w         #260
40: aload_1
41: invokespecial #159
44: astore_2
45: iconst_4
46: newarray       double
48: dup
49: iconst_0
50: dconst_0
51: dastore
52: dup
53: iconst_1
54: ldc2_w        #17
57: dastore
58: dup
59: iconst_2
60: ldc2_w        #73
63: dastore
64: dup
65: iconst_3
66: ldc2_w        #17
69: dastore
70: astore_3
71: new           #75
74: dup
75: aload_3
76: invokespecial #76
79: astore        4
81: aload         4
83: ldc2_w        #33
86: invokevirtual #77
89: astore        5
91: aload         4
93: invokevirtual #168
96: istore        6
98: aload         4
100: ldc2_w        #261
103: invokevirtual #135
106: iconst_4
107: newarray       double
109: dup
110: iconst_0
111: dconst_0
112: dastore
113: dup
114: iconst_1
115: ldc2_w        #17
118: dastore
119: dup
120: iconst_2
121: ldc2_w        #73
124: dastore
125: dup
126: iconst_3
127: ldc2_w        #17
130: dastore
131: astore        7
133: new           #75
136: dup
137: aload         7
139: invokespecial #76
142: astore        8
144: aload         8
146: invokevirtual #79
149: astore        9
151: aload         8
153: invokevirtual #80
156: astore        10
158: aload         8
160: ldc2_w        #213
163: invokevirtual #135
166: aload         8
168: invokestatic  #126
171: dstore        11
173: iconst_4
174: newarray       double
176: dup
177: iconst_0
178: dconst_0
179: dastore
180: dup
181: iconst_1
182: ldc2_w        #17
185: dastore
186: dup
187: iconst_2
188: ldc2_w        #73
191: dastore
192: dup
193: iconst_3
194: ldc2_w        #17
197: dastore
198: astore        13
200: new           #75
203: dup
204: aload         13
206: invokespecial #76
209: astore        14
211: aload         14
213: invokevirtual #215
216: iconst_4
217: newarray       double
219: dup
220: iconst_0
221: dconst_0
222: dastore
223: dup
224: iconst_1
225: ldc2_w        #17
228: dastore
229: dup
230: iconst_2
231: ldc2_w        #73
234: dastore
235: dup
236: iconst_3
237: ldc2_w        #17
240: dastore
241: astore        15
243: new           #75
246: dup
247: aload         15
249: invokespecial #76
252: astore        16
254: aload         16
256: invokevirtual #79
259: astore        17
261: aload         14
263: aload         16
265: invokevirtual #164
268: astore        18
270: aload         14
272: iconst_3
273: dconst_1
274: invokevirtual #178
277: getstatic     #86
280: astore        19
282: aload         19
284: invokevirtual #87
287: astore        20
289: aload         19
291: invokestatic  #216
294: iconst_4
295: newarray       double
297: dup
298: iconst_0
299: dconst_0
300: dastore
301: dup
302: iconst_1
303: ldc2_w        #17
306: dastore
307: dup
308: iconst_2
309: ldc2_w        #73
312: dastore
313: dup
314: iconst_3
315: ldc2_w        #17
318: dastore
319: astore        21
321: new           #75
324: dup
325: aload         21
327: invokespecial #76
330: astore        22
332: aload         22
334: ldc2_w        #33
337: invokevirtual #77
340: astore        23
342: aload         22
344: invokevirtual #80
347: astore        24
349: iconst_4
350: newarray       double
352: dup
353: iconst_0
354: dconst_0
355: dastore
356: dup
357: iconst_1
358: ldc2_w        #17
361: dastore
362: dup
363: iconst_2
364: ldc2_w        #73
367: dastore
368: dup
369: iconst_3
370: ldc2_w        #17
373: dastore
374: astore        25
376: new           #75
379: dup
380: aload         25
382: invokespecial #76
385: astore        26
387: aload         26
389: invokevirtual #79
392: astore        27
394: aload         26
396: invokevirtual #80
399: astore        28
401: aload         28
403: invokevirtual #161
406: istore        29
408: aload         24
410: ldc2_w        #33
413: ldc2_w        #17
416: aload         28
418: invokevirtual #170
421: astore        30
423: aload         28
425: invokevirtual #171
428: dstore        31
430: new           #12
433: dup
434: aload         14
436: ldc2_w        #73
439: aload         19
441: aload         28
443: ldc2_w        #41
446: invokespecial #217
449: astore        33
451: aload         14
453: iconst_1
454: invokevirtual #218
457: dstore        34
459: aload         14
461: ldc2_w        #219
464: invokevirtual #77
467: astore        36
469: aload         8
471: aload         14
473: invokevirtual #221
476: astore        37
478: aload         4
480: aload         8
482: invokevirtual #222
485: astore        38
487: aconst_null
488: astore        39
490: aconst_null
491: astore        40
493: aload_2
494: aload         8
496: aload         39
498: aload         40
500: invokevirtual #188
503: astore        41
505: ldc           #20
507: invokestatic  #21
510: goto          515
513: astore        41
515: aload_3
516: invokestatic  #23
519: aload_3
520: invokestatic  #46
523: ldc           #95
525: invokestatic  #48
528: aload         5
530: invokestatic  #23
533: new           #24
536: dup
537: invokespecial #25
540: ldc           #26
542: invokevirtual #27
545: iload         6
547: invokevirtual #49
550: ldc           #29
552: invokevirtual #27
555: iconst_4
556: invokevirtual #49
559: ldc           #26
561: invokevirtual #27
564: invokevirtual #30
567: iload         6
569: iconst_4
570: if_icmpne     577
573: iconst_1
574: goto          578
577: iconst_0
578: invokestatic  #31
581: aload         7
583: invokestatic  #23
586: aload         7
588: invokestatic  #46
591: ldc           #95
593: invokestatic  #48
596: new           #24
599: dup
600: invokespecial #25
603: ldc           #26
605: invokevirtual #27
608: aload         9
610: invokevirtual #27
613: ldc           #96
615: invokevirtual #27
618: invokevirtual #30
621: aload         9
623: ldc           #97
625: invokestatic  #98
628: aload         10
630: invokestatic  #23
633: new           #24
636: dup
637: invokespecial #25
640: ldc           #26
642: invokevirtual #27
645: dload         11
647: invokevirtual #69
650: ldc           #29
652: invokevirtual #27
655: ldc2_w        #223
658: invokevirtual #69
661: ldc           #26
663: invokevirtual #27
666: invokevirtual #30
669: dload         11
671: ldc2_w        #223
674: dcmpl
675: ifne          682
678: iconst_1
679: goto          683
682: iconst_0
683: invokestatic  #31
686: aload         13
688: invokestatic  #23
691: aload         13
693: invokestatic  #46
696: ldc           #95
698: invokestatic  #48
701: aload         15
703: invokestatic  #23
706: aload         15
708: invokestatic  #46
711: ldc           #95
713: invokestatic  #48
716: new           #24
719: dup
720: invokespecial #25
723: ldc           #26
725: invokevirtual #27
728: aload         17
730: invokevirtual #27
733: ldc           #96
735: invokevirtual #27
738: invokevirtual #30
741: aload         17
743: ldc           #97
745: invokestatic  #98
748: aload         18
750: invokestatic  #23
753: new           #24
756: dup
757: invokespecial #25
760: ldc           #26
762: invokevirtual #27
765: aload         19
767: invokevirtual #55
770: ldc           #29
772: invokevirtual #27
775: getstatic     #86
778: invokevirtual #55
781: ldc           #26
783: invokevirtual #27
786: invokevirtual #30
789: aload         19
791: getstatic     #86
794: invokevirtual #101
797: invokestatic  #31
800: new           #24
803: dup
804: invokespecial #25
807: ldc           #26
809: invokevirtual #27
812: aload         20
814: invokevirtual #55
817: ldc           #29
819: invokevirtual #27
822: getstatic     #86
825: invokevirtual #55
828: ldc           #26
830: invokevirtual #27
833: invokevirtual #30
836: aload         20
838: getstatic     #86
841: invokevirtual #101
844: invokestatic  #31
847: aload         21
849: invokestatic  #23
852: aload         21
854: invokestatic  #46
857: ldc           #95
859: invokestatic  #48
862: aload         23
864: invokestatic  #23
867: aload         24
869: invokestatic  #23
872: aload         25
874: invokestatic  #23
877: aload         25
879: invokestatic  #46
882: ldc           #95
884: invokestatic  #48
887: new           #24
890: dup
891: invokespecial #25
894: ldc           #26
896: invokevirtual #27
899: aload         27
901: invokevirtual #27
904: ldc           #96
906: invokevirtual #27
909: invokevirtual #30
912: aload         27
914: ldc           #97
916: invokestatic  #98
919: aload         28
921: invokestatic  #23
924: new           #24
927: dup
928: invokespecial #25
931: ldc           #26
933: invokevirtual #27
936: iload         29
938: invokevirtual #28
941: ldc           #29
943: invokevirtual #27
946: iconst_0
947: invokevirtual #28
950: ldc           #26
952: invokevirtual #27
955: invokevirtual #30
958: iload         29
960: ifne          967
963: iconst_1
964: goto          968
967: iconst_0
968: invokestatic  #31
971: aload         30
973: invokestatic  #23
976: dload         31
978: invokestatic  #99
981: invokestatic  #100
984: dload         34
986: invokestatic  #99
989: invokestatic  #100
992: aload         36
994: invokestatic  #23
997: aload         37
999: invokestatic  #23
1002: aload         38
1004: invokestatic  #23
1007: return
Exception table:
from    to  target type
493   510   513   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test35
Start line: 2148
End line: 2210
Method source code: 
    public void test35() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test35");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix2 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int3 = array2DRowRealMatrix2.getRowDimension();
        double[] doubleArray5 = array2DRowRealMatrix2.getRow(1);
        org.apache.commons.math.optimization.linear.Relationship relationship6 = org.apache.commons.math.optimization.linear.Relationship.GEQ;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint8 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray5, relationship6, 0.9866275920404853d);
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = arrayRealVector14.copy();
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector23.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector27 = arrayRealVector23.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector17, arrayRealVector23);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector35 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray33);
        double double36 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector35);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector17, realVector35);
        arrayRealVector17.set(1.0001523125762564d);
        double[] doubleArray40 = arrayRealVector17.getDataRef();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray5, arrayRealVector17);
        org.apache.commons.math.linear.RealVector realVector43 = arrayRealVector41.mapMultiplyToSelf(1.0001523125762564d);
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        java.lang.String str50 = arrayRealVector49.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = arrayRealVector49.copy();
        boolean boolean52 = arrayRealVector51.isInfinite();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector53 = realVector43.add((org.apache.commons.math.linear.RealVector) arrayRealVector51);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 101 != 4");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + relationship6 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.GEQ + "'", relationship6.equals(org.apache.commons.math.optimization.linear.Relationship.GEQ));
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(arrayRealVector17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{0; 10; (NaN); 10}" + "'", str50, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #263
20: aastore
21: invokevirtual #7
24: pop
25: new           #37
28: dup
29: iconst_3
30: bipush        97
32: invokespecial #38
35: astore_1
36: aload_1
37: invokevirtual #39
40: istore_2
41: aload_1
42: iconst_1
43: invokevirtual #89
46: astore_3
47: getstatic     #90
50: astore        4
52: new           #12
55: dup
56: aload_3
57: aload         4
59: ldc2_w        #91
62: invokespecial #93
65: astore        5
67: iconst_4
68: newarray       double
70: dup
71: iconst_0
72: dconst_0
73: dastore
74: dup
75: iconst_1
76: ldc2_w        #17
79: dastore
80: dup
81: iconst_2
82: ldc2_w        #73
85: dastore
86: dup
87: iconst_3
88: ldc2_w        #17
91: dastore
92: astore        6
94: new           #75
97: dup
98: aload         6
100: invokespecial #76
103: astore        7
105: aload         7
107: ldc2_w        #33
110: invokevirtual #77
113: astore        8
115: aload         7
117: invokevirtual #80
120: astore        9
122: iconst_4
123: newarray       double
125: dup
126: iconst_0
127: dconst_0
128: dastore
129: dup
130: iconst_1
131: ldc2_w        #17
134: dastore
135: dup
136: iconst_2
137: ldc2_w        #73
140: dastore
141: dup
142: iconst_3
143: ldc2_w        #17
146: dastore
147: astore        10
149: new           #75
152: dup
153: aload         10
155: invokespecial #76
158: astore        11
160: aload         11
162: ldc2_w        #33
165: invokevirtual #77
168: astore        12
170: aload         11
172: ldc2_w        #122
175: invokevirtual #77
178: astore        13
180: new           #75
183: dup
184: aload         9
186: aload         11
188: invokespecial #124
191: astore        14
193: iconst_4
194: newarray       double
196: dup
197: iconst_0
198: dconst_0
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #17
205: dastore
206: dup
207: iconst_2
208: ldc2_w        #73
211: dastore
212: dup
213: iconst_3
214: ldc2_w        #17
217: dastore
218: astore        15
220: new           #75
223: dup
224: aload         15
226: invokespecial #76
229: astore        16
231: aload         15
233: invokestatic  #125
236: astore        17
238: aload         17
240: invokestatic  #126
243: dstore        18
245: new           #75
248: dup
249: aload         9
251: aload         17
253: invokespecial #127
256: astore        20
258: aload         9
260: ldc2_w        #133
263: invokevirtual #135
266: aload         9
268: invokevirtual #136
271: astore        21
273: new           #75
276: dup
277: aload_3
278: aload         9
280: invokespecial #150
283: astore        22
285: aload         22
287: ldc2_w        #133
290: invokevirtual #242
293: astore        23
295: iconst_4
296: newarray       double
298: dup
299: iconst_0
300: dconst_0
301: dastore
302: dup
303: iconst_1
304: ldc2_w        #17
307: dastore
308: dup
309: iconst_2
310: ldc2_w        #73
313: dastore
314: dup
315: iconst_3
316: ldc2_w        #17
319: dastore
320: astore        24
322: new           #75
325: dup
326: aload         24
328: invokespecial #76
331: astore        25
333: aload         25
335: invokevirtual #79
338: astore        26
340: aload         25
342: invokevirtual #80
345: astore        27
347: aload         27
349: invokevirtual #161
352: istore        28
354: aload         23
356: aload         27
358: invokevirtual #264
361: astore        29
363: ldc_w         #265
366: invokestatic  #21
369: goto          374
372: astore        29
374: new           #24
377: dup
378: invokespecial #25
381: ldc           #26
383: invokevirtual #27
386: iload_2
387: invokevirtual #49
390: ldc           #29
392: invokevirtual #27
395: iconst_3
396: invokevirtual #49
399: ldc           #26
401: invokevirtual #27
404: invokevirtual #30
407: iload_2
408: iconst_3
409: if_icmpne     416
412: iconst_1
413: goto          417
416: iconst_0
417: invokestatic  #31
420: aload_3
421: invokestatic  #23
424: aload_3
425: invokestatic  #46
428: ldc           #102
430: invokestatic  #48
433: new           #24
436: dup
437: invokespecial #25
440: ldc           #26
442: invokevirtual #27
445: aload         4
447: invokevirtual #55
450: ldc           #29
452: invokevirtual #27
455: getstatic     #90
458: invokevirtual #55
461: ldc           #26
463: invokevirtual #27
466: invokevirtual #30
469: aload         4
471: getstatic     #90
474: invokevirtual #101
477: invokestatic  #31
480: aload         6
482: invokestatic  #23
485: aload         6
487: invokestatic  #46
490: ldc           #95
492: invokestatic  #48
495: aload         8
497: invokestatic  #23
500: aload         9
502: invokestatic  #23
505: aload         10
507: invokestatic  #23
510: aload         10
512: invokestatic  #46
515: ldc           #95
517: invokestatic  #48
520: aload         12
522: invokestatic  #23
525: aload         13
527: invokestatic  #23
530: aload         15
532: invokestatic  #23
535: aload         15
537: invokestatic  #46
540: ldc           #95
542: invokestatic  #48
545: aload         17
547: invokestatic  #23
550: dload         18
552: invokestatic  #99
555: invokestatic  #100
558: aload         21
560: invokestatic  #23
563: aload         21
565: invokestatic  #46
568: ldc           #140
570: invokestatic  #48
573: aload         23
575: invokestatic  #23
578: aload         24
580: invokestatic  #23
583: aload         24
585: invokestatic  #46
588: ldc           #95
590: invokestatic  #48
593: new           #24
596: dup
597: invokespecial #25
600: ldc           #26
602: invokevirtual #27
605: aload         26
607: invokevirtual #27
610: ldc           #96
612: invokevirtual #27
615: invokevirtual #30
618: aload         26
620: ldc           #97
622: invokestatic  #98
625: aload         27
627: invokestatic  #23
630: new           #24
633: dup
634: invokespecial #25
637: ldc           #26
639: invokevirtual #27
642: iload         28
644: invokevirtual #28
647: ldc           #29
649: invokevirtual #27
652: iconst_0
653: invokevirtual #28
656: ldc           #26
658: invokevirtual #27
661: invokevirtual #30
664: iload         28
666: ifne          673
669: iconst_1
670: goto          674
673: iconst_0
674: invokestatic  #31
677: return
Exception table:
from    to  target type
354   369   372   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test36
Start line: 2213
End line: 2278
Method source code: 
    public void test36() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test36");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix2 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int3 = array2DRowRealMatrix2.getRowDimension();
        double[] doubleArray5 = array2DRowRealMatrix2.getRow(1);
        double double8 = array2DRowRealMatrix2.getEntry((int) (byte) 0, 0);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix11 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        double[][] doubleArray12 = array2DRowRealMatrix11.getData();
        org.apache.commons.math.linear.RealMatrix realMatrix14 = array2DRowRealMatrix11.scalarMultiply((double) '#');
        org.apache.commons.math.linear.RealMatrix realMatrix15 = array2DRowRealMatrix2.subtract((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix11);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix18 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int19 = array2DRowRealMatrix18.getRowDimension();
        double[] doubleArray21 = array2DRowRealMatrix18.getRow(1);
        org.apache.commons.math.optimization.linear.Relationship relationship22 = org.apache.commons.math.optimization.linear.Relationship.GEQ;
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint24 = new org.apache.commons.math.optimization.linear.LinearConstraint(doubleArray21, relationship22, 0.9866275920404853d);
        double[] doubleArray29 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray29);
        org.apache.commons.math.linear.RealVector realVector32 = arrayRealVector30.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = arrayRealVector30.copy();
        double[] doubleArray38 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray38);
        org.apache.commons.math.linear.RealVector realVector41 = arrayRealVector39.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector43 = arrayRealVector39.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector33, arrayRealVector39);
        double[] doubleArray49 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray49);
        org.apache.commons.math.linear.RealVector realVector51 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray49);
        double double52 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector51);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector33, realVector51);
        arrayRealVector33.set(1.0001523125762564d);
        double[] doubleArray56 = arrayRealVector33.getDataRef();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray21, arrayRealVector33);
        // The following exception was thrown during execution in test generation
        try {
            double[] doubleArray58 = array2DRowRealMatrix11.preMultiply(doubleArray21);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 97 != 3");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(realMatrix14);
        org.junit.Assert.assertNotNull(realMatrix15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertTrue("'" + relationship22 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.GEQ + "'", relationship22.equals(org.apache.commons.math.optimization.linear.Relationship.GEQ));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(arrayRealVector33);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector41);
        org.junit.Assert.assertNotNull(realVector43);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #266
20: aastore
21: invokevirtual #7
24: pop
25: new           #37
28: dup
29: iconst_3
30: bipush        97
32: invokespecial #38
35: astore_1
36: aload_1
37: invokevirtual #39
40: istore_2
41: aload_1
42: iconst_1
43: invokevirtual #89
46: astore_3
47: aload_1
48: iconst_0
49: iconst_0
50: invokevirtual #267
53: dstore        4
55: new           #37
58: dup
59: iconst_3
60: bipush        97
62: invokespecial #38
65: astore        6
67: aload         6
69: invokevirtual #104
72: astore        7
74: aload         6
76: ldc2_w        #122
79: invokevirtual #268
82: astore        8
84: aload_1
85: aload         6
87: invokevirtual #269
90: astore        9
92: new           #37
95: dup
96: iconst_3
97: bipush        97
99: invokespecial #38
102: astore        10
104: aload         10
106: invokevirtual #39
109: istore        11
111: aload         10
113: iconst_1
114: invokevirtual #89
117: astore        12
119: getstatic     #90
122: astore        13
124: new           #12
127: dup
128: aload         12
130: aload         13
132: ldc2_w        #91
135: invokespecial #93
138: astore        14
140: iconst_4
141: newarray       double
143: dup
144: iconst_0
145: dconst_0
146: dastore
147: dup
148: iconst_1
149: ldc2_w        #17
152: dastore
153: dup
154: iconst_2
155: ldc2_w        #73
158: dastore
159: dup
160: iconst_3
161: ldc2_w        #17
164: dastore
165: astore        15
167: new           #75
170: dup
171: aload         15
173: invokespecial #76
176: astore        16
178: aload         16
180: ldc2_w        #33
183: invokevirtual #77
186: astore        17
188: aload         16
190: invokevirtual #80
193: astore        18
195: iconst_4
196: newarray       double
198: dup
199: iconst_0
200: dconst_0
201: dastore
202: dup
203: iconst_1
204: ldc2_w        #17
207: dastore
208: dup
209: iconst_2
210: ldc2_w        #73
213: dastore
214: dup
215: iconst_3
216: ldc2_w        #17
219: dastore
220: astore        19
222: new           #75
225: dup
226: aload         19
228: invokespecial #76
231: astore        20
233: aload         20
235: ldc2_w        #33
238: invokevirtual #77
241: astore        21
243: aload         20
245: ldc2_w        #122
248: invokevirtual #77
251: astore        22
253: new           #75
256: dup
257: aload         18
259: aload         20
261: invokespecial #124
264: astore        23
266: iconst_4
267: newarray       double
269: dup
270: iconst_0
271: dconst_0
272: dastore
273: dup
274: iconst_1
275: ldc2_w        #17
278: dastore
279: dup
280: iconst_2
281: ldc2_w        #73
284: dastore
285: dup
286: iconst_3
287: ldc2_w        #17
290: dastore
291: astore        24
293: new           #75
296: dup
297: aload         24
299: invokespecial #76
302: astore        25
304: aload         24
306: invokestatic  #125
309: astore        26
311: aload         26
313: invokestatic  #126
316: dstore        27
318: new           #75
321: dup
322: aload         18
324: aload         26
326: invokespecial #127
329: astore        29
331: aload         18
333: ldc2_w        #133
336: invokevirtual #135
339: aload         18
341: invokevirtual #136
344: astore        30
346: new           #75
349: dup
350: aload         12
352: aload         18
354: invokespecial #150
357: astore        31
359: aload         6
361: aload         12
363: invokevirtual #270
366: astore        32
368: ldc_w         #271
371: invokestatic  #21
374: goto          379
377: astore        32
379: new           #24
382: dup
383: invokespecial #25
386: ldc           #26
388: invokevirtual #27
391: iload_2
392: invokevirtual #49
395: ldc           #29
397: invokevirtual #27
400: iconst_3
401: invokevirtual #49
404: ldc           #26
406: invokevirtual #27
409: invokevirtual #30
412: iload_2
413: iconst_3
414: if_icmpne     421
417: iconst_1
418: goto          422
421: iconst_0
422: invokestatic  #31
425: aload_3
426: invokestatic  #23
429: aload_3
430: invokestatic  #46
433: ldc           #102
435: invokestatic  #48
438: new           #24
441: dup
442: invokespecial #25
445: ldc           #26
447: invokevirtual #27
450: dload         4
452: invokevirtual #69
455: ldc           #29
457: invokevirtual #27
460: dconst_0
461: invokevirtual #69
464: ldc           #26
466: invokevirtual #27
469: invokevirtual #30
472: dload         4
474: dconst_0
475: dcmpl
476: ifne          483
479: iconst_1
480: goto          484
483: iconst_0
484: invokestatic  #31
487: aload         7
489: invokestatic  #23
492: aload         8
494: invokestatic  #23
497: aload         9
499: invokestatic  #23
502: new           #24
505: dup
506: invokespecial #25
509: ldc           #26
511: invokevirtual #27
514: iload         11
516: invokevirtual #49
519: ldc           #29
521: invokevirtual #27
524: iconst_3
525: invokevirtual #49
528: ldc           #26
530: invokevirtual #27
533: invokevirtual #30
536: iload         11
538: iconst_3
539: if_icmpne     546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #31
550: aload         12
552: invokestatic  #23
555: aload         12
557: invokestatic  #46
560: ldc           #102
562: invokestatic  #48
565: new           #24
568: dup
569: invokespecial #25
572: ldc           #26
574: invokevirtual #27
577: aload         13
579: invokevirtual #55
582: ldc           #29
584: invokevirtual #27
587: getstatic     #90
590: invokevirtual #55
593: ldc           #26
595: invokevirtual #27
598: invokevirtual #30
601: aload         13
603: getstatic     #90
606: invokevirtual #101
609: invokestatic  #31
612: aload         15
614: invokestatic  #23
617: aload         15
619: invokestatic  #46
622: ldc           #95
624: invokestatic  #48
627: aload         17
629: invokestatic  #23
632: aload         18
634: invokestatic  #23
637: aload         19
639: invokestatic  #23
642: aload         19
644: invokestatic  #46
647: ldc           #95
649: invokestatic  #48
652: aload         21
654: invokestatic  #23
657: aload         22
659: invokestatic  #23
662: aload         24
664: invokestatic  #23
667: aload         24
669: invokestatic  #46
672: ldc           #95
674: invokestatic  #48
677: aload         26
679: invokestatic  #23
682: dload         27
684: invokestatic  #99
687: invokestatic  #100
690: aload         30
692: invokestatic  #23
695: aload         30
697: invokestatic  #46
700: ldc           #140
702: invokestatic  #48
705: return
Exception table:
from    to  target type
359   374   377   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test37
Start line: 2281
End line: 2337
Method source code: 
    public void test37() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test37");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        java.lang.String str14 = arrayRealVector13.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = arrayRealVector13.copy();
        boolean boolean16 = arrayRealVector15.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = arrayRealVector5.add((org.apache.commons.math.linear.RealVector) arrayRealVector15);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector27 = arrayRealVector25.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = arrayRealVector25.copy();
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector34.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector34.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector39 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector28, arrayRealVector34);
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        org.apache.commons.math.linear.RealVector realVector46 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray44);
        double double47 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector46);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector28, realVector46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = arrayRealVector5.combineToSelf((double) 'a', 0.0d, (org.apache.commons.math.linear.RealVector) arrayRealVector48);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 4 != 8");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{0; 10; (NaN); 10}" + "'", str14, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(arrayRealVector17);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertNotNull(arrayRealVector28);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #272
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: iconst_4
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #17
83: dastore
84: dup
85: iconst_2
86: ldc2_w        #73
89: dastore
90: dup
91: iconst_3
92: ldc2_w        #17
95: dastore
96: astore        5
98: new           #75
101: dup
102: aload         5
104: invokespecial #76
107: astore        6
109: aload         6
111: invokevirtual #79
114: astore        7
116: aload         6
118: invokevirtual #80
121: astore        8
123: aload         8
125: invokevirtual #161
128: istore        9
130: aload_2
131: aload         8
133: invokevirtual #164
136: astore        10
138: iconst_4
139: newarray       double
141: dup
142: iconst_0
143: dconst_0
144: dastore
145: dup
146: iconst_1
147: ldc2_w        #17
150: dastore
151: dup
152: iconst_2
153: ldc2_w        #73
156: dastore
157: dup
158: iconst_3
159: ldc2_w        #17
162: dastore
163: astore        11
165: new           #75
168: dup
169: aload         11
171: invokespecial #76
174: astore        12
176: aload         12
178: ldc2_w        #33
181: invokevirtual #77
184: astore        13
186: aload         12
188: invokevirtual #80
191: astore        14
193: iconst_4
194: newarray       double
196: dup
197: iconst_0
198: dconst_0
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #17
205: dastore
206: dup
207: iconst_2
208: ldc2_w        #73
211: dastore
212: dup
213: iconst_3
214: ldc2_w        #17
217: dastore
218: astore        15
220: new           #75
223: dup
224: aload         15
226: invokespecial #76
229: astore        16
231: aload         16
233: ldc2_w        #33
236: invokevirtual #77
239: astore        17
241: aload         16
243: ldc2_w        #122
246: invokevirtual #77
249: astore        18
251: new           #75
254: dup
255: aload         14
257: aload         16
259: invokespecial #124
262: astore        19
264: iconst_4
265: newarray       double
267: dup
268: iconst_0
269: dconst_0
270: dastore
271: dup
272: iconst_1
273: ldc2_w        #17
276: dastore
277: dup
278: iconst_2
279: ldc2_w        #73
282: dastore
283: dup
284: iconst_3
285: ldc2_w        #17
288: dastore
289: astore        20
291: new           #75
294: dup
295: aload         20
297: invokespecial #76
300: astore        21
302: aload         20
304: invokestatic  #125
307: astore        22
309: aload         22
311: invokestatic  #126
314: dstore        23
316: new           #75
319: dup
320: aload         14
322: aload         22
324: invokespecial #127
327: astore        25
329: aload_2
330: ldc2_w        #273
333: dconst_0
334: aload         25
336: invokevirtual #198
339: astore        26
341: ldc_w         #275
344: invokestatic  #21
347: goto          352
350: astore        26
352: aload_1
353: invokestatic  #23
356: aload_1
357: invokestatic  #46
360: ldc           #95
362: invokestatic  #48
365: new           #24
368: dup
369: invokespecial #25
372: ldc           #26
374: invokevirtual #27
377: aload_3
378: invokevirtual #27
381: ldc           #96
383: invokevirtual #27
386: invokevirtual #30
389: aload_3
390: ldc           #97
392: invokestatic  #98
395: aload         4
397: invokestatic  #23
400: aload         5
402: invokestatic  #23
405: aload         5
407: invokestatic  #46
410: ldc           #95
412: invokestatic  #48
415: new           #24
418: dup
419: invokespecial #25
422: ldc           #26
424: invokevirtual #27
427: aload         7
429: invokevirtual #27
432: ldc           #96
434: invokevirtual #27
437: invokevirtual #30
440: aload         7
442: ldc           #97
444: invokestatic  #98
447: aload         8
449: invokestatic  #23
452: new           #24
455: dup
456: invokespecial #25
459: ldc           #26
461: invokevirtual #27
464: iload         9
466: invokevirtual #28
469: ldc           #29
471: invokevirtual #27
474: iconst_0
475: invokevirtual #28
478: ldc           #26
480: invokevirtual #27
483: invokevirtual #30
486: iload         9
488: ifne          495
491: iconst_1
492: goto          496
495: iconst_0
496: invokestatic  #31
499: aload         10
501: invokestatic  #23
504: aload         11
506: invokestatic  #23
509: aload         11
511: invokestatic  #46
514: ldc           #95
516: invokestatic  #48
519: aload         13
521: invokestatic  #23
524: aload         14
526: invokestatic  #23
529: aload         15
531: invokestatic  #23
534: aload         15
536: invokestatic  #46
539: ldc           #95
541: invokestatic  #48
544: aload         17
546: invokestatic  #23
549: aload         18
551: invokestatic  #23
554: aload         20
556: invokestatic  #23
559: aload         20
561: invokestatic  #46
564: ldc           #95
566: invokestatic  #48
569: aload         22
571: invokestatic  #23
574: dload         23
576: invokestatic  #99
579: invokestatic  #100
582: return
Exception table:
from    to  target type
329   347   350   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test38
Start line: 2340
End line: 2438
Method source code: 
    public void test38() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test38");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        arrayRealVector5.set(4.61512051684126d);
        double double10 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        arrayRealVector16.unitize();
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector16.add((org.apache.commons.math.linear.RealVector) arrayRealVector23);
        arrayRealVector16.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship30 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship31 = relationship30.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship30);
        double[] doubleArray37 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector38.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = arrayRealVector38.copy();
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        java.lang.String str50 = arrayRealVector49.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = arrayRealVector49.copy();
        boolean boolean52 = arrayRealVector51.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = arrayRealVector41.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector51);
        double double54 = arrayRealVector51.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint56 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector16, Double.NaN, relationship30, (org.apache.commons.math.linear.RealVector) arrayRealVector51, (double) 52);
        double double58 = arrayRealVector16.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector60 = arrayRealVector16.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector5.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double[] doubleArray66 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray66);
        java.lang.String str68 = arrayRealVector67.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector69 = arrayRealVector67.copy();
        double[] doubleArray74 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector75 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray74);
        java.lang.String str76 = arrayRealVector75.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector77 = arrayRealVector75.copy();
        boolean boolean78 = arrayRealVector77.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector79 = arrayRealVector67.add((org.apache.commons.math.linear.RealVector) arrayRealVector77);
        double[] doubleArray84 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector85 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray84);
        java.lang.String str86 = arrayRealVector85.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector87 = arrayRealVector85.copy();
        arrayRealVector85.set(4.61512051684126d);
        double double90 = arrayRealVector79.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector85);
        arrayRealVector79.unitize();
        org.apache.commons.math.linear.RealVector realVector92 = realVector61.projection((org.apache.commons.math.linear.RealVector) arrayRealVector79);
        java.lang.Class<?> wildcardClass93 = realVector61.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-18.46048206736504d) + "'", double10 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertTrue("'" + relationship30 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship30.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship31 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship31.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(arrayRealVector41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{0; 10; (NaN); 10}" + "'", str50, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{0; 10; (NaN); 10}" + "'", str68, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{0; 10; (NaN); 10}" + "'", str76, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(arrayRealVector79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{0; 10; (NaN); 10}" + "'", str86, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector87);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(realVector92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #276
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: aload_2
72: ldc2_w        #213
75: invokevirtual #135
78: aload_2
79: invokestatic  #126
82: dstore        5
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #17
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #73
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #17
108: dastore
109: astore        7
111: new           #75
114: dup
115: aload         7
117: invokespecial #76
120: astore        8
122: aload         8
124: invokevirtual #215
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #17
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #73
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #17
151: dastore
152: astore        9
154: new           #75
157: dup
158: aload         9
160: invokespecial #76
163: astore        10
165: aload         10
167: invokevirtual #79
170: astore        11
172: aload         8
174: aload         10
176: invokevirtual #164
179: astore        12
181: aload         8
183: iconst_3
184: dconst_1
185: invokevirtual #178
188: getstatic     #86
191: astore        13
193: aload         13
195: invokevirtual #87
198: astore        14
200: aload         13
202: invokestatic  #216
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: ldc2_w        #17
217: dastore
218: dup
219: iconst_2
220: ldc2_w        #73
223: dastore
224: dup
225: iconst_3
226: ldc2_w        #17
229: dastore
230: astore        15
232: new           #75
235: dup
236: aload         15
238: invokespecial #76
241: astore        16
243: aload         16
245: ldc2_w        #33
248: invokevirtual #77
251: astore        17
253: aload         16
255: invokevirtual #80
258: astore        18
260: iconst_4
261: newarray       double
263: dup
264: iconst_0
265: dconst_0
266: dastore
267: dup
268: iconst_1
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_2
275: ldc2_w        #73
278: dastore
279: dup
280: iconst_3
281: ldc2_w        #17
284: dastore
285: astore        19
287: new           #75
290: dup
291: aload         19
293: invokespecial #76
296: astore        20
298: aload         20
300: invokevirtual #79
303: astore        21
305: aload         20
307: invokevirtual #80
310: astore        22
312: aload         22
314: invokevirtual #161
317: istore        23
319: aload         18
321: ldc2_w        #33
324: ldc2_w        #17
327: aload         22
329: invokevirtual #170
332: astore        24
334: aload         22
336: invokevirtual #171
339: dstore        25
341: new           #12
344: dup
345: aload         8
347: ldc2_w        #73
350: aload         13
352: aload         22
354: ldc2_w        #41
357: invokespecial #217
360: astore        27
362: aload         8
364: iconst_1
365: invokevirtual #218
368: dstore        28
370: aload         8
372: ldc2_w        #219
375: invokevirtual #77
378: astore        30
380: aload_2
381: aload         8
383: invokevirtual #221
386: astore        31
388: iconst_4
389: newarray       double
391: dup
392: iconst_0
393: dconst_0
394: dastore
395: dup
396: iconst_1
397: ldc2_w        #17
400: dastore
401: dup
402: iconst_2
403: ldc2_w        #73
406: dastore
407: dup
408: iconst_3
409: ldc2_w        #17
412: dastore
413: astore        32
415: new           #75
418: dup
419: aload         32
421: invokespecial #76
424: astore        33
426: aload         33
428: invokevirtual #79
431: astore        34
433: aload         33
435: invokevirtual #80
438: astore        35
440: iconst_4
441: newarray       double
443: dup
444: iconst_0
445: dconst_0
446: dastore
447: dup
448: iconst_1
449: ldc2_w        #17
452: dastore
453: dup
454: iconst_2
455: ldc2_w        #73
458: dastore
459: dup
460: iconst_3
461: ldc2_w        #17
464: dastore
465: astore        36
467: new           #75
470: dup
471: aload         36
473: invokespecial #76
476: astore        37
478: aload         37
480: invokevirtual #79
483: astore        38
485: aload         37
487: invokevirtual #80
490: astore        39
492: aload         39
494: invokevirtual #161
497: istore        40
499: aload         33
501: aload         39
503: invokevirtual #164
506: astore        41
508: iconst_4
509: newarray       double
511: dup
512: iconst_0
513: dconst_0
514: dastore
515: dup
516: iconst_1
517: ldc2_w        #17
520: dastore
521: dup
522: iconst_2
523: ldc2_w        #73
526: dastore
527: dup
528: iconst_3
529: ldc2_w        #17
532: dastore
533: astore        42
535: new           #75
538: dup
539: aload         42
541: invokespecial #76
544: astore        43
546: aload         43
548: invokevirtual #79
551: astore        44
553: aload         43
555: invokevirtual #80
558: astore        45
560: aload         43
562: ldc2_w        #213
565: invokevirtual #135
568: aload         41
570: aload         43
572: invokevirtual #169
575: dstore        46
577: aload         41
579: invokevirtual #215
582: aload         31
584: aload         41
586: invokevirtual #85
589: astore        48
591: aload         31
593: invokevirtual #277
596: astore        49
598: aload_1
599: invokestatic  #23
602: aload_1
603: invokestatic  #46
606: ldc           #95
608: invokestatic  #48
611: new           #24
614: dup
615: invokespecial #25
618: ldc           #26
620: invokevirtual #27
623: aload_3
624: invokevirtual #27
627: ldc           #96
629: invokevirtual #27
632: invokevirtual #30
635: aload_3
636: ldc           #97
638: invokestatic  #98
641: aload         4
643: invokestatic  #23
646: new           #24
649: dup
650: invokespecial #25
653: ldc           #26
655: invokevirtual #27
658: dload         5
660: invokevirtual #69
663: ldc           #29
665: invokevirtual #27
668: ldc2_w        #223
671: invokevirtual #69
674: ldc           #26
676: invokevirtual #27
679: invokevirtual #30
682: dload         5
684: ldc2_w        #223
687: dcmpl
688: ifne          695
691: iconst_1
692: goto          696
695: iconst_0
696: invokestatic  #31
699: aload         7
701: invokestatic  #23
704: aload         7
706: invokestatic  #46
709: ldc           #95
711: invokestatic  #48
714: aload         9
716: invokestatic  #23
719: aload         9
721: invokestatic  #46
724: ldc           #95
726: invokestatic  #48
729: new           #24
732: dup
733: invokespecial #25
736: ldc           #26
738: invokevirtual #27
741: aload         11
743: invokevirtual #27
746: ldc           #96
748: invokevirtual #27
751: invokevirtual #30
754: aload         11
756: ldc           #97
758: invokestatic  #98
761: aload         12
763: invokestatic  #23
766: new           #24
769: dup
770: invokespecial #25
773: ldc           #26
775: invokevirtual #27
778: aload         13
780: invokevirtual #55
783: ldc           #29
785: invokevirtual #27
788: getstatic     #86
791: invokevirtual #55
794: ldc           #26
796: invokevirtual #27
799: invokevirtual #30
802: aload         13
804: getstatic     #86
807: invokevirtual #101
810: invokestatic  #31
813: new           #24
816: dup
817: invokespecial #25
820: ldc           #26
822: invokevirtual #27
825: aload         14
827: invokevirtual #55
830: ldc           #29
832: invokevirtual #27
835: getstatic     #86
838: invokevirtual #55
841: ldc           #26
843: invokevirtual #27
846: invokevirtual #30
849: aload         14
851: getstatic     #86
854: invokevirtual #101
857: invokestatic  #31
860: aload         15
862: invokestatic  #23
865: aload         15
867: invokestatic  #46
870: ldc           #95
872: invokestatic  #48
875: aload         17
877: invokestatic  #23
880: aload         18
882: invokestatic  #23
885: aload         19
887: invokestatic  #23
890: aload         19
892: invokestatic  #46
895: ldc           #95
897: invokestatic  #48
900: new           #24
903: dup
904: invokespecial #25
907: ldc           #26
909: invokevirtual #27
912: aload         21
914: invokevirtual #27
917: ldc           #96
919: invokevirtual #27
922: invokevirtual #30
925: aload         21
927: ldc           #97
929: invokestatic  #98
932: aload         22
934: invokestatic  #23
937: new           #24
940: dup
941: invokespecial #25
944: ldc           #26
946: invokevirtual #27
949: iload         23
951: invokevirtual #28
954: ldc           #29
956: invokevirtual #27
959: iconst_0
960: invokevirtual #28
963: ldc           #26
965: invokevirtual #27
968: invokevirtual #30
971: iload         23
973: ifne          980
976: iconst_1
977: goto          981
980: iconst_0
981: invokestatic  #31
984: aload         24
986: invokestatic  #23
989: dload         25
991: invokestatic  #99
994: invokestatic  #100
997: dload         28
999: invokestatic  #99
1002: invokestatic  #100
1005: aload         30
1007: invokestatic  #23
1010: aload         31
1012: invokestatic  #23
1015: aload         32
1017: invokestatic  #23
1020: aload         32
1022: invokestatic  #46
1025: ldc           #95
1027: invokestatic  #48
1030: new           #24
1033: dup
1034: invokespecial #25
1037: ldc           #26
1039: invokevirtual #27
1042: aload         34
1044: invokevirtual #27
1047: ldc           #96
1049: invokevirtual #27
1052: invokevirtual #30
1055: aload         34
1057: ldc           #97
1059: invokestatic  #98
1062: aload         35
1064: invokestatic  #23
1067: aload         36
1069: invokestatic  #23
1072: aload         36
1074: invokestatic  #46
1077: ldc           #95
1079: invokestatic  #48
1082: new           #24
1085: dup
1086: invokespecial #25
1089: ldc           #26
1091: invokevirtual #27
1094: aload         38
1096: invokevirtual #27
1099: ldc           #96
1101: invokevirtual #27
1104: invokevirtual #30
1107: aload         38
1109: ldc           #97
1111: invokestatic  #98
1114: aload         39
1116: invokestatic  #23
1119: new           #24
1122: dup
1123: invokespecial #25
1126: ldc           #26
1128: invokevirtual #27
1131: iload         40
1133: invokevirtual #28
1136: ldc           #29
1138: invokevirtual #27
1141: iconst_0
1142: invokevirtual #28
1145: ldc           #26
1147: invokevirtual #27
1150: invokevirtual #30
1153: iload         40
1155: ifne          1162
1158: iconst_1
1159: goto          1163
1162: iconst_0
1163: invokestatic  #31
1166: aload         41
1168: invokestatic  #23
1171: aload         42
1173: invokestatic  #23
1176: aload         42
1178: invokestatic  #46
1181: ldc           #95
1183: invokestatic  #48
1186: new           #24
1189: dup
1190: invokespecial #25
1193: ldc           #26
1195: invokevirtual #27
1198: aload         44
1200: invokevirtual #27
1203: ldc           #96
1205: invokevirtual #27
1208: invokevirtual #30
1211: aload         44
1213: ldc           #97
1215: invokestatic  #98
1218: aload         45
1220: invokestatic  #23
1223: dload         46
1225: invokestatic  #99
1228: invokestatic  #100
1231: aload         48
1233: invokestatic  #23
1236: aload         49
1238: invokestatic  #23
1241: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test39
Start line: 2441
End line: 2468
Method source code: 
    public void test39() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test39");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        org.apache.commons.math.linear.RealVector realVector15 = arrayRealVector13.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector13);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double double18 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        org.apache.commons.math.linear.RealVector realVector20 = arrayRealVector16.mapSubtract(3.1415926535897896d);
        org.apache.commons.math.linear.RealVector realVector21 = realVector20.copy();
        double double22 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector20);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertTrue(Double.isNaN(double22));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #278
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: iconst_4
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #17
83: dastore
84: dup
85: iconst_2
86: ldc2_w        #73
89: dastore
90: dup
91: iconst_3
92: ldc2_w        #17
95: dastore
96: astore        5
98: new           #75
101: dup
102: aload         5
104: invokespecial #76
107: astore        6
109: aload         6
111: ldc2_w        #33
114: invokevirtual #77
117: astore        7
119: new           #75
122: dup
123: aload         6
125: invokespecial #78
128: astore        8
130: new           #75
133: dup
134: aload         8
136: invokespecial #78
139: astore        9
141: aload_2
142: aload         8
144: invokevirtual #192
147: dstore        10
149: aload         8
151: ldc2_w        #279
154: invokevirtual #77
157: astore        12
159: aload         12
161: invokevirtual #281
164: astore        13
166: aload         12
168: invokestatic  #126
171: dstore        14
173: aload_1
174: invokestatic  #23
177: aload_1
178: invokestatic  #46
181: ldc           #95
183: invokestatic  #48
186: new           #24
189: dup
190: invokespecial #25
193: ldc           #26
195: invokevirtual #27
198: aload_3
199: invokevirtual #27
202: ldc           #96
204: invokevirtual #27
207: invokevirtual #30
210: aload_3
211: ldc           #97
213: invokestatic  #98
216: aload         4
218: invokestatic  #23
221: aload         5
223: invokestatic  #23
226: aload         5
228: invokestatic  #46
231: ldc           #95
233: invokestatic  #48
236: aload         7
238: invokestatic  #23
241: dload         10
243: invokestatic  #99
246: invokestatic  #100
249: aload         12
251: invokestatic  #23
254: aload         13
256: invokestatic  #23
259: dload         14
261: invokestatic  #99
264: invokestatic  #100
267: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test40
Start line: 2471
End line: 2547
Method source code: 
    public void test40() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test40");
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix2 = new org.apache.commons.math.linear.BlockRealMatrix(100, 3);
        org.apache.commons.math.linear.RealMatrix realMatrix3 = blockRealMatrix2.transpose();
        double[] doubleArray9 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector10 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray9);
        java.lang.String str11 = arrayRealVector10.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector12 = arrayRealVector10.copy();
        arrayRealVector10.set(4.61512051684126d);
        double double15 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector10);
        double[] doubleArray20 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector21 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray20);
        arrayRealVector21.unitize();
        double[] doubleArray27 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray27);
        java.lang.String str29 = arrayRealVector28.toString();
        org.apache.commons.math.linear.RealVector realVector30 = arrayRealVector21.add((org.apache.commons.math.linear.RealVector) arrayRealVector28);
        arrayRealVector21.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship35 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship36 = relationship35.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship35);
        double[] doubleArray42 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42);
        org.apache.commons.math.linear.RealVector realVector45 = arrayRealVector43.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector46 = arrayRealVector43.copy();
        double[] doubleArray53 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray53);
        java.lang.String str55 = arrayRealVector54.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = arrayRealVector54.copy();
        boolean boolean57 = arrayRealVector56.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector58 = arrayRealVector46.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector56);
        double double59 = arrayRealVector56.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint61 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector21, Double.NaN, relationship35, (org.apache.commons.math.linear.RealVector) arrayRealVector56, (double) 52);
        double double63 = arrayRealVector21.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector65 = arrayRealVector21.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector66 = arrayRealVector10.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector21);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = arrayRealVector21.copy();
        double double68 = arrayRealVector67.getMaxValue();
        // The following exception was thrown during execution in test generation
        try {
            blockRealMatrix2.setColumnVector(4, (org.apache.commons.math.linear.RealVector) arrayRealVector67);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: column index (4)");
        } catch (org.apache.commons.math.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(realMatrix3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{0; 10; (NaN); 10}" + "'", str11, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-18.46048206736504d) + "'", double15 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{0; 10; (NaN); 10}" + "'", str29, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector30);
        org.junit.Assert.assertTrue("'" + relationship35 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship35.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship36 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship36.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(arrayRealVector46);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "{0; 10; (NaN); 10}" + "'", str55, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(arrayRealVector58);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertNotNull(realVector65);
        org.junit.Assert.assertNotNull(realVector66);
        org.junit.Assert.assertNotNull(arrayRealVector67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1.0d + "'", double68 == 1.0d);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #282
20: aastore
21: invokevirtual #7
24: pop
25: new           #108
28: dup
29: bipush        100
31: iconst_3
32: invokespecial #283
35: astore_1
36: aload_1
37: invokevirtual #284
40: astore_2
41: iconst_4
42: newarray       double
44: dup
45: iconst_0
46: dconst_0
47: dastore
48: dup
49: iconst_1
50: ldc2_w        #17
53: dastore
54: dup
55: iconst_2
56: ldc2_w        #73
59: dastore
60: dup
61: iconst_3
62: ldc2_w        #17
65: dastore
66: astore_3
67: new           #75
70: dup
71: aload_3
72: invokespecial #76
75: astore        4
77: aload         4
79: invokevirtual #79
82: astore        5
84: aload         4
86: invokevirtual #80
89: astore        6
91: aload         4
93: ldc2_w        #213
96: invokevirtual #135
99: aload         4
101: invokestatic  #126
104: dstore        7
106: iconst_4
107: newarray       double
109: dup
110: iconst_0
111: dconst_0
112: dastore
113: dup
114: iconst_1
115: ldc2_w        #17
118: dastore
119: dup
120: iconst_2
121: ldc2_w        #73
124: dastore
125: dup
126: iconst_3
127: ldc2_w        #17
130: dastore
131: astore        9
133: new           #75
136: dup
137: aload         9
139: invokespecial #76
142: astore        10
144: aload         10
146: invokevirtual #215
149: iconst_4
150: newarray       double
152: dup
153: iconst_0
154: dconst_0
155: dastore
156: dup
157: iconst_1
158: ldc2_w        #17
161: dastore
162: dup
163: iconst_2
164: ldc2_w        #73
167: dastore
168: dup
169: iconst_3
170: ldc2_w        #17
173: dastore
174: astore        11
176: new           #75
179: dup
180: aload         11
182: invokespecial #76
185: astore        12
187: aload         12
189: invokevirtual #79
192: astore        13
194: aload         10
196: aload         12
198: invokevirtual #164
201: astore        14
203: aload         10
205: iconst_3
206: dconst_1
207: invokevirtual #178
210: getstatic     #86
213: astore        15
215: aload         15
217: invokevirtual #87
220: astore        16
222: aload         15
224: invokestatic  #216
227: iconst_4
228: newarray       double
230: dup
231: iconst_0
232: dconst_0
233: dastore
234: dup
235: iconst_1
236: ldc2_w        #17
239: dastore
240: dup
241: iconst_2
242: ldc2_w        #73
245: dastore
246: dup
247: iconst_3
248: ldc2_w        #17
251: dastore
252: astore        17
254: new           #75
257: dup
258: aload         17
260: invokespecial #76
263: astore        18
265: aload         18
267: ldc2_w        #33
270: invokevirtual #77
273: astore        19
275: aload         18
277: invokevirtual #80
280: astore        20
282: iconst_4
283: newarray       double
285: dup
286: iconst_0
287: dconst_0
288: dastore
289: dup
290: iconst_1
291: ldc2_w        #17
294: dastore
295: dup
296: iconst_2
297: ldc2_w        #73
300: dastore
301: dup
302: iconst_3
303: ldc2_w        #17
306: dastore
307: astore        21
309: new           #75
312: dup
313: aload         21
315: invokespecial #76
318: astore        22
320: aload         22
322: invokevirtual #79
325: astore        23
327: aload         22
329: invokevirtual #80
332: astore        24
334: aload         24
336: invokevirtual #161
339: istore        25
341: aload         20
343: ldc2_w        #33
346: ldc2_w        #17
349: aload         24
351: invokevirtual #170
354: astore        26
356: aload         24
358: invokevirtual #171
361: dstore        27
363: new           #12
366: dup
367: aload         10
369: ldc2_w        #73
372: aload         15
374: aload         24
376: ldc2_w        #41
379: invokespecial #217
382: astore        29
384: aload         10
386: iconst_1
387: invokevirtual #218
390: dstore        30
392: aload         10
394: ldc2_w        #219
397: invokevirtual #77
400: astore        32
402: aload         4
404: aload         10
406: invokevirtual #221
409: astore        33
411: aload         10
413: invokevirtual #80
416: astore        34
418: aload         34
420: invokevirtual #285
423: dstore        35
425: aload_1
426: iconst_4
427: aload         34
429: invokevirtual #151
432: ldc_w         #286
435: invokestatic  #21
438: goto          443
441: astore        37
443: aload_2
444: invokestatic  #23
447: aload_3
448: invokestatic  #23
451: aload_3
452: invokestatic  #46
455: ldc           #95
457: invokestatic  #48
460: new           #24
463: dup
464: invokespecial #25
467: ldc           #26
469: invokevirtual #27
472: aload         5
474: invokevirtual #27
477: ldc           #96
479: invokevirtual #27
482: invokevirtual #30
485: aload         5
487: ldc           #97
489: invokestatic  #98
492: aload         6
494: invokestatic  #23
497: new           #24
500: dup
501: invokespecial #25
504: ldc           #26
506: invokevirtual #27
509: dload         7
511: invokevirtual #69
514: ldc           #29
516: invokevirtual #27
519: ldc2_w        #223
522: invokevirtual #69
525: ldc           #26
527: invokevirtual #27
530: invokevirtual #30
533: dload         7
535: ldc2_w        #223
538: dcmpl
539: ifne          546
542: iconst_1
543: goto          547
546: iconst_0
547: invokestatic  #31
550: aload         9
552: invokestatic  #23
555: aload         9
557: invokestatic  #46
560: ldc           #95
562: invokestatic  #48
565: aload         11
567: invokestatic  #23
570: aload         11
572: invokestatic  #46
575: ldc           #95
577: invokestatic  #48
580: new           #24
583: dup
584: invokespecial #25
587: ldc           #26
589: invokevirtual #27
592: aload         13
594: invokevirtual #27
597: ldc           #96
599: invokevirtual #27
602: invokevirtual #30
605: aload         13
607: ldc           #97
609: invokestatic  #98
612: aload         14
614: invokestatic  #23
617: new           #24
620: dup
621: invokespecial #25
624: ldc           #26
626: invokevirtual #27
629: aload         15
631: invokevirtual #55
634: ldc           #29
636: invokevirtual #27
639: getstatic     #86
642: invokevirtual #55
645: ldc           #26
647: invokevirtual #27
650: invokevirtual #30
653: aload         15
655: getstatic     #86
658: invokevirtual #101
661: invokestatic  #31
664: new           #24
667: dup
668: invokespecial #25
671: ldc           #26
673: invokevirtual #27
676: aload         16
678: invokevirtual #55
681: ldc           #29
683: invokevirtual #27
686: getstatic     #86
689: invokevirtual #55
692: ldc           #26
694: invokevirtual #27
697: invokevirtual #30
700: aload         16
702: getstatic     #86
705: invokevirtual #101
708: invokestatic  #31
711: aload         17
713: invokestatic  #23
716: aload         17
718: invokestatic  #46
721: ldc           #95
723: invokestatic  #48
726: aload         19
728: invokestatic  #23
731: aload         20
733: invokestatic  #23
736: aload         21
738: invokestatic  #23
741: aload         21
743: invokestatic  #46
746: ldc           #95
748: invokestatic  #48
751: new           #24
754: dup
755: invokespecial #25
758: ldc           #26
760: invokevirtual #27
763: aload         23
765: invokevirtual #27
768: ldc           #96
770: invokevirtual #27
773: invokevirtual #30
776: aload         23
778: ldc           #97
780: invokestatic  #98
783: aload         24
785: invokestatic  #23
788: new           #24
791: dup
792: invokespecial #25
795: ldc           #26
797: invokevirtual #27
800: iload         25
802: invokevirtual #28
805: ldc           #29
807: invokevirtual #27
810: iconst_0
811: invokevirtual #28
814: ldc           #26
816: invokevirtual #27
819: invokevirtual #30
822: iload         25
824: ifne          831
827: iconst_1
828: goto          832
831: iconst_0
832: invokestatic  #31
835: aload         26
837: invokestatic  #23
840: dload         27
842: invokestatic  #99
845: invokestatic  #100
848: dload         30
850: invokestatic  #99
853: invokestatic  #100
856: aload         32
858: invokestatic  #23
861: aload         33
863: invokestatic  #23
866: aload         34
868: invokestatic  #23
871: new           #24
874: dup
875: invokespecial #25
878: ldc           #26
880: invokevirtual #27
883: dload         35
885: invokevirtual #69
888: ldc           #29
890: invokevirtual #27
893: dconst_1
894: invokevirtual #69
897: ldc           #26
899: invokevirtual #27
902: invokevirtual #30
905: dload         35
907: dconst_1
908: dcmpl
909: ifne          916
912: iconst_1
913: goto          917
916: iconst_0
917: invokestatic  #31
920: return
Exception table:
from    to  target type
425   438   441   Class org/apache/commons/math/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test41
Start line: 2550
End line: 2624
Method source code: 
    public void test41() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test41");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        int int8 = arrayRealVector5.getDimension();
        arrayRealVector5.set(1.5395564933646284d);
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        java.lang.String str17 = arrayRealVector16.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = arrayRealVector16.copy();
        arrayRealVector16.set(4.61512051684126d);
        double double21 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        arrayRealVector27.unitize();
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        java.lang.String str35 = arrayRealVector34.toString();
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector27.add((org.apache.commons.math.linear.RealVector) arrayRealVector34);
        arrayRealVector27.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship41 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship42 = relationship41.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship41);
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        org.apache.commons.math.linear.RealVector realVector51 = arrayRealVector49.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector52 = arrayRealVector49.copy();
        double[] doubleArray59 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray59);
        java.lang.String str61 = arrayRealVector60.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = arrayRealVector60.copy();
        boolean boolean63 = arrayRealVector62.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector64 = arrayRealVector52.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector62);
        double double65 = arrayRealVector62.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint67 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector27, Double.NaN, relationship41, (org.apache.commons.math.linear.RealVector) arrayRealVector62, (double) 52);
        double double69 = arrayRealVector27.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector71 = arrayRealVector27.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector72 = arrayRealVector16.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector27);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector73 = arrayRealVector5.append(arrayRealVector16);
        arrayRealVector73.setEntry(1, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-18.46048206736504d) + "'", double21 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{0; 10; (NaN); 10}" + "'", str35, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertTrue("'" + relationship41 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship41.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship42 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship42.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector51);
        org.junit.Assert.assertNotNull(arrayRealVector52);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{0; 10; (NaN); 10}" + "'", str61, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(arrayRealVector64);
        org.junit.Assert.assertTrue(Double.isNaN(double65));
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertNotNull(realVector71);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(arrayRealVector73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #287
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #168
72: istore        4
74: aload_2
75: ldc2_w        #261
78: invokevirtual #135
81: iconst_4
82: newarray       double
84: dup
85: iconst_0
86: dconst_0
87: dastore
88: dup
89: iconst_1
90: ldc2_w        #17
93: dastore
94: dup
95: iconst_2
96: ldc2_w        #73
99: dastore
100: dup
101: iconst_3
102: ldc2_w        #17
105: dastore
106: astore        5
108: new           #75
111: dup
112: aload         5
114: invokespecial #76
117: astore        6
119: aload         6
121: invokevirtual #79
124: astore        7
126: aload         6
128: invokevirtual #80
131: astore        8
133: aload         6
135: ldc2_w        #213
138: invokevirtual #135
141: aload         6
143: invokestatic  #126
146: dstore        9
148: iconst_4
149: newarray       double
151: dup
152: iconst_0
153: dconst_0
154: dastore
155: dup
156: iconst_1
157: ldc2_w        #17
160: dastore
161: dup
162: iconst_2
163: ldc2_w        #73
166: dastore
167: dup
168: iconst_3
169: ldc2_w        #17
172: dastore
173: astore        11
175: new           #75
178: dup
179: aload         11
181: invokespecial #76
184: astore        12
186: aload         12
188: invokevirtual #215
191: iconst_4
192: newarray       double
194: dup
195: iconst_0
196: dconst_0
197: dastore
198: dup
199: iconst_1
200: ldc2_w        #17
203: dastore
204: dup
205: iconst_2
206: ldc2_w        #73
209: dastore
210: dup
211: iconst_3
212: ldc2_w        #17
215: dastore
216: astore        13
218: new           #75
221: dup
222: aload         13
224: invokespecial #76
227: astore        14
229: aload         14
231: invokevirtual #79
234: astore        15
236: aload         12
238: aload         14
240: invokevirtual #164
243: astore        16
245: aload         12
247: iconst_3
248: dconst_1
249: invokevirtual #178
252: getstatic     #86
255: astore        17
257: aload         17
259: invokevirtual #87
262: astore        18
264: aload         17
266: invokestatic  #216
269: iconst_4
270: newarray       double
272: dup
273: iconst_0
274: dconst_0
275: dastore
276: dup
277: iconst_1
278: ldc2_w        #17
281: dastore
282: dup
283: iconst_2
284: ldc2_w        #73
287: dastore
288: dup
289: iconst_3
290: ldc2_w        #17
293: dastore
294: astore        19
296: new           #75
299: dup
300: aload         19
302: invokespecial #76
305: astore        20
307: aload         20
309: ldc2_w        #33
312: invokevirtual #77
315: astore        21
317: aload         20
319: invokevirtual #80
322: astore        22
324: iconst_4
325: newarray       double
327: dup
328: iconst_0
329: dconst_0
330: dastore
331: dup
332: iconst_1
333: ldc2_w        #17
336: dastore
337: dup
338: iconst_2
339: ldc2_w        #73
342: dastore
343: dup
344: iconst_3
345: ldc2_w        #17
348: dastore
349: astore        23
351: new           #75
354: dup
355: aload         23
357: invokespecial #76
360: astore        24
362: aload         24
364: invokevirtual #79
367: astore        25
369: aload         24
371: invokevirtual #80
374: astore        26
376: aload         26
378: invokevirtual #161
381: istore        27
383: aload         22
385: ldc2_w        #33
388: ldc2_w        #17
391: aload         26
393: invokevirtual #170
396: astore        28
398: aload         26
400: invokevirtual #171
403: dstore        29
405: new           #12
408: dup
409: aload         12
411: ldc2_w        #73
414: aload         17
416: aload         26
418: ldc2_w        #41
421: invokespecial #217
424: astore        31
426: aload         12
428: iconst_1
429: invokevirtual #218
432: dstore        32
434: aload         12
436: ldc2_w        #219
439: invokevirtual #77
442: astore        34
444: aload         6
446: aload         12
448: invokevirtual #221
451: astore        35
453: aload_2
454: aload         6
456: invokevirtual #222
459: astore        36
461: aload         36
463: iconst_1
464: dconst_0
465: invokevirtual #178
468: aload_1
469: invokestatic  #23
472: aload_1
473: invokestatic  #46
476: ldc           #95
478: invokestatic  #48
481: aload_3
482: invokestatic  #23
485: new           #24
488: dup
489: invokespecial #25
492: ldc           #26
494: invokevirtual #27
497: iload         4
499: invokevirtual #49
502: ldc           #29
504: invokevirtual #27
507: iconst_4
508: invokevirtual #49
511: ldc           #26
513: invokevirtual #27
516: invokevirtual #30
519: iload         4
521: iconst_4
522: if_icmpne     529
525: iconst_1
526: goto          530
529: iconst_0
530: invokestatic  #31
533: aload         5
535: invokestatic  #23
538: aload         5
540: invokestatic  #46
543: ldc           #95
545: invokestatic  #48
548: new           #24
551: dup
552: invokespecial #25
555: ldc           #26
557: invokevirtual #27
560: aload         7
562: invokevirtual #27
565: ldc           #96
567: invokevirtual #27
570: invokevirtual #30
573: aload         7
575: ldc           #97
577: invokestatic  #98
580: aload         8
582: invokestatic  #23
585: new           #24
588: dup
589: invokespecial #25
592: ldc           #26
594: invokevirtual #27
597: dload         9
599: invokevirtual #69
602: ldc           #29
604: invokevirtual #27
607: ldc2_w        #223
610: invokevirtual #69
613: ldc           #26
615: invokevirtual #27
618: invokevirtual #30
621: dload         9
623: ldc2_w        #223
626: dcmpl
627: ifne          634
630: iconst_1
631: goto          635
634: iconst_0
635: invokestatic  #31
638: aload         11
640: invokestatic  #23
643: aload         11
645: invokestatic  #46
648: ldc           #95
650: invokestatic  #48
653: aload         13
655: invokestatic  #23
658: aload         13
660: invokestatic  #46
663: ldc           #95
665: invokestatic  #48
668: new           #24
671: dup
672: invokespecial #25
675: ldc           #26
677: invokevirtual #27
680: aload         15
682: invokevirtual #27
685: ldc           #96
687: invokevirtual #27
690: invokevirtual #30
693: aload         15
695: ldc           #97
697: invokestatic  #98
700: aload         16
702: invokestatic  #23
705: new           #24
708: dup
709: invokespecial #25
712: ldc           #26
714: invokevirtual #27
717: aload         17
719: invokevirtual #55
722: ldc           #29
724: invokevirtual #27
727: getstatic     #86
730: invokevirtual #55
733: ldc           #26
735: invokevirtual #27
738: invokevirtual #30
741: aload         17
743: getstatic     #86
746: invokevirtual #101
749: invokestatic  #31
752: new           #24
755: dup
756: invokespecial #25
759: ldc           #26
761: invokevirtual #27
764: aload         18
766: invokevirtual #55
769: ldc           #29
771: invokevirtual #27
774: getstatic     #86
777: invokevirtual #55
780: ldc           #26
782: invokevirtual #27
785: invokevirtual #30
788: aload         18
790: getstatic     #86
793: invokevirtual #101
796: invokestatic  #31
799: aload         19
801: invokestatic  #23
804: aload         19
806: invokestatic  #46
809: ldc           #95
811: invokestatic  #48
814: aload         21
816: invokestatic  #23
819: aload         22
821: invokestatic  #23
824: aload         23
826: invokestatic  #23
829: aload         23
831: invokestatic  #46
834: ldc           #95
836: invokestatic  #48
839: new           #24
842: dup
843: invokespecial #25
846: ldc           #26
848: invokevirtual #27
851: aload         25
853: invokevirtual #27
856: ldc           #96
858: invokevirtual #27
861: invokevirtual #30
864: aload         25
866: ldc           #97
868: invokestatic  #98
871: aload         26
873: invokestatic  #23
876: new           #24
879: dup
880: invokespecial #25
883: ldc           #26
885: invokevirtual #27
888: iload         27
890: invokevirtual #28
893: ldc           #29
895: invokevirtual #27
898: iconst_0
899: invokevirtual #28
902: ldc           #26
904: invokevirtual #27
907: invokevirtual #30
910: iload         27
912: ifne          919
915: iconst_1
916: goto          920
919: iconst_0
920: invokestatic  #31
923: aload         28
925: invokestatic  #23
928: dload         29
930: invokestatic  #99
933: invokestatic  #100
936: dload         32
938: invokestatic  #99
941: invokestatic  #100
944: aload         34
946: invokestatic  #23
949: aload         35
951: invokestatic  #23
954: aload         36
956: invokestatic  #23
959: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test42
Start line: 2627
End line: 2720
Method source code: 
    public void test42() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test42");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        java.lang.String str15 = arrayRealVector14.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = arrayRealVector14.copy();
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector5.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = arrayRealVector23.copy();
        org.apache.commons.math.linear.RealVector realVector27 = arrayRealVector23.mapAddToSelf((double) (short) 100);
        double double28 = realVector17.getDistance(realVector27);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        java.lang.String str35 = arrayRealVector34.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = arrayRealVector34.copy();
        arrayRealVector34.set(4.61512051684126d);
        double double39 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector34);
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        arrayRealVector45.unitize();
        double[] doubleArray51 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector52 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray51);
        java.lang.String str53 = arrayRealVector52.toString();
        org.apache.commons.math.linear.RealVector realVector54 = arrayRealVector45.add((org.apache.commons.math.linear.RealVector) arrayRealVector52);
        arrayRealVector45.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship59 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship60 = relationship59.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship59);
        double[] doubleArray66 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray66);
        org.apache.commons.math.linear.RealVector realVector69 = arrayRealVector67.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector70 = arrayRealVector67.copy();
        double[] doubleArray77 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector78 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray77);
        java.lang.String str79 = arrayRealVector78.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector80 = arrayRealVector78.copy();
        boolean boolean81 = arrayRealVector80.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector82 = arrayRealVector70.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector80);
        double double83 = arrayRealVector80.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint85 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector45, Double.NaN, relationship59, (org.apache.commons.math.linear.RealVector) arrayRealVector80, (double) 52);
        double double87 = arrayRealVector45.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector89 = arrayRealVector45.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector90 = arrayRealVector34.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector45);
        org.apache.commons.math.linear.RealVector realVector91 = realVector27.add(realVector90);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{0; 10; (NaN); 10}" + "'", str15, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector16);
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertNotNull(realVector27);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{0; 10; (NaN); 10}" + "'", str35, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-18.46048206736504d) + "'", double39 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{0; 10; (NaN); 10}" + "'", str53, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector54);
        org.junit.Assert.assertTrue("'" + relationship59 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship59.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship60 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship60.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector69);
        org.junit.Assert.assertNotNull(arrayRealVector70);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{0; 10; (NaN); 10}" + "'", str79, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(arrayRealVector82);
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(realVector89);
        org.junit.Assert.assertNotNull(realVector90);
        org.junit.Assert.assertNotNull(realVector91);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #288
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: new           #75
71: dup
72: aload_2
73: invokespecial #78
76: astore        4
78: iconst_4
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: ldc2_w        #17
90: dastore
91: dup
92: iconst_2
93: ldc2_w        #73
96: dastore
97: dup
98: iconst_3
99: ldc2_w        #17
102: dastore
103: astore        5
105: new           #75
108: dup
109: aload         5
111: invokespecial #76
114: astore        6
116: aload         6
118: invokevirtual #79
121: astore        7
123: aload         6
125: invokevirtual #80
128: astore        8
130: aload_2
131: aload         8
133: invokevirtual #81
136: astore        9
138: iconst_4
139: newarray       double
141: dup
142: iconst_0
143: dconst_0
144: dastore
145: dup
146: iconst_1
147: ldc2_w        #17
150: dastore
151: dup
152: iconst_2
153: ldc2_w        #73
156: dastore
157: dup
158: iconst_3
159: ldc2_w        #17
162: dastore
163: astore        10
165: new           #75
168: dup
169: aload         10
171: invokespecial #76
174: astore        11
176: aload         11
178: invokevirtual #79
181: astore        12
183: aload         11
185: invokevirtual #80
188: astore        13
190: aload         11
192: ldc2_w        #33
195: invokevirtual #82
198: astore        14
200: aload         9
202: aload         14
204: invokevirtual #83
207: dstore        15
209: iconst_4
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: ldc2_w        #17
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #73
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #17
233: dastore
234: astore        17
236: new           #75
239: dup
240: aload         17
242: invokespecial #76
245: astore        18
247: aload         18
249: invokevirtual #79
252: astore        19
254: aload         18
256: invokevirtual #80
259: astore        20
261: aload         18
263: ldc2_w        #213
266: invokevirtual #135
269: aload         18
271: invokestatic  #126
274: dstore        21
276: iconst_4
277: newarray       double
279: dup
280: iconst_0
281: dconst_0
282: dastore
283: dup
284: iconst_1
285: ldc2_w        #17
288: dastore
289: dup
290: iconst_2
291: ldc2_w        #73
294: dastore
295: dup
296: iconst_3
297: ldc2_w        #17
300: dastore
301: astore        23
303: new           #75
306: dup
307: aload         23
309: invokespecial #76
312: astore        24
314: aload         24
316: invokevirtual #215
319: iconst_4
320: newarray       double
322: dup
323: iconst_0
324: dconst_0
325: dastore
326: dup
327: iconst_1
328: ldc2_w        #17
331: dastore
332: dup
333: iconst_2
334: ldc2_w        #73
337: dastore
338: dup
339: iconst_3
340: ldc2_w        #17
343: dastore
344: astore        25
346: new           #75
349: dup
350: aload         25
352: invokespecial #76
355: astore        26
357: aload         26
359: invokevirtual #79
362: astore        27
364: aload         24
366: aload         26
368: invokevirtual #164
371: astore        28
373: aload         24
375: iconst_3
376: dconst_1
377: invokevirtual #178
380: getstatic     #86
383: astore        29
385: aload         29
387: invokevirtual #87
390: astore        30
392: aload         29
394: invokestatic  #216
397: iconst_4
398: newarray       double
400: dup
401: iconst_0
402: dconst_0
403: dastore
404: dup
405: iconst_1
406: ldc2_w        #17
409: dastore
410: dup
411: iconst_2
412: ldc2_w        #73
415: dastore
416: dup
417: iconst_3
418: ldc2_w        #17
421: dastore
422: astore        31
424: new           #75
427: dup
428: aload         31
430: invokespecial #76
433: astore        32
435: aload         32
437: ldc2_w        #33
440: invokevirtual #77
443: astore        33
445: aload         32
447: invokevirtual #80
450: astore        34
452: iconst_4
453: newarray       double
455: dup
456: iconst_0
457: dconst_0
458: dastore
459: dup
460: iconst_1
461: ldc2_w        #17
464: dastore
465: dup
466: iconst_2
467: ldc2_w        #73
470: dastore
471: dup
472: iconst_3
473: ldc2_w        #17
476: dastore
477: astore        35
479: new           #75
482: dup
483: aload         35
485: invokespecial #76
488: astore        36
490: aload         36
492: invokevirtual #79
495: astore        37
497: aload         36
499: invokevirtual #80
502: astore        38
504: aload         38
506: invokevirtual #161
509: istore        39
511: aload         34
513: ldc2_w        #33
516: ldc2_w        #17
519: aload         38
521: invokevirtual #170
524: astore        40
526: aload         38
528: invokevirtual #171
531: dstore        41
533: new           #12
536: dup
537: aload         24
539: ldc2_w        #73
542: aload         29
544: aload         38
546: ldc2_w        #41
549: invokespecial #217
552: astore        43
554: aload         24
556: iconst_1
557: invokevirtual #218
560: dstore        44
562: aload         24
564: ldc2_w        #219
567: invokevirtual #77
570: astore        46
572: aload         18
574: aload         24
576: invokevirtual #221
579: astore        47
581: aload         14
583: aload         47
585: invokevirtual #264
588: astore        48
590: aload_1
591: invokestatic  #23
594: aload_1
595: invokestatic  #46
598: ldc           #95
600: invokestatic  #48
603: aload_3
604: invokestatic  #23
607: aload         5
609: invokestatic  #23
612: aload         5
614: invokestatic  #46
617: ldc           #95
619: invokestatic  #48
622: new           #24
625: dup
626: invokespecial #25
629: ldc           #26
631: invokevirtual #27
634: aload         7
636: invokevirtual #27
639: ldc           #96
641: invokevirtual #27
644: invokevirtual #30
647: aload         7
649: ldc           #97
651: invokestatic  #98
654: aload         8
656: invokestatic  #23
659: aload         9
661: invokestatic  #23
664: aload         10
666: invokestatic  #23
669: aload         10
671: invokestatic  #46
674: ldc           #95
676: invokestatic  #48
679: new           #24
682: dup
683: invokespecial #25
686: ldc           #26
688: invokevirtual #27
691: aload         12
693: invokevirtual #27
696: ldc           #96
698: invokevirtual #27
701: invokevirtual #30
704: aload         12
706: ldc           #97
708: invokestatic  #98
711: aload         13
713: invokestatic  #23
716: aload         14
718: invokestatic  #23
721: dload         15
723: invokestatic  #99
726: invokestatic  #100
729: aload         17
731: invokestatic  #23
734: aload         17
736: invokestatic  #46
739: ldc           #95
741: invokestatic  #48
744: new           #24
747: dup
748: invokespecial #25
751: ldc           #26
753: invokevirtual #27
756: aload         19
758: invokevirtual #27
761: ldc           #96
763: invokevirtual #27
766: invokevirtual #30
769: aload         19
771: ldc           #97
773: invokestatic  #98
776: aload         20
778: invokestatic  #23
781: new           #24
784: dup
785: invokespecial #25
788: ldc           #26
790: invokevirtual #27
793: dload         21
795: invokevirtual #69
798: ldc           #29
800: invokevirtual #27
803: ldc2_w        #223
806: invokevirtual #69
809: ldc           #26
811: invokevirtual #27
814: invokevirtual #30
817: dload         21
819: ldc2_w        #223
822: dcmpl
823: ifne          830
826: iconst_1
827: goto          831
830: iconst_0
831: invokestatic  #31
834: aload         23
836: invokestatic  #23
839: aload         23
841: invokestatic  #46
844: ldc           #95
846: invokestatic  #48
849: aload         25
851: invokestatic  #23
854: aload         25
856: invokestatic  #46
859: ldc           #95
861: invokestatic  #48
864: new           #24
867: dup
868: invokespecial #25
871: ldc           #26
873: invokevirtual #27
876: aload         27
878: invokevirtual #27
881: ldc           #96
883: invokevirtual #27
886: invokevirtual #30
889: aload         27
891: ldc           #97
893: invokestatic  #98
896: aload         28
898: invokestatic  #23
901: new           #24
904: dup
905: invokespecial #25
908: ldc           #26
910: invokevirtual #27
913: aload         29
915: invokevirtual #55
918: ldc           #29
920: invokevirtual #27
923: getstatic     #86
926: invokevirtual #55
929: ldc           #26
931: invokevirtual #27
934: invokevirtual #30
937: aload         29
939: getstatic     #86
942: invokevirtual #101
945: invokestatic  #31
948: new           #24
951: dup
952: invokespecial #25
955: ldc           #26
957: invokevirtual #27
960: aload         30
962: invokevirtual #55
965: ldc           #29
967: invokevirtual #27
970: getstatic     #86
973: invokevirtual #55
976: ldc           #26
978: invokevirtual #27
981: invokevirtual #30
984: aload         30
986: getstatic     #86
989: invokevirtual #101
992: invokestatic  #31
995: aload         31
997: invokestatic  #23
1000: aload         31
1002: invokestatic  #46
1005: ldc           #95
1007: invokestatic  #48
1010: aload         33
1012: invokestatic  #23
1015: aload         34
1017: invokestatic  #23
1020: aload         35
1022: invokestatic  #23
1025: aload         35
1027: invokestatic  #46
1030: ldc           #95
1032: invokestatic  #48
1035: new           #24
1038: dup
1039: invokespecial #25
1042: ldc           #26
1044: invokevirtual #27
1047: aload         37
1049: invokevirtual #27
1052: ldc           #96
1054: invokevirtual #27
1057: invokevirtual #30
1060: aload         37
1062: ldc           #97
1064: invokestatic  #98
1067: aload         38
1069: invokestatic  #23
1072: new           #24
1075: dup
1076: invokespecial #25
1079: ldc           #26
1081: invokevirtual #27
1084: iload         39
1086: invokevirtual #28
1089: ldc           #29
1091: invokevirtual #27
1094: iconst_0
1095: invokevirtual #28
1098: ldc           #26
1100: invokevirtual #27
1103: invokevirtual #30
1106: iload         39
1108: ifne          1115
1111: iconst_1
1112: goto          1116
1115: iconst_0
1116: invokestatic  #31
1119: aload         40
1121: invokestatic  #23
1124: dload         41
1126: invokestatic  #99
1129: invokestatic  #100
1132: dload         44
1134: invokestatic  #99
1137: invokestatic  #100
1140: aload         46
1142: invokestatic  #23
1145: aload         47
1147: invokestatic  #23
1150: aload         48
1152: invokestatic  #23
1155: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test43
Start line: 2723
End line: 2823
Method source code: 
    public void test43() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test43");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector9 = arrayRealVector5.mapSubtract((double) '#');
        double[] doubleArray14 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray14);
        java.lang.String str16 = arrayRealVector15.toString();
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector15.mapDivideToSelf((double) (byte) 0);
        double double19 = arrayRealVector5.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector15);
        double double20 = arrayRealVector5.getLInfNorm();
        double[] doubleArray25 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray25);
        org.apache.commons.math.linear.RealVector realVector28 = arrayRealVector26.mapSubtract((double) 100L);
        int int29 = arrayRealVector26.getDimension();
        arrayRealVector26.set(1.5395564933646284d);
        double[] doubleArray36 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray36);
        java.lang.String str38 = arrayRealVector37.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector39 = arrayRealVector37.copy();
        arrayRealVector37.set(4.61512051684126d);
        double double42 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector37);
        double[] doubleArray47 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray47);
        arrayRealVector48.unitize();
        double[] doubleArray54 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray54);
        java.lang.String str56 = arrayRealVector55.toString();
        org.apache.commons.math.linear.RealVector realVector57 = arrayRealVector48.add((org.apache.commons.math.linear.RealVector) arrayRealVector55);
        arrayRealVector48.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship62 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship63 = relationship62.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship62);
        double[] doubleArray69 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector70 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray69);
        org.apache.commons.math.linear.RealVector realVector72 = arrayRealVector70.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector73 = arrayRealVector70.copy();
        double[] doubleArray80 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector81 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray80);
        java.lang.String str82 = arrayRealVector81.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector83 = arrayRealVector81.copy();
        boolean boolean84 = arrayRealVector83.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector85 = arrayRealVector73.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector83);
        double double86 = arrayRealVector83.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint88 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector48, Double.NaN, relationship62, (org.apache.commons.math.linear.RealVector) arrayRealVector83, (double) 52);
        double double90 = arrayRealVector48.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector92 = arrayRealVector48.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector93 = arrayRealVector37.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector48);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector94 = arrayRealVector26.append(arrayRealVector37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealVector realVector95 = arrayRealVector5.projection((org.apache.commons.math.linear.RealVector) arrayRealVector94);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 4 != 8");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(realVector9);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{0; 10; (NaN); 10}" + "'", str16, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertTrue(Double.isNaN(double19));
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{0; 10; (NaN); 10}" + "'", str38, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector39);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-18.46048206736504d) + "'", double42 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{0; 10; (NaN); 10}" + "'", str56, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector57);
        org.junit.Assert.assertTrue("'" + relationship62 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship62.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship63 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship63.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(arrayRealVector73);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{0; 10; (NaN); 10}" + "'", str82, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(arrayRealVector85);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(realVector92);
        org.junit.Assert.assertNotNull(realVector93);
        org.junit.Assert.assertNotNull(arrayRealVector94);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #289
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: ldc2_w        #122
72: invokevirtual #77
75: astore        4
77: iconst_4
78: newarray       double
80: dup
81: iconst_0
82: dconst_0
83: dastore
84: dup
85: iconst_1
86: ldc2_w        #17
89: dastore
90: dup
91: iconst_2
92: ldc2_w        #73
95: dastore
96: dup
97: iconst_3
98: ldc2_w        #17
101: dastore
102: astore        5
104: new           #75
107: dup
108: aload         5
110: invokespecial #76
113: astore        6
115: aload         6
117: invokevirtual #79
120: astore        7
122: aload         6
124: dconst_0
125: invokevirtual #84
128: astore        8
130: aload_2
131: aload         6
133: invokevirtual #173
136: dstore        9
138: aload_2
139: invokevirtual #290
142: dstore        11
144: iconst_4
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: ldc2_w        #17
156: dastore
157: dup
158: iconst_2
159: ldc2_w        #73
162: dastore
163: dup
164: iconst_3
165: ldc2_w        #17
168: dastore
169: astore        13
171: new           #75
174: dup
175: aload         13
177: invokespecial #76
180: astore        14
182: aload         14
184: ldc2_w        #33
187: invokevirtual #77
190: astore        15
192: aload         14
194: invokevirtual #168
197: istore        16
199: aload         14
201: ldc2_w        #261
204: invokevirtual #135
207: iconst_4
208: newarray       double
210: dup
211: iconst_0
212: dconst_0
213: dastore
214: dup
215: iconst_1
216: ldc2_w        #17
219: dastore
220: dup
221: iconst_2
222: ldc2_w        #73
225: dastore
226: dup
227: iconst_3
228: ldc2_w        #17
231: dastore
232: astore        17
234: new           #75
237: dup
238: aload         17
240: invokespecial #76
243: astore        18
245: aload         18
247: invokevirtual #79
250: astore        19
252: aload         18
254: invokevirtual #80
257: astore        20
259: aload         18
261: ldc2_w        #213
264: invokevirtual #135
267: aload         18
269: invokestatic  #126
272: dstore        21
274: iconst_4
275: newarray       double
277: dup
278: iconst_0
279: dconst_0
280: dastore
281: dup
282: iconst_1
283: ldc2_w        #17
286: dastore
287: dup
288: iconst_2
289: ldc2_w        #73
292: dastore
293: dup
294: iconst_3
295: ldc2_w        #17
298: dastore
299: astore        23
301: new           #75
304: dup
305: aload         23
307: invokespecial #76
310: astore        24
312: aload         24
314: invokevirtual #215
317: iconst_4
318: newarray       double
320: dup
321: iconst_0
322: dconst_0
323: dastore
324: dup
325: iconst_1
326: ldc2_w        #17
329: dastore
330: dup
331: iconst_2
332: ldc2_w        #73
335: dastore
336: dup
337: iconst_3
338: ldc2_w        #17
341: dastore
342: astore        25
344: new           #75
347: dup
348: aload         25
350: invokespecial #76
353: astore        26
355: aload         26
357: invokevirtual #79
360: astore        27
362: aload         24
364: aload         26
366: invokevirtual #164
369: astore        28
371: aload         24
373: iconst_3
374: dconst_1
375: invokevirtual #178
378: getstatic     #86
381: astore        29
383: aload         29
385: invokevirtual #87
388: astore        30
390: aload         29
392: invokestatic  #216
395: iconst_4
396: newarray       double
398: dup
399: iconst_0
400: dconst_0
401: dastore
402: dup
403: iconst_1
404: ldc2_w        #17
407: dastore
408: dup
409: iconst_2
410: ldc2_w        #73
413: dastore
414: dup
415: iconst_3
416: ldc2_w        #17
419: dastore
420: astore        31
422: new           #75
425: dup
426: aload         31
428: invokespecial #76
431: astore        32
433: aload         32
435: ldc2_w        #33
438: invokevirtual #77
441: astore        33
443: aload         32
445: invokevirtual #80
448: astore        34
450: iconst_4
451: newarray       double
453: dup
454: iconst_0
455: dconst_0
456: dastore
457: dup
458: iconst_1
459: ldc2_w        #17
462: dastore
463: dup
464: iconst_2
465: ldc2_w        #73
468: dastore
469: dup
470: iconst_3
471: ldc2_w        #17
474: dastore
475: astore        35
477: new           #75
480: dup
481: aload         35
483: invokespecial #76
486: astore        36
488: aload         36
490: invokevirtual #79
493: astore        37
495: aload         36
497: invokevirtual #80
500: astore        38
502: aload         38
504: invokevirtual #161
507: istore        39
509: aload         34
511: ldc2_w        #33
514: ldc2_w        #17
517: aload         38
519: invokevirtual #170
522: astore        40
524: aload         38
526: invokevirtual #171
529: dstore        41
531: new           #12
534: dup
535: aload         24
537: ldc2_w        #73
540: aload         29
542: aload         38
544: ldc2_w        #41
547: invokespecial #217
550: astore        43
552: aload         24
554: iconst_1
555: invokevirtual #218
558: dstore        44
560: aload         24
562: ldc2_w        #219
565: invokevirtual #77
568: astore        46
570: aload         18
572: aload         24
574: invokevirtual #221
577: astore        47
579: aload         14
581: aload         18
583: invokevirtual #222
586: astore        48
588: aload_2
589: aload         48
591: invokevirtual #291
594: astore        49
596: ldc_w         #275
599: invokestatic  #21
602: goto          607
605: astore        49
607: aload_1
608: invokestatic  #23
611: aload_1
612: invokestatic  #46
615: ldc           #95
617: invokestatic  #48
620: aload_3
621: invokestatic  #23
624: aload         4
626: invokestatic  #23
629: aload         5
631: invokestatic  #23
634: aload         5
636: invokestatic  #46
639: ldc           #95
641: invokestatic  #48
644: new           #24
647: dup
648: invokespecial #25
651: ldc           #26
653: invokevirtual #27
656: aload         7
658: invokevirtual #27
661: ldc           #96
663: invokevirtual #27
666: invokevirtual #30
669: aload         7
671: ldc           #97
673: invokestatic  #98
676: aload         8
678: invokestatic  #23
681: dload         9
683: invokestatic  #99
686: invokestatic  #100
689: dload         11
691: invokestatic  #99
694: invokestatic  #100
697: aload         13
699: invokestatic  #23
702: aload         13
704: invokestatic  #46
707: ldc           #95
709: invokestatic  #48
712: aload         15
714: invokestatic  #23
717: new           #24
720: dup
721: invokespecial #25
724: ldc           #26
726: invokevirtual #27
729: iload         16
731: invokevirtual #49
734: ldc           #29
736: invokevirtual #27
739: iconst_4
740: invokevirtual #49
743: ldc           #26
745: invokevirtual #27
748: invokevirtual #30
751: iload         16
753: iconst_4
754: if_icmpne     761
757: iconst_1
758: goto          762
761: iconst_0
762: invokestatic  #31
765: aload         17
767: invokestatic  #23
770: aload         17
772: invokestatic  #46
775: ldc           #95
777: invokestatic  #48
780: new           #24
783: dup
784: invokespecial #25
787: ldc           #26
789: invokevirtual #27
792: aload         19
794: invokevirtual #27
797: ldc           #96
799: invokevirtual #27
802: invokevirtual #30
805: aload         19
807: ldc           #97
809: invokestatic  #98
812: aload         20
814: invokestatic  #23
817: new           #24
820: dup
821: invokespecial #25
824: ldc           #26
826: invokevirtual #27
829: dload         21
831: invokevirtual #69
834: ldc           #29
836: invokevirtual #27
839: ldc2_w        #223
842: invokevirtual #69
845: ldc           #26
847: invokevirtual #27
850: invokevirtual #30
853: dload         21
855: ldc2_w        #223
858: dcmpl
859: ifne          866
862: iconst_1
863: goto          867
866: iconst_0
867: invokestatic  #31
870: aload         23
872: invokestatic  #23
875: aload         23
877: invokestatic  #46
880: ldc           #95
882: invokestatic  #48
885: aload         25
887: invokestatic  #23
890: aload         25
892: invokestatic  #46
895: ldc           #95
897: invokestatic  #48
900: new           #24
903: dup
904: invokespecial #25
907: ldc           #26
909: invokevirtual #27
912: aload         27
914: invokevirtual #27
917: ldc           #96
919: invokevirtual #27
922: invokevirtual #30
925: aload         27
927: ldc           #97
929: invokestatic  #98
932: aload         28
934: invokestatic  #23
937: new           #24
940: dup
941: invokespecial #25
944: ldc           #26
946: invokevirtual #27
949: aload         29
951: invokevirtual #55
954: ldc           #29
956: invokevirtual #27
959: getstatic     #86
962: invokevirtual #55
965: ldc           #26
967: invokevirtual #27
970: invokevirtual #30
973: aload         29
975: getstatic     #86
978: invokevirtual #101
981: invokestatic  #31
984: new           #24
987: dup
988: invokespecial #25
991: ldc           #26
993: invokevirtual #27
996: aload         30
998: invokevirtual #55
1001: ldc           #29
1003: invokevirtual #27
1006: getstatic     #86
1009: invokevirtual #55
1012: ldc           #26
1014: invokevirtual #27
1017: invokevirtual #30
1020: aload         30
1022: getstatic     #86
1025: invokevirtual #101
1028: invokestatic  #31
1031: aload         31
1033: invokestatic  #23
1036: aload         31
1038: invokestatic  #46
1041: ldc           #95
1043: invokestatic  #48
1046: aload         33
1048: invokestatic  #23
1051: aload         34
1053: invokestatic  #23
1056: aload         35
1058: invokestatic  #23
1061: aload         35
1063: invokestatic  #46
1066: ldc           #95
1068: invokestatic  #48
1071: new           #24
1074: dup
1075: invokespecial #25
1078: ldc           #26
1080: invokevirtual #27
1083: aload         37
1085: invokevirtual #27
1088: ldc           #96
1090: invokevirtual #27
1093: invokevirtual #30
1096: aload         37
1098: ldc           #97
1100: invokestatic  #98
1103: aload         38
1105: invokestatic  #23
1108: new           #24
1111: dup
1112: invokespecial #25
1115: ldc           #26
1117: invokevirtual #27
1120: iload         39
1122: invokevirtual #28
1125: ldc           #29
1127: invokevirtual #27
1130: iconst_0
1131: invokevirtual #28
1134: ldc           #26
1136: invokevirtual #27
1139: invokevirtual #30
1142: iload         39
1144: ifne          1151
1147: iconst_1
1148: goto          1152
1151: iconst_0
1152: invokestatic  #31
1155: aload         40
1157: invokestatic  #23
1160: dload         41
1162: invokestatic  #99
1165: invokestatic  #100
1168: dload         44
1170: invokestatic  #99
1173: invokestatic  #100
1176: aload         46
1178: invokestatic  #23
1181: aload         47
1183: invokestatic  #23
1186: aload         48
1188: invokestatic  #23
1191: return
Exception table:
from    to  target type
588   602   605   Class org/apache/commons/math/exception/DimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test44
Start line: 2826
End line: 2907
Method source code: 
    public void test44() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test44");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        arrayRealVector5.set(4.61512051684126d);
        double double10 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        arrayRealVector16.unitize();
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector16.add((org.apache.commons.math.linear.RealVector) arrayRealVector23);
        arrayRealVector16.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship30 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship31 = relationship30.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship30);
        double[] doubleArray37 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector38.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = arrayRealVector38.copy();
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        java.lang.String str50 = arrayRealVector49.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = arrayRealVector49.copy();
        boolean boolean52 = arrayRealVector51.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = arrayRealVector41.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector51);
        double double54 = arrayRealVector51.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint56 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector16, Double.NaN, relationship30, (org.apache.commons.math.linear.RealVector) arrayRealVector51, (double) 52);
        double double58 = arrayRealVector16.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector60 = arrayRealVector16.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector5.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        java.text.NumberFormat numberFormat65 = org.apache.commons.math.util.CompositeFormat.getDefaultNumberFormat();
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat66 = new org.apache.commons.math.linear.RealVectorFormat("=", ">=", ">=", numberFormat65);
        org.apache.commons.math.linear.RealVectorFormat realVectorFormat67 = new org.apache.commons.math.linear.RealVectorFormat(numberFormat65);
        double[] doubleArray72 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray72);
        org.apache.commons.math.linear.RealVector realVector75 = arrayRealVector73.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector76 = arrayRealVector73.copy();
        boolean boolean77 = arrayRealVector73.isInfinite();
        double double78 = arrayRealVector73.getNorm();
        java.lang.String str79 = realVectorFormat67.format((org.apache.commons.math.linear.RealVector) arrayRealVector73);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector80 = new org.apache.commons.math.linear.ArrayRealVector(realVector61, arrayRealVector73);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-18.46048206736504d) + "'", double10 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertTrue("'" + relationship30 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship30.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship31 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship31.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(arrayRealVector41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{0; 10; (NaN); 10}" + "'", str50, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(numberFormat65);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector75);
        org.junit.Assert.assertNotNull(arrayRealVector76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{0; 10; (NaN); 10}" + "'", str79, "{0; 10; (NaN); 10}");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #292
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: aload_2
72: ldc2_w        #213
75: invokevirtual #135
78: aload_2
79: invokestatic  #126
82: dstore        5
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #17
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #73
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #17
108: dastore
109: astore        7
111: new           #75
114: dup
115: aload         7
117: invokespecial #76
120: astore        8
122: aload         8
124: invokevirtual #215
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #17
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #73
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #17
151: dastore
152: astore        9
154: new           #75
157: dup
158: aload         9
160: invokespecial #76
163: astore        10
165: aload         10
167: invokevirtual #79
170: astore        11
172: aload         8
174: aload         10
176: invokevirtual #164
179: astore        12
181: aload         8
183: iconst_3
184: dconst_1
185: invokevirtual #178
188: getstatic     #86
191: astore        13
193: aload         13
195: invokevirtual #87
198: astore        14
200: aload         13
202: invokestatic  #216
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: ldc2_w        #17
217: dastore
218: dup
219: iconst_2
220: ldc2_w        #73
223: dastore
224: dup
225: iconst_3
226: ldc2_w        #17
229: dastore
230: astore        15
232: new           #75
235: dup
236: aload         15
238: invokespecial #76
241: astore        16
243: aload         16
245: ldc2_w        #33
248: invokevirtual #77
251: astore        17
253: aload         16
255: invokevirtual #80
258: astore        18
260: iconst_4
261: newarray       double
263: dup
264: iconst_0
265: dconst_0
266: dastore
267: dup
268: iconst_1
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_2
275: ldc2_w        #73
278: dastore
279: dup
280: iconst_3
281: ldc2_w        #17
284: dastore
285: astore        19
287: new           #75
290: dup
291: aload         19
293: invokespecial #76
296: astore        20
298: aload         20
300: invokevirtual #79
303: astore        21
305: aload         20
307: invokevirtual #80
310: astore        22
312: aload         22
314: invokevirtual #161
317: istore        23
319: aload         18
321: ldc2_w        #33
324: ldc2_w        #17
327: aload         22
329: invokevirtual #170
332: astore        24
334: aload         22
336: invokevirtual #171
339: dstore        25
341: new           #12
344: dup
345: aload         8
347: ldc2_w        #73
350: aload         13
352: aload         22
354: ldc2_w        #41
357: invokespecial #217
360: astore        27
362: aload         8
364: iconst_1
365: invokevirtual #218
368: dstore        28
370: aload         8
372: ldc2_w        #219
375: invokevirtual #77
378: astore        30
380: aload_2
381: aload         8
383: invokevirtual #221
386: astore        31
388: invokestatic  #155
391: astore        32
393: new           #156
396: dup
397: ldc           #157
399: ldc           #158
401: ldc           #158
403: aload         32
405: invokespecial #159
408: astore        33
410: new           #156
413: dup
414: aload         32
416: invokespecial #160
419: astore        34
421: iconst_4
422: newarray       double
424: dup
425: iconst_0
426: dconst_0
427: dastore
428: dup
429: iconst_1
430: ldc2_w        #17
433: dastore
434: dup
435: iconst_2
436: ldc2_w        #73
439: dastore
440: dup
441: iconst_3
442: ldc2_w        #17
445: dastore
446: astore        35
448: new           #75
451: dup
452: aload         35
454: invokespecial #76
457: astore        36
459: aload         36
461: ldc2_w        #33
464: invokevirtual #77
467: astore        37
469: aload         36
471: invokevirtual #80
474: astore        38
476: aload         36
478: invokevirtual #161
481: istore        39
483: aload         36
485: invokevirtual #162
488: dstore        40
490: aload         34
492: aload         36
494: invokevirtual #163
497: astore        42
499: new           #75
502: dup
503: aload         31
505: aload         36
507: invokespecial #241
510: astore        43
512: aload_1
513: invokestatic  #23
516: aload_1
517: invokestatic  #46
520: ldc           #95
522: invokestatic  #48
525: new           #24
528: dup
529: invokespecial #25
532: ldc           #26
534: invokevirtual #27
537: aload_3
538: invokevirtual #27
541: ldc           #96
543: invokevirtual #27
546: invokevirtual #30
549: aload_3
550: ldc           #97
552: invokestatic  #98
555: aload         4
557: invokestatic  #23
560: new           #24
563: dup
564: invokespecial #25
567: ldc           #26
569: invokevirtual #27
572: dload         5
574: invokevirtual #69
577: ldc           #29
579: invokevirtual #27
582: ldc2_w        #223
585: invokevirtual #69
588: ldc           #26
590: invokevirtual #27
593: invokevirtual #30
596: dload         5
598: ldc2_w        #223
601: dcmpl
602: ifne          609
605: iconst_1
606: goto          610
609: iconst_0
610: invokestatic  #31
613: aload         7
615: invokestatic  #23
618: aload         7
620: invokestatic  #46
623: ldc           #95
625: invokestatic  #48
628: aload         9
630: invokestatic  #23
633: aload         9
635: invokestatic  #46
638: ldc           #95
640: invokestatic  #48
643: new           #24
646: dup
647: invokespecial #25
650: ldc           #26
652: invokevirtual #27
655: aload         11
657: invokevirtual #27
660: ldc           #96
662: invokevirtual #27
665: invokevirtual #30
668: aload         11
670: ldc           #97
672: invokestatic  #98
675: aload         12
677: invokestatic  #23
680: new           #24
683: dup
684: invokespecial #25
687: ldc           #26
689: invokevirtual #27
692: aload         13
694: invokevirtual #55
697: ldc           #29
699: invokevirtual #27
702: getstatic     #86
705: invokevirtual #55
708: ldc           #26
710: invokevirtual #27
713: invokevirtual #30
716: aload         13
718: getstatic     #86
721: invokevirtual #101
724: invokestatic  #31
727: new           #24
730: dup
731: invokespecial #25
734: ldc           #26
736: invokevirtual #27
739: aload         14
741: invokevirtual #55
744: ldc           #29
746: invokevirtual #27
749: getstatic     #86
752: invokevirtual #55
755: ldc           #26
757: invokevirtual #27
760: invokevirtual #30
763: aload         14
765: getstatic     #86
768: invokevirtual #101
771: invokestatic  #31
774: aload         15
776: invokestatic  #23
779: aload         15
781: invokestatic  #46
784: ldc           #95
786: invokestatic  #48
789: aload         17
791: invokestatic  #23
794: aload         18
796: invokestatic  #23
799: aload         19
801: invokestatic  #23
804: aload         19
806: invokestatic  #46
809: ldc           #95
811: invokestatic  #48
814: new           #24
817: dup
818: invokespecial #25
821: ldc           #26
823: invokevirtual #27
826: aload         21
828: invokevirtual #27
831: ldc           #96
833: invokevirtual #27
836: invokevirtual #30
839: aload         21
841: ldc           #97
843: invokestatic  #98
846: aload         22
848: invokestatic  #23
851: new           #24
854: dup
855: invokespecial #25
858: ldc           #26
860: invokevirtual #27
863: iload         23
865: invokevirtual #28
868: ldc           #29
870: invokevirtual #27
873: iconst_0
874: invokevirtual #28
877: ldc           #26
879: invokevirtual #27
882: invokevirtual #30
885: iload         23
887: ifne          894
890: iconst_1
891: goto          895
894: iconst_0
895: invokestatic  #31
898: aload         24
900: invokestatic  #23
903: dload         25
905: invokestatic  #99
908: invokestatic  #100
911: dload         28
913: invokestatic  #99
916: invokestatic  #100
919: aload         30
921: invokestatic  #23
924: aload         31
926: invokestatic  #23
929: aload         32
931: invokestatic  #23
934: aload         35
936: invokestatic  #23
939: aload         35
941: invokestatic  #46
944: ldc           #95
946: invokestatic  #48
949: aload         37
951: invokestatic  #23
954: aload         38
956: invokestatic  #23
959: new           #24
962: dup
963: invokespecial #25
966: ldc           #26
968: invokevirtual #27
971: iload         39
973: invokevirtual #28
976: ldc           #29
978: invokevirtual #27
981: iconst_0
982: invokevirtual #28
985: ldc           #26
987: invokevirtual #27
990: invokevirtual #30
993: iload         39
995: ifne          1002
998: iconst_1
999: goto          1003
1002: iconst_0
1003: invokestatic  #31
1006: dload         40
1008: invokestatic  #99
1011: invokestatic  #100
1014: new           #24
1017: dup
1018: invokespecial #25
1021: ldc           #26
1023: invokevirtual #27
1026: aload         42
1028: invokevirtual #27
1031: ldc           #96
1033: invokevirtual #27
1036: invokevirtual #30
1039: aload         42
1041: ldc           #97
1043: invokestatic  #98
1046: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test45
Start line: 2910
End line: 2945
Method source code: 
    public void test45() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test45");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        arrayRealVector8.set(1.0001523125762564d);
        java.lang.Object obj31 = null;
        boolean boolean32 = arrayRealVector8.equals(obj31);
        org.apache.commons.math.linear.RealVector realVector33 = arrayRealVector8.copy();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(realVector33);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #293
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #80
72: astore        4
74: iconst_4
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #17
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #73
92: dastore
93: dup
94: iconst_3
95: ldc2_w        #17
98: dastore
99: astore        5
101: new           #75
104: dup
105: aload         5
107: invokespecial #76
110: astore        6
112: aload         6
114: ldc2_w        #33
117: invokevirtual #77
120: astore        7
122: aload         6
124: ldc2_w        #122
127: invokevirtual #77
130: astore        8
132: new           #75
135: dup
136: aload         4
138: aload         6
140: invokespecial #124
143: astore        9
145: iconst_4
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #17
157: dastore
158: dup
159: iconst_2
160: ldc2_w        #73
163: dastore
164: dup
165: iconst_3
166: ldc2_w        #17
169: dastore
170: astore        10
172: new           #75
175: dup
176: aload         10
178: invokespecial #76
181: astore        11
183: aload         10
185: invokestatic  #125
188: astore        12
190: aload         12
192: invokestatic  #126
195: dstore        13
197: new           #75
200: dup
201: aload         4
203: aload         12
205: invokespecial #127
208: astore        15
210: aload         4
212: ldc2_w        #133
215: invokevirtual #135
218: aconst_null
219: astore        16
221: aload         4
223: aload         16
225: invokevirtual #294
228: istore        17
230: aload         4
232: invokevirtual #80
235: astore        18
237: aload_1
238: invokestatic  #23
241: aload_1
242: invokestatic  #46
245: ldc           #95
247: invokestatic  #48
250: aload_3
251: invokestatic  #23
254: aload         4
256: invokestatic  #23
259: aload         5
261: invokestatic  #23
264: aload         5
266: invokestatic  #46
269: ldc           #95
271: invokestatic  #48
274: aload         7
276: invokestatic  #23
279: aload         8
281: invokestatic  #23
284: aload         10
286: invokestatic  #23
289: aload         10
291: invokestatic  #46
294: ldc           #95
296: invokestatic  #48
299: aload         12
301: invokestatic  #23
304: dload         13
306: invokestatic  #99
309: invokestatic  #100
312: new           #24
315: dup
316: invokespecial #25
319: ldc           #26
321: invokevirtual #27
324: iload         17
326: invokevirtual #28
329: ldc           #29
331: invokevirtual #27
334: iconst_0
335: invokevirtual #28
338: ldc           #26
340: invokevirtual #27
343: invokevirtual #30
346: iload         17
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #31
359: aload         18
361: invokestatic  #23
364: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test46
Start line: 2948
End line: 2967
Method source code: 
    public void test46() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test46");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        int int3 = simplexSolver2.maxUlps;
        org.apache.commons.math.optimization.GoalType goalType4 = null;
        simplexSolver2.goal = goalType4;
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection6 = simplexSolver2.linearConstraints;
        org.apache.commons.math.optimization.GoalType goalType7 = simplexSolver2.goal;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair8 = simplexSolver2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1074790400) + "'", int3 == (-1074790400));
        org.junit.Assert.assertNull(linearConstraintCollection6);
        org.junit.Assert.assertNull(goalType7);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #295
20: aastore
21: invokevirtual #7
24: pop
25: new           #62
28: dup
29: ldc2_w        #17
32: ldc           #63
34: invokespecial #64
37: astore_1
38: aload_1
39: getfield      #235
42: istore_2
43: aconst_null
44: astore_3
45: aload_1
46: aload_3
47: putfield      #66
50: aload_1
51: getfield      #236
54: astore        4
56: aload_1
57: getfield      #66
60: astore        5
62: aload_1
63: invokevirtual #247
66: astore        6
68: ldc           #20
70: invokestatic  #21
73: goto          78
76: astore        6
78: new           #24
81: dup
82: invokespecial #25
85: ldc           #26
87: invokevirtual #27
90: iload_2
91: invokevirtual #49
94: ldc           #29
96: invokevirtual #27
99: ldc           #63
101: invokevirtual #49
104: ldc           #26
106: invokevirtual #27
109: invokevirtual #30
112: iload_2
113: ldc           #63
115: if_icmpne     122
118: iconst_1
119: goto          123
122: iconst_0
123: invokestatic  #31
126: aload         4
128: invokestatic  #146
131: aload         5
133: invokestatic  #146
136: return
Exception table:
from    to  target type
62    73    76   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test47
Start line: 2970
End line: 3043
Method source code: 
    public void test47() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test47");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        double[] doubleArray10 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector11 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray10);
        java.lang.String str12 = arrayRealVector11.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = arrayRealVector11.copy();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector11);
        double[] doubleArray19 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray19);
        org.apache.commons.math.linear.RealVector realVector22 = arrayRealVector20.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = arrayRealVector20.copy();
        double[] doubleArray30 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray30);
        java.lang.String str32 = arrayRealVector31.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = arrayRealVector31.copy();
        boolean boolean34 = arrayRealVector33.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector35 = arrayRealVector23.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector33);
        double double36 = arrayRealVector33.getL1Norm();
        double[] doubleArray41 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray41);
        org.apache.commons.math.linear.RealVector realVector44 = arrayRealVector42.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = arrayRealVector42.copy();
        double[] doubleArray50 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray50);
        org.apache.commons.math.linear.RealVector realVector53 = arrayRealVector51.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector55 = arrayRealVector51.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector45, arrayRealVector51);
        double[] doubleArray61 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray61);
        org.apache.commons.math.linear.RealVector realVector63 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray61);
        double double64 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector63);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector65 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector45, realVector63);
        double double66 = arrayRealVector33.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector45);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector11, arrayRealVector33);
        double double68 = arrayRealVector5.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector33);
        org.apache.commons.math.linear.RealVector realVector70 = arrayRealVector5.mapAddToSelf((double) (-200.0f));
        int int71 = arrayRealVector5.getDimension();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{0; 10; (NaN); 10}" + "'", str12, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector13);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector22);
        org.junit.Assert.assertNotNull(arrayRealVector23);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{0; 10; (NaN); 10}" + "'", str32, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(arrayRealVector35);
        org.junit.Assert.assertTrue(Double.isNaN(double36));
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertNotNull(arrayRealVector45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector53);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector63);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #296
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: iconst_4
61: newarray       double
63: dup
64: iconst_0
65: dconst_0
66: dastore
67: dup
68: iconst_1
69: ldc2_w        #17
72: dastore
73: dup
74: iconst_2
75: ldc2_w        #73
78: dastore
79: dup
80: iconst_3
81: ldc2_w        #17
84: dastore
85: astore_3
86: new           #75
89: dup
90: aload_3
91: invokespecial #76
94: astore        4
96: aload         4
98: invokevirtual #79
101: astore        5
103: aload         4
105: invokevirtual #80
108: astore        6
110: new           #75
113: dup
114: aload         4
116: invokespecial #78
119: astore        7
121: iconst_4
122: newarray       double
124: dup
125: iconst_0
126: dconst_0
127: dastore
128: dup
129: iconst_1
130: ldc2_w        #17
133: dastore
134: dup
135: iconst_2
136: ldc2_w        #73
139: dastore
140: dup
141: iconst_3
142: ldc2_w        #17
145: dastore
146: astore        8
148: new           #75
151: dup
152: aload         8
154: invokespecial #76
157: astore        9
159: aload         9
161: ldc2_w        #33
164: invokevirtual #77
167: astore        10
169: aload         9
171: invokevirtual #80
174: astore        11
176: iconst_4
177: newarray       double
179: dup
180: iconst_0
181: dconst_0
182: dastore
183: dup
184: iconst_1
185: ldc2_w        #17
188: dastore
189: dup
190: iconst_2
191: ldc2_w        #73
194: dastore
195: dup
196: iconst_3
197: ldc2_w        #17
200: dastore
201: astore        12
203: new           #75
206: dup
207: aload         12
209: invokespecial #76
212: astore        13
214: aload         13
216: invokevirtual #79
219: astore        14
221: aload         13
223: invokevirtual #80
226: astore        15
228: aload         15
230: invokevirtual #161
233: istore        16
235: aload         11
237: ldc2_w        #33
240: ldc2_w        #17
243: aload         15
245: invokevirtual #170
248: astore        17
250: aload         15
252: invokevirtual #171
255: dstore        18
257: iconst_4
258: newarray       double
260: dup
261: iconst_0
262: dconst_0
263: dastore
264: dup
265: iconst_1
266: ldc2_w        #17
269: dastore
270: dup
271: iconst_2
272: ldc2_w        #73
275: dastore
276: dup
277: iconst_3
278: ldc2_w        #17
281: dastore
282: astore        20
284: new           #75
287: dup
288: aload         20
290: invokespecial #76
293: astore        21
295: aload         21
297: ldc2_w        #33
300: invokevirtual #77
303: astore        22
305: aload         21
307: invokevirtual #80
310: astore        23
312: iconst_4
313: newarray       double
315: dup
316: iconst_0
317: dconst_0
318: dastore
319: dup
320: iconst_1
321: ldc2_w        #17
324: dastore
325: dup
326: iconst_2
327: ldc2_w        #73
330: dastore
331: dup
332: iconst_3
333: ldc2_w        #17
336: dastore
337: astore        24
339: new           #75
342: dup
343: aload         24
345: invokespecial #76
348: astore        25
350: aload         25
352: ldc2_w        #33
355: invokevirtual #77
358: astore        26
360: aload         25
362: ldc2_w        #122
365: invokevirtual #77
368: astore        27
370: new           #75
373: dup
374: aload         23
376: aload         25
378: invokespecial #124
381: astore        28
383: iconst_4
384: newarray       double
386: dup
387: iconst_0
388: dconst_0
389: dastore
390: dup
391: iconst_1
392: ldc2_w        #17
395: dastore
396: dup
397: iconst_2
398: ldc2_w        #73
401: dastore
402: dup
403: iconst_3
404: ldc2_w        #17
407: dastore
408: astore        29
410: new           #75
413: dup
414: aload         29
416: invokespecial #76
419: astore        30
421: aload         29
423: invokestatic  #125
426: astore        31
428: aload         31
430: invokestatic  #126
433: dstore        32
435: new           #75
438: dup
439: aload         23
441: aload         31
443: invokespecial #127
446: astore        34
448: aload         15
450: aload         23
452: invokevirtual #173
455: dstore        35
457: new           #75
460: dup
461: aload         4
463: aload         15
465: invokespecial #124
468: astore        37
470: aload_2
471: aload         15
473: invokevirtual #169
476: dstore        38
478: aload_2
479: ldc2_w        #297
482: invokevirtual #82
485: astore        40
487: aload_2
488: invokevirtual #168
491: istore        41
493: aload_1
494: invokestatic  #23
497: aload_1
498: invokestatic  #46
501: ldc           #95
503: invokestatic  #48
506: aload_3
507: invokestatic  #23
510: aload_3
511: invokestatic  #46
514: ldc           #95
516: invokestatic  #48
519: new           #24
522: dup
523: invokespecial #25
526: ldc           #26
528: invokevirtual #27
531: aload         5
533: invokevirtual #27
536: ldc           #96
538: invokevirtual #27
541: invokevirtual #30
544: aload         5
546: ldc           #97
548: invokestatic  #98
551: aload         6
553: invokestatic  #23
556: aload         8
558: invokestatic  #23
561: aload         8
563: invokestatic  #46
566: ldc           #95
568: invokestatic  #48
571: aload         10
573: invokestatic  #23
576: aload         11
578: invokestatic  #23
581: aload         12
583: invokestatic  #23
586: aload         12
588: invokestatic  #46
591: ldc           #95
593: invokestatic  #48
596: new           #24
599: dup
600: invokespecial #25
603: ldc           #26
605: invokevirtual #27
608: aload         14
610: invokevirtual #27
613: ldc           #96
615: invokevirtual #27
618: invokevirtual #30
621: aload         14
623: ldc           #97
625: invokestatic  #98
628: aload         15
630: invokestatic  #23
633: new           #24
636: dup
637: invokespecial #25
640: ldc           #26
642: invokevirtual #27
645: iload         16
647: invokevirtual #28
650: ldc           #29
652: invokevirtual #27
655: iconst_0
656: invokevirtual #28
659: ldc           #26
661: invokevirtual #27
664: invokevirtual #30
667: iload         16
669: ifne          676
672: iconst_1
673: goto          677
676: iconst_0
677: invokestatic  #31
680: aload         17
682: invokestatic  #23
685: dload         18
687: invokestatic  #99
690: invokestatic  #100
693: aload         20
695: invokestatic  #23
698: aload         20
700: invokestatic  #46
703: ldc           #95
705: invokestatic  #48
708: aload         22
710: invokestatic  #23
713: aload         23
715: invokestatic  #23
718: aload         24
720: invokestatic  #23
723: aload         24
725: invokestatic  #46
728: ldc           #95
730: invokestatic  #48
733: aload         26
735: invokestatic  #23
738: aload         27
740: invokestatic  #23
743: aload         29
745: invokestatic  #23
748: aload         29
750: invokestatic  #46
753: ldc           #95
755: invokestatic  #48
758: aload         31
760: invokestatic  #23
763: dload         32
765: invokestatic  #99
768: invokestatic  #100
771: dload         35
773: invokestatic  #99
776: invokestatic  #100
779: dload         38
781: invokestatic  #99
784: invokestatic  #100
787: aload         40
789: invokestatic  #23
792: new           #24
795: dup
796: invokespecial #25
799: ldc           #26
801: invokevirtual #27
804: iload         41
806: invokevirtual #49
809: ldc           #29
811: invokevirtual #27
814: iconst_4
815: invokevirtual #49
818: ldc           #26
820: invokevirtual #27
823: invokevirtual #30
826: iload         41
828: iconst_4
829: if_icmpne     836
832: iconst_1
833: goto          837
836: iconst_0
837: invokestatic  #31
840: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test48
Start line: 3046
End line: 3089
Method source code: 
    public void test48() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test48");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        java.lang.String str17 = arrayRealVector16.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = arrayRealVector16.copy();
        boolean boolean19 = arrayRealVector18.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = arrayRealVector8.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector18);
        double[] doubleArray25 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray25);
        java.lang.String str27 = arrayRealVector26.toString();
        double double28 = arrayRealVector26.getL1Norm();
        arrayRealVector26.unitize();
        boolean boolean30 = arrayRealVector26.isNaN();
        java.lang.String str31 = arrayRealVector26.toString();
        double double32 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        double double33 = arrayRealVector18.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        double[] doubleArray34 = arrayRealVector26.toArray();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(arrayRealVector20);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{0; 10; (NaN); 10}" + "'", str27, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{(NaN); (NaN); (NaN); (NaN)}" + "'", str31, "{(NaN); (NaN); (NaN); (NaN)}");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[NaN, NaN, NaN, NaN]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #299
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #80
72: astore        4
74: iconst_4
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #17
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #73
92: dastore
93: dup
94: iconst_3
95: ldc2_w        #17
98: dastore
99: astore        5
101: new           #75
104: dup
105: aload         5
107: invokespecial #76
110: astore        6
112: aload         6
114: invokevirtual #79
117: astore        7
119: aload         6
121: invokevirtual #80
124: astore        8
126: aload         8
128: invokevirtual #161
131: istore        9
133: aload         4
135: ldc2_w        #33
138: ldc2_w        #17
141: aload         8
143: invokevirtual #170
146: astore        10
148: iconst_4
149: newarray       double
151: dup
152: iconst_0
153: dconst_0
154: dastore
155: dup
156: iconst_1
157: ldc2_w        #17
160: dastore
161: dup
162: iconst_2
163: ldc2_w        #73
166: dastore
167: dup
168: iconst_3
169: ldc2_w        #17
172: dastore
173: astore        11
175: new           #75
178: dup
179: aload         11
181: invokespecial #76
184: astore        12
186: aload         12
188: invokevirtual #79
191: astore        13
193: aload         12
195: invokevirtual #171
198: dstore        14
200: aload         12
202: invokevirtual #215
205: aload         12
207: invokevirtual #208
210: istore        16
212: aload         12
214: invokevirtual #79
217: astore        17
219: aload         12
221: invokestatic  #126
224: dstore        18
226: aload         8
228: aload         12
230: invokevirtual #169
233: dstore        20
235: aload         12
237: invokevirtual #300
240: astore        22
242: aload_1
243: invokestatic  #23
246: aload_1
247: invokestatic  #46
250: ldc           #95
252: invokestatic  #48
255: aload_3
256: invokestatic  #23
259: aload         4
261: invokestatic  #23
264: aload         5
266: invokestatic  #23
269: aload         5
271: invokestatic  #46
274: ldc           #95
276: invokestatic  #48
279: new           #24
282: dup
283: invokespecial #25
286: ldc           #26
288: invokevirtual #27
291: aload         7
293: invokevirtual #27
296: ldc           #96
298: invokevirtual #27
301: invokevirtual #30
304: aload         7
306: ldc           #97
308: invokestatic  #98
311: aload         8
313: invokestatic  #23
316: new           #24
319: dup
320: invokespecial #25
323: ldc           #26
325: invokevirtual #27
328: iload         9
330: invokevirtual #28
333: ldc           #29
335: invokevirtual #27
338: iconst_0
339: invokevirtual #28
342: ldc           #26
344: invokevirtual #27
347: invokevirtual #30
350: iload         9
352: ifne          359
355: iconst_1
356: goto          360
359: iconst_0
360: invokestatic  #31
363: aload         10
365: invokestatic  #23
368: aload         11
370: invokestatic  #23
373: aload         11
375: invokestatic  #46
378: ldc           #95
380: invokestatic  #48
383: new           #24
386: dup
387: invokespecial #25
390: ldc           #26
392: invokevirtual #27
395: aload         13
397: invokevirtual #27
400: ldc           #96
402: invokevirtual #27
405: invokevirtual #30
408: aload         13
410: ldc           #97
412: invokestatic  #98
415: dload         14
417: invokestatic  #99
420: invokestatic  #100
423: new           #24
426: dup
427: invokespecial #25
430: ldc           #26
432: invokevirtual #27
435: iload         16
437: invokevirtual #28
440: ldc           #29
442: invokevirtual #27
445: iconst_1
446: invokevirtual #28
449: ldc           #26
451: invokevirtual #27
454: invokevirtual #30
457: iload         16
459: iconst_1
460: if_icmpne     467
463: iconst_1
464: goto          468
467: iconst_0
468: invokestatic  #31
471: new           #24
474: dup
475: invokespecial #25
478: ldc           #26
480: invokevirtual #27
483: aload         17
485: invokevirtual #27
488: ldc_w         #301
491: invokevirtual #27
494: invokevirtual #30
497: aload         17
499: ldc_w         #302
502: invokestatic  #98
505: dload         18
507: invokestatic  #99
510: invokestatic  #100
513: dload         20
515: invokestatic  #99
518: invokestatic  #100
521: aload         22
523: invokestatic  #23
526: aload         22
528: invokestatic  #46
531: ldc_w         #303
534: invokestatic  #48
537: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test49
Start line: 3092
End line: 3181
Method source code: 
    public void test49() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test49");
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix2 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int3 = array2DRowRealMatrix2.getRowDimension();
        array2DRowRealMatrix2.multiplyEntry((int) (short) 0, (int) (byte) 10, (double) 100.0f);
        org.apache.commons.math.linear.RealMatrix realMatrix9 = array2DRowRealMatrix2.scalarAdd((double) 100L);
        boolean boolean10 = array2DRowRealMatrix2.isSquare();
        org.apache.commons.math.linear.RealMatrix realMatrix12 = array2DRowRealMatrix2.scalarMultiply((double) 0);
        double[] doubleArray17 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray17);
        java.lang.String str19 = arrayRealVector18.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = arrayRealVector18.copy();
        boolean boolean21 = array2DRowRealMatrix2.equals((java.lang.Object) arrayRealVector20);
        array2DRowRealMatrix2.multiplyEntry(0, 0, 0.0d);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix28 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        double[][] doubleArray29 = array2DRowRealMatrix28.getData();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix30 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray29);
        double double31 = array2DRowRealMatrix30.getFrobeniusNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix32 = array2DRowRealMatrix2.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix30);
        org.apache.commons.math.exception.util.Localizable localizable33 = null;
        org.apache.commons.math.exception.util.Localizable localizable34 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix37 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int38 = array2DRowRealMatrix37.getRowDimension();
        double[] doubleArray40 = array2DRowRealMatrix37.getColumn((int) (byte) 10);
        double[][] doubleArray41 = array2DRowRealMatrix37.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException42 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable34, (java.lang.Object[]) doubleArray41);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix43 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray41);
        org.apache.commons.math.exception.MathArithmeticException mathArithmeticException44 = new org.apache.commons.math.exception.MathArithmeticException(localizable33, (java.lang.Object[]) doubleArray41);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix46 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray41, true);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix47 = array2DRowRealMatrix2.subtract(array2DRowRealMatrix46);
        double[][] doubleArray48 = array2DRowRealMatrix46.getDataRef();
        double[] doubleArray54 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector55 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray54);
        java.lang.String str56 = arrayRealVector55.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = arrayRealVector55.copy();
        double[] doubleArray62 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector63 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray62);
        java.lang.String str64 = arrayRealVector63.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector65 = arrayRealVector63.copy();
        boolean boolean66 = arrayRealVector65.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector67 = arrayRealVector55.add((org.apache.commons.math.linear.RealVector) arrayRealVector65);
        org.apache.commons.math.linear.RealVector realVector69 = arrayRealVector67.mapDivideToSelf((-1.0d));
        double[] doubleArray74 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector75 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray74);
        org.apache.commons.math.linear.RealVector realVector76 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray74);
        double double77 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector76);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector78 = arrayRealVector67.subtract(realVector76);
        // The following exception was thrown during execution in test generation
        try {
            array2DRowRealMatrix46.setColumnVector((int) (short) 10, realVector76);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.linear.MatrixDimensionMismatchException; message: got 4x1 but expected 3x1");
        } catch (org.apache.commons.math.linear.MatrixDimensionMismatchException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(realMatrix9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(realMatrix12);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{0; 10; (NaN); 10}" + "'", str19, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix32);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(array2DRowRealMatrix47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{0; 10; (NaN); 10}" + "'", str56, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector57);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{0; 10; (NaN); 10}" + "'", str64, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(arrayRealVector67);
        org.junit.Assert.assertNotNull(realVector69);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector76);
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(arrayRealVector78);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #304
20: aastore
21: invokevirtual #7
24: pop
25: new           #37
28: dup
29: iconst_3
30: bipush        97
32: invokespecial #38
35: astore_1
36: aload_1
37: invokevirtual #39
40: istore_2
41: aload_1
42: iconst_0
43: bipush        10
45: ldc2_w        #33
48: invokevirtual #305
51: aload_1
52: ldc2_w        #33
55: invokevirtual #120
58: astore_3
59: aload_1
60: invokevirtual #306
63: istore        4
65: aload_1
66: dconst_0
67: invokevirtual #268
70: astore        5
72: iconst_4
73: newarray       double
75: dup
76: iconst_0
77: dconst_0
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #17
84: dastore
85: dup
86: iconst_2
87: ldc2_w        #73
90: dastore
91: dup
92: iconst_3
93: ldc2_w        #17
96: dastore
97: astore        6
99: new           #75
102: dup
103: aload         6
105: invokespecial #76
108: astore        7
110: aload         7
112: invokevirtual #79
115: astore        8
117: aload         7
119: invokevirtual #80
122: astore        9
124: aload_1
125: aload         9
127: invokevirtual #307
130: istore        10
132: aload_1
133: iconst_0
134: iconst_0
135: dconst_0
136: invokevirtual #305
139: new           #37
142: dup
143: iconst_3
144: bipush        97
146: invokespecial #38
149: astore        11
151: aload         11
153: invokevirtual #104
156: astore        12
158: new           #37
161: dup
162: aload         12
164: invokespecial #116
167: astore        13
169: aload         13
171: invokevirtual #117
174: dstore        14
176: aload_1
177: aload         13
179: invokevirtual #308
182: astore        16
184: aconst_null
185: astore        17
187: aconst_null
188: astore        18
190: new           #37
193: dup
194: iconst_3
195: bipush        97
197: invokespecial #38
200: astore        19
202: aload         19
204: invokevirtual #39
207: istore        20
209: aload         19
211: bipush        10
213: invokevirtual #40
216: astore        21
218: aload         19
220: invokevirtual #104
223: astore        22
225: new           #105
228: dup
229: aload         18
231: aload         22
233: checkcast     #106
236: invokespecial #107
239: astore        23
241: new           #108
244: dup
245: aload         22
247: invokespecial #109
250: astore        24
252: new           #211
255: dup
256: aload         17
258: aload         22
260: checkcast     #106
263: invokespecial #309
266: astore        25
268: new           #37
271: dup
272: aload         22
274: iconst_1
275: invokespecial #310
278: astore        26
280: aload_1
281: aload         26
283: invokevirtual #311
286: astore        27
288: aload         26
290: invokevirtual #312
293: astore        28
295: iconst_4
296: newarray       double
298: dup
299: iconst_0
300: dconst_0
301: dastore
302: dup
303: iconst_1
304: ldc2_w        #17
307: dastore
308: dup
309: iconst_2
310: ldc2_w        #73
313: dastore
314: dup
315: iconst_3
316: ldc2_w        #17
319: dastore
320: astore        29
322: new           #75
325: dup
326: aload         29
328: invokespecial #76
331: astore        30
333: aload         30
335: invokevirtual #79
338: astore        31
340: aload         30
342: invokevirtual #80
345: astore        32
347: iconst_4
348: newarray       double
350: dup
351: iconst_0
352: dconst_0
353: dastore
354: dup
355: iconst_1
356: ldc2_w        #17
359: dastore
360: dup
361: iconst_2
362: ldc2_w        #73
365: dastore
366: dup
367: iconst_3
368: ldc2_w        #17
371: dastore
372: astore        33
374: new           #75
377: dup
378: aload         33
380: invokespecial #76
383: astore        34
385: aload         34
387: invokevirtual #79
390: astore        35
392: aload         34
394: invokevirtual #80
397: astore        36
399: aload         36
401: invokevirtual #161
404: istore        37
406: aload         30
408: aload         36
410: invokevirtual #164
413: astore        38
415: aload         38
417: ldc2_w        #9
420: invokevirtual #84
423: astore        39
425: iconst_4
426: newarray       double
428: dup
429: iconst_0
430: dconst_0
431: dastore
432: dup
433: iconst_1
434: ldc2_w        #17
437: dastore
438: dup
439: iconst_2
440: ldc2_w        #73
443: dastore
444: dup
445: iconst_3
446: ldc2_w        #17
449: dastore
450: astore        40
452: new           #75
455: dup
456: aload         40
458: invokespecial #76
461: astore        41
463: aload         40
465: invokestatic  #125
468: astore        42
470: aload         42
472: invokestatic  #126
475: dstore        43
477: aload         38
479: aload         42
481: invokevirtual #221
484: astore        45
486: aload         26
488: bipush        10
490: aload         42
492: invokevirtual #313
495: ldc_w         #314
498: invokestatic  #21
501: goto          506
504: astore        46
506: new           #24
509: dup
510: invokespecial #25
513: ldc           #26
515: invokevirtual #27
518: iload_2
519: invokevirtual #49
522: ldc           #29
524: invokevirtual #27
527: iconst_3
528: invokevirtual #49
531: ldc           #26
533: invokevirtual #27
536: invokevirtual #30
539: iload_2
540: iconst_3
541: if_icmpne     548
544: iconst_1
545: goto          549
548: iconst_0
549: invokestatic  #31
552: aload_3
553: invokestatic  #23
556: new           #24
559: dup
560: invokespecial #25
563: ldc           #26
565: invokevirtual #27
568: iload         4
570: invokevirtual #28
573: ldc           #29
575: invokevirtual #27
578: iconst_0
579: invokevirtual #28
582: ldc           #26
584: invokevirtual #27
587: invokevirtual #30
590: iload         4
592: ifne          599
595: iconst_1
596: goto          600
599: iconst_0
600: invokestatic  #31
603: aload         5
605: invokestatic  #23
608: aload         6
610: invokestatic  #23
613: aload         6
615: invokestatic  #46
618: ldc           #95
620: invokestatic  #48
623: new           #24
626: dup
627: invokespecial #25
630: ldc           #26
632: invokevirtual #27
635: aload         8
637: invokevirtual #27
640: ldc           #96
642: invokevirtual #27
645: invokevirtual #30
648: aload         8
650: ldc           #97
652: invokestatic  #98
655: aload         9
657: invokestatic  #23
660: new           #24
663: dup
664: invokespecial #25
667: ldc           #26
669: invokevirtual #27
672: iload         10
674: invokevirtual #28
677: ldc           #29
679: invokevirtual #27
682: iconst_0
683: invokevirtual #28
686: ldc           #26
688: invokevirtual #27
691: invokevirtual #30
694: iload         10
696: ifne          703
699: iconst_1
700: goto          704
703: iconst_0
704: invokestatic  #31
707: aload         12
709: invokestatic  #23
712: new           #24
715: dup
716: invokespecial #25
719: ldc           #26
721: invokevirtual #27
724: dload         14
726: invokevirtual #69
729: ldc           #29
731: invokevirtual #27
734: dconst_0
735: invokevirtual #69
738: ldc           #26
740: invokevirtual #27
743: invokevirtual #30
746: dload         14
748: dconst_0
749: dcmpl
750: ifne          757
753: iconst_1
754: goto          758
757: iconst_0
758: invokestatic  #31
761: aload         16
763: invokestatic  #23
766: new           #24
769: dup
770: invokespecial #25
773: ldc           #26
775: invokevirtual #27
778: iload         20
780: invokevirtual #49
783: ldc           #29
785: invokevirtual #27
788: iconst_3
789: invokevirtual #49
792: ldc           #26
794: invokevirtual #27
797: invokevirtual #30
800: iload         20
802: iconst_3
803: if_icmpne     810
806: iconst_1
807: goto          811
810: iconst_0
811: invokestatic  #31
814: aload         21
816: invokestatic  #23
819: aload         21
821: invokestatic  #46
824: ldc           #50
826: invokestatic  #48
829: aload         22
831: invokestatic  #23
834: aload         27
836: invokestatic  #23
839: aload         28
841: invokestatic  #23
844: aload         29
846: invokestatic  #23
849: aload         29
851: invokestatic  #46
854: ldc           #95
856: invokestatic  #48
859: new           #24
862: dup
863: invokespecial #25
866: ldc           #26
868: invokevirtual #27
871: aload         31
873: invokevirtual #27
876: ldc           #96
878: invokevirtual #27
881: invokevirtual #30
884: aload         31
886: ldc           #97
888: invokestatic  #98
891: aload         32
893: invokestatic  #23
896: aload         33
898: invokestatic  #23
901: aload         33
903: invokestatic  #46
906: ldc           #95
908: invokestatic  #48
911: new           #24
914: dup
915: invokespecial #25
918: ldc           #26
920: invokevirtual #27
923: aload         35
925: invokevirtual #27
928: ldc           #96
930: invokevirtual #27
933: invokevirtual #30
936: aload         35
938: ldc           #97
940: invokestatic  #98
943: aload         36
945: invokestatic  #23
948: new           #24
951: dup
952: invokespecial #25
955: ldc           #26
957: invokevirtual #27
960: iload         37
962: invokevirtual #28
965: ldc           #29
967: invokevirtual #27
970: iconst_0
971: invokevirtual #28
974: ldc           #26
976: invokevirtual #27
979: invokevirtual #30
982: iload         37
984: ifne          991
987: iconst_1
988: goto          992
991: iconst_0
992: invokestatic  #31
995: aload         38
997: invokestatic  #23
1000: aload         39
1002: invokestatic  #23
1005: aload         40
1007: invokestatic  #23
1010: aload         40
1012: invokestatic  #46
1015: ldc           #95
1017: invokestatic  #48
1020: aload         42
1022: invokestatic  #23
1025: dload         43
1027: invokestatic  #99
1030: invokestatic  #100
1033: aload         45
1035: invokestatic  #23
1038: return
Exception table:
from    to  target type
486   501   504   Class org/apache/commons/math/linear/MatrixDimensionMismatchException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test50
Start line: 3184
End line: 3259
Method source code: 
    public void test50() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test50");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        java.lang.String str17 = arrayRealVector16.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = arrayRealVector16.copy();
        boolean boolean19 = arrayRealVector18.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = arrayRealVector8.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector18);
        double double21 = arrayRealVector18.getL1Norm();
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = arrayRealVector27.copy();
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        org.apache.commons.math.linear.RealVector realVector38 = arrayRealVector36.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector36.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector30, arrayRealVector36);
        double[] doubleArray46 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector47 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray46);
        org.apache.commons.math.linear.RealVector realVector48 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray46);
        double double49 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector48);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector30, realVector48);
        double double51 = arrayRealVector18.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector30);
        double[] doubleArray56 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray56);
        org.apache.commons.math.linear.RealVector realVector59 = arrayRealVector57.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = arrayRealVector57.copy();
        double[] doubleArray67 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray67);
        java.lang.String str69 = arrayRealVector68.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector70 = arrayRealVector68.copy();
        boolean boolean71 = arrayRealVector70.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector72 = arrayRealVector60.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector70);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector73 = arrayRealVector18.ebeMultiply((org.apache.commons.math.linear.RealVector) arrayRealVector70);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(arrayRealVector20);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(arrayRealVector30);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector38);
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(arrayRealVector60);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{0; 10; (NaN); 10}" + "'", str69, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(arrayRealVector72);
        org.junit.Assert.assertNotNull(arrayRealVector73);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #315
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #80
72: astore        4
74: iconst_4
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #17
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #73
92: dastore
93: dup
94: iconst_3
95: ldc2_w        #17
98: dastore
99: astore        5
101: new           #75
104: dup
105: aload         5
107: invokespecial #76
110: astore        6
112: aload         6
114: invokevirtual #79
117: astore        7
119: aload         6
121: invokevirtual #80
124: astore        8
126: aload         8
128: invokevirtual #161
131: istore        9
133: aload         4
135: ldc2_w        #33
138: ldc2_w        #17
141: aload         8
143: invokevirtual #170
146: astore        10
148: aload         8
150: invokevirtual #171
153: dstore        11
155: iconst_4
156: newarray       double
158: dup
159: iconst_0
160: dconst_0
161: dastore
162: dup
163: iconst_1
164: ldc2_w        #17
167: dastore
168: dup
169: iconst_2
170: ldc2_w        #73
173: dastore
174: dup
175: iconst_3
176: ldc2_w        #17
179: dastore
180: astore        13
182: new           #75
185: dup
186: aload         13
188: invokespecial #76
191: astore        14
193: aload         14
195: ldc2_w        #33
198: invokevirtual #77
201: astore        15
203: aload         14
205: invokevirtual #80
208: astore        16
210: iconst_4
211: newarray       double
213: dup
214: iconst_0
215: dconst_0
216: dastore
217: dup
218: iconst_1
219: ldc2_w        #17
222: dastore
223: dup
224: iconst_2
225: ldc2_w        #73
228: dastore
229: dup
230: iconst_3
231: ldc2_w        #17
234: dastore
235: astore        17
237: new           #75
240: dup
241: aload         17
243: invokespecial #76
246: astore        18
248: aload         18
250: ldc2_w        #33
253: invokevirtual #77
256: astore        19
258: aload         18
260: ldc2_w        #122
263: invokevirtual #77
266: astore        20
268: new           #75
271: dup
272: aload         16
274: aload         18
276: invokespecial #124
279: astore        21
281: iconst_4
282: newarray       double
284: dup
285: iconst_0
286: dconst_0
287: dastore
288: dup
289: iconst_1
290: ldc2_w        #17
293: dastore
294: dup
295: iconst_2
296: ldc2_w        #73
299: dastore
300: dup
301: iconst_3
302: ldc2_w        #17
305: dastore
306: astore        22
308: new           #75
311: dup
312: aload         22
314: invokespecial #76
317: astore        23
319: aload         22
321: invokestatic  #125
324: astore        24
326: aload         24
328: invokestatic  #126
331: dstore        25
333: new           #75
336: dup
337: aload         16
339: aload         24
341: invokespecial #127
344: astore        27
346: aload         8
348: aload         16
350: invokevirtual #173
353: dstore        28
355: iconst_4
356: newarray       double
358: dup
359: iconst_0
360: dconst_0
361: dastore
362: dup
363: iconst_1
364: ldc2_w        #17
367: dastore
368: dup
369: iconst_2
370: ldc2_w        #73
373: dastore
374: dup
375: iconst_3
376: ldc2_w        #17
379: dastore
380: astore        30
382: new           #75
385: dup
386: aload         30
388: invokespecial #76
391: astore        31
393: aload         31
395: ldc2_w        #33
398: invokevirtual #77
401: astore        32
403: aload         31
405: invokevirtual #80
408: astore        33
410: iconst_4
411: newarray       double
413: dup
414: iconst_0
415: dconst_0
416: dastore
417: dup
418: iconst_1
419: ldc2_w        #17
422: dastore
423: dup
424: iconst_2
425: ldc2_w        #73
428: dastore
429: dup
430: iconst_3
431: ldc2_w        #17
434: dastore
435: astore        34
437: new           #75
440: dup
441: aload         34
443: invokespecial #76
446: astore        35
448: aload         35
450: invokevirtual #79
453: astore        36
455: aload         35
457: invokevirtual #80
460: astore        37
462: aload         37
464: invokevirtual #161
467: istore        38
469: aload         33
471: ldc2_w        #33
474: ldc2_w        #17
477: aload         37
479: invokevirtual #170
482: astore        39
484: aload         8
486: aload         37
488: invokevirtual #199
491: astore        40
493: aload_1
494: invokestatic  #23
497: aload_1
498: invokestatic  #46
501: ldc           #95
503: invokestatic  #48
506: aload_3
507: invokestatic  #23
510: aload         4
512: invokestatic  #23
515: aload         5
517: invokestatic  #23
520: aload         5
522: invokestatic  #46
525: ldc           #95
527: invokestatic  #48
530: new           #24
533: dup
534: invokespecial #25
537: ldc           #26
539: invokevirtual #27
542: aload         7
544: invokevirtual #27
547: ldc           #96
549: invokevirtual #27
552: invokevirtual #30
555: aload         7
557: ldc           #97
559: invokestatic  #98
562: aload         8
564: invokestatic  #23
567: new           #24
570: dup
571: invokespecial #25
574: ldc           #26
576: invokevirtual #27
579: iload         9
581: invokevirtual #28
584: ldc           #29
586: invokevirtual #27
589: iconst_0
590: invokevirtual #28
593: ldc           #26
595: invokevirtual #27
598: invokevirtual #30
601: iload         9
603: ifne          610
606: iconst_1
607: goto          611
610: iconst_0
611: invokestatic  #31
614: aload         10
616: invokestatic  #23
619: dload         11
621: invokestatic  #99
624: invokestatic  #100
627: aload         13
629: invokestatic  #23
632: aload         13
634: invokestatic  #46
637: ldc           #95
639: invokestatic  #48
642: aload         15
644: invokestatic  #23
647: aload         16
649: invokestatic  #23
652: aload         17
654: invokestatic  #23
657: aload         17
659: invokestatic  #46
662: ldc           #95
664: invokestatic  #48
667: aload         19
669: invokestatic  #23
672: aload         20
674: invokestatic  #23
677: aload         22
679: invokestatic  #23
682: aload         22
684: invokestatic  #46
687: ldc           #95
689: invokestatic  #48
692: aload         24
694: invokestatic  #23
697: dload         25
699: invokestatic  #99
702: invokestatic  #100
705: dload         28
707: invokestatic  #99
710: invokestatic  #100
713: aload         30
715: invokestatic  #23
718: aload         30
720: invokestatic  #46
723: ldc           #95
725: invokestatic  #48
728: aload         32
730: invokestatic  #23
733: aload         33
735: invokestatic  #23
738: aload         34
740: invokestatic  #23
743: aload         34
745: invokestatic  #46
748: ldc           #95
750: invokestatic  #48
753: new           #24
756: dup
757: invokespecial #25
760: ldc           #26
762: invokevirtual #27
765: aload         36
767: invokevirtual #27
770: ldc           #96
772: invokevirtual #27
775: invokevirtual #30
778: aload         36
780: ldc           #97
782: invokestatic  #98
785: aload         37
787: invokestatic  #23
790: new           #24
793: dup
794: invokespecial #25
797: ldc           #26
799: invokevirtual #27
802: iload         38
804: invokevirtual #28
807: ldc           #29
809: invokevirtual #27
812: iconst_0
813: invokevirtual #28
816: ldc           #26
818: invokevirtual #27
821: invokevirtual #30
824: iload         38
826: ifne          833
829: iconst_1
830: goto          834
833: iconst_0
834: invokestatic  #31
837: aload         39
839: invokestatic  #23
842: aload         40
844: invokestatic  #23
847: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test51
Start line: 3262
End line: 3287
Method source code: 
    public void test51() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test51");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver2 = new org.apache.commons.math.optimization.linear.SimplexSolver((double) (short) 10, (-1074790400));
        simplexSolver2.nonNegative = false;
        org.apache.commons.math.optimization.GoalType goalType5 = org.apache.commons.math.optimization.GoalType.MAXIMIZE;
        simplexSolver2.goal = goalType5;
        int int7 = simplexSolver2.getMaxIterations();
        org.apache.commons.math.optimization.GoalType goalType8 = simplexSolver2.goal;
        org.apache.commons.math.optimization.GoalType goalType9 = null;
        simplexSolver2.goal = goalType9;
        int int11 = simplexSolver2.getIterations();
        int int12 = simplexSolver2.getIterations();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair13 = simplexSolver2.doOptimize();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + goalType5 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType5.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertTrue("'" + goalType8 + "' != '" + org.apache.commons.math.optimization.GoalType.MAXIMIZE + "'", goalType8.equals(org.apache.commons.math.optimization.GoalType.MAXIMIZE));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #316
20: aastore
21: invokevirtual #7
24: pop
25: new           #62
28: dup
29: ldc2_w        #17
32: ldc           #63
34: invokespecial #64
37: astore_1
38: aload_1
39: iconst_0
40: putfield      #65
43: getstatic     #54
46: astore_2
47: aload_1
48: aload_2
49: putfield      #66
52: aload_1
53: invokevirtual #71
56: istore_3
57: aload_1
58: getfield      #66
61: astore        4
63: aconst_null
64: astore        5
66: aload_1
67: aload         5
69: putfield      #66
72: aload_1
73: invokevirtual #246
76: istore        6
78: aload_1
79: invokevirtual #246
82: istore        7
84: aload_1
85: invokevirtual #247
88: astore        8
90: ldc           #20
92: invokestatic  #21
95: goto          100
98: astore        8
100: new           #24
103: dup
104: invokespecial #25
107: ldc           #26
109: invokevirtual #27
112: aload_2
113: invokevirtual #55
116: ldc           #29
118: invokevirtual #27
121: getstatic     #54
124: invokevirtual #55
127: ldc           #26
129: invokevirtual #27
132: invokevirtual #30
135: aload_2
136: getstatic     #54
139: invokevirtual #56
142: invokestatic  #31
145: new           #24
148: dup
149: invokespecial #25
152: ldc           #26
154: invokevirtual #27
157: iload_3
158: invokevirtual #49
161: ldc           #29
163: invokevirtual #27
166: bipush        100
168: invokevirtual #49
171: ldc           #26
173: invokevirtual #27
176: invokevirtual #30
179: iload_3
180: bipush        100
182: if_icmpne     189
185: iconst_1
186: goto          190
189: iconst_0
190: invokestatic  #31
193: new           #24
196: dup
197: invokespecial #25
200: ldc           #26
202: invokevirtual #27
205: aload         4
207: invokevirtual #55
210: ldc           #29
212: invokevirtual #27
215: getstatic     #54
218: invokevirtual #55
221: ldc           #26
223: invokevirtual #27
226: invokevirtual #30
229: aload         4
231: getstatic     #54
234: invokevirtual #56
237: invokestatic  #31
240: new           #24
243: dup
244: invokespecial #25
247: ldc           #26
249: invokevirtual #27
252: iload         6
254: invokevirtual #49
257: ldc           #29
259: invokevirtual #27
262: iconst_0
263: invokevirtual #49
266: ldc           #26
268: invokevirtual #27
271: invokevirtual #30
274: iload         6
276: ifne          283
279: iconst_1
280: goto          284
283: iconst_0
284: invokestatic  #31
287: new           #24
290: dup
291: invokespecial #25
294: ldc           #26
296: invokevirtual #27
299: iload         7
301: invokevirtual #49
304: ldc           #29
306: invokevirtual #27
309: iconst_0
310: invokevirtual #49
313: ldc           #26
315: invokevirtual #27
318: invokevirtual #30
321: iload         7
323: ifne          330
326: iconst_1
327: goto          331
330: iconst_0
331: invokestatic  #31
334: return
Exception table:
from    to  target type
84    95    98   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test52
Start line: 3290
End line: 3378
Method source code: 
    public void test52() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test52");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix3 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int4 = array2DRowRealMatrix3.getRowDimension();
        double[] doubleArray6 = array2DRowRealMatrix3.getColumn((int) (byte) 10);
        double[][] doubleArray7 = array2DRowRealMatrix3.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException8 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix9 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray7);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix11 = blockRealMatrix9.scalarAdd((double) (byte) -1);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix14 = blockRealMatrix9.createMatrix(1, 36);
        org.apache.commons.math.linear.RealMatrix realMatrix16 = blockRealMatrix14.getColumnMatrix(32);
        org.apache.commons.math.linear.RealMatrix realMatrix18 = blockRealMatrix14.scalarMultiply(0.5515061557428147d);
        double[] doubleArray23 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector24 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray23);
        java.lang.String str25 = arrayRealVector24.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = arrayRealVector24.copy();
        arrayRealVector24.set(4.61512051684126d);
        double double29 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector24);
        double[] doubleArray34 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector35 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray34);
        arrayRealVector35.unitize();
        double[] doubleArray41 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray41);
        java.lang.String str43 = arrayRealVector42.toString();
        org.apache.commons.math.linear.RealVector realVector44 = arrayRealVector35.add((org.apache.commons.math.linear.RealVector) arrayRealVector42);
        arrayRealVector35.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship49 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship50 = relationship49.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship49);
        double[] doubleArray56 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray56);
        org.apache.commons.math.linear.RealVector realVector59 = arrayRealVector57.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = arrayRealVector57.copy();
        double[] doubleArray67 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray67);
        java.lang.String str69 = arrayRealVector68.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector70 = arrayRealVector68.copy();
        boolean boolean71 = arrayRealVector70.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector72 = arrayRealVector60.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector70);
        double double73 = arrayRealVector70.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint75 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector35, Double.NaN, relationship49, (org.apache.commons.math.linear.RealVector) arrayRealVector70, (double) 52);
        double double77 = arrayRealVector35.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector79 = arrayRealVector35.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector80 = arrayRealVector24.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector35);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.MatrixUtils.solveUpperTriangularSystem(realMatrix18, realVector80);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.MathIllegalArgumentException; message: 1 != 4");
        } catch (org.apache.commons.math.exception.MathIllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(blockRealMatrix11);
        org.junit.Assert.assertNotNull(blockRealMatrix14);
        org.junit.Assert.assertNotNull(realMatrix16);
        org.junit.Assert.assertNotNull(realMatrix18);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{0; 10; (NaN); 10}" + "'", str25, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-18.46048206736504d) + "'", double29 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{0; 10; (NaN); 10}" + "'", str43, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector44);
        org.junit.Assert.assertTrue("'" + relationship49 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship49.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship50 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship50.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector59);
        org.junit.Assert.assertNotNull(arrayRealVector60);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "{0; 10; (NaN); 10}" + "'", str69, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(arrayRealVector72);
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
        org.junit.Assert.assertNotNull(realVector79);
        org.junit.Assert.assertNotNull(realVector80);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #317
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #37
30: dup
31: iconst_3
32: bipush        97
34: invokespecial #38
37: astore_2
38: aload_2
39: invokevirtual #39
42: istore_3
43: aload_2
44: bipush        10
46: invokevirtual #40
49: astore        4
51: aload_2
52: invokevirtual #104
55: astore        5
57: new           #105
60: dup
61: aload_1
62: aload         5
64: checkcast     #106
67: invokespecial #107
70: astore        6
72: new           #108
75: dup
76: aload         5
78: invokespecial #109
81: astore        7
83: aload         7
85: ldc2_w        #9
88: invokevirtual #112
91: astore        8
93: aload         7
95: iconst_1
96: bipush        36
98: invokevirtual #318
101: astore        9
103: aload         9
105: bipush        32
107: invokevirtual #319
110: astore        10
112: aload         9
114: ldc2_w        #320
117: invokevirtual #322
120: astore        11
122: iconst_4
123: newarray       double
125: dup
126: iconst_0
127: dconst_0
128: dastore
129: dup
130: iconst_1
131: ldc2_w        #17
134: dastore
135: dup
136: iconst_2
137: ldc2_w        #73
140: dastore
141: dup
142: iconst_3
143: ldc2_w        #17
146: dastore
147: astore        12
149: new           #75
152: dup
153: aload         12
155: invokespecial #76
158: astore        13
160: aload         13
162: invokevirtual #79
165: astore        14
167: aload         13
169: invokevirtual #80
172: astore        15
174: aload         13
176: ldc2_w        #213
179: invokevirtual #135
182: aload         13
184: invokestatic  #126
187: dstore        16
189: iconst_4
190: newarray       double
192: dup
193: iconst_0
194: dconst_0
195: dastore
196: dup
197: iconst_1
198: ldc2_w        #17
201: dastore
202: dup
203: iconst_2
204: ldc2_w        #73
207: dastore
208: dup
209: iconst_3
210: ldc2_w        #17
213: dastore
214: astore        18
216: new           #75
219: dup
220: aload         18
222: invokespecial #76
225: astore        19
227: aload         19
229: invokevirtual #215
232: iconst_4
233: newarray       double
235: dup
236: iconst_0
237: dconst_0
238: dastore
239: dup
240: iconst_1
241: ldc2_w        #17
244: dastore
245: dup
246: iconst_2
247: ldc2_w        #73
250: dastore
251: dup
252: iconst_3
253: ldc2_w        #17
256: dastore
257: astore        20
259: new           #75
262: dup
263: aload         20
265: invokespecial #76
268: astore        21
270: aload         21
272: invokevirtual #79
275: astore        22
277: aload         19
279: aload         21
281: invokevirtual #164
284: astore        23
286: aload         19
288: iconst_3
289: dconst_1
290: invokevirtual #178
293: getstatic     #86
296: astore        24
298: aload         24
300: invokevirtual #87
303: astore        25
305: aload         24
307: invokestatic  #216
310: iconst_4
311: newarray       double
313: dup
314: iconst_0
315: dconst_0
316: dastore
317: dup
318: iconst_1
319: ldc2_w        #17
322: dastore
323: dup
324: iconst_2
325: ldc2_w        #73
328: dastore
329: dup
330: iconst_3
331: ldc2_w        #17
334: dastore
335: astore        26
337: new           #75
340: dup
341: aload         26
343: invokespecial #76
346: astore        27
348: aload         27
350: ldc2_w        #33
353: invokevirtual #77
356: astore        28
358: aload         27
360: invokevirtual #80
363: astore        29
365: iconst_4
366: newarray       double
368: dup
369: iconst_0
370: dconst_0
371: dastore
372: dup
373: iconst_1
374: ldc2_w        #17
377: dastore
378: dup
379: iconst_2
380: ldc2_w        #73
383: dastore
384: dup
385: iconst_3
386: ldc2_w        #17
389: dastore
390: astore        30
392: new           #75
395: dup
396: aload         30
398: invokespecial #76
401: astore        31
403: aload         31
405: invokevirtual #79
408: astore        32
410: aload         31
412: invokevirtual #80
415: astore        33
417: aload         33
419: invokevirtual #161
422: istore        34
424: aload         29
426: ldc2_w        #33
429: ldc2_w        #17
432: aload         33
434: invokevirtual #170
437: astore        35
439: aload         33
441: invokevirtual #171
444: dstore        36
446: new           #12
449: dup
450: aload         19
452: ldc2_w        #73
455: aload         24
457: aload         33
459: ldc2_w        #41
462: invokespecial #217
465: astore        38
467: aload         19
469: iconst_1
470: invokevirtual #218
473: dstore        39
475: aload         19
477: ldc2_w        #219
480: invokevirtual #77
483: astore        41
485: aload         13
487: aload         19
489: invokevirtual #221
492: astore        42
494: aload         11
496: aload         42
498: invokestatic  #128
501: ldc_w         #323
504: invokestatic  #21
507: goto          512
510: astore        43
512: new           #24
515: dup
516: invokespecial #25
519: ldc           #26
521: invokevirtual #27
524: iload_3
525: invokevirtual #49
528: ldc           #29
530: invokevirtual #27
533: iconst_3
534: invokevirtual #49
537: ldc           #26
539: invokevirtual #27
542: invokevirtual #30
545: iload_3
546: iconst_3
547: if_icmpne     554
550: iconst_1
551: goto          555
554: iconst_0
555: invokestatic  #31
558: aload         4
560: invokestatic  #23
563: aload         4
565: invokestatic  #46
568: ldc           #50
570: invokestatic  #48
573: aload         5
575: invokestatic  #23
578: aload         8
580: invokestatic  #23
583: aload         9
585: invokestatic  #23
588: aload         10
590: invokestatic  #23
593: aload         11
595: invokestatic  #23
598: aload         12
600: invokestatic  #23
603: aload         12
605: invokestatic  #46
608: ldc           #95
610: invokestatic  #48
613: new           #24
616: dup
617: invokespecial #25
620: ldc           #26
622: invokevirtual #27
625: aload         14
627: invokevirtual #27
630: ldc           #96
632: invokevirtual #27
635: invokevirtual #30
638: aload         14
640: ldc           #97
642: invokestatic  #98
645: aload         15
647: invokestatic  #23
650: new           #24
653: dup
654: invokespecial #25
657: ldc           #26
659: invokevirtual #27
662: dload         16
664: invokevirtual #69
667: ldc           #29
669: invokevirtual #27
672: ldc2_w        #223
675: invokevirtual #69
678: ldc           #26
680: invokevirtual #27
683: invokevirtual #30
686: dload         16
688: ldc2_w        #223
691: dcmpl
692: ifne          699
695: iconst_1
696: goto          700
699: iconst_0
700: invokestatic  #31
703: aload         18
705: invokestatic  #23
708: aload         18
710: invokestatic  #46
713: ldc           #95
715: invokestatic  #48
718: aload         20
720: invokestatic  #23
723: aload         20
725: invokestatic  #46
728: ldc           #95
730: invokestatic  #48
733: new           #24
736: dup
737: invokespecial #25
740: ldc           #26
742: invokevirtual #27
745: aload         22
747: invokevirtual #27
750: ldc           #96
752: invokevirtual #27
755: invokevirtual #30
758: aload         22
760: ldc           #97
762: invokestatic  #98
765: aload         23
767: invokestatic  #23
770: new           #24
773: dup
774: invokespecial #25
777: ldc           #26
779: invokevirtual #27
782: aload         24
784: invokevirtual #55
787: ldc           #29
789: invokevirtual #27
792: getstatic     #86
795: invokevirtual #55
798: ldc           #26
800: invokevirtual #27
803: invokevirtual #30
806: aload         24
808: getstatic     #86
811: invokevirtual #101
814: invokestatic  #31
817: new           #24
820: dup
821: invokespecial #25
824: ldc           #26
826: invokevirtual #27
829: aload         25
831: invokevirtual #55
834: ldc           #29
836: invokevirtual #27
839: getstatic     #86
842: invokevirtual #55
845: ldc           #26
847: invokevirtual #27
850: invokevirtual #30
853: aload         25
855: getstatic     #86
858: invokevirtual #101
861: invokestatic  #31
864: aload         26
866: invokestatic  #23
869: aload         26
871: invokestatic  #46
874: ldc           #95
876: invokestatic  #48
879: aload         28
881: invokestatic  #23
884: aload         29
886: invokestatic  #23
889: aload         30
891: invokestatic  #23
894: aload         30
896: invokestatic  #46
899: ldc           #95
901: invokestatic  #48
904: new           #24
907: dup
908: invokespecial #25
911: ldc           #26
913: invokevirtual #27
916: aload         32
918: invokevirtual #27
921: ldc           #96
923: invokevirtual #27
926: invokevirtual #30
929: aload         32
931: ldc           #97
933: invokestatic  #98
936: aload         33
938: invokestatic  #23
941: new           #24
944: dup
945: invokespecial #25
948: ldc           #26
950: invokevirtual #27
953: iload         34
955: invokevirtual #28
958: ldc           #29
960: invokevirtual #27
963: iconst_0
964: invokevirtual #28
967: ldc           #26
969: invokevirtual #27
972: invokevirtual #30
975: iload         34
977: ifne          984
980: iconst_1
981: goto          985
984: iconst_0
985: invokestatic  #31
988: aload         35
990: invokestatic  #23
993: dload         36
995: invokestatic  #99
998: invokestatic  #100
1001: dload         39
1003: invokestatic  #99
1006: invokestatic  #100
1009: aload         41
1011: invokestatic  #23
1014: aload         42
1016: invokestatic  #23
1019: return
Exception table:
from    to  target type
494   507   510   Class org/apache/commons/math/exception/MathIllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test53
Start line: 3381
End line: 3479
Method source code: 
    public void test53() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test53");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        org.apache.commons.math.linear.RealVector realVector15 = arrayRealVector13.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector13);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        double double18 = arrayRealVector5.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        int int19 = arrayRealVector5.getDimension();
        org.apache.commons.math.linear.RealVector realVector21 = arrayRealVector5.mapMultiply((double) 1074790400);
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        java.lang.String str28 = arrayRealVector27.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector29 = arrayRealVector27.copy();
        boolean boolean30 = arrayRealVector29.isInfinite();
        double[] doubleArray35 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector36 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray35);
        double double37 = arrayRealVector29.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector36);
        double[] doubleArray44 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector45 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray44);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector45.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = arrayRealVector45.copy();
        double[] doubleArray55 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector56 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray55);
        java.lang.String str57 = arrayRealVector56.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector58 = arrayRealVector56.copy();
        boolean boolean59 = arrayRealVector58.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = arrayRealVector48.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector58);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector36.combineToSelf(2.0d, (double) (short) 0, (org.apache.commons.math.linear.RealVector) arrayRealVector58);
        org.apache.commons.math.linear.RealVector realVector62 = arrayRealVector5.ebeDivide((org.apache.commons.math.linear.RealVector) arrayRealVector58);
        double[] doubleArray67 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray67);
        org.apache.commons.math.linear.RealVector realVector70 = arrayRealVector68.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector71 = arrayRealVector68.copy();
        double[] doubleArray76 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector77 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray76);
        org.apache.commons.math.linear.RealVector realVector79 = arrayRealVector77.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector81 = arrayRealVector77.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector71, arrayRealVector77);
        double[] doubleArray87 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector88 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray87);
        org.apache.commons.math.linear.RealVector realVector89 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray87);
        double double90 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector89);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector91 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector71, realVector89);
        arrayRealVector71.set(1.0001523125762564d);
        double[] doubleArray94 = arrayRealVector71.getDataRef();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector95 = arrayRealVector5.append(arrayRealVector71);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector97 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector71, false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector15);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(realVector21);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{0; 10; (NaN); 10}" + "'", str28, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(arrayRealVector48);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{0; 10; (NaN); 10}" + "'", str57, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(arrayRealVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(realVector62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(arrayRealVector71);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector79);
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector89);
        org.junit.Assert.assertTrue(Double.isNaN(double90));
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(arrayRealVector95);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #324
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: iconst_4
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #17
83: dastore
84: dup
85: iconst_2
86: ldc2_w        #73
89: dastore
90: dup
91: iconst_3
92: ldc2_w        #17
95: dastore
96: astore        5
98: new           #75
101: dup
102: aload         5
104: invokespecial #76
107: astore        6
109: aload         6
111: ldc2_w        #33
114: invokevirtual #77
117: astore        7
119: new           #75
122: dup
123: aload         6
125: invokespecial #78
128: astore        8
130: new           #75
133: dup
134: aload         8
136: invokespecial #78
139: astore        9
141: aload_2
142: aload         8
144: invokevirtual #192
147: dstore        10
149: aload_2
150: invokevirtual #168
153: istore        12
155: aload_2
156: ldc2_w        #193
159: invokevirtual #195
162: astore        13
164: iconst_4
165: newarray       double
167: dup
168: iconst_0
169: dconst_0
170: dastore
171: dup
172: iconst_1
173: ldc2_w        #17
176: dastore
177: dup
178: iconst_2
179: ldc2_w        #73
182: dastore
183: dup
184: iconst_3
185: ldc2_w        #17
188: dastore
189: astore        14
191: new           #75
194: dup
195: aload         14
197: invokespecial #76
200: astore        15
202: aload         15
204: invokevirtual #79
207: astore        16
209: aload         15
211: invokevirtual #80
214: astore        17
216: aload         17
218: invokevirtual #161
221: istore        18
223: iconst_4
224: newarray       double
226: dup
227: iconst_0
228: dconst_0
229: dastore
230: dup
231: iconst_1
232: ldc2_w        #17
235: dastore
236: dup
237: iconst_2
238: ldc2_w        #73
241: dastore
242: dup
243: iconst_3
244: ldc2_w        #17
247: dastore
248: astore        19
250: new           #75
253: dup
254: aload         19
256: invokespecial #76
259: astore        20
261: aload         17
263: aload         20
265: invokevirtual #192
268: dstore        21
270: iconst_4
271: newarray       double
273: dup
274: iconst_0
275: dconst_0
276: dastore
277: dup
278: iconst_1
279: ldc2_w        #17
282: dastore
283: dup
284: iconst_2
285: ldc2_w        #73
288: dastore
289: dup
290: iconst_3
291: ldc2_w        #17
294: dastore
295: astore        23
297: new           #75
300: dup
301: aload         23
303: invokespecial #76
306: astore        24
308: aload         24
310: ldc2_w        #33
313: invokevirtual #77
316: astore        25
318: aload         24
320: invokevirtual #80
323: astore        26
325: iconst_4
326: newarray       double
328: dup
329: iconst_0
330: dconst_0
331: dastore
332: dup
333: iconst_1
334: ldc2_w        #17
337: dastore
338: dup
339: iconst_2
340: ldc2_w        #73
343: dastore
344: dup
345: iconst_3
346: ldc2_w        #17
349: dastore
350: astore        27
352: new           #75
355: dup
356: aload         27
358: invokespecial #76
361: astore        28
363: aload         28
365: invokevirtual #79
368: astore        29
370: aload         28
372: invokevirtual #80
375: astore        30
377: aload         30
379: invokevirtual #161
382: istore        31
384: aload         26
386: ldc2_w        #33
389: ldc2_w        #17
392: aload         30
394: invokevirtual #170
397: astore        32
399: aload         20
401: ldc2_w        #196
404: dconst_0
405: aload         30
407: invokevirtual #198
410: astore        33
412: aload_2
413: aload         30
415: invokevirtual #81
418: astore        34
420: iconst_4
421: newarray       double
423: dup
424: iconst_0
425: dconst_0
426: dastore
427: dup
428: iconst_1
429: ldc2_w        #17
432: dastore
433: dup
434: iconst_2
435: ldc2_w        #73
438: dastore
439: dup
440: iconst_3
441: ldc2_w        #17
444: dastore
445: astore        35
447: new           #75
450: dup
451: aload         35
453: invokespecial #76
456: astore        36
458: aload         36
460: ldc2_w        #33
463: invokevirtual #77
466: astore        37
468: aload         36
470: invokevirtual #80
473: astore        38
475: iconst_4
476: newarray       double
478: dup
479: iconst_0
480: dconst_0
481: dastore
482: dup
483: iconst_1
484: ldc2_w        #17
487: dastore
488: dup
489: iconst_2
490: ldc2_w        #73
493: dastore
494: dup
495: iconst_3
496: ldc2_w        #17
499: dastore
500: astore        39
502: new           #75
505: dup
506: aload         39
508: invokespecial #76
511: astore        40
513: aload         40
515: ldc2_w        #33
518: invokevirtual #77
521: astore        41
523: aload         40
525: ldc2_w        #122
528: invokevirtual #77
531: astore        42
533: new           #75
536: dup
537: aload         38
539: aload         40
541: invokespecial #124
544: astore        43
546: iconst_4
547: newarray       double
549: dup
550: iconst_0
551: dconst_0
552: dastore
553: dup
554: iconst_1
555: ldc2_w        #17
558: dastore
559: dup
560: iconst_2
561: ldc2_w        #73
564: dastore
565: dup
566: iconst_3
567: ldc2_w        #17
570: dastore
571: astore        44
573: new           #75
576: dup
577: aload         44
579: invokespecial #76
582: astore        45
584: aload         44
586: invokestatic  #125
589: astore        46
591: aload         46
593: invokestatic  #126
596: dstore        47
598: new           #75
601: dup
602: aload         38
604: aload         46
606: invokespecial #127
609: astore        49
611: aload         38
613: ldc2_w        #133
616: invokevirtual #135
619: aload         38
621: invokevirtual #136
624: astore        50
626: aload_2
627: aload         38
629: invokevirtual #222
632: astore        51
634: new           #75
637: dup
638: aload         38
640: iconst_0
641: invokespecial #325
644: astore        52
646: aload_1
647: invokestatic  #23
650: aload_1
651: invokestatic  #46
654: ldc           #95
656: invokestatic  #48
659: new           #24
662: dup
663: invokespecial #25
666: ldc           #26
668: invokevirtual #27
671: aload_3
672: invokevirtual #27
675: ldc           #96
677: invokevirtual #27
680: invokevirtual #30
683: aload_3
684: ldc           #97
686: invokestatic  #98
689: aload         4
691: invokestatic  #23
694: aload         5
696: invokestatic  #23
699: aload         5
701: invokestatic  #46
704: ldc           #95
706: invokestatic  #48
709: aload         7
711: invokestatic  #23
714: dload         10
716: invokestatic  #99
719: invokestatic  #100
722: new           #24
725: dup
726: invokespecial #25
729: ldc           #26
731: invokevirtual #27
734: iload         12
736: invokevirtual #49
739: ldc           #29
741: invokevirtual #27
744: iconst_4
745: invokevirtual #49
748: ldc           #26
750: invokevirtual #27
753: invokevirtual #30
756: iload         12
758: iconst_4
759: if_icmpne     766
762: iconst_1
763: goto          767
766: iconst_0
767: invokestatic  #31
770: aload         13
772: invokestatic  #23
775: aload         14
777: invokestatic  #23
780: aload         14
782: invokestatic  #46
785: ldc           #95
787: invokestatic  #48
790: new           #24
793: dup
794: invokespecial #25
797: ldc           #26
799: invokevirtual #27
802: aload         16
804: invokevirtual #27
807: ldc           #96
809: invokevirtual #27
812: invokevirtual #30
815: aload         16
817: ldc           #97
819: invokestatic  #98
822: aload         17
824: invokestatic  #23
827: new           #24
830: dup
831: invokespecial #25
834: ldc           #26
836: invokevirtual #27
839: iload         18
841: invokevirtual #28
844: ldc           #29
846: invokevirtual #27
849: iconst_0
850: invokevirtual #28
853: ldc           #26
855: invokevirtual #27
858: invokevirtual #30
861: iload         18
863: ifne          870
866: iconst_1
867: goto          871
870: iconst_0
871: invokestatic  #31
874: aload         19
876: invokestatic  #23
879: aload         19
881: invokestatic  #46
884: ldc           #95
886: invokestatic  #48
889: dload         21
891: invokestatic  #99
894: invokestatic  #100
897: aload         23
899: invokestatic  #23
902: aload         23
904: invokestatic  #46
907: ldc           #95
909: invokestatic  #48
912: aload         25
914: invokestatic  #23
917: aload         26
919: invokestatic  #23
922: aload         27
924: invokestatic  #23
927: aload         27
929: invokestatic  #46
932: ldc           #95
934: invokestatic  #48
937: new           #24
940: dup
941: invokespecial #25
944: ldc           #26
946: invokevirtual #27
949: aload         29
951: invokevirtual #27
954: ldc           #96
956: invokevirtual #27
959: invokevirtual #30
962: aload         29
964: ldc           #97
966: invokestatic  #98
969: aload         30
971: invokestatic  #23
974: new           #24
977: dup
978: invokespecial #25
981: ldc           #26
983: invokevirtual #27
986: iload         31
988: invokevirtual #28
991: ldc           #29
993: invokevirtual #27
996: iconst_0
997: invokevirtual #28
1000: ldc           #26
1002: invokevirtual #27
1005: invokevirtual #30
1008: iload         31
1010: ifne          1017
1013: iconst_1
1014: goto          1018
1017: iconst_0
1018: invokestatic  #31
1021: aload         32
1023: invokestatic  #23
1026: aload         33
1028: invokestatic  #23
1031: aload         34
1033: invokestatic  #23
1036: aload         35
1038: invokestatic  #23
1041: aload         35
1043: invokestatic  #46
1046: ldc           #95
1048: invokestatic  #48
1051: aload         37
1053: invokestatic  #23
1056: aload         38
1058: invokestatic  #23
1061: aload         39
1063: invokestatic  #23
1066: aload         39
1068: invokestatic  #46
1071: ldc           #95
1073: invokestatic  #48
1076: aload         41
1078: invokestatic  #23
1081: aload         42
1083: invokestatic  #23
1086: aload         44
1088: invokestatic  #23
1091: aload         44
1093: invokestatic  #46
1096: ldc           #95
1098: invokestatic  #48
1101: aload         46
1103: invokestatic  #23
1106: dload         47
1108: invokestatic  #99
1111: invokestatic  #100
1114: aload         50
1116: invokestatic  #23
1119: aload         50
1121: invokestatic  #46
1124: ldc           #140
1126: invokestatic  #48
1129: aload         51
1131: invokestatic  #23
1134: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test54
Start line: 3482
End line: 3550
Method source code: 
    public void test54() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test54");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        arrayRealVector5.set(4.61512051684126d);
        double double10 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        arrayRealVector16.unitize();
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector16.add((org.apache.commons.math.linear.RealVector) arrayRealVector23);
        arrayRealVector16.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship30 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship31 = relationship30.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship30);
        double[] doubleArray37 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector38.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = arrayRealVector38.copy();
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        java.lang.String str50 = arrayRealVector49.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = arrayRealVector49.copy();
        boolean boolean52 = arrayRealVector51.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = arrayRealVector41.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector51);
        double double54 = arrayRealVector51.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint56 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector16, Double.NaN, relationship30, (org.apache.commons.math.linear.RealVector) arrayRealVector51, (double) 52);
        double double58 = arrayRealVector16.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector60 = arrayRealVector16.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector5.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = arrayRealVector16.copy();
        double double63 = arrayRealVector62.getMaxValue();
        boolean boolean64 = arrayRealVector62.isNaN();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-18.46048206736504d) + "'", double10 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertTrue("'" + relationship30 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship30.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship31 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship31.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(arrayRealVector41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{0; 10; (NaN); 10}" + "'", str50, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(arrayRealVector62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #326
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: aload_2
72: ldc2_w        #213
75: invokevirtual #135
78: aload_2
79: invokestatic  #126
82: dstore        5
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #17
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #73
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #17
108: dastore
109: astore        7
111: new           #75
114: dup
115: aload         7
117: invokespecial #76
120: astore        8
122: aload         8
124: invokevirtual #215
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #17
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #73
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #17
151: dastore
152: astore        9
154: new           #75
157: dup
158: aload         9
160: invokespecial #76
163: astore        10
165: aload         10
167: invokevirtual #79
170: astore        11
172: aload         8
174: aload         10
176: invokevirtual #164
179: astore        12
181: aload         8
183: iconst_3
184: dconst_1
185: invokevirtual #178
188: getstatic     #86
191: astore        13
193: aload         13
195: invokevirtual #87
198: astore        14
200: aload         13
202: invokestatic  #216
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: ldc2_w        #17
217: dastore
218: dup
219: iconst_2
220: ldc2_w        #73
223: dastore
224: dup
225: iconst_3
226: ldc2_w        #17
229: dastore
230: astore        15
232: new           #75
235: dup
236: aload         15
238: invokespecial #76
241: astore        16
243: aload         16
245: ldc2_w        #33
248: invokevirtual #77
251: astore        17
253: aload         16
255: invokevirtual #80
258: astore        18
260: iconst_4
261: newarray       double
263: dup
264: iconst_0
265: dconst_0
266: dastore
267: dup
268: iconst_1
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_2
275: ldc2_w        #73
278: dastore
279: dup
280: iconst_3
281: ldc2_w        #17
284: dastore
285: astore        19
287: new           #75
290: dup
291: aload         19
293: invokespecial #76
296: astore        20
298: aload         20
300: invokevirtual #79
303: astore        21
305: aload         20
307: invokevirtual #80
310: astore        22
312: aload         22
314: invokevirtual #161
317: istore        23
319: aload         18
321: ldc2_w        #33
324: ldc2_w        #17
327: aload         22
329: invokevirtual #170
332: astore        24
334: aload         22
336: invokevirtual #171
339: dstore        25
341: new           #12
344: dup
345: aload         8
347: ldc2_w        #73
350: aload         13
352: aload         22
354: ldc2_w        #41
357: invokespecial #217
360: astore        27
362: aload         8
364: iconst_1
365: invokevirtual #218
368: dstore        28
370: aload         8
372: ldc2_w        #219
375: invokevirtual #77
378: astore        30
380: aload_2
381: aload         8
383: invokevirtual #221
386: astore        31
388: aload         8
390: invokevirtual #80
393: astore        32
395: aload         32
397: invokevirtual #285
400: dstore        33
402: aload         32
404: invokevirtual #208
407: istore        35
409: aload_1
410: invokestatic  #23
413: aload_1
414: invokestatic  #46
417: ldc           #95
419: invokestatic  #48
422: new           #24
425: dup
426: invokespecial #25
429: ldc           #26
431: invokevirtual #27
434: aload_3
435: invokevirtual #27
438: ldc           #96
440: invokevirtual #27
443: invokevirtual #30
446: aload_3
447: ldc           #97
449: invokestatic  #98
452: aload         4
454: invokestatic  #23
457: new           #24
460: dup
461: invokespecial #25
464: ldc           #26
466: invokevirtual #27
469: dload         5
471: invokevirtual #69
474: ldc           #29
476: invokevirtual #27
479: ldc2_w        #223
482: invokevirtual #69
485: ldc           #26
487: invokevirtual #27
490: invokevirtual #30
493: dload         5
495: ldc2_w        #223
498: dcmpl
499: ifne          506
502: iconst_1
503: goto          507
506: iconst_0
507: invokestatic  #31
510: aload         7
512: invokestatic  #23
515: aload         7
517: invokestatic  #46
520: ldc           #95
522: invokestatic  #48
525: aload         9
527: invokestatic  #23
530: aload         9
532: invokestatic  #46
535: ldc           #95
537: invokestatic  #48
540: new           #24
543: dup
544: invokespecial #25
547: ldc           #26
549: invokevirtual #27
552: aload         11
554: invokevirtual #27
557: ldc           #96
559: invokevirtual #27
562: invokevirtual #30
565: aload         11
567: ldc           #97
569: invokestatic  #98
572: aload         12
574: invokestatic  #23
577: new           #24
580: dup
581: invokespecial #25
584: ldc           #26
586: invokevirtual #27
589: aload         13
591: invokevirtual #55
594: ldc           #29
596: invokevirtual #27
599: getstatic     #86
602: invokevirtual #55
605: ldc           #26
607: invokevirtual #27
610: invokevirtual #30
613: aload         13
615: getstatic     #86
618: invokevirtual #101
621: invokestatic  #31
624: new           #24
627: dup
628: invokespecial #25
631: ldc           #26
633: invokevirtual #27
636: aload         14
638: invokevirtual #55
641: ldc           #29
643: invokevirtual #27
646: getstatic     #86
649: invokevirtual #55
652: ldc           #26
654: invokevirtual #27
657: invokevirtual #30
660: aload         14
662: getstatic     #86
665: invokevirtual #101
668: invokestatic  #31
671: aload         15
673: invokestatic  #23
676: aload         15
678: invokestatic  #46
681: ldc           #95
683: invokestatic  #48
686: aload         17
688: invokestatic  #23
691: aload         18
693: invokestatic  #23
696: aload         19
698: invokestatic  #23
701: aload         19
703: invokestatic  #46
706: ldc           #95
708: invokestatic  #48
711: new           #24
714: dup
715: invokespecial #25
718: ldc           #26
720: invokevirtual #27
723: aload         21
725: invokevirtual #27
728: ldc           #96
730: invokevirtual #27
733: invokevirtual #30
736: aload         21
738: ldc           #97
740: invokestatic  #98
743: aload         22
745: invokestatic  #23
748: new           #24
751: dup
752: invokespecial #25
755: ldc           #26
757: invokevirtual #27
760: iload         23
762: invokevirtual #28
765: ldc           #29
767: invokevirtual #27
770: iconst_0
771: invokevirtual #28
774: ldc           #26
776: invokevirtual #27
779: invokevirtual #30
782: iload         23
784: ifne          791
787: iconst_1
788: goto          792
791: iconst_0
792: invokestatic  #31
795: aload         24
797: invokestatic  #23
800: dload         25
802: invokestatic  #99
805: invokestatic  #100
808: dload         28
810: invokestatic  #99
813: invokestatic  #100
816: aload         30
818: invokestatic  #23
821: aload         31
823: invokestatic  #23
826: aload         32
828: invokestatic  #23
831: new           #24
834: dup
835: invokespecial #25
838: ldc           #26
840: invokevirtual #27
843: dload         33
845: invokevirtual #69
848: ldc           #29
850: invokevirtual #27
853: dconst_1
854: invokevirtual #69
857: ldc           #26
859: invokevirtual #27
862: invokevirtual #30
865: dload         33
867: dconst_1
868: dcmpl
869: ifne          876
872: iconst_1
873: goto          877
876: iconst_0
877: invokestatic  #31
880: new           #24
883: dup
884: invokespecial #25
887: ldc           #26
889: invokevirtual #27
892: iload         35
894: invokevirtual #28
897: ldc           #29
899: invokevirtual #27
902: iconst_1
903: invokevirtual #28
906: ldc           #26
908: invokevirtual #27
911: invokevirtual #30
914: iload         35
916: iconst_1
917: if_icmpne     924
920: iconst_1
921: goto          925
924: iconst_0
925: invokestatic  #31
928: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test55
Start line: 3553
End line: 3634
Method source code: 
    public void test55() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test55");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        java.lang.String str17 = arrayRealVector16.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector18 = arrayRealVector16.copy();
        boolean boolean19 = arrayRealVector18.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = arrayRealVector8.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector18);
        double[] doubleArray25 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray25);
        java.lang.String str27 = arrayRealVector26.toString();
        double double28 = arrayRealVector26.getL1Norm();
        arrayRealVector26.unitize();
        boolean boolean30 = arrayRealVector26.isNaN();
        java.lang.String str31 = arrayRealVector26.toString();
        double double32 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        double double33 = arrayRealVector18.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        double[] doubleArray39 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector40 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray39);
        java.lang.String str41 = arrayRealVector40.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = arrayRealVector40.copy();
        double[] doubleArray47 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray47);
        java.lang.String str49 = arrayRealVector48.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = arrayRealVector48.copy();
        boolean boolean51 = arrayRealVector50.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector52 = arrayRealVector40.add((org.apache.commons.math.linear.RealVector) arrayRealVector50);
        double[] doubleArray57 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector58 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray57);
        java.lang.String str59 = arrayRealVector58.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector60 = arrayRealVector58.copy();
        arrayRealVector58.set(4.61512051684126d);
        double double63 = arrayRealVector52.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector58);
        arrayRealVector52.unitize();
        int int65 = arrayRealVector52.getDimension();
        // The following exception was thrown during execution in test generation
        try {
            arrayRealVector26.setSubVector(3, (org.apache.commons.math.linear.RealVector) arrayRealVector52);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: index (6)");
        } catch (org.apache.commons.math.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(arrayRealVector20);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{0; 10; (NaN); 10}" + "'", str27, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{(NaN); (NaN); (NaN); (NaN)}" + "'", str31, "{(NaN); (NaN); (NaN); (NaN)}");
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue(Double.isNaN(double33));
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{0; 10; (NaN); 10}" + "'", str41, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector42);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{0; 10; (NaN); 10}" + "'", str49, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(arrayRealVector52);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{0; 10; (NaN); 10}" + "'", str59, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector60);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #327
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #80
72: astore        4
74: iconst_4
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #17
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #73
92: dastore
93: dup
94: iconst_3
95: ldc2_w        #17
98: dastore
99: astore        5
101: new           #75
104: dup
105: aload         5
107: invokespecial #76
110: astore        6
112: aload         6
114: invokevirtual #79
117: astore        7
119: aload         6
121: invokevirtual #80
124: astore        8
126: aload         8
128: invokevirtual #161
131: istore        9
133: aload         4
135: ldc2_w        #33
138: ldc2_w        #17
141: aload         8
143: invokevirtual #170
146: astore        10
148: iconst_4
149: newarray       double
151: dup
152: iconst_0
153: dconst_0
154: dastore
155: dup
156: iconst_1
157: ldc2_w        #17
160: dastore
161: dup
162: iconst_2
163: ldc2_w        #73
166: dastore
167: dup
168: iconst_3
169: ldc2_w        #17
172: dastore
173: astore        11
175: new           #75
178: dup
179: aload         11
181: invokespecial #76
184: astore        12
186: aload         12
188: invokevirtual #79
191: astore        13
193: aload         12
195: invokevirtual #171
198: dstore        14
200: aload         12
202: invokevirtual #215
205: aload         12
207: invokevirtual #208
210: istore        16
212: aload         12
214: invokevirtual #79
217: astore        17
219: aload         12
221: invokestatic  #126
224: dstore        18
226: aload         8
228: aload         12
230: invokevirtual #169
233: dstore        20
235: iconst_4
236: newarray       double
238: dup
239: iconst_0
240: dconst_0
241: dastore
242: dup
243: iconst_1
244: ldc2_w        #17
247: dastore
248: dup
249: iconst_2
250: ldc2_w        #73
253: dastore
254: dup
255: iconst_3
256: ldc2_w        #17
259: dastore
260: astore        22
262: new           #75
265: dup
266: aload         22
268: invokespecial #76
271: astore        23
273: aload         23
275: invokevirtual #79
278: astore        24
280: aload         23
282: invokevirtual #80
285: astore        25
287: iconst_4
288: newarray       double
290: dup
291: iconst_0
292: dconst_0
293: dastore
294: dup
295: iconst_1
296: ldc2_w        #17
299: dastore
300: dup
301: iconst_2
302: ldc2_w        #73
305: dastore
306: dup
307: iconst_3
308: ldc2_w        #17
311: dastore
312: astore        26
314: new           #75
317: dup
318: aload         26
320: invokespecial #76
323: astore        27
325: aload         27
327: invokevirtual #79
330: astore        28
332: aload         27
334: invokevirtual #80
337: astore        29
339: aload         29
341: invokevirtual #161
344: istore        30
346: aload         23
348: aload         29
350: invokevirtual #164
353: astore        31
355: iconst_4
356: newarray       double
358: dup
359: iconst_0
360: dconst_0
361: dastore
362: dup
363: iconst_1
364: ldc2_w        #17
367: dastore
368: dup
369: iconst_2
370: ldc2_w        #73
373: dastore
374: dup
375: iconst_3
376: ldc2_w        #17
379: dastore
380: astore        32
382: new           #75
385: dup
386: aload         32
388: invokespecial #76
391: astore        33
393: aload         33
395: invokevirtual #79
398: astore        34
400: aload         33
402: invokevirtual #80
405: astore        35
407: aload         33
409: ldc2_w        #213
412: invokevirtual #135
415: aload         31
417: aload         33
419: invokevirtual #169
422: dstore        36
424: aload         31
426: invokevirtual #215
429: aload         31
431: invokevirtual #168
434: istore        38
436: aload         12
438: iconst_3
439: aload         31
441: invokevirtual #328
444: ldc_w         #329
447: invokestatic  #21
450: goto          455
453: astore        39
455: aload_1
456: invokestatic  #23
459: aload_1
460: invokestatic  #46
463: ldc           #95
465: invokestatic  #48
468: aload_3
469: invokestatic  #23
472: aload         4
474: invokestatic  #23
477: aload         5
479: invokestatic  #23
482: aload         5
484: invokestatic  #46
487: ldc           #95
489: invokestatic  #48
492: new           #24
495: dup
496: invokespecial #25
499: ldc           #26
501: invokevirtual #27
504: aload         7
506: invokevirtual #27
509: ldc           #96
511: invokevirtual #27
514: invokevirtual #30
517: aload         7
519: ldc           #97
521: invokestatic  #98
524: aload         8
526: invokestatic  #23
529: new           #24
532: dup
533: invokespecial #25
536: ldc           #26
538: invokevirtual #27
541: iload         9
543: invokevirtual #28
546: ldc           #29
548: invokevirtual #27
551: iconst_0
552: invokevirtual #28
555: ldc           #26
557: invokevirtual #27
560: invokevirtual #30
563: iload         9
565: ifne          572
568: iconst_1
569: goto          573
572: iconst_0
573: invokestatic  #31
576: aload         10
578: invokestatic  #23
581: aload         11
583: invokestatic  #23
586: aload         11
588: invokestatic  #46
591: ldc           #95
593: invokestatic  #48
596: new           #24
599: dup
600: invokespecial #25
603: ldc           #26
605: invokevirtual #27
608: aload         13
610: invokevirtual #27
613: ldc           #96
615: invokevirtual #27
618: invokevirtual #30
621: aload         13
623: ldc           #97
625: invokestatic  #98
628: dload         14
630: invokestatic  #99
633: invokestatic  #100
636: new           #24
639: dup
640: invokespecial #25
643: ldc           #26
645: invokevirtual #27
648: iload         16
650: invokevirtual #28
653: ldc           #29
655: invokevirtual #27
658: iconst_1
659: invokevirtual #28
662: ldc           #26
664: invokevirtual #27
667: invokevirtual #30
670: iload         16
672: iconst_1
673: if_icmpne     680
676: iconst_1
677: goto          681
680: iconst_0
681: invokestatic  #31
684: new           #24
687: dup
688: invokespecial #25
691: ldc           #26
693: invokevirtual #27
696: aload         17
698: invokevirtual #27
701: ldc_w         #301
704: invokevirtual #27
707: invokevirtual #30
710: aload         17
712: ldc_w         #302
715: invokestatic  #98
718: dload         18
720: invokestatic  #99
723: invokestatic  #100
726: dload         20
728: invokestatic  #99
731: invokestatic  #100
734: aload         22
736: invokestatic  #23
739: aload         22
741: invokestatic  #46
744: ldc           #95
746: invokestatic  #48
749: new           #24
752: dup
753: invokespecial #25
756: ldc           #26
758: invokevirtual #27
761: aload         24
763: invokevirtual #27
766: ldc           #96
768: invokevirtual #27
771: invokevirtual #30
774: aload         24
776: ldc           #97
778: invokestatic  #98
781: aload         25
783: invokestatic  #23
786: aload         26
788: invokestatic  #23
791: aload         26
793: invokestatic  #46
796: ldc           #95
798: invokestatic  #48
801: new           #24
804: dup
805: invokespecial #25
808: ldc           #26
810: invokevirtual #27
813: aload         28
815: invokevirtual #27
818: ldc           #96
820: invokevirtual #27
823: invokevirtual #30
826: aload         28
828: ldc           #97
830: invokestatic  #98
833: aload         29
835: invokestatic  #23
838: new           #24
841: dup
842: invokespecial #25
845: ldc           #26
847: invokevirtual #27
850: iload         30
852: invokevirtual #28
855: ldc           #29
857: invokevirtual #27
860: iconst_0
861: invokevirtual #28
864: ldc           #26
866: invokevirtual #27
869: invokevirtual #30
872: iload         30
874: ifne          881
877: iconst_1
878: goto          882
881: iconst_0
882: invokestatic  #31
885: aload         31
887: invokestatic  #23
890: aload         32
892: invokestatic  #23
895: aload         32
897: invokestatic  #46
900: ldc           #95
902: invokestatic  #48
905: new           #24
908: dup
909: invokespecial #25
912: ldc           #26
914: invokevirtual #27
917: aload         34
919: invokevirtual #27
922: ldc           #96
924: invokevirtual #27
927: invokevirtual #30
930: aload         34
932: ldc           #97
934: invokestatic  #98
937: aload         35
939: invokestatic  #23
942: dload         36
944: invokestatic  #99
947: invokestatic  #100
950: new           #24
953: dup
954: invokespecial #25
957: ldc           #26
959: invokevirtual #27
962: iload         38
964: invokevirtual #49
967: ldc           #29
969: invokevirtual #27
972: iconst_4
973: invokevirtual #49
976: ldc           #26
978: invokevirtual #27
981: invokevirtual #30
984: iload         38
986: iconst_4
987: if_icmpne     994
990: iconst_1
991: goto          995
994: iconst_0
995: invokestatic  #31
998: return
Exception table:
from    to  target type
436   450   453   Class org/apache/commons/math/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test56
Start line: 3637
End line: 3698
Method source code: 
    public void test56() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test56");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        arrayRealVector5.unitize();
        double[] doubleArray11 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray11);
        java.lang.String str13 = arrayRealVector12.toString();
        org.apache.commons.math.linear.RealVector realVector14 = arrayRealVector5.add((org.apache.commons.math.linear.RealVector) arrayRealVector12);
        double[] doubleArray19 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector20 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray19);
        java.lang.String str21 = arrayRealVector20.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector22 = arrayRealVector20.copy();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector20);
        double double24 = arrayRealVector12.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector23);
        double[] doubleArray29 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray29);
        org.apache.commons.math.linear.RealVector realVector32 = arrayRealVector30.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector33 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector30);
        arrayRealVector30.set((-49.0d));
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector23.add((org.apache.commons.math.linear.RealVector) arrayRealVector30);
        double[] doubleArray41 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray41);
        java.lang.String str43 = arrayRealVector42.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector44 = arrayRealVector42.copy();
        boolean boolean45 = arrayRealVector44.isInfinite();
        double[] doubleArray50 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray50);
        double double52 = arrayRealVector44.dotProduct((org.apache.commons.math.linear.RealVector) arrayRealVector51);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = arrayRealVector51.copy();
        org.apache.commons.math.linear.RealVector realVector55 = arrayRealVector51.mapDivideToSelf((double) 200.0f);
        double double56 = arrayRealVector23.getDistance(realVector55);
        double double57 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector55);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{0; 10; (NaN); 10}" + "'", str13, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{0; 10; (NaN); 10}" + "'", str21, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector22);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector32);
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{0; 10; (NaN); 10}" + "'", str43, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double52));
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #330
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #215
64: iconst_4
65: newarray       double
67: dup
68: iconst_0
69: dconst_0
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #17
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #73
82: dastore
83: dup
84: iconst_3
85: ldc2_w        #17
88: dastore
89: astore_3
90: new           #75
93: dup
94: aload_3
95: invokespecial #76
98: astore        4
100: aload         4
102: invokevirtual #79
105: astore        5
107: aload_2
108: aload         4
110: invokevirtual #164
113: astore        6
115: iconst_4
116: newarray       double
118: dup
119: iconst_0
120: dconst_0
121: dastore
122: dup
123: iconst_1
124: ldc2_w        #17
127: dastore
128: dup
129: iconst_2
130: ldc2_w        #73
133: dastore
134: dup
135: iconst_3
136: ldc2_w        #17
139: dastore
140: astore        7
142: new           #75
145: dup
146: aload         7
148: invokespecial #76
151: astore        8
153: aload         8
155: invokevirtual #79
158: astore        9
160: aload         8
162: invokevirtual #80
165: astore        10
167: new           #75
170: dup
171: aload         8
173: invokespecial #78
176: astore        11
178: aload         4
180: aload         11
182: invokevirtual #169
185: dstore        12
187: iconst_4
188: newarray       double
190: dup
191: iconst_0
192: dconst_0
193: dastore
194: dup
195: iconst_1
196: ldc2_w        #17
199: dastore
200: dup
201: iconst_2
202: ldc2_w        #73
205: dastore
206: dup
207: iconst_3
208: ldc2_w        #17
211: dastore
212: astore        14
214: new           #75
217: dup
218: aload         14
220: invokespecial #76
223: astore        15
225: aload         15
227: ldc2_w        #33
230: invokevirtual #77
233: astore        16
235: new           #75
238: dup
239: aload         15
241: invokespecial #78
244: astore        17
246: aload         15
248: ldc2_w        #147
251: invokevirtual #135
254: aload         11
256: aload         15
258: invokevirtual #164
261: astore        18
263: iconst_4
264: newarray       double
266: dup
267: iconst_0
268: dconst_0
269: dastore
270: dup
271: iconst_1
272: ldc2_w        #17
275: dastore
276: dup
277: iconst_2
278: ldc2_w        #73
281: dastore
282: dup
283: iconst_3
284: ldc2_w        #17
287: dastore
288: astore        19
290: new           #75
293: dup
294: aload         19
296: invokespecial #76
299: astore        20
301: aload         20
303: invokevirtual #79
306: astore        21
308: aload         20
310: invokevirtual #80
313: astore        22
315: aload         22
317: invokevirtual #161
320: istore        23
322: iconst_4
323: newarray       double
325: dup
326: iconst_0
327: dconst_0
328: dastore
329: dup
330: iconst_1
331: ldc2_w        #17
334: dastore
335: dup
336: iconst_2
337: ldc2_w        #73
340: dastore
341: dup
342: iconst_3
343: ldc2_w        #17
346: dastore
347: astore        24
349: new           #75
352: dup
353: aload         24
355: invokespecial #76
358: astore        25
360: aload         22
362: aload         25
364: invokevirtual #192
367: dstore        26
369: aload         25
371: invokevirtual #80
374: astore        28
376: aload         25
378: ldc2_w        #331
381: invokevirtual #84
384: astore        29
386: aload         11
388: aload         29
390: invokevirtual #333
393: dstore        30
395: aload         29
397: invokestatic  #126
400: dstore        32
402: aload_1
403: invokestatic  #23
406: aload_1
407: invokestatic  #46
410: ldc           #95
412: invokestatic  #48
415: aload_3
416: invokestatic  #23
419: aload_3
420: invokestatic  #46
423: ldc           #95
425: invokestatic  #48
428: new           #24
431: dup
432: invokespecial #25
435: ldc           #26
437: invokevirtual #27
440: aload         5
442: invokevirtual #27
445: ldc           #96
447: invokevirtual #27
450: invokevirtual #30
453: aload         5
455: ldc           #97
457: invokestatic  #98
460: aload         6
462: invokestatic  #23
465: aload         7
467: invokestatic  #23
470: aload         7
472: invokestatic  #46
475: ldc           #95
477: invokestatic  #48
480: new           #24
483: dup
484: invokespecial #25
487: ldc           #26
489: invokevirtual #27
492: aload         9
494: invokevirtual #27
497: ldc           #96
499: invokevirtual #27
502: invokevirtual #30
505: aload         9
507: ldc           #97
509: invokestatic  #98
512: aload         10
514: invokestatic  #23
517: dload         12
519: invokestatic  #99
522: invokestatic  #100
525: aload         14
527: invokestatic  #23
530: aload         14
532: invokestatic  #46
535: ldc           #95
537: invokestatic  #48
540: aload         16
542: invokestatic  #23
545: aload         18
547: invokestatic  #23
550: aload         19
552: invokestatic  #23
555: aload         19
557: invokestatic  #46
560: ldc           #95
562: invokestatic  #48
565: new           #24
568: dup
569: invokespecial #25
572: ldc           #26
574: invokevirtual #27
577: aload         21
579: invokevirtual #27
582: ldc           #96
584: invokevirtual #27
587: invokevirtual #30
590: aload         21
592: ldc           #97
594: invokestatic  #98
597: aload         22
599: invokestatic  #23
602: new           #24
605: dup
606: invokespecial #25
609: ldc           #26
611: invokevirtual #27
614: iload         23
616: invokevirtual #28
619: ldc           #29
621: invokevirtual #27
624: iconst_0
625: invokevirtual #28
628: ldc           #26
630: invokevirtual #27
633: invokevirtual #30
636: iload         23
638: ifne          645
641: iconst_1
642: goto          646
645: iconst_0
646: invokestatic  #31
649: aload         24
651: invokestatic  #23
654: aload         24
656: invokestatic  #46
659: ldc           #95
661: invokestatic  #48
664: dload         26
666: invokestatic  #99
669: invokestatic  #100
672: aload         28
674: invokestatic  #23
677: aload         29
679: invokestatic  #23
682: dload         30
684: invokestatic  #99
687: invokestatic  #100
690: dload         32
692: invokestatic  #99
695: invokestatic  #100
698: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test57
Start line: 3701
End line: 3800
Method source code: 
    public void test57() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test57");
        org.apache.commons.math.exception.util.Localizable localizable0 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix3 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int4 = array2DRowRealMatrix3.getRowDimension();
        double[] doubleArray6 = array2DRowRealMatrix3.getColumn((int) (byte) 10);
        double[][] doubleArray7 = array2DRowRealMatrix3.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException8 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable0, (java.lang.Object[]) doubleArray7);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix9 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray7);
        org.apache.commons.math.linear.RealVector realVector11 = blockRealMatrix9.getColumnVector((int) (short) 10);
        int int12 = blockRealMatrix9.getColumnDimension();
        int int13 = blockRealMatrix9.getColumnDimension();
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix15 = blockRealMatrix9.getColumnMatrix(1);
        int int16 = blockRealMatrix9.getRowDimension();
        double[] doubleArray21 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector22 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray21);
        double[] doubleArray27 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray27);
        java.lang.String str29 = arrayRealVector28.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = arrayRealVector28.copy();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector31 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector28);
        double[] doubleArray36 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray36);
        org.apache.commons.math.linear.RealVector realVector39 = arrayRealVector37.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector40 = arrayRealVector37.copy();
        double[] doubleArray47 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray47);
        java.lang.String str49 = arrayRealVector48.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = arrayRealVector48.copy();
        boolean boolean51 = arrayRealVector50.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector52 = arrayRealVector40.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector50);
        double double53 = arrayRealVector50.getL1Norm();
        double[] doubleArray58 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray58);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector59.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = arrayRealVector59.copy();
        double[] doubleArray67 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector68 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray67);
        org.apache.commons.math.linear.RealVector realVector70 = arrayRealVector68.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector72 = arrayRealVector68.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector73 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector62, arrayRealVector68);
        double[] doubleArray78 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector79 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray78);
        org.apache.commons.math.linear.RealVector realVector80 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray78);
        double double81 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector80);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector82 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector62, realVector80);
        double double83 = arrayRealVector50.getL1Distance((org.apache.commons.math.linear.RealVector) arrayRealVector62);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector84 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector28, arrayRealVector50);
        double double85 = arrayRealVector22.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector50);
        org.apache.commons.math.linear.RealVector realVector87 = arrayRealVector22.mapAddToSelf((double) (-200.0f));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.MatrixUtils.solveUpperTriangularSystem((org.apache.commons.math.linear.RealMatrix) blockRealMatrix9, (org.apache.commons.math.linear.RealVector) arrayRealVector22);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.MathIllegalArgumentException; message: 3 != 4");
        } catch (org.apache.commons.math.exception.MathIllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 97 + "'", int12 == 97);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertNotNull(blockRealMatrix15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{0; 10; (NaN); 10}" + "'", str29, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector30);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector39);
        org.junit.Assert.assertNotNull(arrayRealVector40);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{0; 10; (NaN); 10}" + "'", str49, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(arrayRealVector52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(arrayRealVector62);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector70);
        org.junit.Assert.assertNotNull(realVector72);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector80);
        org.junit.Assert.assertTrue(Double.isNaN(double81));
        org.junit.Assert.assertTrue(Double.isNaN(double83));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
        org.junit.Assert.assertNotNull(realVector87);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #334
20: aastore
21: invokevirtual #7
24: pop
25: aconst_null
26: astore_1
27: new           #37
30: dup
31: iconst_3
32: bipush        97
34: invokespecial #38
37: astore_2
38: aload_2
39: invokevirtual #39
42: istore_3
43: aload_2
44: bipush        10
46: invokevirtual #40
49: astore        4
51: aload_2
52: invokevirtual #104
55: astore        5
57: new           #105
60: dup
61: aload_1
62: aload         5
64: checkcast     #106
67: invokespecial #107
70: astore        6
72: new           #108
75: dup
76: aload         5
78: invokespecial #109
81: astore        7
83: aload         7
85: bipush        10
87: invokevirtual #110
90: astore        8
92: aload         7
94: invokevirtual #131
97: istore        9
99: aload         7
101: invokevirtual #131
104: istore        10
106: aload         7
108: iconst_1
109: invokevirtual #319
112: astore        11
114: aload         7
116: invokevirtual #335
119: istore        12
121: iconst_4
122: newarray       double
124: dup
125: iconst_0
126: dconst_0
127: dastore
128: dup
129: iconst_1
130: ldc2_w        #17
133: dastore
134: dup
135: iconst_2
136: ldc2_w        #73
139: dastore
140: dup
141: iconst_3
142: ldc2_w        #17
145: dastore
146: astore        13
148: new           #75
151: dup
152: aload         13
154: invokespecial #76
157: astore        14
159: iconst_4
160: newarray       double
162: dup
163: iconst_0
164: dconst_0
165: dastore
166: dup
167: iconst_1
168: ldc2_w        #17
171: dastore
172: dup
173: iconst_2
174: ldc2_w        #73
177: dastore
178: dup
179: iconst_3
180: ldc2_w        #17
183: dastore
184: astore        15
186: new           #75
189: dup
190: aload         15
192: invokespecial #76
195: astore        16
197: aload         16
199: invokevirtual #79
202: astore        17
204: aload         16
206: invokevirtual #80
209: astore        18
211: new           #75
214: dup
215: aload         16
217: invokespecial #78
220: astore        19
222: iconst_4
223: newarray       double
225: dup
226: iconst_0
227: dconst_0
228: dastore
229: dup
230: iconst_1
231: ldc2_w        #17
234: dastore
235: dup
236: iconst_2
237: ldc2_w        #73
240: dastore
241: dup
242: iconst_3
243: ldc2_w        #17
246: dastore
247: astore        20
249: new           #75
252: dup
253: aload         20
255: invokespecial #76
258: astore        21
260: aload         21
262: ldc2_w        #33
265: invokevirtual #77
268: astore        22
270: aload         21
272: invokevirtual #80
275: astore        23
277: iconst_4
278: newarray       double
280: dup
281: iconst_0
282: dconst_0
283: dastore
284: dup
285: iconst_1
286: ldc2_w        #17
289: dastore
290: dup
291: iconst_2
292: ldc2_w        #73
295: dastore
296: dup
297: iconst_3
298: ldc2_w        #17
301: dastore
302: astore        24
304: new           #75
307: dup
308: aload         24
310: invokespecial #76
313: astore        25
315: aload         25
317: invokevirtual #79
320: astore        26
322: aload         25
324: invokevirtual #80
327: astore        27
329: aload         27
331: invokevirtual #161
334: istore        28
336: aload         23
338: ldc2_w        #33
341: ldc2_w        #17
344: aload         27
346: invokevirtual #170
349: astore        29
351: aload         27
353: invokevirtual #171
356: dstore        30
358: iconst_4
359: newarray       double
361: dup
362: iconst_0
363: dconst_0
364: dastore
365: dup
366: iconst_1
367: ldc2_w        #17
370: dastore
371: dup
372: iconst_2
373: ldc2_w        #73
376: dastore
377: dup
378: iconst_3
379: ldc2_w        #17
382: dastore
383: astore        32
385: new           #75
388: dup
389: aload         32
391: invokespecial #76
394: astore        33
396: aload         33
398: ldc2_w        #33
401: invokevirtual #77
404: astore        34
406: aload         33
408: invokevirtual #80
411: astore        35
413: iconst_4
414: newarray       double
416: dup
417: iconst_0
418: dconst_0
419: dastore
420: dup
421: iconst_1
422: ldc2_w        #17
425: dastore
426: dup
427: iconst_2
428: ldc2_w        #73
431: dastore
432: dup
433: iconst_3
434: ldc2_w        #17
437: dastore
438: astore        36
440: new           #75
443: dup
444: aload         36
446: invokespecial #76
449: astore        37
451: aload         37
453: ldc2_w        #33
456: invokevirtual #77
459: astore        38
461: aload         37
463: ldc2_w        #122
466: invokevirtual #77
469: astore        39
471: new           #75
474: dup
475: aload         35
477: aload         37
479: invokespecial #124
482: astore        40
484: iconst_4
485: newarray       double
487: dup
488: iconst_0
489: dconst_0
490: dastore
491: dup
492: iconst_1
493: ldc2_w        #17
496: dastore
497: dup
498: iconst_2
499: ldc2_w        #73
502: dastore
503: dup
504: iconst_3
505: ldc2_w        #17
508: dastore
509: astore        41
511: new           #75
514: dup
515: aload         41
517: invokespecial #76
520: astore        42
522: aload         41
524: invokestatic  #125
527: astore        43
529: aload         43
531: invokestatic  #126
534: dstore        44
536: new           #75
539: dup
540: aload         35
542: aload         43
544: invokespecial #127
547: astore        46
549: aload         27
551: aload         35
553: invokevirtual #173
556: dstore        47
558: new           #75
561: dup
562: aload         16
564: aload         27
566: invokespecial #124
569: astore        49
571: aload         14
573: aload         27
575: invokevirtual #169
578: dstore        50
580: aload         14
582: ldc2_w        #297
585: invokevirtual #82
588: astore        52
590: aload         7
592: aload         14
594: invokestatic  #128
597: ldc           #129
599: invokestatic  #21
602: goto          607
605: astore        53
607: new           #24
610: dup
611: invokespecial #25
614: ldc           #26
616: invokevirtual #27
619: iload_3
620: invokevirtual #49
623: ldc           #29
625: invokevirtual #27
628: iconst_3
629: invokevirtual #49
632: ldc           #26
634: invokevirtual #27
637: invokevirtual #30
640: iload_3
641: iconst_3
642: if_icmpne     649
645: iconst_1
646: goto          650
649: iconst_0
650: invokestatic  #31
653: aload         4
655: invokestatic  #23
658: aload         4
660: invokestatic  #46
663: ldc           #50
665: invokestatic  #48
668: aload         5
670: invokestatic  #23
673: aload         8
675: invokestatic  #23
678: new           #24
681: dup
682: invokespecial #25
685: ldc           #26
687: invokevirtual #27
690: iload         9
692: invokevirtual #49
695: ldc           #29
697: invokevirtual #27
700: bipush        97
702: invokevirtual #49
705: ldc           #26
707: invokevirtual #27
710: invokevirtual #30
713: iload         9
715: bipush        97
717: if_icmpne     724
720: iconst_1
721: goto          725
724: iconst_0
725: invokestatic  #31
728: new           #24
731: dup
732: invokespecial #25
735: ldc           #26
737: invokevirtual #27
740: iload         10
742: invokevirtual #49
745: ldc           #29
747: invokevirtual #27
750: bipush        97
752: invokevirtual #49
755: ldc           #26
757: invokevirtual #27
760: invokevirtual #30
763: iload         10
765: bipush        97
767: if_icmpne     774
770: iconst_1
771: goto          775
774: iconst_0
775: invokestatic  #31
778: aload         11
780: invokestatic  #23
783: new           #24
786: dup
787: invokespecial #25
790: ldc           #26
792: invokevirtual #27
795: iload         12
797: invokevirtual #49
800: ldc           #29
802: invokevirtual #27
805: iconst_3
806: invokevirtual #49
809: ldc           #26
811: invokevirtual #27
814: invokevirtual #30
817: iload         12
819: iconst_3
820: if_icmpne     827
823: iconst_1
824: goto          828
827: iconst_0
828: invokestatic  #31
831: aload         13
833: invokestatic  #23
836: aload         13
838: invokestatic  #46
841: ldc           #95
843: invokestatic  #48
846: aload         15
848: invokestatic  #23
851: aload         15
853: invokestatic  #46
856: ldc           #95
858: invokestatic  #48
861: new           #24
864: dup
865: invokespecial #25
868: ldc           #26
870: invokevirtual #27
873: aload         17
875: invokevirtual #27
878: ldc           #96
880: invokevirtual #27
883: invokevirtual #30
886: aload         17
888: ldc           #97
890: invokestatic  #98
893: aload         18
895: invokestatic  #23
898: aload         20
900: invokestatic  #23
903: aload         20
905: invokestatic  #46
908: ldc           #95
910: invokestatic  #48
913: aload         22
915: invokestatic  #23
918: aload         23
920: invokestatic  #23
923: aload         24
925: invokestatic  #23
928: aload         24
930: invokestatic  #46
933: ldc           #95
935: invokestatic  #48
938: new           #24
941: dup
942: invokespecial #25
945: ldc           #26
947: invokevirtual #27
950: aload         26
952: invokevirtual #27
955: ldc           #96
957: invokevirtual #27
960: invokevirtual #30
963: aload         26
965: ldc           #97
967: invokestatic  #98
970: aload         27
972: invokestatic  #23
975: new           #24
978: dup
979: invokespecial #25
982: ldc           #26
984: invokevirtual #27
987: iload         28
989: invokevirtual #28
992: ldc           #29
994: invokevirtual #27
997: iconst_0
998: invokevirtual #28
1001: ldc           #26
1003: invokevirtual #27
1006: invokevirtual #30
1009: iload         28
1011: ifne          1018
1014: iconst_1
1015: goto          1019
1018: iconst_0
1019: invokestatic  #31
1022: aload         29
1024: invokestatic  #23
1027: dload         30
1029: invokestatic  #99
1032: invokestatic  #100
1035: aload         32
1037: invokestatic  #23
1040: aload         32
1042: invokestatic  #46
1045: ldc           #95
1047: invokestatic  #48
1050: aload         34
1052: invokestatic  #23
1055: aload         35
1057: invokestatic  #23
1060: aload         36
1062: invokestatic  #23
1065: aload         36
1067: invokestatic  #46
1070: ldc           #95
1072: invokestatic  #48
1075: aload         38
1077: invokestatic  #23
1080: aload         39
1082: invokestatic  #23
1085: aload         41
1087: invokestatic  #23
1090: aload         41
1092: invokestatic  #46
1095: ldc           #95
1097: invokestatic  #48
1100: aload         43
1102: invokestatic  #23
1105: dload         44
1107: invokestatic  #99
1110: invokestatic  #100
1113: dload         47
1115: invokestatic  #99
1118: invokestatic  #100
1121: dload         50
1123: invokestatic  #99
1126: invokestatic  #100
1129: aload         52
1131: invokestatic  #23
1134: return
Exception table:
from    to  target type
590   602   605   Class org/apache/commons/math/exception/MathIllegalArgumentException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test58
Start line: 3803
End line: 3888
Method source code: 
    public void test58() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test58");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector5.mapAdd(0.0d);
        double double9 = arrayRealVector5.getLInfNorm();
        double[] doubleArray14 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray14);
        org.apache.commons.math.linear.RealVector realVector17 = arrayRealVector15.mapSubtract((double) 100L);
        int int18 = arrayRealVector15.getDimension();
        arrayRealVector15.set(1.5395564933646284d);
        double[] doubleArray25 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray25);
        java.lang.String str27 = arrayRealVector26.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = arrayRealVector26.copy();
        arrayRealVector26.set(4.61512051684126d);
        double double31 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        double[] doubleArray36 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray36);
        arrayRealVector37.unitize();
        double[] doubleArray43 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector44 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray43);
        java.lang.String str45 = arrayRealVector44.toString();
        org.apache.commons.math.linear.RealVector realVector46 = arrayRealVector37.add((org.apache.commons.math.linear.RealVector) arrayRealVector44);
        arrayRealVector37.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship51 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship52 = relationship51.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship51);
        double[] doubleArray58 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector59 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray58);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector59.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = arrayRealVector59.copy();
        double[] doubleArray69 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector70 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray69);
        java.lang.String str71 = arrayRealVector70.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector72 = arrayRealVector70.copy();
        boolean boolean73 = arrayRealVector72.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector74 = arrayRealVector62.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector72);
        double double75 = arrayRealVector72.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint77 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector37, Double.NaN, relationship51, (org.apache.commons.math.linear.RealVector) arrayRealVector72, (double) 52);
        double double79 = arrayRealVector37.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector81 = arrayRealVector37.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector82 = arrayRealVector26.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector37);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector83 = arrayRealVector15.append(arrayRealVector26);
        org.apache.commons.math.linear.RealVector realVector84 = arrayRealVector5.append((org.apache.commons.math.linear.RealVector) arrayRealVector15);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{0; 10; (NaN); 10}" + "'", str27, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector28);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + (-18.46048206736504d) + "'", double31 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{0; 10; (NaN); 10}" + "'", str45, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector46);
        org.junit.Assert.assertTrue("'" + relationship51 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship51.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship52 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship52.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(arrayRealVector62);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{0; 10; (NaN); 10}" + "'", str71, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(arrayRealVector74);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(realVector81);
        org.junit.Assert.assertNotNull(realVector82);
        org.junit.Assert.assertNotNull(arrayRealVector83);
        org.junit.Assert.assertNotNull(realVector84);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #336
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: dconst_0
67: invokevirtual #337
70: astore        4
72: aload_2
73: invokevirtual #290
76: dstore        5
78: iconst_4
79: newarray       double
81: dup
82: iconst_0
83: dconst_0
84: dastore
85: dup
86: iconst_1
87: ldc2_w        #17
90: dastore
91: dup
92: iconst_2
93: ldc2_w        #73
96: dastore
97: dup
98: iconst_3
99: ldc2_w        #17
102: dastore
103: astore        7
105: new           #75
108: dup
109: aload         7
111: invokespecial #76
114: astore        8
116: aload         8
118: ldc2_w        #33
121: invokevirtual #77
124: astore        9
126: aload         8
128: invokevirtual #168
131: istore        10
133: aload         8
135: ldc2_w        #261
138: invokevirtual #135
141: iconst_4
142: newarray       double
144: dup
145: iconst_0
146: dconst_0
147: dastore
148: dup
149: iconst_1
150: ldc2_w        #17
153: dastore
154: dup
155: iconst_2
156: ldc2_w        #73
159: dastore
160: dup
161: iconst_3
162: ldc2_w        #17
165: dastore
166: astore        11
168: new           #75
171: dup
172: aload         11
174: invokespecial #76
177: astore        12
179: aload         12
181: invokevirtual #79
184: astore        13
186: aload         12
188: invokevirtual #80
191: astore        14
193: aload         12
195: ldc2_w        #213
198: invokevirtual #135
201: aload         12
203: invokestatic  #126
206: dstore        15
208: iconst_4
209: newarray       double
211: dup
212: iconst_0
213: dconst_0
214: dastore
215: dup
216: iconst_1
217: ldc2_w        #17
220: dastore
221: dup
222: iconst_2
223: ldc2_w        #73
226: dastore
227: dup
228: iconst_3
229: ldc2_w        #17
232: dastore
233: astore        17
235: new           #75
238: dup
239: aload         17
241: invokespecial #76
244: astore        18
246: aload         18
248: invokevirtual #215
251: iconst_4
252: newarray       double
254: dup
255: iconst_0
256: dconst_0
257: dastore
258: dup
259: iconst_1
260: ldc2_w        #17
263: dastore
264: dup
265: iconst_2
266: ldc2_w        #73
269: dastore
270: dup
271: iconst_3
272: ldc2_w        #17
275: dastore
276: astore        19
278: new           #75
281: dup
282: aload         19
284: invokespecial #76
287: astore        20
289: aload         20
291: invokevirtual #79
294: astore        21
296: aload         18
298: aload         20
300: invokevirtual #164
303: astore        22
305: aload         18
307: iconst_3
308: dconst_1
309: invokevirtual #178
312: getstatic     #86
315: astore        23
317: aload         23
319: invokevirtual #87
322: astore        24
324: aload         23
326: invokestatic  #216
329: iconst_4
330: newarray       double
332: dup
333: iconst_0
334: dconst_0
335: dastore
336: dup
337: iconst_1
338: ldc2_w        #17
341: dastore
342: dup
343: iconst_2
344: ldc2_w        #73
347: dastore
348: dup
349: iconst_3
350: ldc2_w        #17
353: dastore
354: astore        25
356: new           #75
359: dup
360: aload         25
362: invokespecial #76
365: astore        26
367: aload         26
369: ldc2_w        #33
372: invokevirtual #77
375: astore        27
377: aload         26
379: invokevirtual #80
382: astore        28
384: iconst_4
385: newarray       double
387: dup
388: iconst_0
389: dconst_0
390: dastore
391: dup
392: iconst_1
393: ldc2_w        #17
396: dastore
397: dup
398: iconst_2
399: ldc2_w        #73
402: dastore
403: dup
404: iconst_3
405: ldc2_w        #17
408: dastore
409: astore        29
411: new           #75
414: dup
415: aload         29
417: invokespecial #76
420: astore        30
422: aload         30
424: invokevirtual #79
427: astore        31
429: aload         30
431: invokevirtual #80
434: astore        32
436: aload         32
438: invokevirtual #161
441: istore        33
443: aload         28
445: ldc2_w        #33
448: ldc2_w        #17
451: aload         32
453: invokevirtual #170
456: astore        34
458: aload         32
460: invokevirtual #171
463: dstore        35
465: new           #12
468: dup
469: aload         18
471: ldc2_w        #73
474: aload         23
476: aload         32
478: ldc2_w        #41
481: invokespecial #217
484: astore        37
486: aload         18
488: iconst_1
489: invokevirtual #218
492: dstore        38
494: aload         18
496: ldc2_w        #219
499: invokevirtual #77
502: astore        40
504: aload         12
506: aload         18
508: invokevirtual #221
511: astore        41
513: aload         8
515: aload         12
517: invokevirtual #222
520: astore        42
522: aload_2
523: aload         8
525: invokevirtual #182
528: astore        43
530: aload_1
531: invokestatic  #23
534: aload_1
535: invokestatic  #46
538: ldc           #95
540: invokestatic  #48
543: new           #24
546: dup
547: invokespecial #25
550: ldc           #26
552: invokevirtual #27
555: aload_3
556: invokevirtual #27
559: ldc           #96
561: invokevirtual #27
564: invokevirtual #30
567: aload_3
568: ldc           #97
570: invokestatic  #98
573: aload         4
575: invokestatic  #23
578: dload         5
580: invokestatic  #99
583: invokestatic  #100
586: aload         7
588: invokestatic  #23
591: aload         7
593: invokestatic  #46
596: ldc           #95
598: invokestatic  #48
601: aload         9
603: invokestatic  #23
606: new           #24
609: dup
610: invokespecial #25
613: ldc           #26
615: invokevirtual #27
618: iload         10
620: invokevirtual #49
623: ldc           #29
625: invokevirtual #27
628: iconst_4
629: invokevirtual #49
632: ldc           #26
634: invokevirtual #27
637: invokevirtual #30
640: iload         10
642: iconst_4
643: if_icmpne     650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #31
654: aload         11
656: invokestatic  #23
659: aload         11
661: invokestatic  #46
664: ldc           #95
666: invokestatic  #48
669: new           #24
672: dup
673: invokespecial #25
676: ldc           #26
678: invokevirtual #27
681: aload         13
683: invokevirtual #27
686: ldc           #96
688: invokevirtual #27
691: invokevirtual #30
694: aload         13
696: ldc           #97
698: invokestatic  #98
701: aload         14
703: invokestatic  #23
706: new           #24
709: dup
710: invokespecial #25
713: ldc           #26
715: invokevirtual #27
718: dload         15
720: invokevirtual #69
723: ldc           #29
725: invokevirtual #27
728: ldc2_w        #223
731: invokevirtual #69
734: ldc           #26
736: invokevirtual #27
739: invokevirtual #30
742: dload         15
744: ldc2_w        #223
747: dcmpl
748: ifne          755
751: iconst_1
752: goto          756
755: iconst_0
756: invokestatic  #31
759: aload         17
761: invokestatic  #23
764: aload         17
766: invokestatic  #46
769: ldc           #95
771: invokestatic  #48
774: aload         19
776: invokestatic  #23
779: aload         19
781: invokestatic  #46
784: ldc           #95
786: invokestatic  #48
789: new           #24
792: dup
793: invokespecial #25
796: ldc           #26
798: invokevirtual #27
801: aload         21
803: invokevirtual #27
806: ldc           #96
808: invokevirtual #27
811: invokevirtual #30
814: aload         21
816: ldc           #97
818: invokestatic  #98
821: aload         22
823: invokestatic  #23
826: new           #24
829: dup
830: invokespecial #25
833: ldc           #26
835: invokevirtual #27
838: aload         23
840: invokevirtual #55
843: ldc           #29
845: invokevirtual #27
848: getstatic     #86
851: invokevirtual #55
854: ldc           #26
856: invokevirtual #27
859: invokevirtual #30
862: aload         23
864: getstatic     #86
867: invokevirtual #101
870: invokestatic  #31
873: new           #24
876: dup
877: invokespecial #25
880: ldc           #26
882: invokevirtual #27
885: aload         24
887: invokevirtual #55
890: ldc           #29
892: invokevirtual #27
895: getstatic     #86
898: invokevirtual #55
901: ldc           #26
903: invokevirtual #27
906: invokevirtual #30
909: aload         24
911: getstatic     #86
914: invokevirtual #101
917: invokestatic  #31
920: aload         25
922: invokestatic  #23
925: aload         25
927: invokestatic  #46
930: ldc           #95
932: invokestatic  #48
935: aload         27
937: invokestatic  #23
940: aload         28
942: invokestatic  #23
945: aload         29
947: invokestatic  #23
950: aload         29
952: invokestatic  #46
955: ldc           #95
957: invokestatic  #48
960: new           #24
963: dup
964: invokespecial #25
967: ldc           #26
969: invokevirtual #27
972: aload         31
974: invokevirtual #27
977: ldc           #96
979: invokevirtual #27
982: invokevirtual #30
985: aload         31
987: ldc           #97
989: invokestatic  #98
992: aload         32
994: invokestatic  #23
997: new           #24
1000: dup
1001: invokespecial #25
1004: ldc           #26
1006: invokevirtual #27
1009: iload         33
1011: invokevirtual #28
1014: ldc           #29
1016: invokevirtual #27
1019: iconst_0
1020: invokevirtual #28
1023: ldc           #26
1025: invokevirtual #27
1028: invokevirtual #30
1031: iload         33
1033: ifne          1040
1036: iconst_1
1037: goto          1041
1040: iconst_0
1041: invokestatic  #31
1044: aload         34
1046: invokestatic  #23
1049: dload         35
1051: invokestatic  #99
1054: invokestatic  #100
1057: dload         38
1059: invokestatic  #99
1062: invokestatic  #100
1065: aload         40
1067: invokestatic  #23
1070: aload         41
1072: invokestatic  #23
1075: aload         42
1077: invokestatic  #23
1080: aload         43
1082: invokestatic  #23
1085: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test59
Start line: 3891
End line: 3946
Method source code: 
    public void test59() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test59");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        arrayRealVector5.unitize();
        double[] doubleArray11 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector12 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray11);
        java.lang.String str13 = arrayRealVector12.toString();
        org.apache.commons.math.linear.RealVector realVector14 = arrayRealVector5.add((org.apache.commons.math.linear.RealVector) arrayRealVector12);
        arrayRealVector5.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship19 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship20 = relationship19.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship19);
        double[] doubleArray26 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector27 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray26);
        org.apache.commons.math.linear.RealVector realVector29 = arrayRealVector27.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = arrayRealVector27.copy();
        double[] doubleArray37 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray37);
        java.lang.String str39 = arrayRealVector38.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector40 = arrayRealVector38.copy();
        boolean boolean41 = arrayRealVector40.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector42 = arrayRealVector30.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector40);
        double double43 = arrayRealVector40.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint45 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector5, Double.NaN, relationship19, (org.apache.commons.math.linear.RealVector) arrayRealVector40, (double) 52);
        double double47 = arrayRealVector5.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector49 = arrayRealVector5.mapSubtract(3.1416d);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector50 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        arrayRealVector5.set((double) 5.704428E30f);
        double double53 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.apache.commons.math.linear.RealVector realVector55 = arrayRealVector5.mapDivideToSelf(1.4916681462400413E-154d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{0; 10; (NaN); 10}" + "'", str13, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertTrue("'" + relationship19 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship19.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship20 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship20.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector29);
        org.junit.Assert.assertNotNull(arrayRealVector30);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{0; 10; (NaN); 10}" + "'", str39, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(arrayRealVector42);
        org.junit.Assert.assertTrue(Double.isNaN(double43));
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(realVector49);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-2.281771080410813E31d) + "'", double53 == (-2.281771080410813E31d));
        org.junit.Assert.assertNotNull(realVector55);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #338
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #215
64: iconst_4
65: newarray       double
67: dup
68: iconst_0
69: dconst_0
70: dastore
71: dup
72: iconst_1
73: ldc2_w        #17
76: dastore
77: dup
78: iconst_2
79: ldc2_w        #73
82: dastore
83: dup
84: iconst_3
85: ldc2_w        #17
88: dastore
89: astore_3
90: new           #75
93: dup
94: aload_3
95: invokespecial #76
98: astore        4
100: aload         4
102: invokevirtual #79
105: astore        5
107: aload_2
108: aload         4
110: invokevirtual #164
113: astore        6
115: aload_2
116: iconst_3
117: dconst_1
118: invokevirtual #178
121: getstatic     #86
124: astore        7
126: aload         7
128: invokevirtual #87
131: astore        8
133: aload         7
135: invokestatic  #216
138: iconst_4
139: newarray       double
141: dup
142: iconst_0
143: dconst_0
144: dastore
145: dup
146: iconst_1
147: ldc2_w        #17
150: dastore
151: dup
152: iconst_2
153: ldc2_w        #73
156: dastore
157: dup
158: iconst_3
159: ldc2_w        #17
162: dastore
163: astore        9
165: new           #75
168: dup
169: aload         9
171: invokespecial #76
174: astore        10
176: aload         10
178: ldc2_w        #33
181: invokevirtual #77
184: astore        11
186: aload         10
188: invokevirtual #80
191: astore        12
193: iconst_4
194: newarray       double
196: dup
197: iconst_0
198: dconst_0
199: dastore
200: dup
201: iconst_1
202: ldc2_w        #17
205: dastore
206: dup
207: iconst_2
208: ldc2_w        #73
211: dastore
212: dup
213: iconst_3
214: ldc2_w        #17
217: dastore
218: astore        13
220: new           #75
223: dup
224: aload         13
226: invokespecial #76
229: astore        14
231: aload         14
233: invokevirtual #79
236: astore        15
238: aload         14
240: invokevirtual #80
243: astore        16
245: aload         16
247: invokevirtual #161
250: istore        17
252: aload         12
254: ldc2_w        #33
257: ldc2_w        #17
260: aload         16
262: invokevirtual #170
265: astore        18
267: aload         16
269: invokevirtual #171
272: dstore        19
274: new           #12
277: dup
278: aload_2
279: ldc2_w        #73
282: aload         7
284: aload         16
286: ldc2_w        #41
289: invokespecial #217
292: astore        21
294: aload_2
295: iconst_1
296: invokevirtual #218
299: dstore        22
301: aload_2
302: ldc2_w        #219
305: invokevirtual #77
308: astore        24
310: new           #75
313: dup
314: aload_2
315: invokespecial #78
318: astore        25
320: aload_2
321: ldc2_w        #339
324: invokevirtual #135
327: aload_2
328: invokestatic  #126
331: dstore        26
333: aload_2
334: ldc2_w        #341
337: invokevirtual #84
340: astore        28
342: aload_1
343: invokestatic  #23
346: aload_1
347: invokestatic  #46
350: ldc           #95
352: invokestatic  #48
355: aload_3
356: invokestatic  #23
359: aload_3
360: invokestatic  #46
363: ldc           #95
365: invokestatic  #48
368: new           #24
371: dup
372: invokespecial #25
375: ldc           #26
377: invokevirtual #27
380: aload         5
382: invokevirtual #27
385: ldc           #96
387: invokevirtual #27
390: invokevirtual #30
393: aload         5
395: ldc           #97
397: invokestatic  #98
400: aload         6
402: invokestatic  #23
405: new           #24
408: dup
409: invokespecial #25
412: ldc           #26
414: invokevirtual #27
417: aload         7
419: invokevirtual #55
422: ldc           #29
424: invokevirtual #27
427: getstatic     #86
430: invokevirtual #55
433: ldc           #26
435: invokevirtual #27
438: invokevirtual #30
441: aload         7
443: getstatic     #86
446: invokevirtual #101
449: invokestatic  #31
452: new           #24
455: dup
456: invokespecial #25
459: ldc           #26
461: invokevirtual #27
464: aload         8
466: invokevirtual #55
469: ldc           #29
471: invokevirtual #27
474: getstatic     #86
477: invokevirtual #55
480: ldc           #26
482: invokevirtual #27
485: invokevirtual #30
488: aload         8
490: getstatic     #86
493: invokevirtual #101
496: invokestatic  #31
499: aload         9
501: invokestatic  #23
504: aload         9
506: invokestatic  #46
509: ldc           #95
511: invokestatic  #48
514: aload         11
516: invokestatic  #23
519: aload         12
521: invokestatic  #23
524: aload         13
526: invokestatic  #23
529: aload         13
531: invokestatic  #46
534: ldc           #95
536: invokestatic  #48
539: new           #24
542: dup
543: invokespecial #25
546: ldc           #26
548: invokevirtual #27
551: aload         15
553: invokevirtual #27
556: ldc           #96
558: invokevirtual #27
561: invokevirtual #30
564: aload         15
566: ldc           #97
568: invokestatic  #98
571: aload         16
573: invokestatic  #23
576: new           #24
579: dup
580: invokespecial #25
583: ldc           #26
585: invokevirtual #27
588: iload         17
590: invokevirtual #28
593: ldc           #29
595: invokevirtual #27
598: iconst_0
599: invokevirtual #28
602: ldc           #26
604: invokevirtual #27
607: invokevirtual #30
610: iload         17
612: ifne          619
615: iconst_1
616: goto          620
619: iconst_0
620: invokestatic  #31
623: aload         18
625: invokestatic  #23
628: dload         19
630: invokestatic  #99
633: invokestatic  #100
636: dload         22
638: invokestatic  #99
641: invokestatic  #100
644: aload         24
646: invokestatic  #23
649: new           #24
652: dup
653: invokespecial #25
656: ldc           #26
658: invokevirtual #27
661: dload         26
663: invokevirtual #69
666: ldc           #29
668: invokevirtual #27
671: ldc2_w        #343
674: invokevirtual #69
677: ldc           #26
679: invokevirtual #27
682: invokevirtual #30
685: dload         26
687: ldc2_w        #343
690: dcmpl
691: ifne          698
694: iconst_1
695: goto          699
698: iconst_0
699: invokestatic  #31
702: aload         28
704: invokestatic  #23
707: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test60
Start line: 3949
End line: 3979
Method source code: 
    public void test60() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test60");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        arrayRealVector7.unitize();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        java.lang.String str15 = arrayRealVector14.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = arrayRealVector14.copy();
        arrayRealVector14.set(4.61512051684126d);
        double double19 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        org.apache.commons.math.linear.RealVector realVector20 = arrayRealVector7.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector14);
        double[] doubleArray21 = arrayRealVector7.toArray();
        java.lang.Class<?> wildcardClass22 = doubleArray21.getClass();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{0; 10; (NaN); 10}" + "'", str15, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-18.46048206736504d) + "'", double19 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(realVector20);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #345
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: aload         4
73: invokevirtual #215
76: iconst_4
77: newarray       double
79: dup
80: iconst_0
81: dconst_0
82: dastore
83: dup
84: iconst_1
85: ldc2_w        #17
88: dastore
89: dup
90: iconst_2
91: ldc2_w        #73
94: dastore
95: dup
96: iconst_3
97: ldc2_w        #17
100: dastore
101: astore        5
103: new           #75
106: dup
107: aload         5
109: invokespecial #76
112: astore        6
114: aload         6
116: invokevirtual #79
119: astore        7
121: aload         6
123: invokevirtual #80
126: astore        8
128: aload         6
130: ldc2_w        #213
133: invokevirtual #135
136: aload         6
138: invokestatic  #126
141: dstore        9
143: aload         4
145: aload         6
147: invokevirtual #221
150: astore        11
152: aload         4
154: invokevirtual #300
157: astore        12
159: aload         12
161: invokevirtual #277
164: astore        13
166: aload_1
167: invokestatic  #23
170: aload_1
171: invokestatic  #46
174: ldc           #95
176: invokestatic  #48
179: new           #24
182: dup
183: invokespecial #25
186: ldc           #26
188: invokevirtual #27
191: aload_3
192: invokevirtual #27
195: ldc           #96
197: invokevirtual #27
200: invokevirtual #30
203: aload_3
204: ldc           #97
206: invokestatic  #98
209: aload         4
211: invokestatic  #23
214: aload         5
216: invokestatic  #23
219: aload         5
221: invokestatic  #46
224: ldc           #95
226: invokestatic  #48
229: new           #24
232: dup
233: invokespecial #25
236: ldc           #26
238: invokevirtual #27
241: aload         7
243: invokevirtual #27
246: ldc           #96
248: invokevirtual #27
251: invokevirtual #30
254: aload         7
256: ldc           #97
258: invokestatic  #98
261: aload         8
263: invokestatic  #23
266: new           #24
269: dup
270: invokespecial #25
273: ldc           #26
275: invokevirtual #27
278: dload         9
280: invokevirtual #69
283: ldc           #29
285: invokevirtual #27
288: ldc2_w        #223
291: invokevirtual #69
294: ldc           #26
296: invokevirtual #27
299: invokevirtual #30
302: dload         9
304: ldc2_w        #223
307: dcmpl
308: ifne          315
311: iconst_1
312: goto          316
315: iconst_0
316: invokestatic  #31
319: aload         11
321: invokestatic  #23
324: aload         12
326: invokestatic  #23
329: aload         12
331: invokestatic  #46
334: ldc_w         #303
337: invokestatic  #48
340: aload         13
342: invokestatic  #23
345: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test61
Start line: 3982
End line: 4017
Method source code: 
    public void test61() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test61");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        arrayRealVector8.set(1.0001523125762564d);
        java.lang.Object obj31 = null;
        boolean boolean32 = arrayRealVector8.equals(obj31);
        boolean boolean33 = arrayRealVector8.isInfinite();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #346
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #80
72: astore        4
74: iconst_4
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #17
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #73
92: dastore
93: dup
94: iconst_3
95: ldc2_w        #17
98: dastore
99: astore        5
101: new           #75
104: dup
105: aload         5
107: invokespecial #76
110: astore        6
112: aload         6
114: ldc2_w        #33
117: invokevirtual #77
120: astore        7
122: aload         6
124: ldc2_w        #122
127: invokevirtual #77
130: astore        8
132: new           #75
135: dup
136: aload         4
138: aload         6
140: invokespecial #124
143: astore        9
145: iconst_4
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #17
157: dastore
158: dup
159: iconst_2
160: ldc2_w        #73
163: dastore
164: dup
165: iconst_3
166: ldc2_w        #17
169: dastore
170: astore        10
172: new           #75
175: dup
176: aload         10
178: invokespecial #76
181: astore        11
183: aload         10
185: invokestatic  #125
188: astore        12
190: aload         12
192: invokestatic  #126
195: dstore        13
197: new           #75
200: dup
201: aload         4
203: aload         12
205: invokespecial #127
208: astore        15
210: aload         4
212: ldc2_w        #133
215: invokevirtual #135
218: aconst_null
219: astore        16
221: aload         4
223: aload         16
225: invokevirtual #294
228: istore        17
230: aload         4
232: invokevirtual #161
235: istore        18
237: aload_1
238: invokestatic  #23
241: aload_1
242: invokestatic  #46
245: ldc           #95
247: invokestatic  #48
250: aload_3
251: invokestatic  #23
254: aload         4
256: invokestatic  #23
259: aload         5
261: invokestatic  #23
264: aload         5
266: invokestatic  #46
269: ldc           #95
271: invokestatic  #48
274: aload         7
276: invokestatic  #23
279: aload         8
281: invokestatic  #23
284: aload         10
286: invokestatic  #23
289: aload         10
291: invokestatic  #46
294: ldc           #95
296: invokestatic  #48
299: aload         12
301: invokestatic  #23
304: dload         13
306: invokestatic  #99
309: invokestatic  #100
312: new           #24
315: dup
316: invokespecial #25
319: ldc           #26
321: invokevirtual #27
324: iload         17
326: invokevirtual #28
329: ldc           #29
331: invokevirtual #27
334: iconst_0
335: invokevirtual #28
338: ldc           #26
340: invokevirtual #27
343: invokevirtual #30
346: iload         17
348: ifne          355
351: iconst_1
352: goto          356
355: iconst_0
356: invokestatic  #31
359: new           #24
362: dup
363: invokespecial #25
366: ldc           #26
368: invokevirtual #27
371: iload         18
373: invokevirtual #28
376: ldc           #29
378: invokevirtual #27
381: iconst_0
382: invokevirtual #28
385: ldc           #26
387: invokevirtual #27
390: invokevirtual #30
393: iload         18
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #31
406: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test62
Start line: 4020
End line: 4070
Method source code: 
    public void test62() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test62");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        arrayRealVector5.set(4.61512051684126d);
        double double10 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        java.lang.String str17 = arrayRealVector16.toString();
        org.apache.commons.math.linear.RealVector realVector19 = arrayRealVector16.mapAdd(0.0d);
        double double20 = arrayRealVector16.getLInfNorm();
        double[] doubleArray25 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector26 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray25);
        java.lang.String str27 = arrayRealVector26.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = arrayRealVector26.copy();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector29 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector30 = arrayRealVector16.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        org.apache.commons.math.linear.RealMatrix realMatrix31 = arrayRealVector5.outerProduct((org.apache.commons.math.linear.RealVector) arrayRealVector26);
        int[] intArray35 = new int[] { (-1), 1251540697, 2147483647 };
        int[] intArray42 = new int[] { 1, 52, 32, 35, (short) 10, 1017118720 };
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.linear.RealMatrix realMatrix43 = realMatrix31.getSubMatrix(intArray35, intArray42);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.OutOfRangeException; message: row index (-1)");
        } catch (org.apache.commons.math.exception.OutOfRangeException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-18.46048206736504d) + "'", double10 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{0; 10; (NaN); 10}" + "'", str17, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector19);
        org.junit.Assert.assertTrue(Double.isNaN(double20));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{0; 10; (NaN); 10}" + "'", str27, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector28);
        org.junit.Assert.assertNotNull(arrayRealVector30);
        org.junit.Assert.assertNotNull(realMatrix31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 1251540697, 2147483647]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1, 52, 32, 35, 10, 1017118720]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #347
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: aload_2
72: ldc2_w        #213
75: invokevirtual #135
78: aload_2
79: invokestatic  #126
82: dstore        5
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #17
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #73
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #17
108: dastore
109: astore        7
111: new           #75
114: dup
115: aload         7
117: invokespecial #76
120: astore        8
122: aload         8
124: invokevirtual #79
127: astore        9
129: aload         8
131: dconst_0
132: invokevirtual #337
135: astore        10
137: aload         8
139: invokevirtual #290
142: dstore        11
144: iconst_4
145: newarray       double
147: dup
148: iconst_0
149: dconst_0
150: dastore
151: dup
152: iconst_1
153: ldc2_w        #17
156: dastore
157: dup
158: iconst_2
159: ldc2_w        #73
162: dastore
163: dup
164: iconst_3
165: ldc2_w        #17
168: dastore
169: astore        13
171: new           #75
174: dup
175: aload         13
177: invokespecial #76
180: astore        14
182: aload         14
184: invokevirtual #79
187: astore        15
189: aload         14
191: invokevirtual #80
194: astore        16
196: new           #75
199: dup
200: aload         14
202: invokespecial #78
205: astore        17
207: aload         8
209: aload         14
211: invokevirtual #221
214: astore        18
216: aload_2
217: aload         14
219: invokevirtual #348
222: astore        19
224: iconst_3
225: newarray       int
227: dup
228: iconst_0
229: iconst_m1
230: iastore
231: dup
232: iconst_1
233: ldc_w         #349
236: iastore
237: dup
238: iconst_2
239: ldc_w         #350
242: iastore
243: astore        20
245: bipush        6
247: newarray       int
249: dup
250: iconst_0
251: iconst_1
252: iastore
253: dup
254: iconst_1
255: bipush        52
257: iastore
258: dup
259: iconst_2
260: bipush        32
262: iastore
263: dup
264: iconst_3
265: bipush        35
267: iastore
268: dup
269: iconst_4
270: bipush        10
272: iastore
273: dup
274: iconst_5
275: ldc_w         #351
278: iastore
279: astore        21
281: aload         19
283: aload         20
285: aload         21
287: invokeinterface #352,  3
292: astore        22
294: ldc_w         #353
297: invokestatic  #21
300: goto          305
303: astore        22
305: aload_1
306: invokestatic  #23
309: aload_1
310: invokestatic  #46
313: ldc           #95
315: invokestatic  #48
318: new           #24
321: dup
322: invokespecial #25
325: ldc           #26
327: invokevirtual #27
330: aload_3
331: invokevirtual #27
334: ldc           #96
336: invokevirtual #27
339: invokevirtual #30
342: aload_3
343: ldc           #97
345: invokestatic  #98
348: aload         4
350: invokestatic  #23
353: new           #24
356: dup
357: invokespecial #25
360: ldc           #26
362: invokevirtual #27
365: dload         5
367: invokevirtual #69
370: ldc           #29
372: invokevirtual #27
375: ldc2_w        #223
378: invokevirtual #69
381: ldc           #26
383: invokevirtual #27
386: invokevirtual #30
389: dload         5
391: ldc2_w        #223
394: dcmpl
395: ifne          402
398: iconst_1
399: goto          403
402: iconst_0
403: invokestatic  #31
406: aload         7
408: invokestatic  #23
411: aload         7
413: invokestatic  #46
416: ldc           #95
418: invokestatic  #48
421: new           #24
424: dup
425: invokespecial #25
428: ldc           #26
430: invokevirtual #27
433: aload         9
435: invokevirtual #27
438: ldc           #96
440: invokevirtual #27
443: invokevirtual #30
446: aload         9
448: ldc           #97
450: invokestatic  #98
453: aload         10
455: invokestatic  #23
458: dload         11
460: invokestatic  #99
463: invokestatic  #100
466: aload         13
468: invokestatic  #23
471: aload         13
473: invokestatic  #46
476: ldc           #95
478: invokestatic  #48
481: new           #24
484: dup
485: invokespecial #25
488: ldc           #26
490: invokevirtual #27
493: aload         15
495: invokevirtual #27
498: ldc           #96
500: invokevirtual #27
503: invokevirtual #30
506: aload         15
508: ldc           #97
510: invokestatic  #98
513: aload         16
515: invokestatic  #23
518: aload         18
520: invokestatic  #23
523: aload         19
525: invokestatic  #23
528: aload         20
530: invokestatic  #23
533: aload         20
535: invokestatic  #354
538: ldc_w         #355
541: invokestatic  #48
544: aload         21
546: invokestatic  #23
549: aload         21
551: invokestatic  #354
554: ldc_w         #356
557: invokestatic  #48
560: return
Exception table:
from    to  target type
281   300   303   Class org/apache/commons/math/exception/OutOfRangeException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test63
Start line: 4073
End line: 4084
Method source code: 
    public void test63() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test63");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        double double8 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector7);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #357
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_3
69: invokestatic  #126
72: dstore        4
74: aload_1
75: invokestatic  #23
78: aload_1
79: invokestatic  #46
82: ldc           #95
84: invokestatic  #48
87: aload_3
88: invokestatic  #23
91: dload         4
93: invokestatic  #99
96: invokestatic  #100
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test64
Start line: 4087
End line: 4101
Method source code: 
    public void test64() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test64");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = new org.apache.commons.math.linear.ArrayRealVector((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double double9 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #358
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: new           #75
74: dup
75: aload_2
76: invokespecial #78
79: astore        5
81: aload         5
83: invokestatic  #126
86: dstore        6
88: aload_1
89: invokestatic  #23
92: aload_1
93: invokestatic  #46
96: ldc           #95
98: invokestatic  #48
101: new           #24
104: dup
105: invokespecial #25
108: ldc           #26
110: invokevirtual #27
113: aload_3
114: invokevirtual #27
117: ldc           #96
119: invokevirtual #27
122: invokevirtual #30
125: aload_3
126: ldc           #97
128: invokestatic  #98
131: aload         4
133: invokestatic  #23
136: dload         6
138: invokestatic  #99
141: invokestatic  #100
144: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test65
Start line: 4104
End line: 4143
Method source code: 
    public void test65() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test65");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        double[] doubleArray12 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector13 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray12);
        java.lang.String str14 = arrayRealVector13.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector15 = arrayRealVector13.copy();
        boolean boolean16 = arrayRealVector15.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector17 = arrayRealVector5.add((org.apache.commons.math.linear.RealVector) arrayRealVector15);
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = arrayRealVector23.copy();
        arrayRealVector23.set(4.61512051684126d);
        double double28 = arrayRealVector17.getLInfDistance((org.apache.commons.math.linear.RealVector) arrayRealVector23);
        arrayRealVector17.unitize();
        int int30 = arrayRealVector17.getDimension();
        double double31 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector17);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{0; 10; (NaN); 10}" + "'", str14, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(arrayRealVector17);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector25);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #359
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: iconst_4
72: newarray       double
74: dup
75: iconst_0
76: dconst_0
77: dastore
78: dup
79: iconst_1
80: ldc2_w        #17
83: dastore
84: dup
85: iconst_2
86: ldc2_w        #73
89: dastore
90: dup
91: iconst_3
92: ldc2_w        #17
95: dastore
96: astore        5
98: new           #75
101: dup
102: aload         5
104: invokespecial #76
107: astore        6
109: aload         6
111: invokevirtual #79
114: astore        7
116: aload         6
118: invokevirtual #80
121: astore        8
123: aload         8
125: invokevirtual #161
128: istore        9
130: aload_2
131: aload         8
133: invokevirtual #164
136: astore        10
138: iconst_4
139: newarray       double
141: dup
142: iconst_0
143: dconst_0
144: dastore
145: dup
146: iconst_1
147: ldc2_w        #17
150: dastore
151: dup
152: iconst_2
153: ldc2_w        #73
156: dastore
157: dup
158: iconst_3
159: ldc2_w        #17
162: dastore
163: astore        11
165: new           #75
168: dup
169: aload         11
171: invokespecial #76
174: astore        12
176: aload         12
178: invokevirtual #79
181: astore        13
183: aload         12
185: invokevirtual #80
188: astore        14
190: aload         12
192: ldc2_w        #213
195: invokevirtual #135
198: aload         10
200: aload         12
202: invokevirtual #169
205: dstore        15
207: aload         10
209: invokevirtual #215
212: aload         10
214: invokevirtual #168
217: istore        17
219: aload         10
221: invokestatic  #126
224: dstore        18
226: aload_1
227: invokestatic  #23
230: aload_1
231: invokestatic  #46
234: ldc           #95
236: invokestatic  #48
239: new           #24
242: dup
243: invokespecial #25
246: ldc           #26
248: invokevirtual #27
251: aload_3
252: invokevirtual #27
255: ldc           #96
257: invokevirtual #27
260: invokevirtual #30
263: aload_3
264: ldc           #97
266: invokestatic  #98
269: aload         4
271: invokestatic  #23
274: aload         5
276: invokestatic  #23
279: aload         5
281: invokestatic  #46
284: ldc           #95
286: invokestatic  #48
289: new           #24
292: dup
293: invokespecial #25
296: ldc           #26
298: invokevirtual #27
301: aload         7
303: invokevirtual #27
306: ldc           #96
308: invokevirtual #27
311: invokevirtual #30
314: aload         7
316: ldc           #97
318: invokestatic  #98
321: aload         8
323: invokestatic  #23
326: new           #24
329: dup
330: invokespecial #25
333: ldc           #26
335: invokevirtual #27
338: iload         9
340: invokevirtual #28
343: ldc           #29
345: invokevirtual #27
348: iconst_0
349: invokevirtual #28
352: ldc           #26
354: invokevirtual #27
357: invokevirtual #30
360: iload         9
362: ifne          369
365: iconst_1
366: goto          370
369: iconst_0
370: invokestatic  #31
373: aload         10
375: invokestatic  #23
378: aload         11
380: invokestatic  #23
383: aload         11
385: invokestatic  #46
388: ldc           #95
390: invokestatic  #48
393: new           #24
396: dup
397: invokespecial #25
400: ldc           #26
402: invokevirtual #27
405: aload         13
407: invokevirtual #27
410: ldc           #96
412: invokevirtual #27
415: invokevirtual #30
418: aload         13
420: ldc           #97
422: invokestatic  #98
425: aload         14
427: invokestatic  #23
430: dload         15
432: invokestatic  #99
435: invokestatic  #100
438: new           #24
441: dup
442: invokespecial #25
445: ldc           #26
447: invokevirtual #27
450: iload         17
452: invokevirtual #49
455: ldc           #29
457: invokevirtual #27
460: iconst_4
461: invokevirtual #49
464: ldc           #26
466: invokevirtual #27
469: invokevirtual #30
472: iload         17
474: iconst_4
475: if_icmpne     482
478: iconst_1
479: goto          483
482: iconst_0
483: invokestatic  #31
486: dload         18
488: invokestatic  #99
491: invokestatic  #100
494: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test66
Start line: 4146
End line: 4234
Method source code: 
    public void test66() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test66");
        org.apache.commons.math.optimization.linear.SimplexSolver simplexSolver0 = new org.apache.commons.math.optimization.linear.SimplexSolver();
        simplexSolver0.setMaxIterations((int) (byte) -100);
        org.apache.commons.math.exception.util.Localizable localizable3 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix6 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int7 = array2DRowRealMatrix6.getRowDimension();
        double[] doubleArray9 = array2DRowRealMatrix6.getColumn((int) (byte) 10);
        double[][] doubleArray10 = array2DRowRealMatrix6.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException11 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable3, (java.lang.Object[]) doubleArray10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix12 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray10);
        org.apache.commons.math.linear.RealVector realVector14 = blockRealMatrix12.getColumnVector((int) (short) 10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix15 = blockRealMatrix12.copy();
        org.apache.commons.math.exception.util.Localizable localizable16 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix19 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int20 = array2DRowRealMatrix19.getRowDimension();
        double[] doubleArray22 = array2DRowRealMatrix19.getColumn((int) (byte) 10);
        double[][] doubleArray23 = array2DRowRealMatrix19.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException24 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable16, (java.lang.Object[]) doubleArray23);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix25 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray23);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix27 = blockRealMatrix25.scalarAdd((double) (byte) -1);
        org.apache.commons.math.linear.RealMatrix realMatrix28 = blockRealMatrix15.subtract((org.apache.commons.math.linear.RealMatrix) blockRealMatrix25);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix31 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int32 = array2DRowRealMatrix31.getRowDimension();
        double[] doubleArray34 = array2DRowRealMatrix31.getColumn((int) (byte) 10);
        org.apache.commons.math.linear.RealMatrix realMatrix36 = array2DRowRealMatrix31.getColumnMatrix(10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix37 = blockRealMatrix25.add((org.apache.commons.math.linear.RealMatrix) array2DRowRealMatrix31);
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix40 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        double[][] doubleArray41 = array2DRowRealMatrix40.getData();
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix42 = new org.apache.commons.math.linear.Array2DRowRealMatrix(doubleArray41);
        double double43 = array2DRowRealMatrix42.getFrobeniusNorm();
        org.apache.commons.math.linear.RealMatrix realMatrix45 = array2DRowRealMatrix42.scalarAdd((double) 1.2676506E32f);
        org.apache.commons.math.linear.RealMatrix realMatrix47 = realMatrix45.getColumnMatrix(32);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix48 = blockRealMatrix37.add(realMatrix45);
        org.apache.commons.math.exception.util.Localizable localizable49 = null;
        org.apache.commons.math.linear.Array2DRowRealMatrix array2DRowRealMatrix52 = new org.apache.commons.math.linear.Array2DRowRealMatrix(3, (int) 'a');
        int int53 = array2DRowRealMatrix52.getRowDimension();
        double[] doubleArray55 = array2DRowRealMatrix52.getColumn((int) (byte) 10);
        double[][] doubleArray56 = array2DRowRealMatrix52.getData();
        org.apache.commons.math.exception.MathIllegalArgumentException mathIllegalArgumentException57 = new org.apache.commons.math.exception.MathIllegalArgumentException(localizable49, (java.lang.Object[]) doubleArray56);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix58 = new org.apache.commons.math.linear.BlockRealMatrix(doubleArray56);
        org.apache.commons.math.linear.RealVector realVector60 = blockRealMatrix58.getColumnVector((int) (short) 10);
        org.apache.commons.math.linear.BlockRealMatrix blockRealMatrix61 = blockRealMatrix58.copy();
        double[] doubleArray63 = blockRealMatrix58.getRow((int) (short) 0);
        double[] doubleArray64 = blockRealMatrix37.operate(doubleArray63);
        org.apache.commons.math.optimization.linear.LinearObjectiveFunction linearObjectiveFunction66 = new org.apache.commons.math.optimization.linear.LinearObjectiveFunction(doubleArray63, (double) (short) 0);
        java.util.Collection<org.apache.commons.math.optimization.linear.LinearConstraint> linearConstraintCollection67 = null;
        org.apache.commons.math.optimization.GoalType goalType68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.optimization.RealPointValuePair realPointValuePair70 = simplexSolver0.optimize(linearObjectiveFunction66, linearConstraintCollection67, goalType68, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(realVector14);
        org.junit.Assert.assertNotNull(blockRealMatrix15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertNotNull(blockRealMatrix27);
        org.junit.Assert.assertNotNull(realMatrix28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(realMatrix36);
        org.junit.Assert.assertNotNull(blockRealMatrix37);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(realMatrix45);
        org.junit.Assert.assertNotNull(realMatrix47);
        org.junit.Assert.assertNotNull(blockRealMatrix48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(blockRealMatrix61);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #360
20: aastore
21: invokevirtual #7
24: pop
25: new           #62
28: dup
29: invokespecial #361
32: astore_1
33: aload_1
34: bipush        -100
36: invokevirtual #362
39: aconst_null
40: astore_2
41: new           #37
44: dup
45: iconst_3
46: bipush        97
48: invokespecial #38
51: astore_3
52: aload_3
53: invokevirtual #39
56: istore        4
58: aload_3
59: bipush        10
61: invokevirtual #40
64: astore        5
66: aload_3
67: invokevirtual #104
70: astore        6
72: new           #105
75: dup
76: aload_2
77: aload         6
79: checkcast     #106
82: invokespecial #107
85: astore        7
87: new           #108
90: dup
91: aload         6
93: invokespecial #109
96: astore        8
98: aload         8
100: bipush        10
102: invokevirtual #110
105: astore        9
107: aload         8
109: invokevirtual #111
112: astore        10
114: aconst_null
115: astore        11
117: new           #37
120: dup
121: iconst_3
122: bipush        97
124: invokespecial #38
127: astore        12
129: aload         12
131: invokevirtual #39
134: istore        13
136: aload         12
138: bipush        10
140: invokevirtual #40
143: astore        14
145: aload         12
147: invokevirtual #104
150: astore        15
152: new           #105
155: dup
156: aload         11
158: aload         15
160: checkcast     #106
163: invokespecial #107
166: astore        16
168: new           #108
171: dup
172: aload         15
174: invokespecial #109
177: astore        17
179: aload         17
181: ldc2_w        #9
184: invokevirtual #112
187: astore        18
189: aload         10
191: aload         17
193: invokevirtual #113
196: astore        19
198: new           #37
201: dup
202: iconst_3
203: bipush        97
205: invokespecial #38
208: astore        20
210: aload         20
212: invokevirtual #39
215: istore        21
217: aload         20
219: bipush        10
221: invokevirtual #40
224: astore        22
226: aload         20
228: bipush        10
230: invokevirtual #114
233: astore        23
235: aload         17
237: aload         20
239: invokevirtual #115
242: astore        24
244: new           #37
247: dup
248: iconst_3
249: bipush        97
251: invokespecial #38
254: astore        25
256: aload         25
258: invokevirtual #104
261: astore        26
263: new           #37
266: dup
267: aload         26
269: invokespecial #116
272: astore        27
274: aload         27
276: invokevirtual #117
279: dstore        28
281: aload         27
283: ldc2_w        #118
286: invokevirtual #120
289: astore        30
291: aload         30
293: bipush        32
295: invokeinterface #121,  2
300: astore        31
302: aload         24
304: aload         30
306: invokevirtual #115
309: astore        32
311: aconst_null
312: astore        33
314: new           #37
317: dup
318: iconst_3
319: bipush        97
321: invokespecial #38
324: astore        34
326: aload         34
328: invokevirtual #39
331: istore        35
333: aload         34
335: bipush        10
337: invokevirtual #40
340: astore        36
342: aload         34
344: invokevirtual #104
347: astore        37
349: new           #105
352: dup
353: aload         33
355: aload         37
357: checkcast     #106
360: invokespecial #107
363: astore        38
365: new           #108
368: dup
369: aload         37
371: invokespecial #109
374: astore        39
376: aload         39
378: bipush        10
380: invokevirtual #110
383: astore        40
385: aload         39
387: invokevirtual #111
390: astore        41
392: aload         39
394: iconst_0
395: invokevirtual #237
398: astore        42
400: aload         24
402: aload         42
404: invokevirtual #363
407: astore        43
409: new           #8
412: dup
413: aload         42
415: dconst_0
416: invokespecial #238
419: astore        44
421: aconst_null
422: astore        45
424: aconst_null
425: astore        46
427: aload_1
428: aload         44
430: aload         45
432: aload         46
434: iconst_0
435: invokevirtual #94
438: astore        47
440: ldc           #20
442: invokestatic  #21
445: goto          450
448: astore        47
450: new           #24
453: dup
454: invokespecial #25
457: ldc           #26
459: invokevirtual #27
462: iload         4
464: invokevirtual #49
467: ldc           #29
469: invokevirtual #27
472: iconst_3
473: invokevirtual #49
476: ldc           #26
478: invokevirtual #27
481: invokevirtual #30
484: iload         4
486: iconst_3
487: if_icmpne     494
490: iconst_1
491: goto          495
494: iconst_0
495: invokestatic  #31
498: aload         5
500: invokestatic  #23
503: aload         5
505: invokestatic  #46
508: ldc           #50
510: invokestatic  #48
513: aload         6
515: invokestatic  #23
518: aload         9
520: invokestatic  #23
523: aload         10
525: invokestatic  #23
528: new           #24
531: dup
532: invokespecial #25
535: ldc           #26
537: invokevirtual #27
540: iload         13
542: invokevirtual #49
545: ldc           #29
547: invokevirtual #27
550: iconst_3
551: invokevirtual #49
554: ldc           #26
556: invokevirtual #27
559: invokevirtual #30
562: iload         13
564: iconst_3
565: if_icmpne     572
568: iconst_1
569: goto          573
572: iconst_0
573: invokestatic  #31
576: aload         14
578: invokestatic  #23
581: aload         14
583: invokestatic  #46
586: ldc           #50
588: invokestatic  #48
591: aload         15
593: invokestatic  #23
596: aload         18
598: invokestatic  #23
601: aload         19
603: invokestatic  #23
606: new           #24
609: dup
610: invokespecial #25
613: ldc           #26
615: invokevirtual #27
618: iload         21
620: invokevirtual #49
623: ldc           #29
625: invokevirtual #27
628: iconst_3
629: invokevirtual #49
632: ldc           #26
634: invokevirtual #27
637: invokevirtual #30
640: iload         21
642: iconst_3
643: if_icmpne     650
646: iconst_1
647: goto          651
650: iconst_0
651: invokestatic  #31
654: aload         22
656: invokestatic  #23
659: aload         22
661: invokestatic  #46
664: ldc           #50
666: invokestatic  #48
669: aload         23
671: invokestatic  #23
674: aload         24
676: invokestatic  #23
679: aload         26
681: invokestatic  #23
684: new           #24
687: dup
688: invokespecial #25
691: ldc           #26
693: invokevirtual #27
696: dload         28
698: invokevirtual #69
701: ldc           #29
703: invokevirtual #27
706: dconst_0
707: invokevirtual #69
710: ldc           #26
712: invokevirtual #27
715: invokevirtual #30
718: dload         28
720: dconst_0
721: dcmpl
722: ifne          729
725: iconst_1
726: goto          730
729: iconst_0
730: invokestatic  #31
733: aload         30
735: invokestatic  #23
738: aload         31
740: invokestatic  #23
743: aload         32
745: invokestatic  #23
748: new           #24
751: dup
752: invokespecial #25
755: ldc           #26
757: invokevirtual #27
760: iload         35
762: invokevirtual #49
765: ldc           #29
767: invokevirtual #27
770: iconst_3
771: invokevirtual #49
774: ldc           #26
776: invokevirtual #27
779: invokevirtual #30
782: iload         35
784: iconst_3
785: if_icmpne     792
788: iconst_1
789: goto          793
792: iconst_0
793: invokestatic  #31
796: aload         36
798: invokestatic  #23
801: aload         36
803: invokestatic  #46
806: ldc           #50
808: invokestatic  #48
811: aload         37
813: invokestatic  #23
816: aload         40
818: invokestatic  #23
821: aload         41
823: invokestatic  #23
826: aload         42
828: invokestatic  #23
831: aload         42
833: invokestatic  #46
836: ldc           #102
838: invokestatic  #48
841: aload         43
843: invokestatic  #23
846: aload         43
848: invokestatic  #46
851: ldc           #50
853: invokestatic  #48
856: return
Exception table:
from    to  target type
427   445   448   Class java/lang/NullPointerException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test67
Start line: 4237
End line: 4305
Method source code: 
    public void test67() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test67");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        double[] doubleArray33 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector34 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray33);
        org.apache.commons.math.linear.RealVector realVector36 = arrayRealVector34.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector37 = arrayRealVector34.copy();
        double[] doubleArray42 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector43 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray42);
        org.apache.commons.math.linear.RealVector realVector45 = arrayRealVector43.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector47 = arrayRealVector43.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector48 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, arrayRealVector43);
        double[] doubleArray53 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector54 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray53);
        org.apache.commons.math.linear.RealVector realVector55 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray53);
        double double56 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector55);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector57 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector37, realVector55);
        arrayRealVector37.set(1.0001523125762564d);
        double[] doubleArray60 = arrayRealVector37.getDataRef();
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector8.append((org.apache.commons.math.linear.RealVector) arrayRealVector37);
        // The following exception was thrown during execution in test generation
        try {
            realVector61.addToEntry((-1074790400), (double) 3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1074790400");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector36);
        org.junit.Assert.assertNotNull(arrayRealVector37);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector45);
        org.junit.Assert.assertNotNull(realVector47);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector55);
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
        org.junit.Assert.assertNotNull(realVector61);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #364
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #80
72: astore        4
74: iconst_4
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #17
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #73
92: dastore
93: dup
94: iconst_3
95: ldc2_w        #17
98: dastore
99: astore        5
101: new           #75
104: dup
105: aload         5
107: invokespecial #76
110: astore        6
112: aload         6
114: ldc2_w        #33
117: invokevirtual #77
120: astore        7
122: aload         6
124: ldc2_w        #122
127: invokevirtual #77
130: astore        8
132: new           #75
135: dup
136: aload         4
138: aload         6
140: invokespecial #124
143: astore        9
145: iconst_4
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #17
157: dastore
158: dup
159: iconst_2
160: ldc2_w        #73
163: dastore
164: dup
165: iconst_3
166: ldc2_w        #17
169: dastore
170: astore        10
172: new           #75
175: dup
176: aload         10
178: invokespecial #76
181: astore        11
183: aload         10
185: invokestatic  #125
188: astore        12
190: aload         12
192: invokestatic  #126
195: dstore        13
197: new           #75
200: dup
201: aload         4
203: aload         12
205: invokespecial #127
208: astore        15
210: iconst_4
211: newarray       double
213: dup
214: iconst_0
215: dconst_0
216: dastore
217: dup
218: iconst_1
219: ldc2_w        #17
222: dastore
223: dup
224: iconst_2
225: ldc2_w        #73
228: dastore
229: dup
230: iconst_3
231: ldc2_w        #17
234: dastore
235: astore        16
237: new           #75
240: dup
241: aload         16
243: invokespecial #76
246: astore        17
248: aload         17
250: ldc2_w        #33
253: invokevirtual #77
256: astore        18
258: aload         17
260: invokevirtual #80
263: astore        19
265: iconst_4
266: newarray       double
268: dup
269: iconst_0
270: dconst_0
271: dastore
272: dup
273: iconst_1
274: ldc2_w        #17
277: dastore
278: dup
279: iconst_2
280: ldc2_w        #73
283: dastore
284: dup
285: iconst_3
286: ldc2_w        #17
289: dastore
290: astore        20
292: new           #75
295: dup
296: aload         20
298: invokespecial #76
301: astore        21
303: aload         21
305: ldc2_w        #33
308: invokevirtual #77
311: astore        22
313: aload         21
315: ldc2_w        #122
318: invokevirtual #77
321: astore        23
323: new           #75
326: dup
327: aload         19
329: aload         21
331: invokespecial #124
334: astore        24
336: iconst_4
337: newarray       double
339: dup
340: iconst_0
341: dconst_0
342: dastore
343: dup
344: iconst_1
345: ldc2_w        #17
348: dastore
349: dup
350: iconst_2
351: ldc2_w        #73
354: dastore
355: dup
356: iconst_3
357: ldc2_w        #17
360: dastore
361: astore        25
363: new           #75
366: dup
367: aload         25
369: invokespecial #76
372: astore        26
374: aload         25
376: invokestatic  #125
379: astore        27
381: aload         27
383: invokestatic  #126
386: dstore        28
388: new           #75
391: dup
392: aload         19
394: aload         27
396: invokespecial #127
399: astore        30
401: aload         19
403: ldc2_w        #133
406: invokevirtual #135
409: aload         19
411: invokevirtual #136
414: astore        31
416: aload         4
418: aload         19
420: invokevirtual #182
423: astore        32
425: aload         32
427: ldc           #63
429: ldc2_w        #43
432: invokevirtual #365
435: ldc_w         #366
438: invokestatic  #21
441: goto          446
444: astore        33
446: aload_1
447: invokestatic  #23
450: aload_1
451: invokestatic  #46
454: ldc           #95
456: invokestatic  #48
459: aload_3
460: invokestatic  #23
463: aload         4
465: invokestatic  #23
468: aload         5
470: invokestatic  #23
473: aload         5
475: invokestatic  #46
478: ldc           #95
480: invokestatic  #48
483: aload         7
485: invokestatic  #23
488: aload         8
490: invokestatic  #23
493: aload         10
495: invokestatic  #23
498: aload         10
500: invokestatic  #46
503: ldc           #95
505: invokestatic  #48
508: aload         12
510: invokestatic  #23
513: dload         13
515: invokestatic  #99
518: invokestatic  #100
521: aload         16
523: invokestatic  #23
526: aload         16
528: invokestatic  #46
531: ldc           #95
533: invokestatic  #48
536: aload         18
538: invokestatic  #23
541: aload         19
543: invokestatic  #23
546: aload         20
548: invokestatic  #23
551: aload         20
553: invokestatic  #46
556: ldc           #95
558: invokestatic  #48
561: aload         22
563: invokestatic  #23
566: aload         23
568: invokestatic  #23
571: aload         25
573: invokestatic  #23
576: aload         25
578: invokestatic  #46
581: ldc           #95
583: invokestatic  #48
586: aload         27
588: invokestatic  #23
591: dload         28
593: invokestatic  #99
596: invokestatic  #100
599: aload         31
601: invokestatic  #23
604: aload         31
606: invokestatic  #46
609: ldc           #140
611: invokestatic  #48
614: aload         32
616: invokestatic  #23
619: return
Exception table:
from    to  target type
425   441   444   Class java/lang/ArrayIndexOutOfBoundsException
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test68
Start line: 4308
End line: 4342
Method source code: 
    public void test68() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test68");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        org.apache.commons.math.linear.RealVector realVector7 = arrayRealVector5.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector8 = arrayRealVector5.copy();
        double[] doubleArray13 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector14 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray13);
        org.apache.commons.math.linear.RealVector realVector16 = arrayRealVector14.mapSubtract((double) 100L);
        org.apache.commons.math.linear.RealVector realVector18 = arrayRealVector14.mapSubtract((double) '#');
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector19 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, arrayRealVector14);
        double[] doubleArray24 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector25 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray24);
        org.apache.commons.math.linear.RealVector realVector26 = org.apache.commons.math.linear.MatrixUtils.createRealVector(doubleArray24);
        double double27 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum(realVector26);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector28 = new org.apache.commons.math.linear.ArrayRealVector(arrayRealVector8, realVector26);
        arrayRealVector8.set(1.0001523125762564d);
        double[] doubleArray31 = arrayRealVector8.getDataRef();
        org.apache.commons.math.optimization.RealPointValuePair realPointValuePair33 = new org.apache.commons.math.optimization.RealPointValuePair(doubleArray31, 0.0d);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector7);
        org.junit.Assert.assertNotNull(arrayRealVector8);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector16);
        org.junit.Assert.assertNotNull(realVector18);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector26);
        org.junit.Assert.assertTrue(Double.isNaN(double27));
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[1.0001523125762564, 1.0001523125762564, 1.0001523125762564, 1.0001523125762564]");
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #367
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: ldc2_w        #33
64: invokevirtual #77
67: astore_3
68: aload_2
69: invokevirtual #80
72: astore        4
74: iconst_4
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: ldc2_w        #17
86: dastore
87: dup
88: iconst_2
89: ldc2_w        #73
92: dastore
93: dup
94: iconst_3
95: ldc2_w        #17
98: dastore
99: astore        5
101: new           #75
104: dup
105: aload         5
107: invokespecial #76
110: astore        6
112: aload         6
114: ldc2_w        #33
117: invokevirtual #77
120: astore        7
122: aload         6
124: ldc2_w        #122
127: invokevirtual #77
130: astore        8
132: new           #75
135: dup
136: aload         4
138: aload         6
140: invokespecial #124
143: astore        9
145: iconst_4
146: newarray       double
148: dup
149: iconst_0
150: dconst_0
151: dastore
152: dup
153: iconst_1
154: ldc2_w        #17
157: dastore
158: dup
159: iconst_2
160: ldc2_w        #73
163: dastore
164: dup
165: iconst_3
166: ldc2_w        #17
169: dastore
170: astore        10
172: new           #75
175: dup
176: aload         10
178: invokespecial #76
181: astore        11
183: aload         10
185: invokestatic  #125
188: astore        12
190: aload         12
192: invokestatic  #126
195: dstore        13
197: new           #75
200: dup
201: aload         4
203: aload         12
205: invokespecial #127
208: astore        15
210: aload         4
212: ldc2_w        #133
215: invokevirtual #135
218: aload         4
220: invokevirtual #136
223: astore        16
225: new           #368
228: dup
229: aload         16
231: dconst_0
232: invokespecial #369
235: astore        17
237: aload_1
238: invokestatic  #23
241: aload_1
242: invokestatic  #46
245: ldc           #95
247: invokestatic  #48
250: aload_3
251: invokestatic  #23
254: aload         4
256: invokestatic  #23
259: aload         5
261: invokestatic  #23
264: aload         5
266: invokestatic  #46
269: ldc           #95
271: invokestatic  #48
274: aload         7
276: invokestatic  #23
279: aload         8
281: invokestatic  #23
284: aload         10
286: invokestatic  #23
289: aload         10
291: invokestatic  #46
294: ldc           #95
296: invokestatic  #48
299: aload         12
301: invokestatic  #23
304: dload         13
306: invokestatic  #99
309: invokestatic  #100
312: aload         16
314: invokestatic  #23
317: aload         16
319: invokestatic  #46
322: ldc           #140
324: invokestatic  #48
327: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test69
Start line: 4345
End line: 4411
Method source code: 
    public void test69() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test69");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector7 = arrayRealVector5.copy();
        arrayRealVector5.set(4.61512051684126d);
        double double10 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        double[] doubleArray15 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector16 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray15);
        arrayRealVector16.unitize();
        double[] doubleArray22 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector23 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray22);
        java.lang.String str24 = arrayRealVector23.toString();
        org.apache.commons.math.linear.RealVector realVector25 = arrayRealVector16.add((org.apache.commons.math.linear.RealVector) arrayRealVector23);
        arrayRealVector16.setEntry(3, (double) 1L);
        org.apache.commons.math.optimization.linear.Relationship relationship30 = org.apache.commons.math.optimization.linear.Relationship.EQ;
        org.apache.commons.math.optimization.linear.Relationship relationship31 = relationship30.oppositeRelationship();
        org.apache.commons.math.util.MathUtils.checkNotNull((java.lang.Object) relationship30);
        double[] doubleArray37 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector38 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray37);
        org.apache.commons.math.linear.RealVector realVector40 = arrayRealVector38.mapSubtract((double) 100L);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector41 = arrayRealVector38.copy();
        double[] doubleArray48 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector49 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray48);
        java.lang.String str50 = arrayRealVector49.toString();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector51 = arrayRealVector49.copy();
        boolean boolean52 = arrayRealVector51.isInfinite();
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector53 = arrayRealVector41.combine(100.0d, (double) (byte) 10, (org.apache.commons.math.linear.RealVector) arrayRealVector51);
        double double54 = arrayRealVector51.getL1Norm();
        org.apache.commons.math.optimization.linear.LinearConstraint linearConstraint56 = new org.apache.commons.math.optimization.linear.LinearConstraint((org.apache.commons.math.linear.RealVector) arrayRealVector16, Double.NaN, relationship30, (org.apache.commons.math.linear.RealVector) arrayRealVector51, (double) 52);
        double double58 = arrayRealVector16.getEntry((int) (byte) 1);
        org.apache.commons.math.linear.RealVector realVector60 = arrayRealVector16.mapSubtract(3.1416d);
        org.apache.commons.math.linear.RealVector realVector61 = arrayRealVector5.subtract((org.apache.commons.math.linear.RealVector) arrayRealVector16);
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector62 = arrayRealVector16.copy();
        org.apache.commons.math.linear.RealVector realVector63 = arrayRealVector16.unitVector();
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-18.46048206736504d) + "'", double10 == (-18.46048206736504d));
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{0; 10; (NaN); 10}" + "'", str24, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector25);
        org.junit.Assert.assertTrue("'" + relationship30 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship30.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertTrue("'" + relationship31 + "' != '" + org.apache.commons.math.optimization.linear.Relationship.EQ + "'", relationship31.equals(org.apache.commons.math.optimization.linear.Relationship.EQ));
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertNotNull(realVector40);
        org.junit.Assert.assertNotNull(arrayRealVector41);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{0; 10; (NaN); 10}" + "'", str50, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(arrayRealVector51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(arrayRealVector53);
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNotNull(realVector60);
        org.junit.Assert.assertNotNull(realVector61);
        org.junit.Assert.assertNotNull(arrayRealVector62);
        org.junit.Assert.assertNotNull(realVector63);
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #370
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: invokevirtual #80
69: astore        4
71: aload_2
72: ldc2_w        #213
75: invokevirtual #135
78: aload_2
79: invokestatic  #126
82: dstore        5
84: iconst_4
85: newarray       double
87: dup
88: iconst_0
89: dconst_0
90: dastore
91: dup
92: iconst_1
93: ldc2_w        #17
96: dastore
97: dup
98: iconst_2
99: ldc2_w        #73
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #17
108: dastore
109: astore        7
111: new           #75
114: dup
115: aload         7
117: invokespecial #76
120: astore        8
122: aload         8
124: invokevirtual #215
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #17
139: dastore
140: dup
141: iconst_2
142: ldc2_w        #73
145: dastore
146: dup
147: iconst_3
148: ldc2_w        #17
151: dastore
152: astore        9
154: new           #75
157: dup
158: aload         9
160: invokespecial #76
163: astore        10
165: aload         10
167: invokevirtual #79
170: astore        11
172: aload         8
174: aload         10
176: invokevirtual #164
179: astore        12
181: aload         8
183: iconst_3
184: dconst_1
185: invokevirtual #178
188: getstatic     #86
191: astore        13
193: aload         13
195: invokevirtual #87
198: astore        14
200: aload         13
202: invokestatic  #216
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: ldc2_w        #17
217: dastore
218: dup
219: iconst_2
220: ldc2_w        #73
223: dastore
224: dup
225: iconst_3
226: ldc2_w        #17
229: dastore
230: astore        15
232: new           #75
235: dup
236: aload         15
238: invokespecial #76
241: astore        16
243: aload         16
245: ldc2_w        #33
248: invokevirtual #77
251: astore        17
253: aload         16
255: invokevirtual #80
258: astore        18
260: iconst_4
261: newarray       double
263: dup
264: iconst_0
265: dconst_0
266: dastore
267: dup
268: iconst_1
269: ldc2_w        #17
272: dastore
273: dup
274: iconst_2
275: ldc2_w        #73
278: dastore
279: dup
280: iconst_3
281: ldc2_w        #17
284: dastore
285: astore        19
287: new           #75
290: dup
291: aload         19
293: invokespecial #76
296: astore        20
298: aload         20
300: invokevirtual #79
303: astore        21
305: aload         20
307: invokevirtual #80
310: astore        22
312: aload         22
314: invokevirtual #161
317: istore        23
319: aload         18
321: ldc2_w        #33
324: ldc2_w        #17
327: aload         22
329: invokevirtual #170
332: astore        24
334: aload         22
336: invokevirtual #171
339: dstore        25
341: new           #12
344: dup
345: aload         8
347: ldc2_w        #73
350: aload         13
352: aload         22
354: ldc2_w        #41
357: invokespecial #217
360: astore        27
362: aload         8
364: iconst_1
365: invokevirtual #218
368: dstore        28
370: aload         8
372: ldc2_w        #219
375: invokevirtual #77
378: astore        30
380: aload_2
381: aload         8
383: invokevirtual #221
386: astore        31
388: aload         8
390: invokevirtual #80
393: astore        32
395: aload         8
397: invokevirtual #180
400: astore        33
402: aload_1
403: invokestatic  #23
406: aload_1
407: invokestatic  #46
410: ldc           #95
412: invokestatic  #48
415: new           #24
418: dup
419: invokespecial #25
422: ldc           #26
424: invokevirtual #27
427: aload_3
428: invokevirtual #27
431: ldc           #96
433: invokevirtual #27
436: invokevirtual #30
439: aload_3
440: ldc           #97
442: invokestatic  #98
445: aload         4
447: invokestatic  #23
450: new           #24
453: dup
454: invokespecial #25
457: ldc           #26
459: invokevirtual #27
462: dload         5
464: invokevirtual #69
467: ldc           #29
469: invokevirtual #27
472: ldc2_w        #223
475: invokevirtual #69
478: ldc           #26
480: invokevirtual #27
483: invokevirtual #30
486: dload         5
488: ldc2_w        #223
491: dcmpl
492: ifne          499
495: iconst_1
496: goto          500
499: iconst_0
500: invokestatic  #31
503: aload         7
505: invokestatic  #23
508: aload         7
510: invokestatic  #46
513: ldc           #95
515: invokestatic  #48
518: aload         9
520: invokestatic  #23
523: aload         9
525: invokestatic  #46
528: ldc           #95
530: invokestatic  #48
533: new           #24
536: dup
537: invokespecial #25
540: ldc           #26
542: invokevirtual #27
545: aload         11
547: invokevirtual #27
550: ldc           #96
552: invokevirtual #27
555: invokevirtual #30
558: aload         11
560: ldc           #97
562: invokestatic  #98
565: aload         12
567: invokestatic  #23
570: new           #24
573: dup
574: invokespecial #25
577: ldc           #26
579: invokevirtual #27
582: aload         13
584: invokevirtual #55
587: ldc           #29
589: invokevirtual #27
592: getstatic     #86
595: invokevirtual #55
598: ldc           #26
600: invokevirtual #27
603: invokevirtual #30
606: aload         13
608: getstatic     #86
611: invokevirtual #101
614: invokestatic  #31
617: new           #24
620: dup
621: invokespecial #25
624: ldc           #26
626: invokevirtual #27
629: aload         14
631: invokevirtual #55
634: ldc           #29
636: invokevirtual #27
639: getstatic     #86
642: invokevirtual #55
645: ldc           #26
647: invokevirtual #27
650: invokevirtual #30
653: aload         14
655: getstatic     #86
658: invokevirtual #101
661: invokestatic  #31
664: aload         15
666: invokestatic  #23
669: aload         15
671: invokestatic  #46
674: ldc           #95
676: invokestatic  #48
679: aload         17
681: invokestatic  #23
684: aload         18
686: invokestatic  #23
689: aload         19
691: invokestatic  #23
694: aload         19
696: invokestatic  #46
699: ldc           #95
701: invokestatic  #48
704: new           #24
707: dup
708: invokespecial #25
711: ldc           #26
713: invokevirtual #27
716: aload         21
718: invokevirtual #27
721: ldc           #96
723: invokevirtual #27
726: invokevirtual #30
729: aload         21
731: ldc           #97
733: invokestatic  #98
736: aload         22
738: invokestatic  #23
741: new           #24
744: dup
745: invokespecial #25
748: ldc           #26
750: invokevirtual #27
753: iload         23
755: invokevirtual #28
758: ldc           #29
760: invokevirtual #27
763: iconst_0
764: invokevirtual #28
767: ldc           #26
769: invokevirtual #27
772: invokevirtual #30
775: iload         23
777: ifne          784
780: iconst_1
781: goto          785
784: iconst_0
785: invokestatic  #31
788: aload         24
790: invokestatic  #23
793: dload         25
795: invokestatic  #99
798: invokestatic  #100
801: dload         28
803: invokestatic  #99
806: invokestatic  #100
809: aload         30
811: invokestatic  #23
814: aload         31
816: invokestatic  #23
819: aload         32
821: invokestatic  #23
824: aload         33
826: invokestatic  #23
829: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/RegressionTest0.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/RegressionTest0.class
Class name: RegressionTest0
Method name: test70
Start line: 4414
End line: 4431
Method source code: 
    public void test70() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test70");
        double[] doubleArray4 = new double[] { 0.0d, 10.0f, Double.NaN, (short) 10 };
        org.apache.commons.math.linear.ArrayRealVector arrayRealVector5 = new org.apache.commons.math.linear.ArrayRealVector(doubleArray4);
        java.lang.String str6 = arrayRealVector5.toString();
        org.apache.commons.math.linear.RealVector realVector8 = arrayRealVector5.mapAdd(0.0d);
        double double9 = arrayRealVector5.getLInfNorm();
        org.apache.commons.math.linear.RealVector realVector11 = arrayRealVector5.mapAddToSelf(5.298292365610485d);
        double double12 = org.apache.commons.math.optimization.linear.SimplexTableau.getInvertedCoefficientSum((org.apache.commons.math.linear.RealVector) arrayRealVector5);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[0.0, 10.0, NaN, 10.0]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{0; 10; (NaN); 10}" + "'", str6, "{0; 10; (NaN); 10}");
        org.junit.Assert.assertNotNull(realVector8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertNotNull(realVector11);
        org.junit.Assert.assertTrue(Double.isNaN(double12));
    }
Method byte code: 
0: getstatic     #2
3: ifeq          25
6: getstatic     #3
9: ldc           #4
11: iconst_1
12: anewarray     #5
15: dup
16: iconst_0
17: ldc_w         #371
20: aastore
21: invokevirtual #7
24: pop
25: iconst_4
26: newarray       double
28: dup
29: iconst_0
30: dconst_0
31: dastore
32: dup
33: iconst_1
34: ldc2_w        #17
37: dastore
38: dup
39: iconst_2
40: ldc2_w        #73
43: dastore
44: dup
45: iconst_3
46: ldc2_w        #17
49: dastore
50: astore_1
51: new           #75
54: dup
55: aload_1
56: invokespecial #76
59: astore_2
60: aload_2
61: invokevirtual #79
64: astore_3
65: aload_2
66: dconst_0
67: invokevirtual #337
70: astore        4
72: aload_2
73: invokevirtual #290
76: dstore        5
78: aload_2
79: ldc2_w        #372
82: invokevirtual #82
85: astore        7
87: aload_2
88: invokestatic  #126
91: dstore        8
93: aload_1
94: invokestatic  #23
97: aload_1
98: invokestatic  #46
101: ldc           #95
103: invokestatic  #48
106: new           #24
109: dup
110: invokespecial #25
113: ldc           #26
115: invokevirtual #27
118: aload_3
119: invokevirtual #27
122: ldc           #96
124: invokevirtual #27
127: invokevirtual #30
130: aload_3
131: ldc           #97
133: invokestatic  #98
136: aload         4
138: invokestatic  #23
141: dload         5
143: invokestatic  #99
146: invokestatic  #100
149: aload         7
151: invokestatic  #23
154: dload         8
156: invokestatic  #99
159: invokestatic  #100
162: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testInitialization
Start line: 30
End line: 43
Method source code: 
    public void testInitialization() {
        LinearObjectiveFunction f = createFunction();
        Collection<LinearConstraint> constraints = createConstraints();
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        double[][] expectedInitialTableau = {
                                             {-1, 0,  -1,  -1,  2, 0, 0, 0, -4},
                                             { 0, 1, -15, -10, 25, 0, 0, 0,  0},
                                             { 0, 0,   1,   0, -1, 1, 0, 0,  2},
                                             { 0, 0,   0,   1, -1, 0, 1, 0,  3},
                                             { 0, 0,   1,   1, -2, 0, 0, 1,  4}
        };
        assertMatrixEquals(expectedInitialTableau, tableau.getData());
    }
Method byte code: 
0: aload_0
1: invokespecial #2
4: astore_1
5: aload_0
6: invokespecial #3
9: astore_2
10: new           #4
13: dup
14: aload_1
15: aload_2
16: getstatic     #5
19: iconst_0
20: ldc2_w        #6
23: invokespecial #8
26: astore_3
27: iconst_5
28: anewarray     #9
31: dup
32: iconst_0
33: bipush        9
35: newarray       double
37: dup
38: iconst_0
39: ldc2_w        #10
42: dastore
43: dup
44: iconst_1
45: dconst_0
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #10
52: dastore
53: dup
54: iconst_3
55: ldc2_w        #10
58: dastore
59: dup
60: iconst_4
61: ldc2_w        #12
64: dastore
65: dup
66: iconst_5
67: dconst_0
68: dastore
69: dup
70: bipush        6
72: dconst_0
73: dastore
74: dup
75: bipush        7
77: dconst_0
78: dastore
79: dup
80: bipush        8
82: ldc2_w        #14
85: dastore
86: aastore
87: dup
88: iconst_1
89: bipush        9
91: newarray       double
93: dup
94: iconst_0
95: dconst_0
96: dastore
97: dup
98: iconst_1
99: dconst_1
100: dastore
101: dup
102: iconst_2
103: ldc2_w        #16
106: dastore
107: dup
108: iconst_3
109: ldc2_w        #18
112: dastore
113: dup
114: iconst_4
115: ldc2_w        #20
118: dastore
119: dup
120: iconst_5
121: dconst_0
122: dastore
123: dup
124: bipush        6
126: dconst_0
127: dastore
128: dup
129: bipush        7
131: dconst_0
132: dastore
133: dup
134: bipush        8
136: dconst_0
137: dastore
138: aastore
139: dup
140: iconst_2
141: bipush        9
143: newarray       double
145: dup
146: iconst_0
147: dconst_0
148: dastore
149: dup
150: iconst_1
151: dconst_0
152: dastore
153: dup
154: iconst_2
155: dconst_1
156: dastore
157: dup
158: iconst_3
159: dconst_0
160: dastore
161: dup
162: iconst_4
163: ldc2_w        #10
166: dastore
167: dup
168: iconst_5
169: dconst_1
170: dastore
171: dup
172: bipush        6
174: dconst_0
175: dastore
176: dup
177: bipush        7
179: dconst_0
180: dastore
181: dup
182: bipush        8
184: ldc2_w        #12
187: dastore
188: aastore
189: dup
190: iconst_3
191: bipush        9
193: newarray       double
195: dup
196: iconst_0
197: dconst_0
198: dastore
199: dup
200: iconst_1
201: dconst_0
202: dastore
203: dup
204: iconst_2
205: dconst_0
206: dastore
207: dup
208: iconst_3
209: dconst_1
210: dastore
211: dup
212: iconst_4
213: ldc2_w        #10
216: dastore
217: dup
218: iconst_5
219: dconst_0
220: dastore
221: dup
222: bipush        6
224: dconst_1
225: dastore
226: dup
227: bipush        7
229: dconst_0
230: dastore
231: dup
232: bipush        8
234: ldc2_w        #22
237: dastore
238: aastore
239: dup
240: iconst_4
241: bipush        9
243: newarray       double
245: dup
246: iconst_0
247: dconst_0
248: dastore
249: dup
250: iconst_1
251: dconst_0
252: dastore
253: dup
254: iconst_2
255: dconst_1
256: dastore
257: dup
258: iconst_3
259: dconst_1
260: dastore
261: dup
262: iconst_4
263: ldc2_w        #24
266: dastore
267: dup
268: iconst_5
269: dconst_0
270: dastore
271: dup
272: bipush        6
274: dconst_0
275: dastore
276: dup
277: bipush        7
279: dconst_1
280: dastore
281: dup
282: bipush        8
284: ldc2_w        #26
287: dastore
288: aastore
289: astore        4
291: aload_0
292: aload         4
294: aload_3
295: invokevirtual #28
298: invokespecial #29
301: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testDropPhase1Objective
Start line: 46
End line: 59
Method source code: 
    public void testDropPhase1Objective() {
        LinearObjectiveFunction f = createFunction();
        Collection<LinearConstraint> constraints = createConstraints();
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        double[][] expectedTableau = {
                                      { 1, -15, -10, 0, 0, 0, 0},
                                      { 0,   1,   0, 1, 0, 0, 2},
                                      { 0,   0,   1, 0, 1, 0, 3},
                                      { 0,   1,   1, 0, 0, 1, 4}
        };
        tableau.dropPhase1Objective();
        assertMatrixEquals(expectedTableau, tableau.getData());
    }
Method byte code: 
0: aload_0
1: invokespecial #2
4: astore_1
5: aload_0
6: invokespecial #3
9: astore_2
10: new           #4
13: dup
14: aload_1
15: aload_2
16: getstatic     #5
19: iconst_0
20: ldc2_w        #6
23: invokespecial #8
26: astore_3
27: iconst_4
28: anewarray     #9
31: dup
32: iconst_0
33: bipush        7
35: newarray       double
37: dup
38: iconst_0
39: dconst_1
40: dastore
41: dup
42: iconst_1
43: ldc2_w        #16
46: dastore
47: dup
48: iconst_2
49: ldc2_w        #18
52: dastore
53: dup
54: iconst_3
55: dconst_0
56: dastore
57: dup
58: iconst_4
59: dconst_0
60: dastore
61: dup
62: iconst_5
63: dconst_0
64: dastore
65: dup
66: bipush        6
68: dconst_0
69: dastore
70: aastore
71: dup
72: iconst_1
73: bipush        7
75: newarray       double
77: dup
78: iconst_0
79: dconst_0
80: dastore
81: dup
82: iconst_1
83: dconst_1
84: dastore
85: dup
86: iconst_2
87: dconst_0
88: dastore
89: dup
90: iconst_3
91: dconst_1
92: dastore
93: dup
94: iconst_4
95: dconst_0
96: dastore
97: dup
98: iconst_5
99: dconst_0
100: dastore
101: dup
102: bipush        6
104: ldc2_w        #12
107: dastore
108: aastore
109: dup
110: iconst_2
111: bipush        7
113: newarray       double
115: dup
116: iconst_0
117: dconst_0
118: dastore
119: dup
120: iconst_1
121: dconst_0
122: dastore
123: dup
124: iconst_2
125: dconst_1
126: dastore
127: dup
128: iconst_3
129: dconst_0
130: dastore
131: dup
132: iconst_4
133: dconst_1
134: dastore
135: dup
136: iconst_5
137: dconst_0
138: dastore
139: dup
140: bipush        6
142: ldc2_w        #22
145: dastore
146: aastore
147: dup
148: iconst_3
149: bipush        7
151: newarray       double
153: dup
154: iconst_0
155: dconst_0
156: dastore
157: dup
158: iconst_1
159: dconst_1
160: dastore
161: dup
162: iconst_2
163: dconst_1
164: dastore
165: dup
166: iconst_3
167: dconst_0
168: dastore
169: dup
170: iconst_4
171: dconst_0
172: dastore
173: dup
174: iconst_5
175: dconst_1
176: dastore
177: dup
178: bipush        6
180: ldc2_w        #26
183: dastore
184: aastore
185: astore        4
187: aload_3
188: invokevirtual #30
191: aload_0
192: aload         4
194: aload_3
195: invokevirtual #28
198: invokespecial #29
201: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testTableauWithNoArtificialVars
Start line: 62
End line: 77
Method source code: 
    public void testTableauWithNoArtificialVars() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {15, 10}, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] {0, 1}, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] {1, 1}, Relationship.LEQ, 4));
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        double[][] initialTableau = {
                                     {1, -15, -10, 25, 0, 0, 0, 0},
                                     {0,   1,   0, -1, 1, 0, 0, 2},
                                     {0,   0,   1, -1, 0, 1, 0, 3},
                                     {0,   1,   1, -2, 0, 0, 1, 4}
        };
        assertMatrixEquals(initialTableau, tableau.getData());
    }
Method byte code: 
0: new           #31
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #32
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #34
18: dastore
19: dconst_0
20: invokespecial #36
23: astore_1
24: new           #37
27: dup
28: invokespecial #38
31: astore_2
32: aload_2
33: new           #39
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #40
51: ldc2_w        #12
54: invokespecial #41
57: invokeinterface #42,  2
62: pop
63: aload_2
64: new           #39
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_1
78: dastore
79: getstatic     #40
82: ldc2_w        #22
85: invokespecial #41
88: invokeinterface #42,  2
93: pop
94: aload_2
95: new           #39
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #40
113: ldc2_w        #26
116: invokespecial #41
119: invokeinterface #42,  2
124: pop
125: new           #4
128: dup
129: aload_1
130: aload_2
131: getstatic     #5
134: iconst_0
135: ldc2_w        #6
138: invokespecial #8
141: astore_3
142: iconst_4
143: anewarray     #9
146: dup
147: iconst_0
148: bipush        8
150: newarray       double
152: dup
153: iconst_0
154: dconst_1
155: dastore
156: dup
157: iconst_1
158: ldc2_w        #16
161: dastore
162: dup
163: iconst_2
164: ldc2_w        #18
167: dastore
168: dup
169: iconst_3
170: ldc2_w        #20
173: dastore
174: dup
175: iconst_4
176: dconst_0
177: dastore
178: dup
179: iconst_5
180: dconst_0
181: dastore
182: dup
183: bipush        6
185: dconst_0
186: dastore
187: dup
188: bipush        7
190: dconst_0
191: dastore
192: aastore
193: dup
194: iconst_1
195: bipush        8
197: newarray       double
199: dup
200: iconst_0
201: dconst_0
202: dastore
203: dup
204: iconst_1
205: dconst_1
206: dastore
207: dup
208: iconst_2
209: dconst_0
210: dastore
211: dup
212: iconst_3
213: ldc2_w        #10
216: dastore
217: dup
218: iconst_4
219: dconst_1
220: dastore
221: dup
222: iconst_5
223: dconst_0
224: dastore
225: dup
226: bipush        6
228: dconst_0
229: dastore
230: dup
231: bipush        7
233: ldc2_w        #12
236: dastore
237: aastore
238: dup
239: iconst_2
240: bipush        8
242: newarray       double
244: dup
245: iconst_0
246: dconst_0
247: dastore
248: dup
249: iconst_1
250: dconst_0
251: dastore
252: dup
253: iconst_2
254: dconst_1
255: dastore
256: dup
257: iconst_3
258: ldc2_w        #10
261: dastore
262: dup
263: iconst_4
264: dconst_0
265: dastore
266: dup
267: iconst_5
268: dconst_1
269: dastore
270: dup
271: bipush        6
273: dconst_0
274: dastore
275: dup
276: bipush        7
278: ldc2_w        #22
281: dastore
282: aastore
283: dup
284: iconst_3
285: bipush        8
287: newarray       double
289: dup
290: iconst_0
291: dconst_0
292: dastore
293: dup
294: iconst_1
295: dconst_1
296: dastore
297: dup
298: iconst_2
299: dconst_1
300: dastore
301: dup
302: iconst_3
303: ldc2_w        #24
306: dastore
307: dup
308: iconst_4
309: dconst_0
310: dastore
311: dup
312: iconst_5
313: dconst_0
314: dastore
315: dup
316: bipush        6
318: dconst_1
319: dastore
320: dup
321: bipush        7
323: ldc2_w        #26
326: dastore
327: aastore
328: astore        4
330: aload_0
331: aload         4
333: aload_3
334: invokevirtual #28
337: invokespecial #29
340: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableauTest.class
Class name: SimplexTableauTest
Method name: testSerial
Start line: 80
End line: 86
Method source code: 
    public void testSerial() {
        LinearObjectiveFunction f = createFunction();
        Collection<LinearConstraint> constraints = createConstraints();
        SimplexTableau tableau =
            new SimplexTableau(f, constraints, GoalType.MAXIMIZE, false, 1.0e-6);
        Assert.assertEquals(tableau, TestUtils.serializeAndRecover(tableau));
    }
Method byte code: 
0: aload_0
1: invokespecial #2
4: astore_1
5: aload_0
6: invokespecial #3
9: astore_2
10: new           #4
13: dup
14: aload_1
15: aload_2
16: getstatic     #5
19: iconst_0
20: ldc2_w        #6
23: invokespecial #8
26: astore_3
27: aload_3
28: aload_3
29: invokestatic  #43
32: invokestatic  #44
35: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath713NegativeVariable
Start line: 32
End line: 43
Method source code: 
    public void testMath713NegativeVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 1.0}, 0.0d);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 0}, Relationship.EQ, 1));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);

        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], 0.0d, epsilon) >= 0);
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[1], 0.0d, epsilon) >= 0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: dconst_1
14: dastore
15: dconst_0
16: invokespecial #3
19: astore_1
20: new           #4
23: dup
24: invokespecial #5
27: astore_2
28: aload_2
29: new           #6
32: dup
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: dconst_1
39: dastore
40: dup
41: iconst_1
42: dconst_0
43: dastore
44: getstatic     #7
47: dconst_1
48: invokespecial #8
51: invokevirtual #9
54: pop
55: ldc2_w        #10
58: dstore_3
59: new           #12
62: dup
63: invokespecial #13
66: astore        5
68: aload         5
70: aload_1
71: aload_2
72: getstatic     #14
75: iconst_1
76: invokevirtual #15
79: astore        6
81: aload         6
83: invokevirtual #16
86: iconst_0
87: daload
88: dconst_0
89: dload_3
90: invokestatic  #17
93: iflt          100
96: iconst_1
97: goto          101
100: iconst_0
101: invokestatic  #18
104: aload         6
106: invokevirtual #16
109: iconst_1
110: daload
111: dconst_0
112: dload_3
113: invokestatic  #17
116: iflt          123
119: iconst_1
120: goto          124
123: iconst_0
124: invokestatic  #18
127: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434NegativeVariable
Start line: 46
End line: 60
Method source code: 
    public void testMath434NegativeVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {0.0, 0.0, 1.0}, 0.0d);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1, 1, 0}, Relationship.EQ, 5));
        constraints.add(new LinearConstraint(new double[] {0, 0, 1}, Relationship.GEQ, -10));

        double epsilon = 1e-6;
        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);

        Assert.assertEquals(5.0, solution.getPoint()[0] + solution.getPoint()[1], epsilon);
        Assert.assertEquals(-10.0, solution.getPoint()[2], epsilon);
        Assert.assertEquals(-10.0, solution.getValue(), epsilon);

    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: dconst_0
10: dastore
11: dup
12: iconst_1
13: dconst_0
14: dastore
15: dup
16: iconst_2
17: dconst_1
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_3
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_1
47: dastore
48: dup
49: iconst_2
50: dconst_0
51: dastore
52: getstatic     #7
55: ldc2_w        #19
58: invokespecial #8
61: invokevirtual #9
64: pop
65: aload_2
66: new           #6
69: dup
70: iconst_3
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: dconst_0
80: dastore
81: dup
82: iconst_2
83: dconst_1
84: dastore
85: getstatic     #21
88: ldc2_w        #22
91: invokespecial #8
94: invokevirtual #9
97: pop
98: ldc2_w        #10
101: dstore_3
102: new           #12
105: dup
106: invokespecial #13
109: astore        5
111: aload         5
113: aload_1
114: aload_2
115: getstatic     #14
118: iconst_0
119: invokevirtual #15
122: astore        6
124: ldc2_w        #19
127: aload         6
129: invokevirtual #16
132: iconst_0
133: daload
134: aload         6
136: invokevirtual #16
139: iconst_1
140: daload
141: dadd
142: dload_3
143: invokestatic  #24
146: ldc2_w        #22
149: aload         6
151: invokevirtual #16
154: iconst_2
155: daload
156: dload_3
157: invokestatic  #24
160: ldc2_w        #22
163: aload         6
165: invokevirtual #25
168: dload_3
169: invokestatic  #24
172: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434UnfeasibleSolution
Start line: 63
End line: 74
Method source code: 
    public void testMath434UnfeasibleSolution() {
        double epsilon = 1e-6;

        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0, 0.0}, 0.0);
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {epsilon/2, 0.5}, Relationship.EQ, 0));
        constraints.add(new LinearConstraint(new double[] {1e-3, 0.1}, Relationship.EQ, 10));

        SimplexSolver solver = new SimplexSolver();
        // allowing only non-negative values, no feasible solution shall be found
        solver.optimize(f, constraints, GoalType.MINIMIZE, true);
    }
Method byte code: 
0: ldc2_w        #10
3: dstore_1
4: new           #2
7: dup
8: iconst_2
9: newarray       double
11: dup
12: iconst_0
13: dconst_1
14: dastore
15: dup
16: iconst_1
17: dconst_0
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_3
24: new           #4
27: dup
28: invokespecial #5
31: astore        4
33: aload         4
35: new           #6
38: dup
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: dload_1
45: ldc2_w        #26
48: ddiv
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #28
55: dastore
56: getstatic     #7
59: dconst_0
60: invokespecial #8
63: invokevirtual #9
66: pop
67: aload         4
69: new           #6
72: dup
73: iconst_2
74: newarray       double
76: dup
77: iconst_0
78: ldc2_w        #30
81: dastore
82: dup
83: iconst_1
84: ldc2_w        #32
87: dastore
88: getstatic     #7
91: ldc2_w        #34
94: invokespecial #8
97: invokevirtual #9
100: pop
101: new           #12
104: dup
105: invokespecial #13
108: astore        5
110: aload         5
112: aload_3
113: aload         4
115: getstatic     #14
118: iconst_1
119: invokevirtual #15
122: pop
123: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434PivotRowSelection
Start line: 77
End line: 90
Method source code: 
    public void testMath434PivotRowSelection() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {1.0}, 0.0);

        double epsilon = 1e-6;
        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {200}, Relationship.GEQ, 1));
        constraints.add(new LinearConstraint(new double[] {100}, Relationship.GEQ, 0.499900001));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);
        
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0] * 200.d, 1.d, epsilon) >= 0);
        Assert.assertEquals(0.0050, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dconst_0
12: invokespecial #3
15: astore_1
16: ldc2_w        #10
19: dstore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore        4
29: aload         4
31: new           #6
34: dup
35: iconst_1
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #36
43: dastore
44: getstatic     #21
47: dconst_1
48: invokespecial #8
51: invokevirtual #9
54: pop
55: aload         4
57: new           #6
60: dup
61: iconst_1
62: newarray       double
64: dup
65: iconst_0
66: ldc2_w        #38
69: dastore
70: getstatic     #21
73: ldc2_w        #40
76: invokespecial #8
79: invokevirtual #9
82: pop
83: new           #12
86: dup
87: invokespecial #13
90: astore        5
92: aload         5
94: aload_1
95: aload         4
97: getstatic     #14
100: iconst_0
101: invokevirtual #15
104: astore        6
106: aload         6
108: invokevirtual #16
111: iconst_0
112: daload
113: ldc2_w        #36
116: dmul
117: dconst_1
118: dload_2
119: invokestatic  #17
122: iflt          129
125: iconst_1
126: goto          130
129: iconst_0
130: invokestatic  #18
133: ldc2_w        #42
136: aload         6
138: invokevirtual #25
141: dload_2
142: invokestatic  #24
145: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath434PivotRowSelection2
Start line: 93
End line: 115
Method source code: 
    public void testMath434PivotRowSelection2() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] {0.0d, 1.0d, 1.0d, 0.0d, 0.0d, 0.0d, 0.0d}, 0.0d);

        ArrayList<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {1.0d, -0.1d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.EQ, -0.1d));
        constraints.add(new LinearConstraint(new double[] {1.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, -1e-18d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 1.0d, 0.0d, 0.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 0.0d, 1.0d, 0.0d, -0.0128588d, 1e-5d}, Relationship.EQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 0.0d, 0.0d, 1.0d, 1e-5d, -0.0128586d}, Relationship.EQ, 1e-10d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, -1.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 1.0d, 0.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 0.0d, -1.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));
        constraints.add(new LinearConstraint(new double[] {0.0d, 0.0d, 1.0d, 0.0d, 1.0d, 0.0d, 0.0d}, Relationship.GEQ, 0.0d));

        double epsilon = 1e-7;
        SimplexSolver simplex = new SimplexSolver();
        RealPointValuePair solution = simplex.optimize(f, constraints, GoalType.MINIMIZE, false);
        
        Assert.assertTrue(Precision.compareTo(solution.getPoint()[0], -1e-18d, epsilon) >= 0);
        Assert.assertEquals(1.0d, solution.getPoint()[1], epsilon);        
        Assert.assertEquals(0.0d, solution.getPoint()[2], epsilon);
        Assert.assertEquals(1.0d, solution.getValue(), epsilon);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        7
6: newarray       double
8: dup
9: iconst_0
10: dconst_0
11: dastore
12: dup
13: iconst_1
14: dconst_1
15: dastore
16: dup
17: iconst_2
18: dconst_1
19: dastore
20: dup
21: iconst_3
22: dconst_0
23: dastore
24: dup
25: iconst_4
26: dconst_0
27: dastore
28: dup
29: iconst_5
30: dconst_0
31: dastore
32: dup
33: bipush        6
35: dconst_0
36: dastore
37: dconst_0
38: invokespecial #3
41: astore_1
42: new           #4
45: dup
46: invokespecial #5
49: astore_2
50: aload_2
51: new           #6
54: dup
55: bipush        7
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: dup
64: iconst_1
65: ldc2_w        #44
68: dastore
69: dup
70: iconst_2
71: dconst_0
72: dastore
73: dup
74: iconst_3
75: dconst_0
76: dastore
77: dup
78: iconst_4
79: dconst_0
80: dastore
81: dup
82: iconst_5
83: dconst_0
84: dastore
85: dup
86: bipush        6
88: dconst_0
89: dastore
90: getstatic     #7
93: ldc2_w        #44
96: invokespecial #8
99: invokevirtual #9
102: pop
103: aload_2
104: new           #6
107: dup
108: bipush        7
110: newarray       double
112: dup
113: iconst_0
114: dconst_1
115: dastore
116: dup
117: iconst_1
118: dconst_0
119: dastore
120: dup
121: iconst_2
122: dconst_0
123: dastore
124: dup
125: iconst_3
126: dconst_0
127: dastore
128: dup
129: iconst_4
130: dconst_0
131: dastore
132: dup
133: iconst_5
134: dconst_0
135: dastore
136: dup
137: bipush        6
139: dconst_0
140: dastore
141: getstatic     #21
144: ldc2_w        #46
147: invokespecial #8
150: invokevirtual #9
153: pop
154: aload_2
155: new           #6
158: dup
159: bipush        7
161: newarray       double
163: dup
164: iconst_0
165: dconst_0
166: dastore
167: dup
168: iconst_1
169: dconst_1
170: dastore
171: dup
172: iconst_2
173: dconst_0
174: dastore
175: dup
176: iconst_3
177: dconst_0
178: dastore
179: dup
180: iconst_4
181: dconst_0
182: dastore
183: dup
184: iconst_5
185: dconst_0
186: dastore
187: dup
188: bipush        6
190: dconst_0
191: dastore
192: getstatic     #21
195: dconst_0
196: invokespecial #8
199: invokevirtual #9
202: pop
203: aload_2
204: new           #6
207: dup
208: bipush        7
210: newarray       double
212: dup
213: iconst_0
214: dconst_0
215: dastore
216: dup
217: iconst_1
218: dconst_0
219: dastore
220: dup
221: iconst_2
222: dconst_0
223: dastore
224: dup
225: iconst_3
226: dconst_1
227: dastore
228: dup
229: iconst_4
230: dconst_0
231: dastore
232: dup
233: iconst_5
234: ldc2_w        #48
237: dastore
238: dup
239: bipush        6
241: ldc2_w        #50
244: dastore
245: getstatic     #7
248: dconst_0
249: invokespecial #8
252: invokevirtual #9
255: pop
256: aload_2
257: new           #6
260: dup
261: bipush        7
263: newarray       double
265: dup
266: iconst_0
267: dconst_0
268: dastore
269: dup
270: iconst_1
271: dconst_0
272: dastore
273: dup
274: iconst_2
275: dconst_0
276: dastore
277: dup
278: iconst_3
279: dconst_0
280: dastore
281: dup
282: iconst_4
283: dconst_1
284: dastore
285: dup
286: iconst_5
287: ldc2_w        #50
290: dastore
291: dup
292: bipush        6
294: ldc2_w        #52
297: dastore
298: getstatic     #7
301: ldc2_w        #54
304: invokespecial #8
307: invokevirtual #9
310: pop
311: aload_2
312: new           #6
315: dup
316: bipush        7
318: newarray       double
320: dup
321: iconst_0
322: dconst_0
323: dastore
324: dup
325: iconst_1
326: dconst_0
327: dastore
328: dup
329: iconst_2
330: dconst_1
331: dastore
332: dup
333: iconst_3
334: ldc2_w        #56
337: dastore
338: dup
339: iconst_4
340: dconst_0
341: dastore
342: dup
343: iconst_5
344: dconst_0
345: dastore
346: dup
347: bipush        6
349: dconst_0
350: dastore
351: getstatic     #21
354: dconst_0
355: invokespecial #8
358: invokevirtual #9
361: pop
362: aload_2
363: new           #6
366: dup
367: bipush        7
369: newarray       double
371: dup
372: iconst_0
373: dconst_0
374: dastore
375: dup
376: iconst_1
377: dconst_0
378: dastore
379: dup
380: iconst_2
381: dconst_1
382: dastore
383: dup
384: iconst_3
385: dconst_1
386: dastore
387: dup
388: iconst_4
389: dconst_0
390: dastore
391: dup
392: iconst_5
393: dconst_0
394: dastore
395: dup
396: bipush        6
398: dconst_0
399: dastore
400: getstatic     #21
403: dconst_0
404: invokespecial #8
407: invokevirtual #9
410: pop
411: aload_2
412: new           #6
415: dup
416: bipush        7
418: newarray       double
420: dup
421: iconst_0
422: dconst_0
423: dastore
424: dup
425: iconst_1
426: dconst_0
427: dastore
428: dup
429: iconst_2
430: dconst_1
431: dastore
432: dup
433: iconst_3
434: dconst_0
435: dastore
436: dup
437: iconst_4
438: ldc2_w        #56
441: dastore
442: dup
443: iconst_5
444: dconst_0
445: dastore
446: dup
447: bipush        6
449: dconst_0
450: dastore
451: getstatic     #21
454: dconst_0
455: invokespecial #8
458: invokevirtual #9
461: pop
462: aload_2
463: new           #6
466: dup
467: bipush        7
469: newarray       double
471: dup
472: iconst_0
473: dconst_0
474: dastore
475: dup
476: iconst_1
477: dconst_0
478: dastore
479: dup
480: iconst_2
481: dconst_1
482: dastore
483: dup
484: iconst_3
485: dconst_0
486: dastore
487: dup
488: iconst_4
489: dconst_1
490: dastore
491: dup
492: iconst_5
493: dconst_0
494: dastore
495: dup
496: bipush        6
498: dconst_0
499: dastore
500: getstatic     #21
503: dconst_0
504: invokespecial #8
507: invokevirtual #9
510: pop
511: ldc2_w        #58
514: dstore_3
515: new           #12
518: dup
519: invokespecial #13
522: astore        5
524: aload         5
526: aload_1
527: aload_2
528: getstatic     #14
531: iconst_0
532: invokevirtual #15
535: astore        6
537: aload         6
539: invokevirtual #16
542: iconst_0
543: daload
544: ldc2_w        #46
547: dload_3
548: invokestatic  #17
551: iflt          558
554: iconst_1
555: goto          559
558: iconst_0
559: invokestatic  #18
562: dconst_1
563: aload         6
565: invokevirtual #16
568: iconst_1
569: daload
570: dload_3
571: invokestatic  #24
574: dconst_0
575: aload         6
577: invokevirtual #16
580: iconst_2
581: daload
582: dload_3
583: invokestatic  #24
586: dconst_1
587: aload         6
589: invokevirtual #25
592: dload_3
593: invokestatic  #24
596: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath272
Start line: 118
End line: 132
Method source code: 
    public void testMath272() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 2, 2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1, 0 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1 }, Relationship.GEQ,  1));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0 }, Relationship.GEQ,  1));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);

        Assert.assertEquals(0.0, solution.getPoint()[0], .0000001);
        Assert.assertEquals(1.0, solution.getPoint()[1], .0000001);
        Assert.assertEquals(1.0, solution.getPoint()[2], .0000001);
        Assert.assertEquals(3.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #26
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #26
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #3
27: astore_1
28: new           #4
31: dup
32: invokespecial #5
35: astore_2
36: aload_2
37: new           #6
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: dconst_1
47: dastore
48: dup
49: iconst_1
50: dconst_1
51: dastore
52: dup
53: iconst_2
54: dconst_0
55: dastore
56: getstatic     #21
59: dconst_1
60: invokespecial #8
63: invokeinterface #60,  2
68: pop
69: aload_2
70: new           #6
73: dup
74: iconst_3
75: newarray       double
77: dup
78: iconst_0
79: dconst_1
80: dastore
81: dup
82: iconst_1
83: dconst_0
84: dastore
85: dup
86: iconst_2
87: dconst_1
88: dastore
89: getstatic     #21
92: dconst_1
93: invokespecial #8
96: invokeinterface #60,  2
101: pop
102: aload_2
103: new           #6
106: dup
107: iconst_3
108: newarray       double
110: dup
111: iconst_0
112: dconst_0
113: dastore
114: dup
115: iconst_1
116: dconst_1
117: dastore
118: dup
119: iconst_2
120: dconst_0
121: dastore
122: getstatic     #21
125: dconst_1
126: invokespecial #8
129: invokeinterface #60,  2
134: pop
135: new           #12
138: dup
139: invokespecial #13
142: astore_3
143: aload_3
144: aload_1
145: aload_2
146: getstatic     #14
149: iconst_1
150: invokevirtual #15
153: astore        4
155: dconst_0
156: aload         4
158: invokevirtual #16
161: iconst_0
162: daload
163: ldc2_w        #58
166: invokestatic  #24
169: dconst_1
170: aload         4
172: invokevirtual #16
175: iconst_1
176: daload
177: ldc2_w        #58
180: invokestatic  #24
183: dconst_1
184: aload         4
186: invokevirtual #16
189: iconst_2
190: daload
191: ldc2_w        #58
194: invokestatic  #24
197: ldc2_w        #61
200: aload         4
202: invokevirtual #25
205: ldc2_w        #58
208: invokestatic  #24
211: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath286
Start line: 135
End line: 153
Method source code: 
    public void testMath286() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.6, 0.4 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 23.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0, 0, 0 }, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[] { 0, 0, 1, 0, 0, 0 }, Relationship.GEQ, 8.0));
        constraints.add(new LinearConstraint(new double[] { 0, 0, 0, 0, 1, 0 }, Relationship.GEQ, 5.0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

        Assert.assertEquals(25.8, solution.getValue(), .0000001);
        Assert.assertEquals(23.0, solution.getPoint()[0] + solution.getPoint()[2] + solution.getPoint()[4], 0.0000001);
        Assert.assertEquals(23.0, solution.getPoint()[1] + solution.getPoint()[3] + solution.getPoint()[5], 0.0000001);
        Assert.assertTrue(solution.getPoint()[0] >= 10.0 - 0.0000001);
        Assert.assertTrue(solution.getPoint()[2] >= 8.0 - 0.0000001);
        Assert.assertTrue(solution.getPoint()[4] >= 5.0 - 0.0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #63
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #65
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #67
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #69
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #71
37: dastore
38: dup
39: iconst_5
40: ldc2_w        #73
43: dastore
44: dconst_0
45: invokespecial #3
48: astore_1
49: new           #4
52: dup
53: invokespecial #5
56: astore_2
57: aload_2
58: new           #6
61: dup
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: dconst_1
69: dastore
70: dup
71: iconst_1
72: dconst_0
73: dastore
74: dup
75: iconst_2
76: dconst_1
77: dastore
78: dup
79: iconst_3
80: dconst_0
81: dastore
82: dup
83: iconst_4
84: dconst_1
85: dastore
86: dup
87: iconst_5
88: dconst_0
89: dastore
90: getstatic     #7
93: ldc2_w        #75
96: invokespecial #8
99: invokeinterface #60,  2
104: pop
105: aload_2
106: new           #6
109: dup
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_1
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: dconst_1
129: dastore
130: dup
131: iconst_4
132: dconst_0
133: dastore
134: dup
135: iconst_5
136: dconst_1
137: dastore
138: getstatic     #7
141: ldc2_w        #75
144: invokespecial #8
147: invokeinterface #60,  2
152: pop
153: aload_2
154: new           #6
157: dup
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: dconst_1
165: dastore
166: dup
167: iconst_1
168: dconst_0
169: dastore
170: dup
171: iconst_2
172: dconst_0
173: dastore
174: dup
175: iconst_3
176: dconst_0
177: dastore
178: dup
179: iconst_4
180: dconst_0
181: dastore
182: dup
183: iconst_5
184: dconst_0
185: dastore
186: getstatic     #21
189: ldc2_w        #34
192: invokespecial #8
195: invokeinterface #60,  2
200: pop
201: aload_2
202: new           #6
205: dup
206: bipush        6
208: newarray       double
210: dup
211: iconst_0
212: dconst_0
213: dastore
214: dup
215: iconst_1
216: dconst_0
217: dastore
218: dup
219: iconst_2
220: dconst_1
221: dastore
222: dup
223: iconst_3
224: dconst_0
225: dastore
226: dup
227: iconst_4
228: dconst_0
229: dastore
230: dup
231: iconst_5
232: dconst_0
233: dastore
234: getstatic     #21
237: ldc2_w        #77
240: invokespecial #8
243: invokeinterface #60,  2
248: pop
249: aload_2
250: new           #6
253: dup
254: bipush        6
256: newarray       double
258: dup
259: iconst_0
260: dconst_0
261: dastore
262: dup
263: iconst_1
264: dconst_0
265: dastore
266: dup
267: iconst_2
268: dconst_0
269: dastore
270: dup
271: iconst_3
272: dconst_0
273: dastore
274: dup
275: iconst_4
276: dconst_1
277: dastore
278: dup
279: iconst_5
280: dconst_0
281: dastore
282: getstatic     #21
285: ldc2_w        #19
288: invokespecial #8
291: invokeinterface #60,  2
296: pop
297: new           #12
300: dup
301: invokespecial #13
304: astore_3
305: aload_3
306: aload_1
307: aload_2
308: getstatic     #79
311: iconst_1
312: invokevirtual #15
315: astore        4
317: ldc2_w        #80
320: aload         4
322: invokevirtual #25
325: ldc2_w        #58
328: invokestatic  #24
331: ldc2_w        #75
334: aload         4
336: invokevirtual #16
339: iconst_0
340: daload
341: aload         4
343: invokevirtual #16
346: iconst_2
347: daload
348: dadd
349: aload         4
351: invokevirtual #16
354: iconst_4
355: daload
356: dadd
357: ldc2_w        #58
360: invokestatic  #24
363: ldc2_w        #75
366: aload         4
368: invokevirtual #16
371: iconst_1
372: daload
373: aload         4
375: invokevirtual #16
378: iconst_3
379: daload
380: dadd
381: aload         4
383: invokevirtual #16
386: iconst_5
387: daload
388: dadd
389: ldc2_w        #58
392: invokestatic  #24
395: aload         4
397: invokevirtual #16
400: iconst_0
401: daload
402: ldc2_w        #82
405: dcmpl
406: iflt          413
409: iconst_1
410: goto          414
413: iconst_0
414: invokestatic  #18
417: aload         4
419: invokevirtual #16
422: iconst_2
423: daload
424: ldc2_w        #84
427: dcmpl
428: iflt          435
431: iconst_1
432: goto          436
435: iconst_0
436: invokestatic  #18
439: aload         4
441: invokevirtual #16
444: iconst_4
445: daload
446: ldc2_w        #86
449: dcmpl
450: iflt          457
453: iconst_1
454: goto          458
457: iconst_0
458: invokestatic  #18
461: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testDegeneracy
Start line: 156
End line: 166
Method source code: 
    public void testDegeneracy() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.7 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 18.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.GEQ, 10.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.GEQ, 8.0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(13.6, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #63
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #67
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_1
47: dastore
48: getstatic     #88
51: ldc2_w        #89
54: invokespecial #8
57: invokeinterface #60,  2
62: pop
63: aload_2
64: new           #6
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_1
74: dastore
75: dup
76: iconst_1
77: dconst_0
78: dastore
79: getstatic     #21
82: ldc2_w        #34
85: invokespecial #8
88: invokeinterface #60,  2
93: pop
94: aload_2
95: new           #6
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_0
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #21
113: ldc2_w        #77
116: invokespecial #8
119: invokeinterface #60,  2
124: pop
125: new           #12
128: dup
129: invokespecial #13
132: astore_3
133: aload_3
134: aload_1
135: aload_2
136: getstatic     #79
139: iconst_1
140: invokevirtual #15
143: astore        4
145: ldc2_w        #91
148: aload         4
150: invokevirtual #25
153: ldc2_w        #58
156: invokestatic  #24
159: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath288
Start line: 169
End line: 181
Method source code: 
    public void testMath288() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 7, 3, 0, 0 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 3, 0, -5, 0 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 2, 0, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 0, 3, 0, -5 }, Relationship.LEQ, 0.0));
        constraints.add(new LinearConstraint(new double[] { 1, 0, 0, 0 }, Relationship.LEQ, 1.0));
        constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 0 }, Relationship.LEQ, 1.0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(10.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_4
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #93
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #61
18: dastore
19: dup
20: iconst_2
21: dconst_0
22: dastore
23: dup
24: iconst_3
25: dconst_0
26: dastore
27: dconst_0
28: invokespecial #3
31: astore_1
32: new           #4
35: dup
36: invokespecial #5
39: astore_2
40: aload_2
41: new           #6
44: dup
45: iconst_4
46: newarray       double
48: dup
49: iconst_0
50: ldc2_w        #61
53: dastore
54: dup
55: iconst_1
56: dconst_0
57: dastore
58: dup
59: iconst_2
60: ldc2_w        #95
63: dastore
64: dup
65: iconst_3
66: dconst_0
67: dastore
68: getstatic     #88
71: dconst_0
72: invokespecial #8
75: invokeinterface #60,  2
80: pop
81: aload_2
82: new           #6
85: dup
86: iconst_4
87: newarray       double
89: dup
90: iconst_0
91: ldc2_w        #26
94: dastore
95: dup
96: iconst_1
97: dconst_0
98: dastore
99: dup
100: iconst_2
101: dconst_0
102: dastore
103: dup
104: iconst_3
105: ldc2_w        #95
108: dastore
109: getstatic     #88
112: dconst_0
113: invokespecial #8
116: invokeinterface #60,  2
121: pop
122: aload_2
123: new           #6
126: dup
127: iconst_4
128: newarray       double
130: dup
131: iconst_0
132: dconst_0
133: dastore
134: dup
135: iconst_1
136: ldc2_w        #61
139: dastore
140: dup
141: iconst_2
142: dconst_0
143: dastore
144: dup
145: iconst_3
146: ldc2_w        #95
149: dastore
150: getstatic     #88
153: dconst_0
154: invokespecial #8
157: invokeinterface #60,  2
162: pop
163: aload_2
164: new           #6
167: dup
168: iconst_4
169: newarray       double
171: dup
172: iconst_0
173: dconst_1
174: dastore
175: dup
176: iconst_1
177: dconst_0
178: dastore
179: dup
180: iconst_2
181: dconst_0
182: dastore
183: dup
184: iconst_3
185: dconst_0
186: dastore
187: getstatic     #88
190: dconst_1
191: invokespecial #8
194: invokeinterface #60,  2
199: pop
200: aload_2
201: new           #6
204: dup
205: iconst_4
206: newarray       double
208: dup
209: iconst_0
210: dconst_0
211: dastore
212: dup
213: iconst_1
214: dconst_1
215: dastore
216: dup
217: iconst_2
218: dconst_0
219: dastore
220: dup
221: iconst_3
222: dconst_0
223: dastore
224: getstatic     #88
227: dconst_1
228: invokespecial #8
231: invokeinterface #60,  2
236: pop
237: new           #12
240: dup
241: invokespecial #13
244: astore_3
245: aload_3
246: aload_1
247: aload_2
248: getstatic     #79
251: iconst_1
252: invokevirtual #15
255: astore        4
257: ldc2_w        #34
260: aload         4
262: invokevirtual #25
265: ldc2_w        #58
268: invokestatic  #24
271: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath290GEQ
Start line: 184
End line: 193
Method source code: 
    public void testMath290GEQ() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 5 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 2, 0 }, Relationship.GEQ, -1.0));
        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(0, solution.getValue(), .0000001);
        Assert.assertEquals(0, solution.getPoint()[0], .0000001);
        Assert.assertEquals(0, solution.getPoint()[1], .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: ldc2_w        #19
16: dastore
17: dconst_0
18: invokespecial #3
21: astore_1
22: new           #4
25: dup
26: invokespecial #5
29: astore_2
30: aload_2
31: new           #6
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #26
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #21
51: ldc2_w        #56
54: invokespecial #8
57: invokeinterface #60,  2
62: pop
63: new           #12
66: dup
67: invokespecial #13
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #14
77: iconst_1
78: invokevirtual #15
81: astore        4
83: dconst_0
84: aload         4
86: invokevirtual #25
89: ldc2_w        #58
92: invokestatic  #24
95: dconst_0
96: aload         4
98: invokevirtual #16
101: iconst_0
102: daload
103: ldc2_w        #58
106: invokestatic  #24
109: dconst_0
110: aload         4
112: invokevirtual #16
115: iconst_1
116: daload
117: ldc2_w        #58
120: invokestatic  #24
123: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath290LEQ
Start line: 196
End line: 202
Method source code: 
    public void testMath290LEQ() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 5 }, 0 );
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 2, 0 }, Relationship.LEQ, -1.0));
        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MINIMIZE, true);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: ldc2_w        #19
16: dastore
17: dconst_0
18: invokespecial #3
21: astore_1
22: new           #4
25: dup
26: invokespecial #5
29: astore_2
30: aload_2
31: new           #6
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: ldc2_w        #26
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #88
51: ldc2_w        #56
54: invokespecial #8
57: invokeinterface #60,  2
62: pop
63: new           #12
66: dup
67: invokespecial #13
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #14
77: iconst_1
78: invokevirtual #15
81: pop
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMath293
Start line: 205
End line: 239
Method source code: 
    public void testMath293() {
      LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.4, 0.6}, 0 );
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0.8, 0.2, 0.0, 0.0, 0.0, 0.0 }, Relationship.GEQ, 10.0));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.7, 0.3, 0.0, 0.0 }, Relationship.GEQ, 10.0));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.0, 0.0, 0.4, 0.6 }, Relationship.GEQ, 10.0));

      SimplexSolver solver = new SimplexSolver();
      RealPointValuePair solution1 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);

      Assert.assertEquals(15.7143, solution1.getPoint()[0], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[1], .0001);
      Assert.assertEquals(14.2857, solution1.getPoint()[2], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[3], .0001);
      Assert.assertEquals(0.0, solution1.getPoint()[4], .0001);
      Assert.assertEquals(30.0, solution1.getPoint()[5], .0001);
      Assert.assertEquals(40.57143, solution1.getValue(), .0001);

      double valA = 0.8 * solution1.getPoint()[0] + 0.2 * solution1.getPoint()[1];
      double valB = 0.7 * solution1.getPoint()[2] + 0.3 * solution1.getPoint()[3];
      double valC = 0.4 * solution1.getPoint()[4] + 0.6 * solution1.getPoint()[5];

      f = new LinearObjectiveFunction(new double[] { 0.8, 0.2, 0.7, 0.3, 0.4, 0.6}, 0 );
      constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] { 1, 0, 1, 0, 1, 0 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0, 1, 0, 1, 0, 1 }, Relationship.EQ, 30.0));
      constraints.add(new LinearConstraint(new double[] { 0.8, 0.2, 0.0, 0.0, 0.0, 0.0 }, Relationship.GEQ, valA));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.7, 0.3, 0.0, 0.0 }, Relationship.GEQ, valB));
      constraints.add(new LinearConstraint(new double[] { 0.0, 0.0, 0.0, 0.0, 0.4, 0.6 }, Relationship.GEQ, valC));

      RealPointValuePair solution2 = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
      Assert.assertEquals(40.57143, solution2.getValue(), .0001);
    }
Method byte code: 
0: new           #2
3: dup
4: bipush        6
6: newarray       double
8: dup
9: iconst_0
10: ldc2_w        #63
13: dastore
14: dup
15: iconst_1
16: ldc2_w        #65
19: dastore
20: dup
21: iconst_2
22: ldc2_w        #67
25: dastore
26: dup
27: iconst_3
28: ldc2_w        #69
31: dastore
32: dup
33: iconst_4
34: ldc2_w        #73
37: dastore
38: dup
39: iconst_5
40: ldc2_w        #71
43: dastore
44: dconst_0
45: invokespecial #3
48: astore_1
49: new           #4
52: dup
53: invokespecial #5
56: astore_2
57: aload_2
58: new           #6
61: dup
62: bipush        6
64: newarray       double
66: dup
67: iconst_0
68: dconst_1
69: dastore
70: dup
71: iconst_1
72: dconst_0
73: dastore
74: dup
75: iconst_2
76: dconst_1
77: dastore
78: dup
79: iconst_3
80: dconst_0
81: dastore
82: dup
83: iconst_4
84: dconst_1
85: dastore
86: dup
87: iconst_5
88: dconst_0
89: dastore
90: getstatic     #7
93: ldc2_w        #97
96: invokespecial #8
99: invokeinterface #60,  2
104: pop
105: aload_2
106: new           #6
109: dup
110: bipush        6
112: newarray       double
114: dup
115: iconst_0
116: dconst_0
117: dastore
118: dup
119: iconst_1
120: dconst_1
121: dastore
122: dup
123: iconst_2
124: dconst_0
125: dastore
126: dup
127: iconst_3
128: dconst_1
129: dastore
130: dup
131: iconst_4
132: dconst_0
133: dastore
134: dup
135: iconst_5
136: dconst_1
137: dastore
138: getstatic     #7
141: ldc2_w        #97
144: invokespecial #8
147: invokeinterface #60,  2
152: pop
153: aload_2
154: new           #6
157: dup
158: bipush        6
160: newarray       double
162: dup
163: iconst_0
164: ldc2_w        #63
167: dastore
168: dup
169: iconst_1
170: ldc2_w        #65
173: dastore
174: dup
175: iconst_2
176: dconst_0
177: dastore
178: dup
179: iconst_3
180: dconst_0
181: dastore
182: dup
183: iconst_4
184: dconst_0
185: dastore
186: dup
187: iconst_5
188: dconst_0
189: dastore
190: getstatic     #21
193: ldc2_w        #34
196: invokespecial #8
199: invokeinterface #60,  2
204: pop
205: aload_2
206: new           #6
209: dup
210: bipush        6
212: newarray       double
214: dup
215: iconst_0
216: dconst_0
217: dastore
218: dup
219: iconst_1
220: dconst_0
221: dastore
222: dup
223: iconst_2
224: ldc2_w        #67
227: dastore
228: dup
229: iconst_3
230: ldc2_w        #69
233: dastore
234: dup
235: iconst_4
236: dconst_0
237: dastore
238: dup
239: iconst_5
240: dconst_0
241: dastore
242: getstatic     #21
245: ldc2_w        #34
248: invokespecial #8
251: invokeinterface #60,  2
256: pop
257: aload_2
258: new           #6
261: dup
262: bipush        6
264: newarray       double
266: dup
267: iconst_0
268: dconst_0
269: dastore
270: dup
271: iconst_1
272: dconst_0
273: dastore
274: dup
275: iconst_2
276: dconst_0
277: dastore
278: dup
279: iconst_3
280: dconst_0
281: dastore
282: dup
283: iconst_4
284: ldc2_w        #73
287: dastore
288: dup
289: iconst_5
290: ldc2_w        #71
293: dastore
294: getstatic     #21
297: ldc2_w        #34
300: invokespecial #8
303: invokeinterface #60,  2
308: pop
309: new           #12
312: dup
313: invokespecial #13
316: astore_3
317: aload_3
318: aload_1
319: aload_2
320: getstatic     #79
323: iconst_1
324: invokevirtual #15
327: astore        4
329: ldc2_w        #99
332: aload         4
334: invokevirtual #16
337: iconst_0
338: daload
339: ldc2_w        #101
342: invokestatic  #24
345: dconst_0
346: aload         4
348: invokevirtual #16
351: iconst_1
352: daload
353: ldc2_w        #101
356: invokestatic  #24
359: ldc2_w        #103
362: aload         4
364: invokevirtual #16
367: iconst_2
368: daload
369: ldc2_w        #101
372: invokestatic  #24
375: dconst_0
376: aload         4
378: invokevirtual #16
381: iconst_3
382: daload
383: ldc2_w        #101
386: invokestatic  #24
389: dconst_0
390: aload         4
392: invokevirtual #16
395: iconst_4
396: daload
397: ldc2_w        #101
400: invokestatic  #24
403: ldc2_w        #97
406: aload         4
408: invokevirtual #16
411: iconst_5
412: daload
413: ldc2_w        #101
416: invokestatic  #24
419: ldc2_w        #105
422: aload         4
424: invokevirtual #25
427: ldc2_w        #101
430: invokestatic  #24
433: ldc2_w        #63
436: aload         4
438: invokevirtual #16
441: iconst_0
442: daload
443: dmul
444: ldc2_w        #65
447: aload         4
449: invokevirtual #16
452: iconst_1
453: daload
454: dmul
455: dadd
456: dstore        5
458: ldc2_w        #67
461: aload         4
463: invokevirtual #16
466: iconst_2
467: daload
468: dmul
469: ldc2_w        #69
472: aload         4
474: invokevirtual #16
477: iconst_3
478: daload
479: dmul
480: dadd
481: dstore        7
483: ldc2_w        #73
486: aload         4
488: invokevirtual #16
491: iconst_4
492: daload
493: dmul
494: ldc2_w        #71
497: aload         4
499: invokevirtual #16
502: iconst_5
503: daload
504: dmul
505: dadd
506: dstore        9
508: new           #2
511: dup
512: bipush        6
514: newarray       double
516: dup
517: iconst_0
518: ldc2_w        #63
521: dastore
522: dup
523: iconst_1
524: ldc2_w        #65
527: dastore
528: dup
529: iconst_2
530: ldc2_w        #67
533: dastore
534: dup
535: iconst_3
536: ldc2_w        #69
539: dastore
540: dup
541: iconst_4
542: ldc2_w        #73
545: dastore
546: dup
547: iconst_5
548: ldc2_w        #71
551: dastore
552: dconst_0
553: invokespecial #3
556: astore_1
557: new           #4
560: dup
561: invokespecial #5
564: astore_2
565: aload_2
566: new           #6
569: dup
570: bipush        6
572: newarray       double
574: dup
575: iconst_0
576: dconst_1
577: dastore
578: dup
579: iconst_1
580: dconst_0
581: dastore
582: dup
583: iconst_2
584: dconst_1
585: dastore
586: dup
587: iconst_3
588: dconst_0
589: dastore
590: dup
591: iconst_4
592: dconst_1
593: dastore
594: dup
595: iconst_5
596: dconst_0
597: dastore
598: getstatic     #7
601: ldc2_w        #97
604: invokespecial #8
607: invokeinterface #60,  2
612: pop
613: aload_2
614: new           #6
617: dup
618: bipush        6
620: newarray       double
622: dup
623: iconst_0
624: dconst_0
625: dastore
626: dup
627: iconst_1
628: dconst_1
629: dastore
630: dup
631: iconst_2
632: dconst_0
633: dastore
634: dup
635: iconst_3
636: dconst_1
637: dastore
638: dup
639: iconst_4
640: dconst_0
641: dastore
642: dup
643: iconst_5
644: dconst_1
645: dastore
646: getstatic     #7
649: ldc2_w        #97
652: invokespecial #8
655: invokeinterface #60,  2
660: pop
661: aload_2
662: new           #6
665: dup
666: bipush        6
668: newarray       double
670: dup
671: iconst_0
672: ldc2_w        #63
675: dastore
676: dup
677: iconst_1
678: ldc2_w        #65
681: dastore
682: dup
683: iconst_2
684: dconst_0
685: dastore
686: dup
687: iconst_3
688: dconst_0
689: dastore
690: dup
691: iconst_4
692: dconst_0
693: dastore
694: dup
695: iconst_5
696: dconst_0
697: dastore
698: getstatic     #21
701: dload         5
703: invokespecial #8
706: invokeinterface #60,  2
711: pop
712: aload_2
713: new           #6
716: dup
717: bipush        6
719: newarray       double
721: dup
722: iconst_0
723: dconst_0
724: dastore
725: dup
726: iconst_1
727: dconst_0
728: dastore
729: dup
730: iconst_2
731: ldc2_w        #67
734: dastore
735: dup
736: iconst_3
737: ldc2_w        #69
740: dastore
741: dup
742: iconst_4
743: dconst_0
744: dastore
745: dup
746: iconst_5
747: dconst_0
748: dastore
749: getstatic     #21
752: dload         7
754: invokespecial #8
757: invokeinterface #60,  2
762: pop
763: aload_2
764: new           #6
767: dup
768: bipush        6
770: newarray       double
772: dup
773: iconst_0
774: dconst_0
775: dastore
776: dup
777: iconst_1
778: dconst_0
779: dastore
780: dup
781: iconst_2
782: dconst_0
783: dastore
784: dup
785: iconst_3
786: dconst_0
787: dastore
788: dup
789: iconst_4
790: ldc2_w        #73
793: dastore
794: dup
795: iconst_5
796: ldc2_w        #71
799: dastore
800: getstatic     #21
803: dload         9
805: invokespecial #8
808: invokeinterface #60,  2
813: pop
814: aload_3
815: aload_1
816: aload_2
817: getstatic     #79
820: iconst_1
821: invokevirtual #15
824: astore        11
826: ldc2_w        #105
829: aload         11
831: invokevirtual #25
834: ldc2_w        #101
837: invokestatic  #24
840: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSimplexSolver
Start line: 242
End line: 255
Method source code: 
    public void testSimplexSolver() {
        LinearObjectiveFunction f =
            new LinearObjectiveFunction(new double[] { 15, 10 }, 7);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ, 4));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(2.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(57.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #107
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #34
18: dastore
19: ldc2_w        #93
22: invokespecial #3
25: astore_1
26: new           #4
29: dup
30: invokespecial #5
33: astore_2
34: aload_2
35: new           #6
38: dup
39: iconst_2
40: newarray       double
42: dup
43: iconst_0
44: dconst_1
45: dastore
46: dup
47: iconst_1
48: dconst_0
49: dastore
50: getstatic     #88
53: ldc2_w        #26
56: invokespecial #8
59: invokeinterface #60,  2
64: pop
65: aload_2
66: new           #6
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: dconst_0
76: dastore
77: dup
78: iconst_1
79: dconst_1
80: dastore
81: getstatic     #88
84: ldc2_w        #61
87: invokespecial #8
90: invokeinterface #60,  2
95: pop
96: aload_2
97: new           #6
100: dup
101: iconst_2
102: newarray       double
104: dup
105: iconst_0
106: dconst_1
107: dastore
108: dup
109: iconst_1
110: dconst_1
111: dastore
112: getstatic     #7
115: ldc2_w        #109
118: invokespecial #8
121: invokeinterface #60,  2
126: pop
127: new           #12
130: dup
131: invokespecial #13
134: astore_3
135: aload_3
136: aload_1
137: aload_2
138: getstatic     #79
141: iconst_0
142: invokevirtual #15
145: astore        4
147: ldc2_w        #26
150: aload         4
152: invokevirtual #16
155: iconst_0
156: daload
157: dconst_0
158: invokestatic  #24
161: ldc2_w        #26
164: aload         4
166: invokevirtual #16
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #24
175: ldc2_w        #111
178: aload         4
180: invokevirtual #25
183: dconst_0
184: invokestatic  #24
187: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSingleVariableAndConstraint
Start line: 258
End line: 267
Method source code: 
    public void testSingleVariableAndConstraint() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 3 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 10));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(10.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(30.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #61
12: dastore
13: dconst_0
14: invokespecial #3
17: astore_1
18: new           #4
21: dup
22: invokespecial #5
25: astore_2
26: aload_2
27: new           #6
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #88
41: ldc2_w        #34
44: invokespecial #8
47: invokeinterface #60,  2
52: pop
53: new           #12
56: dup
57: invokespecial #13
60: astore_3
61: aload_3
62: aload_1
63: aload_2
64: getstatic     #79
67: iconst_0
68: invokevirtual #15
71: astore        4
73: ldc2_w        #34
76: aload         4
78: invokevirtual #16
81: iconst_0
82: daload
83: dconst_0
84: invokestatic  #24
87: ldc2_w        #97
90: aload         4
92: invokevirtual #25
95: dconst_0
96: invokestatic  #24
99: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testModelWithNoArtificialVars
Start line: 274
End line: 286
Method source code: 
    public void testModelWithNoArtificialVars() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.LEQ, 2));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.LEQ, 3));
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.LEQ, 4));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(2.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(50.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #107
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #34
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #88
51: ldc2_w        #26
54: invokespecial #8
57: invokeinterface #60,  2
62: pop
63: aload_2
64: new           #6
67: dup
68: iconst_2
69: newarray       double
71: dup
72: iconst_0
73: dconst_0
74: dastore
75: dup
76: iconst_1
77: dconst_1
78: dastore
79: getstatic     #88
82: ldc2_w        #61
85: invokespecial #8
88: invokeinterface #60,  2
93: pop
94: aload_2
95: new           #6
98: dup
99: iconst_2
100: newarray       double
102: dup
103: iconst_0
104: dconst_1
105: dastore
106: dup
107: iconst_1
108: dconst_1
109: dastore
110: getstatic     #88
113: ldc2_w        #109
116: invokespecial #8
119: invokeinterface #60,  2
124: pop
125: new           #12
128: dup
129: invokespecial #13
132: astore_3
133: aload_3
134: aload_1
135: aload_2
136: getstatic     #79
139: iconst_0
140: invokevirtual #15
143: astore        4
145: ldc2_w        #26
148: aload         4
150: invokevirtual #16
153: iconst_0
154: daload
155: dconst_0
156: invokestatic  #24
159: ldc2_w        #26
162: aload         4
164: invokevirtual #16
167: iconst_1
168: daload
169: dconst_0
170: invokestatic  #24
173: ldc2_w        #113
176: aload         4
178: invokevirtual #25
181: dconst_0
182: invokestatic  #24
185: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testMinimization
Start line: 289
End line: 301
Method source code: 
    public void testMinimization() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, -5);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 3, 2 }, Relationship.LEQ, 12));
        constraints.add(new LinearConstraint(new double[] { 0, 1 }, Relationship.GEQ, 0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, false);
        Assert.assertEquals(4.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(0.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(-13.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #115
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: ldc2_w        #95
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: ldc2_w        #26
49: dastore
50: getstatic     #88
53: ldc2_w        #117
56: invokespecial #8
59: invokeinterface #60,  2
64: pop
65: aload_2
66: new           #6
69: dup
70: iconst_2
71: newarray       double
73: dup
74: iconst_0
75: ldc2_w        #61
78: dastore
79: dup
80: iconst_1
81: ldc2_w        #26
84: dastore
85: getstatic     #88
88: ldc2_w        #119
91: invokespecial #8
94: invokeinterface #60,  2
99: pop
100: aload_2
101: new           #6
104: dup
105: iconst_2
106: newarray       double
108: dup
109: iconst_0
110: dconst_0
111: dastore
112: dup
113: iconst_1
114: dconst_1
115: dastore
116: getstatic     #21
119: dconst_0
120: invokespecial #8
123: invokeinterface #60,  2
128: pop
129: new           #12
132: dup
133: invokespecial #13
136: astore_3
137: aload_3
138: aload_1
139: aload_2
140: getstatic     #14
143: iconst_0
144: invokevirtual #15
147: astore        4
149: ldc2_w        #109
152: aload         4
154: invokevirtual #16
157: iconst_0
158: daload
159: dconst_0
160: invokestatic  #24
163: dconst_0
164: aload         4
166: invokevirtual #16
169: iconst_1
170: daload
171: dconst_0
172: invokestatic  #24
175: ldc2_w        #121
178: aload         4
180: invokevirtual #25
183: dconst_0
184: invokestatic  #24
187: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testSolutionWithNegativeDecisionVariable
Start line: 304
End line: 315
Method source code: 
    public void testSolutionWithNegativeDecisionVariable() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { -2, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.GEQ, 6));
        constraints.add(new LinearConstraint(new double[] { 1, 2 }, Relationship.LEQ, 14));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
        Assert.assertEquals(-2.0, solution.getPoint()[0], 0.0);
        Assert.assertEquals(8.0, solution.getPoint()[1], 0.0);
        Assert.assertEquals(12.0, solution.getValue(), 0.0);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #115
12: dastore
13: dup
14: iconst_1
15: dconst_1
16: dastore
17: dconst_0
18: invokespecial #3
21: astore_1
22: new           #4
25: dup
26: invokespecial #5
29: astore_2
30: aload_2
31: new           #6
34: dup
35: iconst_2
36: newarray       double
38: dup
39: iconst_0
40: dconst_1
41: dastore
42: dup
43: iconst_1
44: dconst_1
45: dastore
46: getstatic     #21
49: ldc2_w        #117
52: invokespecial #8
55: invokeinterface #60,  2
60: pop
61: aload_2
62: new           #6
65: dup
66: iconst_2
67: newarray       double
69: dup
70: iconst_0
71: dconst_1
72: dastore
73: dup
74: iconst_1
75: ldc2_w        #26
78: dastore
79: getstatic     #88
82: ldc2_w        #123
85: invokespecial #8
88: invokeinterface #60,  2
93: pop
94: new           #12
97: dup
98: invokespecial #13
101: astore_3
102: aload_3
103: aload_1
104: aload_2
105: getstatic     #79
108: iconst_0
109: invokevirtual #15
112: astore        4
114: ldc2_w        #115
117: aload         4
119: invokevirtual #16
122: iconst_0
123: daload
124: dconst_0
125: invokestatic  #24
128: ldc2_w        #77
131: aload         4
133: invokevirtual #16
136: iconst_1
137: daload
138: dconst_0
139: invokestatic  #24
142: ldc2_w        #119
145: aload         4
147: invokevirtual #25
150: dconst_0
151: invokestatic  #24
154: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testInfeasibleSolution
Start line: 318
End line: 326
Method source code: 
    public void testInfeasibleSolution() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.LEQ, 1));
        constraints.add(new LinearConstraint(new double[] { 1 }, Relationship.GEQ, 3));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_1
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #107
12: dastore
13: dconst_0
14: invokespecial #3
17: astore_1
18: new           #4
21: dup
22: invokespecial #5
25: astore_2
26: aload_2
27: new           #6
30: dup
31: iconst_1
32: newarray       double
34: dup
35: iconst_0
36: dconst_1
37: dastore
38: getstatic     #88
41: dconst_1
42: invokespecial #8
45: invokeinterface #60,  2
50: pop
51: aload_2
52: new           #6
55: dup
56: iconst_1
57: newarray       double
59: dup
60: iconst_0
61: dconst_1
62: dastore
63: getstatic     #21
66: ldc2_w        #61
69: invokespecial #8
72: invokeinterface #60,  2
77: pop
78: new           #12
81: dup
82: invokespecial #13
85: astore_3
86: aload_3
87: aload_1
88: aload_2
89: getstatic     #79
92: iconst_0
93: invokevirtual #15
96: pop
97: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testUnboundedSolution
Start line: 329
End line: 336
Method source code: 
    public void testUnboundedSolution() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 15, 10 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 0 }, Relationship.EQ, 2));

        SimplexSolver solver = new SimplexSolver();
        solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #107
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #34
18: dastore
19: dconst_0
20: invokespecial #3
23: astore_1
24: new           #4
27: dup
28: invokespecial #5
31: astore_2
32: aload_2
33: new           #6
36: dup
37: iconst_2
38: newarray       double
40: dup
41: iconst_0
42: dconst_1
43: dastore
44: dup
45: iconst_1
46: dconst_0
47: dastore
48: getstatic     #7
51: ldc2_w        #26
54: invokespecial #8
57: invokeinterface #60,  2
62: pop
63: new           #12
66: dup
67: invokespecial #13
70: astore_3
71: aload_3
72: aload_1
73: aload_2
74: getstatic     #79
77: iconst_0
78: invokevirtual #15
81: pop
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testRestrictVariablesToNonNegative
Start line: 339
End line: 356
Method source code: 
    public void testRestrictVariablesToNonNegative() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 409, 523, 70, 204, 339 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] {    43,   56, 345,  56,    5 }, Relationship.LEQ,  4567456));
        constraints.add(new LinearConstraint(new double[] {    12,   45,   7,  56,   23 }, Relationship.LEQ,    56454));
        constraints.add(new LinearConstraint(new double[] {     8,  768,   0,  34, 7456 }, Relationship.LEQ,  1923421));
        constraints.add(new LinearConstraint(new double[] { 12342, 2342,  34, 678, 2342 }, Relationship.GEQ,     4356));
        constraints.add(new LinearConstraint(new double[] {    45,  678,  76,  52,   23 }, Relationship.EQ,    456356));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(2902.92783505155, solution.getPoint()[0], .0000001);
        Assert.assertEquals(480.419243986254, solution.getPoint()[1], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[2], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[3], .0000001);
        Assert.assertEquals(0.0, solution.getPoint()[4], .0000001);
        Assert.assertEquals(1438556.7491409, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_5
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #125
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #127
18: dastore
19: dup
20: iconst_2
21: ldc2_w        #129
24: dastore
25: dup
26: iconst_3
27: ldc2_w        #131
30: dastore
31: dup
32: iconst_4
33: ldc2_w        #133
36: dastore
37: dconst_0
38: invokespecial #3
41: astore_1
42: new           #4
45: dup
46: invokespecial #5
49: astore_2
50: aload_2
51: new           #6
54: dup
55: iconst_5
56: newarray       double
58: dup
59: iconst_0
60: ldc2_w        #135
63: dastore
64: dup
65: iconst_1
66: ldc2_w        #137
69: dastore
70: dup
71: iconst_2
72: ldc2_w        #139
75: dastore
76: dup
77: iconst_3
78: ldc2_w        #137
81: dastore
82: dup
83: iconst_4
84: ldc2_w        #19
87: dastore
88: getstatic     #88
91: ldc2_w        #141
94: invokespecial #8
97: invokeinterface #60,  2
102: pop
103: aload_2
104: new           #6
107: dup
108: iconst_5
109: newarray       double
111: dup
112: iconst_0
113: ldc2_w        #119
116: dastore
117: dup
118: iconst_1
119: ldc2_w        #143
122: dastore
123: dup
124: iconst_2
125: ldc2_w        #93
128: dastore
129: dup
130: iconst_3
131: ldc2_w        #137
134: dastore
135: dup
136: iconst_4
137: ldc2_w        #75
140: dastore
141: getstatic     #88
144: ldc2_w        #145
147: invokespecial #8
150: invokeinterface #60,  2
155: pop
156: aload_2
157: new           #6
160: dup
161: iconst_5
162: newarray       double
164: dup
165: iconst_0
166: ldc2_w        #77
169: dastore
170: dup
171: iconst_1
172: ldc2_w        #147
175: dastore
176: dup
177: iconst_2
178: dconst_0
179: dastore
180: dup
181: iconst_3
182: ldc2_w        #149
185: dastore
186: dup
187: iconst_4
188: ldc2_w        #151
191: dastore
192: getstatic     #88
195: ldc2_w        #153
198: invokespecial #8
201: invokeinterface #60,  2
206: pop
207: aload_2
208: new           #6
211: dup
212: iconst_5
213: newarray       double
215: dup
216: iconst_0
217: ldc2_w        #155
220: dastore
221: dup
222: iconst_1
223: ldc2_w        #157
226: dastore
227: dup
228: iconst_2
229: ldc2_w        #149
232: dastore
233: dup
234: iconst_3
235: ldc2_w        #159
238: dastore
239: dup
240: iconst_4
241: ldc2_w        #157
244: dastore
245: getstatic     #21
248: ldc2_w        #161
251: invokespecial #8
254: invokeinterface #60,  2
259: pop
260: aload_2
261: new           #6
264: dup
265: iconst_5
266: newarray       double
268: dup
269: iconst_0
270: ldc2_w        #143
273: dastore
274: dup
275: iconst_1
276: ldc2_w        #159
279: dastore
280: dup
281: iconst_2
282: ldc2_w        #163
285: dastore
286: dup
287: iconst_3
288: ldc2_w        #165
291: dastore
292: dup
293: iconst_4
294: ldc2_w        #75
297: dastore
298: getstatic     #7
301: ldc2_w        #167
304: invokespecial #8
307: invokeinterface #60,  2
312: pop
313: new           #12
316: dup
317: invokespecial #13
320: astore_3
321: aload_3
322: aload_1
323: aload_2
324: getstatic     #79
327: iconst_1
328: invokevirtual #15
331: astore        4
333: ldc2_w        #169
336: aload         4
338: invokevirtual #16
341: iconst_0
342: daload
343: ldc2_w        #58
346: invokestatic  #24
349: ldc2_w        #171
352: aload         4
354: invokevirtual #16
357: iconst_1
358: daload
359: ldc2_w        #58
362: invokestatic  #24
365: dconst_0
366: aload         4
368: invokevirtual #16
371: iconst_2
372: daload
373: ldc2_w        #58
376: invokestatic  #24
379: dconst_0
380: aload         4
382: invokevirtual #16
385: iconst_3
386: daload
387: ldc2_w        #58
390: invokestatic  #24
393: dconst_0
394: aload         4
396: invokevirtual #16
399: iconst_4
400: daload
401: ldc2_w        #58
404: invokestatic  #24
407: ldc2_w        #173
410: aload         4
412: invokevirtual #25
415: ldc2_w        #58
418: invokestatic  #24
421: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testEpsilon
Start line: 359
End line: 373
Method source code: 
    public void testEpsilon() {
      LinearObjectiveFunction f =
          new LinearObjectiveFunction(new double[] { 10, 5, 1 }, 0);
      Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
      constraints.add(new LinearConstraint(new double[] {  9, 8, 0 }, Relationship.EQ,  17));
      constraints.add(new LinearConstraint(new double[] {  0, 7, 8 }, Relationship.LEQ,  7));
      constraints.add(new LinearConstraint(new double[] { 10, 0, 2 }, Relationship.LEQ, 10));

      SimplexSolver solver = new SimplexSolver();
      RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, false);
      Assert.assertEquals(1.0, solution.getPoint()[0], 0.0);
      Assert.assertEquals(1.0, solution.getPoint()[1], 0.0);
      Assert.assertEquals(0.0, solution.getPoint()[2], 0.0);
      Assert.assertEquals(15.0, solution.getValue(), 0.0);
  }
Method byte code: 
0: new           #2
3: dup
4: iconst_3
5: newarray       double
7: dup
8: iconst_0
9: ldc2_w        #34
12: dastore
13: dup
14: iconst_1
15: ldc2_w        #19
18: dastore
19: dup
20: iconst_2
21: dconst_1
22: dastore
23: dconst_0
24: invokespecial #3
27: astore_1
28: new           #4
31: dup
32: invokespecial #5
35: astore_2
36: aload_2
37: new           #6
40: dup
41: iconst_3
42: newarray       double
44: dup
45: iconst_0
46: ldc2_w        #175
49: dastore
50: dup
51: iconst_1
52: ldc2_w        #77
55: dastore
56: dup
57: iconst_2
58: dconst_0
59: dastore
60: getstatic     #7
63: ldc2_w        #177
66: invokespecial #8
69: invokeinterface #60,  2
74: pop
75: aload_2
76: new           #6
79: dup
80: iconst_3
81: newarray       double
83: dup
84: iconst_0
85: dconst_0
86: dastore
87: dup
88: iconst_1
89: ldc2_w        #93
92: dastore
93: dup
94: iconst_2
95: ldc2_w        #77
98: dastore
99: getstatic     #88
102: ldc2_w        #93
105: invokespecial #8
108: invokeinterface #60,  2
113: pop
114: aload_2
115: new           #6
118: dup
119: iconst_3
120: newarray       double
122: dup
123: iconst_0
124: ldc2_w        #34
127: dastore
128: dup
129: iconst_1
130: dconst_0
131: dastore
132: dup
133: iconst_2
134: ldc2_w        #26
137: dastore
138: getstatic     #88
141: ldc2_w        #34
144: invokespecial #8
147: invokeinterface #60,  2
152: pop
153: new           #12
156: dup
157: invokespecial #13
160: astore_3
161: aload_3
162: aload_1
163: aload_2
164: getstatic     #79
167: iconst_0
168: invokevirtual #15
171: astore        4
173: dconst_1
174: aload         4
176: invokevirtual #16
179: iconst_0
180: daload
181: dconst_0
182: invokestatic  #24
185: dconst_1
186: aload         4
188: invokevirtual #16
191: iconst_1
192: daload
193: dconst_0
194: invokestatic  #24
197: dconst_0
198: aload         4
200: invokevirtual #16
203: iconst_2
204: daload
205: dconst_0
206: invokestatic  #24
209: ldc2_w        #107
212: aload         4
214: invokevirtual #25
217: dconst_0
218: invokestatic  #24
221: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testTrivialModel
Start line: 376
End line: 384
Method source code: 
    public void testTrivialModel() {
        LinearObjectiveFunction f = new LinearObjectiveFunction(new double[] { 1, 1 }, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(new LinearConstraint(new double[] { 1, 1 }, Relationship.EQ,  0));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MAXIMIZE, true);
        Assert.assertEquals(0, solution.getValue(), .0000001);
    }
Method byte code: 
0: new           #2
3: dup
4: iconst_2
5: newarray       double
7: dup
8: iconst_0
9: dconst_1
10: dastore
11: dup
12: iconst_1
13: dconst_1
14: dastore
15: dconst_0
16: invokespecial #3
19: astore_1
20: new           #4
23: dup
24: invokespecial #5
27: astore_2
28: aload_2
29: new           #6
32: dup
33: iconst_2
34: newarray       double
36: dup
37: iconst_0
38: dconst_1
39: dastore
40: dup
41: iconst_1
42: dconst_1
43: dastore
44: getstatic     #7
47: dconst_0
48: invokespecial #8
51: invokeinterface #60,  2
56: pop
57: new           #12
60: dup
61: invokespecial #13
64: astore_3
65: aload_3
66: aload_1
67: aload_2
68: getstatic     #79
71: iconst_1
72: invokevirtual #15
75: astore        4
77: dconst_0
78: aload         4
80: invokevirtual #25
83: ldc2_w        #58
86: invokestatic  #24
89: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexSolverTest.class
Class name: SimplexSolverTest
Method name: testLargeModel
Start line: 387
End line: 511
Method source code: 
    public void testLargeModel() {
        double[] objective = new double[] {
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           12, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 12, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 12, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 12, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 12, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                                           1, 1, 1, 1, 1, 1};

        LinearObjectiveFunction f = new LinearObjectiveFunction(objective, 0);
        Collection<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 >= 49"));
        constraints.add(equationFromString(objective.length, "x0 + x1 + x2 + x3 >= 42"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x14 + x15 + x16 + x17 - x12 = 0"));
        constraints.add(equationFromString(objective.length, "x18 + x19 + x20 + x21 + x22 + x23 + x24 + x25 - x13 = 0"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x32 + x33 + x34 + x35 + x36 + x37 + x38 + x39 >= 49"));
        constraints.add(equationFromString(objective.length, "x28 + x29 + x30 + x31 >= 42"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x42 + x43 + x44 + x45 - x40 = 0"));
        constraints.add(equationFromString(objective.length, "x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 - x41 = 0"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x60 + x61 + x62 + x63 + x64 + x65 + x66 + x67 >= 51"));
        constraints.add(equationFromString(objective.length, "x56 + x57 + x58 + x59 >= 44"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x82 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x83 = 0"));
        constraints.add(equationFromString(objective.length, "x70 + x71 + x72 + x73 - x68 = 0"));
        constraints.add(equationFromString(objective.length, "x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 - x69 = 0"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x88 + x89 + x90 + x91 + x92 + x93 + x94 + x95 >= 51"));
        constraints.add(equationFromString(objective.length, "x84 + x85 + x86 + x87 >= 44"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x110 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x111 = 0"));
        constraints.add(equationFromString(objective.length, "x98 + x99 + x100 + x101 - x96 = 0"));
        constraints.add(equationFromString(objective.length, "x102 + x103 + x104 + x105 + x106 + x107 + x108 + x109 - x97 = 0"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x116 + x117 + x118 + x119 + x120 + x121 + x122 + x123 >= 49"));
        constraints.add(equationFromString(objective.length, "x112 + x113 + x114 + x115 >= 42"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x126 + x127 + x128 + x129 - x124 = 0"));
        constraints.add(equationFromString(objective.length, "x130 + x131 + x132 + x133 + x134 + x135 + x136 + x137 - x125 = 0"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 >= 59"));
        constraints.add(equationFromString(objective.length, "x140 + x141 + x142 + x143 >= 42"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x154 + x155 + x156 + x157 - x152 = 0"));
        constraints.add(equationFromString(objective.length, "x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165 - x153 = 0"));
        constraints.add(equationFromString(objective.length, "x83 + x82 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x111 + x110 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x175 + x176 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x192 = 0"));
        constraints.add(equationFromString(objective.length, "x170 - x26 = 0"));
        constraints.add(equationFromString(objective.length, "x171 - x27 = 0"));
        constraints.add(equationFromString(objective.length, "x172 - x54 = 0"));
        constraints.add(equationFromString(objective.length, "x173 - x55 = 0"));
        constraints.add(equationFromString(objective.length, "x174 - x168 = 0"));
        constraints.add(equationFromString(objective.length, "x177 - x169 = 0"));
        constraints.add(equationFromString(objective.length, "x178 - x138 = 0"));
        constraints.add(equationFromString(objective.length, "x179 - x139 = 0"));
        constraints.add(equationFromString(objective.length, "x180 - x166 = 0"));
        constraints.add(equationFromString(objective.length, "x181 - x167 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x205 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x206 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x207 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x208 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x209 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x210 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x211 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x212 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x213 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x214 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x215 = 0"));
        constraints.add(equationFromString(objective.length, "x193 - x182 = 0"));
        constraints.add(equationFromString(objective.length, "x194 - x183 = 0"));
        constraints.add(equationFromString(objective.length, "x195 - x184 = 0"));
        constraints.add(equationFromString(objective.length, "x196 - x185 = 0"));
        constraints.add(equationFromString(objective.length, "x197 - x186 = 0"));
        constraints.add(equationFromString(objective.length, "x198 + x199 - x187 = 0"));
        constraints.add(equationFromString(objective.length, "x200 - x188 = 0"));
        constraints.add(equationFromString(objective.length, "x201 - x189 = 0"));
        constraints.add(equationFromString(objective.length, "x202 - x190 = 0"));
        constraints.add(equationFromString(objective.length, "x203 - x191 = 0"));
        constraints.add(equationFromString(objective.length, "x204 - x192 = 0"));

        SimplexSolver solver = new SimplexSolver();
        RealPointValuePair solution = solver.optimize(f, constraints, GoalType.MINIMIZE, true);
        Assert.assertEquals(7518.0, solution.getValue(), .0000001);
    }
Method byte code: 
0: sipush        216
3: newarray       double
5: dup
6: iconst_0
7: dconst_1
8: dastore
9: dup
10: iconst_1
11: dconst_1
12: dastore
13: dup
14: iconst_2
15: dconst_1
16: dastore
17: dup
18: iconst_3
19: dconst_1
20: dastore
21: dup
22: iconst_4
23: dconst_1
24: dastore
25: dup
26: iconst_5
27: dconst_1
28: dastore
29: dup
30: bipush        6
32: dconst_1
33: dastore
34: dup
35: bipush        7
37: dconst_1
38: dastore
39: dup
40: bipush        8
42: dconst_1
43: dastore
44: dup
45: bipush        9
47: dconst_1
48: dastore
49: dup
50: bipush        10
52: dconst_1
53: dastore
54: dup
55: bipush        11
57: dconst_1
58: dastore
59: dup
60: bipush        12
62: ldc2_w        #119
65: dastore
66: dup
67: bipush        13
69: dconst_1
70: dastore
71: dup
72: bipush        14
74: dconst_1
75: dastore
76: dup
77: bipush        15
79: dconst_1
80: dastore
81: dup
82: bipush        16
84: dconst_1
85: dastore
86: dup
87: bipush        17
89: dconst_1
90: dastore
91: dup
92: bipush        18
94: dconst_1
95: dastore
96: dup
97: bipush        19
99: dconst_1
100: dastore
101: dup
102: bipush        20
104: dconst_1
105: dastore
106: dup
107: bipush        21
109: dconst_1
110: dastore
111: dup
112: bipush        22
114: dconst_1
115: dastore
116: dup
117: bipush        23
119: dconst_1
120: dastore
121: dup
122: bipush        24
124: dconst_1
125: dastore
126: dup
127: bipush        25
129: dconst_1
130: dastore
131: dup
132: bipush        26
134: dconst_1
135: dastore
136: dup
137: bipush        27
139: dconst_1
140: dastore
141: dup
142: bipush        28
144: dconst_1
145: dastore
146: dup
147: bipush        29
149: dconst_1
150: dastore
151: dup
152: bipush        30
154: dconst_1
155: dastore
156: dup
157: bipush        31
159: dconst_1
160: dastore
161: dup
162: bipush        32
164: dconst_1
165: dastore
166: dup
167: bipush        33
169: dconst_1
170: dastore
171: dup
172: bipush        34
174: dconst_1
175: dastore
176: dup
177: bipush        35
179: dconst_1
180: dastore
181: dup
182: bipush        36
184: dconst_1
185: dastore
186: dup
187: bipush        37
189: dconst_1
190: dastore
191: dup
192: bipush        38
194: dconst_1
195: dastore
196: dup
197: bipush        39
199: dconst_1
200: dastore
201: dup
202: bipush        40
204: ldc2_w        #119
207: dastore
208: dup
209: bipush        41
211: dconst_1
212: dastore
213: dup
214: bipush        42
216: dconst_1
217: dastore
218: dup
219: bipush        43
221: dconst_1
222: dastore
223: dup
224: bipush        44
226: dconst_1
227: dastore
228: dup
229: bipush        45
231: dconst_1
232: dastore
233: dup
234: bipush        46
236: dconst_1
237: dastore
238: dup
239: bipush        47
241: dconst_1
242: dastore
243: dup
244: bipush        48
246: dconst_1
247: dastore
248: dup
249: bipush        49
251: dconst_1
252: dastore
253: dup
254: bipush        50
256: dconst_1
257: dastore
258: dup
259: bipush        51
261: dconst_1
262: dastore
263: dup
264: bipush        52
266: dconst_1
267: dastore
268: dup
269: bipush        53
271: dconst_1
272: dastore
273: dup
274: bipush        54
276: dconst_1
277: dastore
278: dup
279: bipush        55
281: dconst_1
282: dastore
283: dup
284: bipush        56
286: dconst_1
287: dastore
288: dup
289: bipush        57
291: dconst_1
292: dastore
293: dup
294: bipush        58
296: dconst_1
297: dastore
298: dup
299: bipush        59
301: dconst_1
302: dastore
303: dup
304: bipush        60
306: dconst_1
307: dastore
308: dup
309: bipush        61
311: dconst_1
312: dastore
313: dup
314: bipush        62
316: dconst_1
317: dastore
318: dup
319: bipush        63
321: dconst_1
322: dastore
323: dup
324: bipush        64
326: dconst_1
327: dastore
328: dup
329: bipush        65
331: dconst_1
332: dastore
333: dup
334: bipush        66
336: dconst_1
337: dastore
338: dup
339: bipush        67
341: dconst_1
342: dastore
343: dup
344: bipush        68
346: ldc2_w        #119
349: dastore
350: dup
351: bipush        69
353: dconst_1
354: dastore
355: dup
356: bipush        70
358: dconst_1
359: dastore
360: dup
361: bipush        71
363: dconst_1
364: dastore
365: dup
366: bipush        72
368: dconst_1
369: dastore
370: dup
371: bipush        73
373: dconst_1
374: dastore
375: dup
376: bipush        74
378: dconst_1
379: dastore
380: dup
381: bipush        75
383: dconst_1
384: dastore
385: dup
386: bipush        76
388: dconst_1
389: dastore
390: dup
391: bipush        77
393: dconst_1
394: dastore
395: dup
396: bipush        78
398: dconst_1
399: dastore
400: dup
401: bipush        79
403: dconst_1
404: dastore
405: dup
406: bipush        80
408: dconst_1
409: dastore
410: dup
411: bipush        81
413: dconst_1
414: dastore
415: dup
416: bipush        82
418: dconst_1
419: dastore
420: dup
421: bipush        83
423: dconst_1
424: dastore
425: dup
426: bipush        84
428: dconst_1
429: dastore
430: dup
431: bipush        85
433: dconst_1
434: dastore
435: dup
436: bipush        86
438: dconst_1
439: dastore
440: dup
441: bipush        87
443: dconst_1
444: dastore
445: dup
446: bipush        88
448: dconst_1
449: dastore
450: dup
451: bipush        89
453: dconst_1
454: dastore
455: dup
456: bipush        90
458: dconst_1
459: dastore
460: dup
461: bipush        91
463: dconst_1
464: dastore
465: dup
466: bipush        92
468: dconst_1
469: dastore
470: dup
471: bipush        93
473: dconst_1
474: dastore
475: dup
476: bipush        94
478: dconst_1
479: dastore
480: dup
481: bipush        95
483: dconst_1
484: dastore
485: dup
486: bipush        96
488: ldc2_w        #119
491: dastore
492: dup
493: bipush        97
495: dconst_1
496: dastore
497: dup
498: bipush        98
500: dconst_1
501: dastore
502: dup
503: bipush        99
505: dconst_1
506: dastore
507: dup
508: bipush        100
510: dconst_1
511: dastore
512: dup
513: bipush        101
515: dconst_1
516: dastore
517: dup
518: bipush        102
520: dconst_1
521: dastore
522: dup
523: bipush        103
525: dconst_1
526: dastore
527: dup
528: bipush        104
530: dconst_1
531: dastore
532: dup
533: bipush        105
535: dconst_1
536: dastore
537: dup
538: bipush        106
540: dconst_1
541: dastore
542: dup
543: bipush        107
545: dconst_1
546: dastore
547: dup
548: bipush        108
550: dconst_1
551: dastore
552: dup
553: bipush        109
555: dconst_1
556: dastore
557: dup
558: bipush        110
560: dconst_1
561: dastore
562: dup
563: bipush        111
565: dconst_1
566: dastore
567: dup
568: bipush        112
570: dconst_1
571: dastore
572: dup
573: bipush        113
575: dconst_1
576: dastore
577: dup
578: bipush        114
580: dconst_1
581: dastore
582: dup
583: bipush        115
585: dconst_1
586: dastore
587: dup
588: bipush        116
590: dconst_1
591: dastore
592: dup
593: bipush        117
595: dconst_1
596: dastore
597: dup
598: bipush        118
600: dconst_1
601: dastore
602: dup
603: bipush        119
605: dconst_1
606: dastore
607: dup
608: bipush        120
610: dconst_1
611: dastore
612: dup
613: bipush        121
615: dconst_1
616: dastore
617: dup
618: bipush        122
620: dconst_1
621: dastore
622: dup
623: bipush        123
625: dconst_1
626: dastore
627: dup
628: bipush        124
630: ldc2_w        #119
633: dastore
634: dup
635: bipush        125
637: dconst_1
638: dastore
639: dup
640: bipush        126
642: dconst_1
643: dastore
644: dup
645: bipush        127
647: dconst_1
648: dastore
649: dup
650: sipush        128
653: dconst_1
654: dastore
655: dup
656: sipush        129
659: dconst_1
660: dastore
661: dup
662: sipush        130
665: dconst_1
666: dastore
667: dup
668: sipush        131
671: dconst_1
672: dastore
673: dup
674: sipush        132
677: dconst_1
678: dastore
679: dup
680: sipush        133
683: dconst_1
684: dastore
685: dup
686: sipush        134
689: dconst_1
690: dastore
691: dup
692: sipush        135
695: dconst_1
696: dastore
697: dup
698: sipush        136
701: dconst_1
702: dastore
703: dup
704: sipush        137
707: dconst_1
708: dastore
709: dup
710: sipush        138
713: dconst_1
714: dastore
715: dup
716: sipush        139
719: dconst_1
720: dastore
721: dup
722: sipush        140
725: dconst_1
726: dastore
727: dup
728: sipush        141
731: dconst_1
732: dastore
733: dup
734: sipush        142
737: dconst_1
738: dastore
739: dup
740: sipush        143
743: dconst_1
744: dastore
745: dup
746: sipush        144
749: dconst_1
750: dastore
751: dup
752: sipush        145
755: dconst_1
756: dastore
757: dup
758: sipush        146
761: dconst_1
762: dastore
763: dup
764: sipush        147
767: dconst_1
768: dastore
769: dup
770: sipush        148
773: dconst_1
774: dastore
775: dup
776: sipush        149
779: dconst_1
780: dastore
781: dup
782: sipush        150
785: dconst_1
786: dastore
787: dup
788: sipush        151
791: dconst_1
792: dastore
793: dup
794: sipush        152
797: ldc2_w        #119
800: dastore
801: dup
802: sipush        153
805: dconst_1
806: dastore
807: dup
808: sipush        154
811: dconst_1
812: dastore
813: dup
814: sipush        155
817: dconst_1
818: dastore
819: dup
820: sipush        156
823: dconst_1
824: dastore
825: dup
826: sipush        157
829: dconst_1
830: dastore
831: dup
832: sipush        158
835: dconst_1
836: dastore
837: dup
838: sipush        159
841: dconst_1
842: dastore
843: dup
844: sipush        160
847: dconst_1
848: dastore
849: dup
850: sipush        161
853: dconst_1
854: dastore
855: dup
856: sipush        162
859: dconst_1
860: dastore
861: dup
862: sipush        163
865: dconst_1
866: dastore
867: dup
868: sipush        164
871: dconst_1
872: dastore
873: dup
874: sipush        165
877: dconst_1
878: dastore
879: dup
880: sipush        166
883: dconst_1
884: dastore
885: dup
886: sipush        167
889: dconst_1
890: dastore
891: dup
892: sipush        168
895: dconst_1
896: dastore
897: dup
898: sipush        169
901: dconst_1
902: dastore
903: dup
904: sipush        170
907: dconst_1
908: dastore
909: dup
910: sipush        171
913: dconst_1
914: dastore
915: dup
916: sipush        172
919: dconst_1
920: dastore
921: dup
922: sipush        173
925: dconst_1
926: dastore
927: dup
928: sipush        174
931: dconst_1
932: dastore
933: dup
934: sipush        175
937: dconst_1
938: dastore
939: dup
940: sipush        176
943: dconst_1
944: dastore
945: dup
946: sipush        177
949: dconst_1
950: dastore
951: dup
952: sipush        178
955: dconst_1
956: dastore
957: dup
958: sipush        179
961: dconst_1
962: dastore
963: dup
964: sipush        180
967: dconst_1
968: dastore
969: dup
970: sipush        181
973: dconst_1
974: dastore
975: dup
976: sipush        182
979: dconst_1
980: dastore
981: dup
982: sipush        183
985: dconst_1
986: dastore
987: dup
988: sipush        184
991: dconst_1
992: dastore
993: dup
994: sipush        185
997: dconst_1
998: dastore
999: dup
1000: sipush        186
1003: dconst_1
1004: dastore
1005: dup
1006: sipush        187
1009: dconst_1
1010: dastore
1011: dup
1012: sipush        188
1015: dconst_1
1016: dastore
1017: dup
1018: sipush        189
1021: dconst_1
1022: dastore
1023: dup
1024: sipush        190
1027: dconst_1
1028: dastore
1029: dup
1030: sipush        191
1033: dconst_1
1034: dastore
1035: dup
1036: sipush        192
1039: dconst_1
1040: dastore
1041: dup
1042: sipush        193
1045: dconst_1
1046: dastore
1047: dup
1048: sipush        194
1051: dconst_1
1052: dastore
1053: dup
1054: sipush        195
1057: dconst_1
1058: dastore
1059: dup
1060: sipush        196
1063: dconst_1
1064: dastore
1065: dup
1066: sipush        197
1069: dconst_1
1070: dastore
1071: dup
1072: sipush        198
1075: dconst_1
1076: dastore
1077: dup
1078: sipush        199
1081: dconst_1
1082: dastore
1083: dup
1084: sipush        200
1087: dconst_1
1088: dastore
1089: dup
1090: sipush        201
1093: dconst_1
1094: dastore
1095: dup
1096: sipush        202
1099: dconst_1
1100: dastore
1101: dup
1102: sipush        203
1105: dconst_1
1106: dastore
1107: dup
1108: sipush        204
1111: dconst_1
1112: dastore
1113: dup
1114: sipush        205
1117: dconst_1
1118: dastore
1119: dup
1120: sipush        206
1123: dconst_1
1124: dastore
1125: dup
1126: sipush        207
1129: dconst_1
1130: dastore
1131: dup
1132: sipush        208
1135: dconst_1
1136: dastore
1137: dup
1138: sipush        209
1141: dconst_1
1142: dastore
1143: dup
1144: sipush        210
1147: dconst_1
1148: dastore
1149: dup
1150: sipush        211
1153: dconst_1
1154: dastore
1155: dup
1156: sipush        212
1159: dconst_1
1160: dastore
1161: dup
1162: sipush        213
1165: dconst_1
1166: dastore
1167: dup
1168: sipush        214
1171: dconst_1
1172: dastore
1173: dup
1174: sipush        215
1177: dconst_1
1178: dastore
1179: astore_1
1180: new           #2
1183: dup
1184: aload_1
1185: dconst_0
1186: invokespecial #3
1189: astore_2
1190: new           #4
1193: dup
1194: invokespecial #5
1197: astore_3
1198: aload_3
1199: aload_0
1200: aload_1
1201: arraylength
1202: ldc           #179
1204: invokespecial #180
1207: invokeinterface #60,  2
1212: pop
1213: aload_3
1214: aload_0
1215: aload_1
1216: arraylength
1217: ldc           #181
1219: invokespecial #180
1222: invokeinterface #60,  2
1227: pop
1228: aload_3
1229: aload_0
1230: aload_1
1231: arraylength
1232: ldc           #182
1234: invokespecial #180
1237: invokeinterface #60,  2
1242: pop
1243: aload_3
1244: aload_0
1245: aload_1
1246: arraylength
1247: ldc           #183
1249: invokespecial #180
1252: invokeinterface #60,  2
1257: pop
1258: aload_3
1259: aload_0
1260: aload_1
1261: arraylength
1262: ldc           #184
1264: invokespecial #180
1267: invokeinterface #60,  2
1272: pop
1273: aload_3
1274: aload_0
1275: aload_1
1276: arraylength
1277: ldc           #185
1279: invokespecial #180
1282: invokeinterface #60,  2
1287: pop
1288: aload_3
1289: aload_0
1290: aload_1
1291: arraylength
1292: ldc           #186
1294: invokespecial #180
1297: invokeinterface #60,  2
1302: pop
1303: aload_3
1304: aload_0
1305: aload_1
1306: arraylength
1307: ldc           #187
1309: invokespecial #180
1312: invokeinterface #60,  2
1317: pop
1318: aload_3
1319: aload_0
1320: aload_1
1321: arraylength
1322: ldc           #188
1324: invokespecial #180
1327: invokeinterface #60,  2
1332: pop
1333: aload_3
1334: aload_0
1335: aload_1
1336: arraylength
1337: ldc           #189
1339: invokespecial #180
1342: invokeinterface #60,  2
1347: pop
1348: aload_3
1349: aload_0
1350: aload_1
1351: arraylength
1352: ldc           #190
1354: invokespecial #180
1357: invokeinterface #60,  2
1362: pop
1363: aload_3
1364: aload_0
1365: aload_1
1366: arraylength
1367: ldc           #191
1369: invokespecial #180
1372: invokeinterface #60,  2
1377: pop
1378: aload_3
1379: aload_0
1380: aload_1
1381: arraylength
1382: ldc           #192
1384: invokespecial #180
1387: invokeinterface #60,  2
1392: pop
1393: aload_3
1394: aload_0
1395: aload_1
1396: arraylength
1397: ldc           #193
1399: invokespecial #180
1402: invokeinterface #60,  2
1407: pop
1408: aload_3
1409: aload_0
1410: aload_1
1411: arraylength
1412: ldc           #194
1414: invokespecial #180
1417: invokeinterface #60,  2
1422: pop
1423: aload_3
1424: aload_0
1425: aload_1
1426: arraylength
1427: ldc           #195
1429: invokespecial #180
1432: invokeinterface #60,  2
1437: pop
1438: aload_3
1439: aload_0
1440: aload_1
1441: arraylength
1442: ldc           #196
1444: invokespecial #180
1447: invokeinterface #60,  2
1452: pop
1453: aload_3
1454: aload_0
1455: aload_1
1456: arraylength
1457: ldc           #197
1459: invokespecial #180
1462: invokeinterface #60,  2
1467: pop
1468: aload_3
1469: aload_0
1470: aload_1
1471: arraylength
1472: ldc           #198
1474: invokespecial #180
1477: invokeinterface #60,  2
1482: pop
1483: aload_3
1484: aload_0
1485: aload_1
1486: arraylength
1487: ldc           #199
1489: invokespecial #180
1492: invokeinterface #60,  2
1497: pop
1498: aload_3
1499: aload_0
1500: aload_1
1501: arraylength
1502: ldc           #200
1504: invokespecial #180
1507: invokeinterface #60,  2
1512: pop
1513: aload_3
1514: aload_0
1515: aload_1
1516: arraylength
1517: ldc           #201
1519: invokespecial #180
1522: invokeinterface #60,  2
1527: pop
1528: aload_3
1529: aload_0
1530: aload_1
1531: arraylength
1532: ldc           #202
1534: invokespecial #180
1537: invokeinterface #60,  2
1542: pop
1543: aload_3
1544: aload_0
1545: aload_1
1546: arraylength
1547: ldc           #203
1549: invokespecial #180
1552: invokeinterface #60,  2
1557: pop
1558: aload_3
1559: aload_0
1560: aload_1
1561: arraylength
1562: ldc           #204
1564: invokespecial #180
1567: invokeinterface #60,  2
1572: pop
1573: aload_3
1574: aload_0
1575: aload_1
1576: arraylength
1577: ldc           #205
1579: invokespecial #180
1582: invokeinterface #60,  2
1587: pop
1588: aload_3
1589: aload_0
1590: aload_1
1591: arraylength
1592: ldc           #206
1594: invokespecial #180
1597: invokeinterface #60,  2
1602: pop
1603: aload_3
1604: aload_0
1605: aload_1
1606: arraylength
1607: ldc           #207
1609: invokespecial #180
1612: invokeinterface #60,  2
1617: pop
1618: aload_3
1619: aload_0
1620: aload_1
1621: arraylength
1622: ldc           #208
1624: invokespecial #180
1627: invokeinterface #60,  2
1632: pop
1633: aload_3
1634: aload_0
1635: aload_1
1636: arraylength
1637: ldc           #209
1639: invokespecial #180
1642: invokeinterface #60,  2
1647: pop
1648: aload_3
1649: aload_0
1650: aload_1
1651: arraylength
1652: ldc           #210
1654: invokespecial #180
1657: invokeinterface #60,  2
1662: pop
1663: aload_3
1664: aload_0
1665: aload_1
1666: arraylength
1667: ldc           #211
1669: invokespecial #180
1672: invokeinterface #60,  2
1677: pop
1678: aload_3
1679: aload_0
1680: aload_1
1681: arraylength
1682: ldc           #212
1684: invokespecial #180
1687: invokeinterface #60,  2
1692: pop
1693: aload_3
1694: aload_0
1695: aload_1
1696: arraylength
1697: ldc           #213
1699: invokespecial #180
1702: invokeinterface #60,  2
1707: pop
1708: aload_3
1709: aload_0
1710: aload_1
1711: arraylength
1712: ldc           #214
1714: invokespecial #180
1717: invokeinterface #60,  2
1722: pop
1723: aload_3
1724: aload_0
1725: aload_1
1726: arraylength
1727: ldc           #215
1729: invokespecial #180
1732: invokeinterface #60,  2
1737: pop
1738: aload_3
1739: aload_0
1740: aload_1
1741: arraylength
1742: ldc           #216
1744: invokespecial #180
1747: invokeinterface #60,  2
1752: pop
1753: aload_3
1754: aload_0
1755: aload_1
1756: arraylength
1757: ldc           #217
1759: invokespecial #180
1762: invokeinterface #60,  2
1767: pop
1768: aload_3
1769: aload_0
1770: aload_1
1771: arraylength
1772: ldc           #218
1774: invokespecial #180
1777: invokeinterface #60,  2
1782: pop
1783: aload_3
1784: aload_0
1785: aload_1
1786: arraylength
1787: ldc           #219
1789: invokespecial #180
1792: invokeinterface #60,  2
1797: pop
1798: aload_3
1799: aload_0
1800: aload_1
1801: arraylength
1802: ldc           #220
1804: invokespecial #180
1807: invokeinterface #60,  2
1812: pop
1813: aload_3
1814: aload_0
1815: aload_1
1816: arraylength
1817: ldc           #221
1819: invokespecial #180
1822: invokeinterface #60,  2
1827: pop
1828: aload_3
1829: aload_0
1830: aload_1
1831: arraylength
1832: ldc           #222
1834: invokespecial #180
1837: invokeinterface #60,  2
1842: pop
1843: aload_3
1844: aload_0
1845: aload_1
1846: arraylength
1847: ldc           #223
1849: invokespecial #180
1852: invokeinterface #60,  2
1857: pop
1858: aload_3
1859: aload_0
1860: aload_1
1861: arraylength
1862: ldc           #224
1864: invokespecial #180
1867: invokeinterface #60,  2
1872: pop
1873: aload_3
1874: aload_0
1875: aload_1
1876: arraylength
1877: ldc           #225
1879: invokespecial #180
1882: invokeinterface #60,  2
1887: pop
1888: aload_3
1889: aload_0
1890: aload_1
1891: arraylength
1892: ldc           #226
1894: invokespecial #180
1897: invokeinterface #60,  2
1902: pop
1903: aload_3
1904: aload_0
1905: aload_1
1906: arraylength
1907: ldc           #227
1909: invokespecial #180
1912: invokeinterface #60,  2
1917: pop
1918: aload_3
1919: aload_0
1920: aload_1
1921: arraylength
1922: ldc           #228
1924: invokespecial #180
1927: invokeinterface #60,  2
1932: pop
1933: aload_3
1934: aload_0
1935: aload_1
1936: arraylength
1937: ldc           #229
1939: invokespecial #180
1942: invokeinterface #60,  2
1947: pop
1948: aload_3
1949: aload_0
1950: aload_1
1951: arraylength
1952: ldc           #230
1954: invokespecial #180
1957: invokeinterface #60,  2
1962: pop
1963: aload_3
1964: aload_0
1965: aload_1
1966: arraylength
1967: ldc           #231
1969: invokespecial #180
1972: invokeinterface #60,  2
1977: pop
1978: aload_3
1979: aload_0
1980: aload_1
1981: arraylength
1982: ldc           #232
1984: invokespecial #180
1987: invokeinterface #60,  2
1992: pop
1993: aload_3
1994: aload_0
1995: aload_1
1996: arraylength
1997: ldc           #233
1999: invokespecial #180
2002: invokeinterface #60,  2
2007: pop
2008: aload_3
2009: aload_0
2010: aload_1
2011: arraylength
2012: ldc           #234
2014: invokespecial #180
2017: invokeinterface #60,  2
2022: pop
2023: aload_3
2024: aload_0
2025: aload_1
2026: arraylength
2027: ldc           #235
2029: invokespecial #180
2032: invokeinterface #60,  2
2037: pop
2038: aload_3
2039: aload_0
2040: aload_1
2041: arraylength
2042: ldc           #236
2044: invokespecial #180
2047: invokeinterface #60,  2
2052: pop
2053: aload_3
2054: aload_0
2055: aload_1
2056: arraylength
2057: ldc           #237
2059: invokespecial #180
2062: invokeinterface #60,  2
2067: pop
2068: aload_3
2069: aload_0
2070: aload_1
2071: arraylength
2072: ldc           #238
2074: invokespecial #180
2077: invokeinterface #60,  2
2082: pop
2083: aload_3
2084: aload_0
2085: aload_1
2086: arraylength
2087: ldc           #239
2089: invokespecial #180
2092: invokeinterface #60,  2
2097: pop
2098: aload_3
2099: aload_0
2100: aload_1
2101: arraylength
2102: ldc           #240
2104: invokespecial #180
2107: invokeinterface #60,  2
2112: pop
2113: aload_3
2114: aload_0
2115: aload_1
2116: arraylength
2117: ldc           #241
2119: invokespecial #180
2122: invokeinterface #60,  2
2127: pop
2128: aload_3
2129: aload_0
2130: aload_1
2131: arraylength
2132: ldc           #242
2134: invokespecial #180
2137: invokeinterface #60,  2
2142: pop
2143: aload_3
2144: aload_0
2145: aload_1
2146: arraylength
2147: ldc           #243
2149: invokespecial #180
2152: invokeinterface #60,  2
2157: pop
2158: aload_3
2159: aload_0
2160: aload_1
2161: arraylength
2162: ldc           #244
2164: invokespecial #180
2167: invokeinterface #60,  2
2172: pop
2173: aload_3
2174: aload_0
2175: aload_1
2176: arraylength
2177: ldc           #245
2179: invokespecial #180
2182: invokeinterface #60,  2
2187: pop
2188: aload_3
2189: aload_0
2190: aload_1
2191: arraylength
2192: ldc           #246
2194: invokespecial #180
2197: invokeinterface #60,  2
2202: pop
2203: aload_3
2204: aload_0
2205: aload_1
2206: arraylength
2207: ldc           #247
2209: invokespecial #180
2212: invokeinterface #60,  2
2217: pop
2218: aload_3
2219: aload_0
2220: aload_1
2221: arraylength
2222: ldc           #248
2224: invokespecial #180
2227: invokeinterface #60,  2
2232: pop
2233: aload_3
2234: aload_0
2235: aload_1
2236: arraylength
2237: ldc           #249
2239: invokespecial #180
2242: invokeinterface #60,  2
2247: pop
2248: aload_3
2249: aload_0
2250: aload_1
2251: arraylength
2252: ldc           #250
2254: invokespecial #180
2257: invokeinterface #60,  2
2262: pop
2263: aload_3
2264: aload_0
2265: aload_1
2266: arraylength
2267: ldc           #251
2269: invokespecial #180
2272: invokeinterface #60,  2
2277: pop
2278: aload_3
2279: aload_0
2280: aload_1
2281: arraylength
2282: ldc           #252
2284: invokespecial #180
2287: invokeinterface #60,  2
2292: pop
2293: aload_3
2294: aload_0
2295: aload_1
2296: arraylength
2297: ldc           #253
2299: invokespecial #180
2302: invokeinterface #60,  2
2307: pop
2308: aload_3
2309: aload_0
2310: aload_1
2311: arraylength
2312: ldc           #254
2314: invokespecial #180
2317: invokeinterface #60,  2
2322: pop
2323: aload_3
2324: aload_0
2325: aload_1
2326: arraylength
2327: ldc           #255
2329: invokespecial #180
2332: invokeinterface #60,  2
2337: pop
2338: aload_3
2339: aload_0
2340: aload_1
2341: arraylength
2342: ldc_w         #256
2345: invokespecial #180
2348: invokeinterface #60,  2
2353: pop
2354: aload_3
2355: aload_0
2356: aload_1
2357: arraylength
2358: ldc_w         #257
2361: invokespecial #180
2364: invokeinterface #60,  2
2369: pop
2370: aload_3
2371: aload_0
2372: aload_1
2373: arraylength
2374: ldc_w         #258
2377: invokespecial #180
2380: invokeinterface #60,  2
2385: pop
2386: aload_3
2387: aload_0
2388: aload_1
2389: arraylength
2390: ldc_w         #259
2393: invokespecial #180
2396: invokeinterface #60,  2
2401: pop
2402: aload_3
2403: aload_0
2404: aload_1
2405: arraylength
2406: ldc_w         #260
2409: invokespecial #180
2412: invokeinterface #60,  2
2417: pop
2418: aload_3
2419: aload_0
2420: aload_1
2421: arraylength
2422: ldc_w         #261
2425: invokespecial #180
2428: invokeinterface #60,  2
2433: pop
2434: aload_3
2435: aload_0
2436: aload_1
2437: arraylength
2438: ldc_w         #262
2441: invokespecial #180
2444: invokeinterface #60,  2
2449: pop
2450: aload_3
2451: aload_0
2452: aload_1
2453: arraylength
2454: ldc_w         #263
2457: invokespecial #180
2460: invokeinterface #60,  2
2465: pop
2466: aload_3
2467: aload_0
2468: aload_1
2469: arraylength
2470: ldc_w         #264
2473: invokespecial #180
2476: invokeinterface #60,  2
2481: pop
2482: aload_3
2483: aload_0
2484: aload_1
2485: arraylength
2486: ldc_w         #265
2489: invokespecial #180
2492: invokeinterface #60,  2
2497: pop
2498: aload_3
2499: aload_0
2500: aload_1
2501: arraylength
2502: ldc_w         #266
2505: invokespecial #180
2508: invokeinterface #60,  2
2513: pop
2514: aload_3
2515: aload_0
2516: aload_1
2517: arraylength
2518: ldc_w         #267
2521: invokespecial #180
2524: invokeinterface #60,  2
2529: pop
2530: aload_3
2531: aload_0
2532: aload_1
2533: arraylength
2534: ldc_w         #268
2537: invokespecial #180
2540: invokeinterface #60,  2
2545: pop
2546: aload_3
2547: aload_0
2548: aload_1
2549: arraylength
2550: ldc_w         #269
2553: invokespecial #180
2556: invokeinterface #60,  2
2561: pop
2562: aload_3
2563: aload_0
2564: aload_1
2565: arraylength
2566: ldc_w         #270
2569: invokespecial #180
2572: invokeinterface #60,  2
2577: pop
2578: aload_3
2579: aload_0
2580: aload_1
2581: arraylength
2582: ldc_w         #271
2585: invokespecial #180
2588: invokeinterface #60,  2
2593: pop
2594: aload_3
2595: aload_0
2596: aload_1
2597: arraylength
2598: ldc_w         #272
2601: invokespecial #180
2604: invokeinterface #60,  2
2609: pop
2610: new           #12
2613: dup
2614: invokespecial #13
2617: astore        4
2619: aload         4
2621: aload_2
2622: aload_3
2623: getstatic     #14
2626: iconst_1
2627: invokevirtual #15
2630: astore        5
2632: ldc2_w        #273
2635: aload         5
2637: invokevirtual #25
2640: ldc2_w        #58
2643: invokestatic  #24
2646: return
}
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test00
Start line: 24
End line: 32
Method source code: 
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 0.0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0.0, 14);
      double[][] doubleArray1 = simplexTableau0.getData();
      assertEquals(1, doubleArray1.length);
  }
Method byte code: 
0: iconst_5
1: newarray       double
3: astore_1
4: new           #2
7: dup
8: aload_1
9: dconst_0
10: invokespecial #3
13: astore_2
14: new           #4
17: dup
18: invokespecial #5
21: astore_3
22: getstatic     #6
25: astore        4
27: new           #7
30: dup
31: aload_2
32: aload_3
33: aload         4
35: iconst_0
36: dconst_0
37: bipush        14
39: invokespecial #8
42: astore        5
44: aload         5
46: invokevirtual #9
49: astore        6
51: lconst_1
52: aload         6
54: arraylength
55: i2l
56: invokestatic  #10
59: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test01
Start line: 35
End line: 42
Method source code: 
  public void test01()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0, 0, 0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0E-12, 0);
      simplexTableau0.setEntry(0, 0, 1.0E-12);
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: iconst_0
6: dconst_0
7: invokespecial #12
10: astore_1
11: new           #2
14: dup
15: aload_1
16: dconst_0
17: invokespecial #13
20: astore_2
21: new           #4
24: dup
25: invokespecial #5
28: astore_3
29: getstatic     #14
32: astore        4
34: new           #7
37: dup
38: aload_2
39: aload_3
40: aload         4
42: iconst_1
43: ldc2_w        #15
46: iconst_0
47: invokespecial #8
50: astore        5
52: aload         5
54: iconst_0
55: iconst_0
56: ldc2_w        #15
59: invokevirtual #17
62: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test02
Start line: 45
End line: 54
Method source code: 
  public void test02()  throws Throwable  {
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1.0;
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.0);
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0);
      RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
      assertEquals(0.0, realPointValuePair0.getValue(), 0.01);
  }
Method byte code: 
0: new           #4
3: dup
4: invokespecial #5
7: astore_1
8: getstatic     #6
11: astore_2
12: iconst_3
13: newarray       double
15: astore_3
16: aload_3
17: iconst_0
18: dconst_1
19: dastore
20: new           #2
23: dup
24: aload_3
25: dconst_1
26: invokespecial #3
29: astore        4
31: new           #7
34: dup
35: aload         4
37: aload_1
38: aload_2
39: iconst_0
40: dconst_1
41: invokespecial #18
44: astore        5
46: aload         5
48: invokevirtual #19
51: astore        6
53: dconst_0
54: aload         6
56: invokevirtual #20
59: ldc2_w        #21
62: invokestatic  #23
65: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test03
Start line: 57
End line: 65
Method source code: 
  public void test03()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, Double.NEGATIVE_INFINITY);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-2453.0438755));
      int int0 = simplexTableau0.getNumDecisionVariables();
      assertEquals(0, int0);
  }
Method byte code: 
0: new           #24
3: dup
4: invokespecial #25
7: astore_1
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #27
16: invokespecial #13
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #6
31: astore        4
33: new           #7
36: dup
37: aload_2
38: aload_3
39: aload         4
41: iconst_1
42: ldc2_w        #29
45: invokespecial #18
48: astore        5
50: aload         5
52: invokevirtual #31
55: istore        6
57: lconst_0
58: iload         6
60: i2l
61: invokestatic  #10
64: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test04
Start line: 68
End line: 75
Method source code: 
  public void test04()  throws Throwable  {
      ArrayRealVector arrayRealVector0 = new ArrayRealVector();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(arrayRealVector0, (-1777.19564648404));
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, (-1777.19564648404));
      simplexTableau0.hashCode();
  }
Method byte code: 
0: new           #24
3: dup
4: invokespecial #25
7: astore_1
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #32
16: invokespecial #13
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #6
31: astore        4
33: new           #7
36: dup
37: aload_2
38: aload_3
39: aload         4
41: iconst_1
42: ldc2_w        #32
45: invokespecial #18
48: astore        5
50: aload         5
52: invokevirtual #34
55: pop
56: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test05
Start line: 78
End line: 85
Method source code: 
  public void test05()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 0);
      simplexTableau0.subtractRow(0, 0, 1.0E-12);
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: invokespecial #35
8: astore_1
9: new           #2
12: dup
13: aload_1
14: ldc2_w        #15
17: invokespecial #13
20: astore_2
21: new           #4
24: dup
25: invokespecial #5
28: astore_3
29: getstatic     #6
32: astore        4
34: new           #7
37: dup
38: aload_2
39: aload_3
40: aload         4
42: iconst_1
43: dconst_0
44: invokespecial #18
47: astore        5
49: aload         5
51: iconst_0
52: iconst_0
53: ldc2_w        #15
56: invokevirtual #36
59: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test06
Start line: 88
End line: 100
Method source code: 
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = 1.0;
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1454.9789795);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, (-1578.9695104905052));
      linkedList0.add(linearConstraint0);
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0);
      RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
      assertEquals(1454.9789795, realPointValuePair0.getValue(), 0.01);
  }
Method byte code: 
0: iconst_2
1: newarray       double
3: astore_1
4: aload_1
5: iconst_1
6: dconst_1
7: dastore
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #37
16: invokespecial #3
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #39
31: astore        4
33: new           #40
36: dup
37: aload_1
38: aload         4
40: ldc2_w        #41
43: invokespecial #43
46: astore        5
48: aload_3
49: aload         5
51: invokevirtual #44
54: pop
55: getstatic     #14
58: astore        6
60: new           #7
63: dup
64: aload_2
65: aload_3
66: aload         6
68: iconst_0
69: dconst_1
70: invokespecial #18
73: astore        7
75: aload         7
77: invokevirtual #19
80: astore        8
82: ldc2_w        #37
85: aload         8
87: invokevirtual #20
90: ldc2_w        #21
93: invokestatic  #23
96: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test07
Start line: 103
End line: 110
Method source code: 
  public void test07()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0, 0, 0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0, 0);
      simplexTableau0.dropPhase1Objective();
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: iconst_0
6: dconst_0
7: invokespecial #12
10: astore_1
11: new           #2
14: dup
15: aload_1
16: dconst_0
17: invokespecial #13
20: astore_2
21: new           #4
24: dup
25: invokespecial #5
28: astore_3
29: getstatic     #14
32: astore        4
34: new           #7
37: dup
38: aload_2
39: aload_3
40: aload         4
42: iconst_0
43: dconst_0
44: iconst_0
45: invokespecial #8
48: astore        5
50: aload         5
52: invokevirtual #45
55: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test08
Start line: 113
End line: 123
Method source code: 
  public void test08()  throws Throwable  {
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      double[] doubleArray0 = new double[4];
      Relationship relationship0 = Relationship.GEQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.07341018319129944);
      linkedList0.add(linearConstraint0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.625);
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1291, (-1));
      simplexTableau0.dropPhase1Objective();
  }
Method byte code: 
0: new           #4
3: dup
4: invokespecial #5
7: astore_1
8: iconst_4
9: newarray       double
11: astore_2
12: getstatic     #46
15: astore_3
16: new           #40
19: dup
20: aload_2
21: aload_3
22: ldc2_w        #47
25: invokespecial #43
28: astore        4
30: aload_1
31: aload         4
33: invokevirtual #44
36: pop
37: new           #2
40: dup
41: aload_2
42: ldc2_w        #49
45: invokespecial #3
48: astore        5
50: getstatic     #14
53: astore        6
55: new           #7
58: dup
59: aload         5
61: aload_1
62: aload         6
64: iconst_0
65: ldc2_w        #51
68: iconst_m1
69: invokespecial #8
72: astore        7
74: aload         7
76: invokevirtual #45
79: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test09
Start line: 126
End line: 134
Method source code: 
  public void test09()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0, 0, 0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 0);
      boolean boolean0 = simplexTableau0.isOptimal();
      assertTrue(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: iconst_0
6: dconst_0
7: invokespecial #12
10: astore_1
11: new           #2
14: dup
15: aload_1
16: dconst_0
17: invokespecial #13
20: astore_2
21: new           #4
24: dup
25: invokespecial #5
28: astore_3
29: getstatic     #6
32: astore        4
34: new           #7
37: dup
38: aload_2
39: aload_3
40: aload         4
42: iconst_0
43: ldc2_w        #15
46: iconst_0
47: invokespecial #8
50: astore        5
52: aload         5
54: invokevirtual #53
57: istore        6
59: iload         6
61: invokestatic  #54
64: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test10
Start line: 137
End line: 146
Method source code: 
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1755.0042956167035);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 565.319);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, (-4342.47156383), 293);
      boolean boolean0 = simplexTableau0.isOptimal();
      assertFalse(boolean0);
  }
Method byte code: 
0: iconst_5
1: newarray       double
3: astore_1
4: aload_1
5: iconst_0
6: ldc2_w        #55
9: dastore
10: new           #2
13: dup
14: aload_1
15: ldc2_w        #57
18: invokespecial #3
21: astore_2
22: new           #4
25: dup
26: invokespecial #5
29: astore_3
30: getstatic     #14
33: astore        4
35: new           #7
38: dup
39: aload_2
40: aload_3
41: aload         4
43: iconst_0
44: ldc2_w        #59
47: sipush        293
50: invokespecial #8
53: astore        5
55: aload         5
57: invokevirtual #53
60: istore        6
62: iload         6
64: invokestatic  #61
67: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test11
Start line: 149
End line: 162
Method source code: 
  public void test11()  throws Throwable  {
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      double[] doubleArray0 = new double[4];
      doubleArray0[3] = (-493.61);
      Relationship relationship0 = Relationship.GEQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, relationship0, 0.07341018319129944);
      linkedList0.add(linearConstraint0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1.625);
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1291, 32);
      simplexTableau0.dropPhase1Objective();
      RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
      assertEquals(1.625, realPointValuePair0.getValue(), 0.01);
  }
Method byte code: 
0: new           #4
3: dup
4: invokespecial #5
7: astore_1
8: iconst_4
9: newarray       double
11: astore_2
12: aload_2
13: iconst_3
14: ldc2_w        #62
17: dastore
18: getstatic     #46
21: astore_3
22: new           #40
25: dup
26: aload_2
27: aload_3
28: ldc2_w        #47
31: invokespecial #43
34: astore        4
36: aload_1
37: aload         4
39: invokevirtual #44
42: pop
43: new           #2
46: dup
47: aload_2
48: ldc2_w        #49
51: invokespecial #3
54: astore        5
56: getstatic     #14
59: astore        6
61: new           #7
64: dup
65: aload         5
67: aload_1
68: aload         6
70: iconst_1
71: ldc2_w        #51
74: bipush        32
76: invokespecial #8
79: astore        7
81: aload         7
83: invokevirtual #45
86: aload         7
88: invokevirtual #19
91: astore        8
93: ldc2_w        #49
96: aload         8
98: invokevirtual #20
101: ldc2_w        #21
104: invokestatic  #23
107: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test12
Start line: 165
End line: 174
Method source code: 
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = 1.0;
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1454.9789795);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0);
      RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
      assertEquals(1454.9789795, realPointValuePair0.getValue(), 0.01);
  }
Method byte code: 
0: iconst_2
1: newarray       double
3: astore_1
4: aload_1
5: iconst_1
6: dconst_1
7: dastore
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #37
16: invokespecial #3
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #14
31: astore        4
33: new           #7
36: dup
37: aload_2
38: aload_3
39: aload         4
41: iconst_0
42: dconst_1
43: invokespecial #18
46: astore        5
48: aload         5
50: invokevirtual #19
53: astore        6
55: ldc2_w        #37
58: aload         6
60: invokevirtual #20
63: ldc2_w        #21
66: invokestatic  #23
69: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test13
Start line: 177
End line: 189
Method source code: 
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[1] = 1.0;
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(doubleArray0, 1454.9789795);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(doubleArray0, (-1578.9695104905052), relationship0, doubleArray0, 1.0);
      linkedList0.add(linearConstraint0);
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0);
      RealPointValuePair realPointValuePair0 = simplexTableau0.getSolution();
      assertEquals(0.0, realPointValuePair0.getValue(), 0.01);
  }
Method byte code: 
0: iconst_2
1: newarray       double
3: astore_1
4: aload_1
5: iconst_1
6: dconst_1
7: dastore
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #37
16: invokespecial #3
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #39
31: astore        4
33: new           #40
36: dup
37: aload_1
38: ldc2_w        #41
41: aload         4
43: aload_1
44: dconst_1
45: invokespecial #64
48: astore        5
50: aload_3
51: aload         5
53: invokevirtual #44
56: pop
57: getstatic     #14
60: astore        6
62: new           #7
65: dup
66: aload_2
67: aload_3
68: aload         6
70: iconst_0
71: dconst_1
72: invokespecial #18
75: astore        7
77: aload         7
79: invokevirtual #19
82: astore        8
84: dconst_0
85: aload         8
87: invokevirtual #20
90: ldc2_w        #21
93: invokestatic  #23
96: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test14
Start line: 192
End line: 202
Method source code: 
  public void test14()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0);
      simplexTableau0.divideRow(0, 1.0E-12);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0);
      boolean boolean0 = simplexTableau1.equals(simplexTableau0);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: invokespecial #65
7: astore_1
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #15
16: invokespecial #13
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #6
31: astore        4
33: new           #7
36: dup
37: aload_2
38: aload_3
39: aload         4
41: iconst_0
42: dconst_0
43: invokespecial #18
46: astore        5
48: aload         5
50: iconst_0
51: ldc2_w        #15
54: invokevirtual #66
57: new           #7
60: dup
61: aload_2
62: aload_3
63: aload         4
65: iconst_0
66: dconst_0
67: invokespecial #18
70: astore        6
72: aload         6
74: aload         5
76: invokevirtual #67
79: istore        7
81: iload         7
83: invokestatic  #61
86: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test15
Start line: 205
End line: 214
Method source code: 
  public void test15()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 0);
      Object object0 = new Object();
      boolean boolean0 = simplexTableau0.equals(object0);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: invokespecial #35
8: astore_1
9: new           #2
12: dup
13: aload_1
14: dconst_0
15: invokespecial #13
18: astore_2
19: new           #4
22: dup
23: invokespecial #5
26: astore_3
27: getstatic     #14
30: astore        4
32: new           #7
35: dup
36: aload_2
37: aload_3
38: aload         4
40: iconst_0
41: ldc2_w        #15
44: iconst_0
45: invokespecial #8
48: astore        5
50: new           #68
53: dup
54: invokespecial #1
57: astore        6
59: aload         5
61: aload         6
63: invokevirtual #67
66: istore        7
68: iload         7
70: invokestatic  #61
73: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test16
Start line: 217
End line: 225
Method source code: 
  public void test16()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(31, 31, 31);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 31);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 31, 31);
      boolean boolean0 = simplexTableau0.equals(simplexTableau0);
      assertTrue(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: bipush        31
6: bipush        31
8: ldc2_w        #69
11: invokespecial #12
14: astore_1
15: new           #2
18: dup
19: aload_1
20: ldc2_w        #69
23: invokespecial #13
26: astore_2
27: new           #4
30: dup
31: invokespecial #5
34: astore_3
35: getstatic     #6
38: astore        4
40: new           #7
43: dup
44: aload_2
45: aload_3
46: aload         4
48: iconst_0
49: ldc2_w        #69
52: bipush        31
54: invokespecial #8
57: astore        5
59: aload         5
61: aload         5
63: invokevirtual #67
66: istore        6
68: iload         6
70: invokestatic  #54
73: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test17
Start line: 228
End line: 237
Method source code: 
  public void test17()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 0);
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertTrue(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: invokespecial #35
8: astore_1
9: new           #2
12: dup
13: aload_1
14: dconst_0
15: invokespecial #13
18: astore_2
19: new           #4
22: dup
23: invokespecial #5
26: astore_3
27: getstatic     #14
30: astore        4
32: new           #7
35: dup
36: aload_2
37: aload_3
38: aload         4
40: iconst_0
41: ldc2_w        #15
44: iconst_0
45: invokespecial #8
48: astore        5
50: new           #7
53: dup
54: aload_2
55: aload_3
56: aload         4
58: iconst_0
59: ldc2_w        #15
62: iconst_0
63: invokespecial #8
66: astore        6
68: aload         5
70: aload         6
72: invokevirtual #67
75: istore        7
77: iload         7
79: invokestatic  #54
82: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test18
Start line: 240
End line: 249
Method source code: 
  public void test18()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(6, 6, 6);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 6);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 6);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 6);
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: bipush        6
6: bipush        6
8: ldc2_w        #71
11: invokespecial #12
14: astore_1
15: new           #2
18: dup
19: aload_1
20: ldc2_w        #71
23: invokespecial #13
26: astore_2
27: new           #4
30: dup
31: invokespecial #5
34: astore_3
35: getstatic     #6
38: astore        4
40: new           #7
43: dup
44: aload_2
45: aload_3
46: aload         4
48: iconst_0
49: ldc2_w        #15
52: bipush        6
54: invokespecial #8
57: astore        5
59: new           #7
62: dup
63: aload_2
64: aload_3
65: aload         4
67: iconst_1
68: ldc2_w        #71
71: invokespecial #18
74: astore        6
76: aload         5
78: aload         6
80: invokevirtual #67
83: istore        7
85: iload         7
87: invokestatic  #61
90: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test19
Start line: 252
End line: 263
Method source code: 
  public void test19()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, true, 1.0E-12, 0);
      double[] doubleArray0 = new double[5];
      LinearObjectiveFunction linearObjectiveFunction1 = new LinearObjectiveFunction(doubleArray0, 1.0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType0, true, 0.0);
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: invokespecial #65
7: astore_1
8: new           #2
11: dup
12: aload_1
13: dconst_0
14: invokespecial #13
17: astore_2
18: new           #4
21: dup
22: invokespecial #5
25: astore_3
26: getstatic     #6
29: astore        4
31: new           #7
34: dup
35: aload_2
36: aload_3
37: aload         4
39: iconst_1
40: ldc2_w        #15
43: iconst_0
44: invokespecial #8
47: astore        5
49: iconst_5
50: newarray       double
52: astore        6
54: new           #2
57: dup
58: aload         6
60: dconst_1
61: invokespecial #3
64: astore        7
66: new           #7
69: dup
70: aload         7
72: aload_3
73: aload         4
75: iconst_1
76: dconst_0
77: invokespecial #18
80: astore        8
82: aload         5
84: aload         8
86: invokevirtual #67
89: istore        9
91: iload         9
93: invokestatic  #61
96: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test20
Start line: 266
End line: 279
Method source code: 
  public void test20()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(6, 6);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 6);
      Integer integer0 = new Integer(6);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 6, 6);
      Relationship relationship0 = Relationship.LEQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, relationship0, 1.0E-12);
      boolean boolean0 = linkedList0.add(linearConstraint0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 6, (int) integer0);
      boolean boolean1 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean1 == boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: bipush        6
6: bipush        6
8: invokespecial #73
11: astore_1
12: new           #2
15: dup
16: aload_1
17: ldc2_w        #71
20: invokespecial #13
23: astore_2
24: new           #74
27: dup
28: bipush        6
30: invokespecial #75
33: astore_3
34: new           #4
37: dup
38: invokespecial #5
41: astore        4
43: getstatic     #6
46: astore        5
48: new           #7
51: dup
52: aload_2
53: aload         4
55: aload         5
57: iconst_0
58: ldc2_w        #71
61: bipush        6
63: invokespecial #8
66: astore        6
68: getstatic     #76
71: astore        7
73: new           #40
76: dup
77: aload_1
78: aload         7
80: ldc2_w        #15
83: invokespecial #77
86: astore        8
88: aload         4
90: aload         8
92: invokevirtual #44
95: istore        9
97: new           #7
100: dup
101: aload_2
102: aload         4
104: aload         5
106: iconst_0
107: ldc2_w        #71
110: aload_3
111: invokevirtual #78
114: invokespecial #8
117: astore        10
119: aload         6
121: aload         10
123: invokevirtual #67
126: istore        11
128: iload         11
130: iload         9
132: if_icmpne     139
135: iconst_1
136: goto          140
139: iconst_0
140: invokestatic  #61
143: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test21
Start line: 282
End line: 294
Method source code: 
  public void test21()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0);
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, relationship0, 1.0E-12);
      boolean boolean0 = linkedList0.add(linearConstraint0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0);
      boolean boolean1 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean1 == boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: invokespecial #65
7: astore_1
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #15
16: invokespecial #13
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #6
31: astore        4
33: new           #7
36: dup
37: aload_2
38: aload_3
39: aload         4
41: iconst_0
42: dconst_0
43: invokespecial #18
46: astore        5
48: getstatic     #39
51: astore        6
53: new           #40
56: dup
57: aload_1
58: aload         6
60: ldc2_w        #15
63: invokespecial #77
66: astore        7
68: aload_3
69: aload         7
71: invokevirtual #44
74: istore        8
76: new           #7
79: dup
80: aload_2
81: aload_3
82: aload         4
84: iconst_0
85: dconst_0
86: invokespecial #18
89: astore        9
91: aload         5
93: aload         9
95: invokevirtual #67
98: istore        10
100: iload         10
102: iload         8
104: if_icmpne     111
107: iconst_1
108: goto          112
111: iconst_0
112: invokestatic  #61
115: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test22
Start line: 297
End line: 306
Method source code: 
  public void test22()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(6, 6, 6);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 6);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 6);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 6);
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: bipush        6
6: bipush        6
8: ldc2_w        #71
11: invokespecial #12
14: astore_1
15: new           #2
18: dup
19: aload_1
20: ldc2_w        #71
23: invokespecial #13
26: astore_2
27: new           #4
30: dup
31: invokespecial #5
34: astore_3
35: getstatic     #6
38: astore        4
40: new           #7
43: dup
44: aload_2
45: aload_3
46: aload         4
48: iconst_0
49: ldc2_w        #15
52: bipush        6
54: invokespecial #8
57: astore        5
59: new           #7
62: dup
63: aload_2
64: aload_3
65: aload         4
67: iconst_0
68: ldc2_w        #71
71: invokespecial #18
74: astore        6
76: aload         5
78: aload         6
80: invokevirtual #67
83: istore        7
85: iload         7
87: invokestatic  #61
90: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test23
Start line: 309
End line: 318
Method source code: 
  public void test23()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0, 0, 0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12);
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: iconst_0
6: dconst_0
7: invokespecial #12
10: astore_1
11: new           #2
14: dup
15: aload_1
16: dconst_0
17: invokespecial #13
20: astore_2
21: new           #4
24: dup
25: invokespecial #5
28: astore_3
29: getstatic     #6
32: astore        4
34: new           #7
37: dup
38: aload_2
39: aload_3
40: aload         4
42: iconst_0
43: ldc2_w        #15
46: iconst_0
47: invokespecial #8
50: astore        5
52: new           #7
55: dup
56: aload_2
57: aload_3
58: aload         4
60: iconst_0
61: ldc2_w        #15
64: invokespecial #18
67: astore        6
69: aload         5
71: aload         6
73: invokevirtual #67
76: istore        7
78: iload         7
80: invokestatic  #61
83: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test24
Start line: 321
End line: 331
Method source code: 
  public void test24()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(0);
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 0);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MINIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 1.0E-12, 0);
      LinearObjectiveFunction linearObjectiveFunction1 = new LinearObjectiveFunction(openMapRealVector0, (-1418.1611391809079));
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction1, linkedList0, goalType0, false, 1.0E-12, 0);
      boolean boolean0 = simplexTableau0.equals(simplexTableau1);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: iconst_0
5: invokespecial #35
8: astore_1
9: new           #2
12: dup
13: aload_1
14: dconst_0
15: invokespecial #13
18: astore_2
19: new           #4
22: dup
23: invokespecial #5
26: astore_3
27: getstatic     #14
30: astore        4
32: new           #7
35: dup
36: aload_2
37: aload_3
38: aload         4
40: iconst_0
41: ldc2_w        #15
44: iconst_0
45: invokespecial #8
48: astore        5
50: new           #2
53: dup
54: aload_1
55: ldc2_w        #79
58: invokespecial #13
61: astore        6
63: new           #7
66: dup
67: aload         6
69: aload_3
70: aload         4
72: iconst_0
73: ldc2_w        #15
76: iconst_0
77: invokespecial #8
80: astore        7
82: aload         5
84: aload         7
86: invokevirtual #67
89: istore        8
91: iload         8
93: invokestatic  #61
96: return
Source File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/src/test/java/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.java
Bytecode File: /home/ac1ie/DBT-workbench/resources/subjects/fixed/math/42/target/test-classes/org/apache/commons/math/optimization/linear/SimplexTableau_ESTest.class
Class name: SimplexTableau_ESTest
Method name: test25
Start line: 334
End line: 347
Method source code: 
  public void test25()  throws Throwable  {
      OpenMapRealVector openMapRealVector0 = new OpenMapRealVector();
      LinearObjectiveFunction linearObjectiveFunction0 = new LinearObjectiveFunction(openMapRealVector0, 1.0E-12);
      LinkedList<LinearConstraint> linkedList0 = new LinkedList<LinearConstraint>();
      GoalType goalType0 = GoalType.MAXIMIZE;
      SimplexTableau simplexTableau0 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0);
      Relationship relationship0 = Relationship.EQ;
      LinearConstraint linearConstraint0 = new LinearConstraint(openMapRealVector0, relationship0, 0);
      linkedList0.addLast(linearConstraint0);
      SimplexTableau simplexTableau1 = new SimplexTableau(linearObjectiveFunction0, linkedList0, goalType0, false, 0);
      simplexTableau1.dropPhase1Objective();
      boolean boolean0 = simplexTableau1.equals(simplexTableau0);
      assertFalse(boolean0);
  }
Method byte code: 
0: new           #11
3: dup
4: invokespecial #65
7: astore_1
8: new           #2
11: dup
12: aload_1
13: ldc2_w        #15
16: invokespecial #13
19: astore_2
20: new           #4
23: dup
24: invokespecial #5
27: astore_3
28: getstatic     #6
31: astore        4
33: new           #7
36: dup
37: aload_2
38: aload_3
39: aload         4
41: iconst_0
42: dconst_0
43: invokespecial #18
46: astore        5
48: getstatic     #39
51: astore        6
53: new           #40
56: dup
57: aload_1
58: aload         6
60: dconst_0
61: invokespecial #77
64: astore        7
66: aload_3
67: aload         7
69: invokevirtual #81
72: new           #7
75: dup
76: aload_2
77: aload_3
78: aload         4
80: iconst_0
81: dconst_0
82: invokespecial #18
85: astore        8
87: aload         8
89: invokevirtual #45
92: aload         8
94: aload         5
96: invokevirtual #67
99: istore        9
101: iload         9
103: invokestatic  #61
106: return
}
